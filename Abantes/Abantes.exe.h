typedef unsigned char   undefined;

typedef unsigned long long    GUID;
typedef unsigned int    ImageBaseOffset32;
typedef unsigned char    bool;
typedef unsigned char    byte;
typedef unsigned int    dword;
typedef long long    longlong;
typedef unsigned long long    qword;
typedef unsigned char    uchar;
typedef unsigned int    uint;
typedef unsigned long    ulong;
typedef unsigned char    undefined1;
typedef unsigned short    undefined2;
typedef unsigned int    undefined4;
typedef unsigned long long    undefined8;
typedef unsigned short    ushort;
typedef short    wchar_t;
typedef unsigned short    word;
typedef ulong ULONG_PTR;

typedef ULONG_PTR DWORD_PTR;

typedef struct __lc_time_data __lc_time_data, *P__lc_time_data;

struct __lc_time_data {
    char * wday_abbr[7];
    char * wday[7];
    char * month_abbr[12];
    char * month[12];
    char * ampm[2];
    char * ww_sdatefmt;
    char * ww_ldatefmt;
    char * ww_timefmt;
    int ww_caltype;
    int refcount;
    wchar_t * _W_wday_abbr[7];
    wchar_t * _W_wday[7];
    wchar_t * _W_month_abbr[12];
    wchar_t * _W_month[12];
    wchar_t * _W_ampm[2];
    wchar_t * _W_ww_sdatefmt;
    wchar_t * _W_ww_ldatefmt;
    wchar_t * _W_ww_timefmt;
    wchar_t * _W_ww_locale_name;
};

typedef longlong __time64_t;

typedef struct localeinfo_struct localeinfo_struct, *Plocaleinfo_struct;

typedef struct localeinfo_struct * _locale_t;

typedef struct threadlocaleinfostruct threadlocaleinfostruct, *Pthreadlocaleinfostruct;

typedef struct threadlocaleinfostruct * pthreadlocinfo;

typedef struct threadmbcinfostruct threadmbcinfostruct, *Pthreadmbcinfostruct;

typedef struct threadmbcinfostruct * pthreadmbcinfo;

typedef struct localerefcount localerefcount, *Plocalerefcount;

typedef struct localerefcount locrefcount;

typedef struct lconv lconv, *Plconv;

struct lconv {
    char * decimal_point;
    char * thousands_sep;
    char * grouping;
    char * int_curr_symbol;
    char * currency_symbol;
    char * mon_decimal_point;
    char * mon_thousands_sep;
    char * mon_grouping;
    char * positive_sign;
    char * negative_sign;
    char int_frac_digits;
    char frac_digits;
    char p_cs_precedes;
    char p_sep_by_space;
    char n_cs_precedes;
    char n_sep_by_space;
    char p_sign_posn;
    char n_sign_posn;
    wchar_t * _W_decimal_point;
    wchar_t * _W_thousands_sep;
    wchar_t * _W_int_curr_symbol;
    wchar_t * _W_currency_symbol;
    wchar_t * _W_mon_decimal_point;
    wchar_t * _W_mon_thousands_sep;
    wchar_t * _W_positive_sign;
    wchar_t * _W_negative_sign;
};

struct localerefcount {
    char * locale;
    wchar_t * wlocale;
    int * refcount;
    int * wrefcount;
};

struct threadlocaleinfostruct {
    int refcount;
    uint lc_codepage;
    uint lc_collate_cp;
    uint lc_time_cp;
    locrefcount lc_category[6];
    int lc_clike;
    int mb_cur_max;
    int * lconv_intl_refcount;
    int * lconv_num_refcount;
    int * lconv_mon_refcount;
    struct lconv * lconv;
    int * ctype1_refcount;
    ushort * ctype1;
    ushort * pctype;
    uchar * pclmap;
    uchar * pcumap;
    struct __lc_time_data * lc_time_curr;
    wchar_t * locale_name[6];
};

struct threadmbcinfostruct {
    int refcount;
    int mbcodepage;
    int ismbcodepage;
    ushort mbulinfo[6];
    uchar mbctype[257];
    uchar mbcasemap[256];
    wchar_t * mblocalename;
};

struct localeinfo_struct {
    pthreadlocinfo locinfo;
    pthreadmbcinfo mbcinfo;
};

typedef int errno_t;

typedef int intptr_t;

typedef uint size_t;

typedef size_t rsize_t;

typedef enum function_id {
} function_id;

typedef enum module_id {
} module_id;

typedef struct exception exception, *Pexception;

struct exception { /* PlaceHolder Structure */
};

typedef struct <lambda_03b1d95aef87969028cfba75ccab2455> <lambda_03b1d95aef87969028cfba75ccab2455>, *P<lambda_03b1d95aef87969028cfba75ccab2455>;

struct <lambda_03b1d95aef87969028cfba75ccab2455> { /* PlaceHolder Structure */
};

typedef struct <lambda_03fcd07e894ec930e3f35da366ca99d6> <lambda_03fcd07e894ec930e3f35da366ca99d6>, *P<lambda_03fcd07e894ec930e3f35da366ca99d6>;

struct <lambda_03fcd07e894ec930e3f35da366ca99d6> { /* PlaceHolder Structure */
};

typedef struct <lambda_15ade71b0218206bbe3333a0c9b79046> <lambda_15ade71b0218206bbe3333a0c9b79046>, *P<lambda_15ade71b0218206bbe3333a0c9b79046>;

struct <lambda_15ade71b0218206bbe3333a0c9b79046> { /* PlaceHolder Structure */
};

typedef struct <lambda_207f2d024fc103971653565357d6cd41> <lambda_207f2d024fc103971653565357d6cd41>, *P<lambda_207f2d024fc103971653565357d6cd41>;

struct <lambda_207f2d024fc103971653565357d6cd41> { /* PlaceHolder Structure */
};

typedef struct <lambda_218ce3db14220d0be481dae8ef3383b6> <lambda_218ce3db14220d0be481dae8ef3383b6>, *P<lambda_218ce3db14220d0be481dae8ef3383b6>;

struct <lambda_218ce3db14220d0be481dae8ef3383b6> { /* PlaceHolder Structure */
};

typedef struct <lambda_22bdf7517842c4b3e53723af5aa32b9e> <lambda_22bdf7517842c4b3e53723af5aa32b9e>, *P<lambda_22bdf7517842c4b3e53723af5aa32b9e>;

struct <lambda_22bdf7517842c4b3e53723af5aa32b9e> { /* PlaceHolder Structure */
};

typedef struct <lambda_2866be3712abc81a800a822484c830d8> <lambda_2866be3712abc81a800a822484c830d8>, *P<lambda_2866be3712abc81a800a822484c830d8>;

struct <lambda_2866be3712abc81a800a822484c830d8> { /* PlaceHolder Structure */
};

typedef struct <lambda_2b24c74d71094a6cd0cb82e44167d71b> <lambda_2b24c74d71094a6cd0cb82e44167d71b>, *P<lambda_2b24c74d71094a6cd0cb82e44167d71b>;

struct <lambda_2b24c74d71094a6cd0cb82e44167d71b> { /* PlaceHolder Structure */
};

typedef struct <lambda_2cc53f568c5a2bb6f192f930a45d44ea> <lambda_2cc53f568c5a2bb6f192f930a45d44ea>, *P<lambda_2cc53f568c5a2bb6f192f930a45d44ea>;

struct <lambda_2cc53f568c5a2bb6f192f930a45d44ea> { /* PlaceHolder Structure */
};

typedef struct <lambda_38ce7e780aa69e748d6df282ebc68efe> <lambda_38ce7e780aa69e748d6df282ebc68efe>, *P<lambda_38ce7e780aa69e748d6df282ebc68efe>;

struct <lambda_38ce7e780aa69e748d6df282ebc68efe> { /* PlaceHolder Structure */
};

typedef struct <lambda_38edbb1296d33220d7e4dd0ed76b244a> <lambda_38edbb1296d33220d7e4dd0ed76b244a>, *P<lambda_38edbb1296d33220d7e4dd0ed76b244a>;

struct <lambda_38edbb1296d33220d7e4dd0ed76b244a> { /* PlaceHolder Structure */
};

typedef struct <lambda_39ca0ed439415581b5b15c265174cece> <lambda_39ca0ed439415581b5b15c265174cece>, *P<lambda_39ca0ed439415581b5b15c265174cece>;

struct <lambda_39ca0ed439415581b5b15c265174cece> { /* PlaceHolder Structure */
};

typedef struct <lambda_3e16ef9562a7dcce91392c22ab16ea36> <lambda_3e16ef9562a7dcce91392c22ab16ea36>, *P<lambda_3e16ef9562a7dcce91392c22ab16ea36>;

struct <lambda_3e16ef9562a7dcce91392c22ab16ea36> { /* PlaceHolder Structure */
};

typedef struct <lambda_44731a7d0e6d81c3e6aa82d741081786> <lambda_44731a7d0e6d81c3e6aa82d741081786>, *P<lambda_44731a7d0e6d81c3e6aa82d741081786>;

struct <lambda_44731a7d0e6d81c3e6aa82d741081786> { /* PlaceHolder Structure */
};

typedef struct <lambda_46720907175c18b6c9d2717bc0d2d362> <lambda_46720907175c18b6c9d2717bc0d2d362>, *P<lambda_46720907175c18b6c9d2717bc0d2d362>;

struct <lambda_46720907175c18b6c9d2717bc0d2d362> { /* PlaceHolder Structure */
};

typedef struct <lambda_4b292cb8dd18144e164572427af410ab> <lambda_4b292cb8dd18144e164572427af410ab>, *P<lambda_4b292cb8dd18144e164572427af410ab>;

struct <lambda_4b292cb8dd18144e164572427af410ab> { /* PlaceHolder Structure */
};

typedef struct <lambda_4e60a939b0d047cfe11ddc22648dfba9> <lambda_4e60a939b0d047cfe11ddc22648dfba9>, *P<lambda_4e60a939b0d047cfe11ddc22648dfba9>;

struct <lambda_4e60a939b0d047cfe11ddc22648dfba9> { /* PlaceHolder Structure */
};

typedef struct <lambda_5056f36f92c185fae794536d1ce2027b> <lambda_5056f36f92c185fae794536d1ce2027b>, *P<lambda_5056f36f92c185fae794536d1ce2027b>;

struct <lambda_5056f36f92c185fae794536d1ce2027b> { /* PlaceHolder Structure */
};

typedef struct <lambda_57c77e0e75d6a1e6f8ecaa6bd26c2518> <lambda_57c77e0e75d6a1e6f8ecaa6bd26c2518>, *P<lambda_57c77e0e75d6a1e6f8ecaa6bd26c2518>;

struct <lambda_57c77e0e75d6a1e6f8ecaa6bd26c2518> { /* PlaceHolder Structure */
};

typedef struct <lambda_57dc472bd5c9d5f3b2cbca59b8a843ae> <lambda_57dc472bd5c9d5f3b2cbca59b8a843ae>, *P<lambda_57dc472bd5c9d5f3b2cbca59b8a843ae>;

struct <lambda_57dc472bd5c9d5f3b2cbca59b8a843ae> { /* PlaceHolder Structure */
};

typedef struct <lambda_5ce1d447e08cb34b2473517608e21441> <lambda_5ce1d447e08cb34b2473517608e21441>, *P<lambda_5ce1d447e08cb34b2473517608e21441>;

struct <lambda_5ce1d447e08cb34b2473517608e21441> { /* PlaceHolder Structure */
};

typedef struct <lambda_608742c3c92a14382c1684fc64f96c88> <lambda_608742c3c92a14382c1684fc64f96c88>, *P<lambda_608742c3c92a14382c1684fc64f96c88>;

struct <lambda_608742c3c92a14382c1684fc64f96c88> { /* PlaceHolder Structure */
};

typedef struct <lambda_628dfdc04ba53c8bfc02c9951375f3f5> <lambda_628dfdc04ba53c8bfc02c9951375f3f5>, *P<lambda_628dfdc04ba53c8bfc02c9951375f3f5>;

struct <lambda_628dfdc04ba53c8bfc02c9951375f3f5> { /* PlaceHolder Structure */
};

typedef struct <lambda_69a2805e680e0e292e8ba93315fe43a8> <lambda_69a2805e680e0e292e8ba93315fe43a8>, *P<lambda_69a2805e680e0e292e8ba93315fe43a8>;

struct <lambda_69a2805e680e0e292e8ba93315fe43a8> { /* PlaceHolder Structure */
};

typedef struct <lambda_6affb1475c98b40b75cdec977db92e3c> <lambda_6affb1475c98b40b75cdec977db92e3c>, *P<lambda_6affb1475c98b40b75cdec977db92e3c>;

struct <lambda_6affb1475c98b40b75cdec977db92e3c> { /* PlaceHolder Structure */
};

typedef struct <lambda_6dbb1268764f43b569ce7b67e331d33a> <lambda_6dbb1268764f43b569ce7b67e331d33a>, *P<lambda_6dbb1268764f43b569ce7b67e331d33a>;

struct <lambda_6dbb1268764f43b569ce7b67e331d33a> { /* PlaceHolder Structure */
};

typedef struct <lambda_6e4b09c48022b2350581041d5f6b0c4c> <lambda_6e4b09c48022b2350581041d5f6b0c4c>, *P<lambda_6e4b09c48022b2350581041d5f6b0c4c>;

struct <lambda_6e4b09c48022b2350581041d5f6b0c4c> { /* PlaceHolder Structure */
};

typedef struct <lambda_800076c951b434888f4765a74a194fcc> <lambda_800076c951b434888f4765a74a194fcc>, *P<lambda_800076c951b434888f4765a74a194fcc>;

struct <lambda_800076c951b434888f4765a74a194fcc> { /* PlaceHolder Structure */
};

typedef struct <lambda_8ca6da459f0f6780f1cff60fdc3d00e5> <lambda_8ca6da459f0f6780f1cff60fdc3d00e5>, *P<lambda_8ca6da459f0f6780f1cff60fdc3d00e5>;

struct <lambda_8ca6da459f0f6780f1cff60fdc3d00e5> { /* PlaceHolder Structure */
};

typedef struct <lambda_9048902d66e8d99359bc9897bbb930a8> <lambda_9048902d66e8d99359bc9897bbb930a8>, *P<lambda_9048902d66e8d99359bc9897bbb930a8>;

struct <lambda_9048902d66e8d99359bc9897bbb930a8> { /* PlaceHolder Structure */
};

typedef struct <lambda_9e9de3de5fa147e2223d7db92bc10aa6> <lambda_9e9de3de5fa147e2223d7db92bc10aa6>, *P<lambda_9e9de3de5fa147e2223d7db92bc10aa6>;

struct <lambda_9e9de3de5fa147e2223d7db92bc10aa6> { /* PlaceHolder Structure */
};

typedef struct <lambda_a7e850c220f1c8d1e6efeecdedd162c6> <lambda_a7e850c220f1c8d1e6efeecdedd162c6>, *P<lambda_a7e850c220f1c8d1e6efeecdedd162c6>;

struct <lambda_a7e850c220f1c8d1e6efeecdedd162c6> { /* PlaceHolder Structure */
};

typedef struct <lambda_ab61a845afdef5b7c387490eaf3616ee> <lambda_ab61a845afdef5b7c387490eaf3616ee>, *P<lambda_ab61a845afdef5b7c387490eaf3616ee>;

struct <lambda_ab61a845afdef5b7c387490eaf3616ee> { /* PlaceHolder Structure */
};

typedef struct <lambda_ae742caa10f662c28703da3d2ea5e57e> <lambda_ae742caa10f662c28703da3d2ea5e57e>, *P<lambda_ae742caa10f662c28703da3d2ea5e57e>;

struct <lambda_ae742caa10f662c28703da3d2ea5e57e> { /* PlaceHolder Structure */
};

typedef struct <lambda_af42a3ee9806e9a7305d451646e05244> <lambda_af42a3ee9806e9a7305d451646e05244>, *P<lambda_af42a3ee9806e9a7305d451646e05244>;

struct <lambda_af42a3ee9806e9a7305d451646e05244> { /* PlaceHolder Structure */
};

typedef struct <lambda_b8d4b9c228a6ecc3f80208dbb4b4a104> <lambda_b8d4b9c228a6ecc3f80208dbb4b4a104>, *P<lambda_b8d4b9c228a6ecc3f80208dbb4b4a104>;

struct <lambda_b8d4b9c228a6ecc3f80208dbb4b4a104> { /* PlaceHolder Structure */
};

typedef struct <lambda_c2ffc0b7726aa6be21d5f0026187e748> <lambda_c2ffc0b7726aa6be21d5f0026187e748>, *P<lambda_c2ffc0b7726aa6be21d5f0026187e748>;

struct <lambda_c2ffc0b7726aa6be21d5f0026187e748> { /* PlaceHolder Structure */
};

typedef struct <lambda_cbab9ec6f41b0180b23cc171c22676b0> <lambda_cbab9ec6f41b0180b23cc171c22676b0>, *P<lambda_cbab9ec6f41b0180b23cc171c22676b0>;

struct <lambda_cbab9ec6f41b0180b23cc171c22676b0> { /* PlaceHolder Structure */
};

typedef struct <lambda_cd08b5d6af4937fe54fc07d0c9bf6b37> <lambda_cd08b5d6af4937fe54fc07d0c9bf6b37>, *P<lambda_cd08b5d6af4937fe54fc07d0c9bf6b37>;

struct <lambda_cd08b5d6af4937fe54fc07d0c9bf6b37> { /* PlaceHolder Structure */
};

typedef struct <lambda_ceb1ee4838e85a9d631eb091e2fbe199> <lambda_ceb1ee4838e85a9d631eb091e2fbe199>, *P<lambda_ceb1ee4838e85a9d631eb091e2fbe199>;

struct <lambda_ceb1ee4838e85a9d631eb091e2fbe199> { /* PlaceHolder Structure */
};

typedef struct <lambda_da44e0f8b0f19ba52fefafb335991732> <lambda_da44e0f8b0f19ba52fefafb335991732>, *P<lambda_da44e0f8b0f19ba52fefafb335991732>;

struct <lambda_da44e0f8b0f19ba52fefafb335991732> { /* PlaceHolder Structure */
};

typedef struct <lambda_e25ca0880e6ef98be67edffd8c599615> <lambda_e25ca0880e6ef98be67edffd8c599615>, *P<lambda_e25ca0880e6ef98be67edffd8c599615>;

struct <lambda_e25ca0880e6ef98be67edffd8c599615> { /* PlaceHolder Structure */
};

typedef struct <lambda_e5124f882df8998aaf41531e079ba474> <lambda_e5124f882df8998aaf41531e079ba474>, *P<lambda_e5124f882df8998aaf41531e079ba474>;

struct <lambda_e5124f882df8998aaf41531e079ba474> { /* PlaceHolder Structure */
};

typedef struct <lambda_eee62cb4a147bfbb98180ad682ce6e17> <lambda_eee62cb4a147bfbb98180ad682ce6e17>, *P<lambda_eee62cb4a147bfbb98180ad682ce6e17>;

struct <lambda_eee62cb4a147bfbb98180ad682ce6e17> { /* PlaceHolder Structure */
};

typedef struct <lambda_f03950bc5685219e0bcd2087efbe011e> <lambda_f03950bc5685219e0bcd2087efbe011e>, *P<lambda_f03950bc5685219e0bcd2087efbe011e>;

struct <lambda_f03950bc5685219e0bcd2087efbe011e> { /* PlaceHolder Structure */
};

typedef struct <lambda_fb385d3da700c9147fc39e65dd577a8c> <lambda_fb385d3da700c9147fc39e65dd577a8c>, *P<lambda_fb385d3da700c9147fc39e65dd577a8c>;

struct <lambda_fb385d3da700c9147fc39e65dd577a8c> { /* PlaceHolder Structure */
};

typedef struct __acrt_ptd __acrt_ptd, *P__acrt_ptd;

struct __acrt_ptd { /* PlaceHolder Structure */
};

typedef struct __crt_locale_data __crt_locale_data, *P__crt_locale_data;

struct __crt_locale_data { /* PlaceHolder Structure */
};

typedef struct __crt_locale_pointers __crt_locale_pointers, *P__crt_locale_pointers;

struct __crt_locale_pointers { /* PlaceHolder Structure */
};

typedef struct __crt_multibyte_data __crt_multibyte_data, *P__crt_multibyte_data;

struct __crt_multibyte_data { /* PlaceHolder Structure */
};

typedef struct __crt_seh_guarded_call<bool> __crt_seh_guarded_call<bool>, *P__crt_seh_guarded_call<bool>;

struct __crt_seh_guarded_call<bool> { /* PlaceHolder Structure */
};

typedef struct __crt_seh_guarded_call<int> __crt_seh_guarded_call<int>, *P__crt_seh_guarded_call<int>;

struct __crt_seh_guarded_call<int> { /* PlaceHolder Structure */
};

typedef struct __crt_seh_guarded_call<void> __crt_seh_guarded_call<void>, *P__crt_seh_guarded_call<void>;

struct __crt_seh_guarded_call<void> { /* PlaceHolder Structure */
};

typedef struct __crt_seh_guarded_call<void_(__cdecl*)(int)> __crt_seh_guarded_call<void_(__cdecl*)(int)>, *P__crt_seh_guarded_call<void_(__cdecl*)(int)>;

struct __crt_seh_guarded_call<void_(__cdecl*)(int)> { /* PlaceHolder Structure */
};

typedef struct __crt_signal_action_t __crt_signal_action_t, *P__crt_signal_action_t;

struct __crt_signal_action_t { /* PlaceHolder Structure */
};

typedef struct __crt_stdio_stream __crt_stdio_stream, *P__crt_stdio_stream;

struct __crt_stdio_stream { /* PlaceHolder Structure */
};

typedef enum _crt_exit_cleanup_mode {
} _crt_exit_cleanup_mode;

typedef enum _crt_exit_return_mode {
} _crt_exit_return_mode;

typedef struct HINSTANCE__ HINSTANCE__, *PHINSTANCE__;

struct HINSTANCE__ { /* PlaceHolder Structure */
};

typedef struct void_(__cdecl**)(int) void_(__cdecl**)(int), *Pvoid_(__cdecl**)(int);

struct void_(__cdecl**)(int) { /* PlaceHolder Structure */
};


/* WARNING! conflicting data type names: /Demangler/wchar_t - /wchar_t */

typedef struct IMAGE_DOS_HEADER IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER;

struct IMAGE_DOS_HEADER {
    char e_magic[2]; /* Magic number */
    word e_cblp; /* Bytes of last page */
    word e_cp; /* Pages in file */
    word e_crlc; /* Relocations */
    word e_cparhdr; /* Size of header in paragraphs */
    word e_minalloc; /* Minimum extra paragraphs needed */
    word e_maxalloc; /* Maximum extra paragraphs needed */
    word e_ss; /* Initial (relative) SS value */
    word e_sp; /* Initial SP value */
    word e_csum; /* Checksum */
    word e_ip; /* Initial IP value */
    word e_cs; /* Initial (relative) CS value */
    word e_lfarlc; /* File address of relocation table */
    word e_ovno; /* Overlay number */
    word e_res[4][4]; /* Reserved words */
    word e_oemid; /* OEM identifier (for e_oeminfo) */
    word e_oeminfo; /* OEM information; e_oemid specific */
    word e_res2[10][10]; /* Reserved words */
    dword e_lfanew; /* File address of new exe header */
    byte e_program[64]; /* Actual DOS program */
};

typedef struct _iobuf _iobuf, *P_iobuf;

struct _iobuf {
    char * _ptr;
    int _cnt;
    char * _base;
    int _flag;
    int _file;
    int _charbuf;
    int _bufsiz;
    char * _tmpfname;
};

typedef struct _iobuf FILE;

typedef struct ConstantSig_1589 ConstantSig_1589, *PConstantSig_1589;

typedef unsigned short    wchar16;
struct ConstantSig_1589 {
    wchar16 ELEMENT_TYPE_STRING[7];
};

typedef struct ConstantSig_1604 ConstantSig_1604, *PConstantSig_1604;

struct ConstantSig_1604 {
    wchar16 ELEMENT_TYPE_STRING[7];
};

typedef struct ConstantSig_35 ConstantSig_35, *PConstantSig_35;

struct ConstantSig_35 {
    dword ELEMENT_TYPE_I4;
};

typedef struct ConstantSig_435 ConstantSig_435, *PConstantSig_435;

struct ConstantSig_435 {
    dword ELEMENT_TYPE_I4;
};

typedef struct ConstantSig_440 ConstantSig_440, *PConstantSig_440;

struct ConstantSig_440 {
    dword ELEMENT_TYPE_I4;
};

typedef struct ConstantSig_445 ConstantSig_445, *PConstantSig_445;

struct ConstantSig_445 {
    dword ELEMENT_TYPE_I4;
};

typedef struct ConstantSig_522 ConstantSig_522, *PConstantSig_522;

struct ConstantSig_522 {
    dword ELEMENT_TYPE_I4;
};

typedef struct FieldSig_1020 FieldSig_1020, *PFieldSig_1020;

typedef struct Type_2819322 Type_2819322, *PType_2819322;

typedef struct ValueType.conflict ValueType.conflict, *PValueType.conflict;

typedef enum TypeCode {
    ELEMENT_TYPE_END=0,
    ELEMENT_TYPE_VOID=1,
    ELEMENT_TYPE_BOOLEAN=2,
    ELEMENT_TYPE_CHAR=3,
    ELEMENT_TYPE_I1=4,
    ELEMENT_TYPE_U1=5,
    ELEMENT_TYPE_I2=6,
    ELEMENT_TYPE_U2=7,
    ELEMENT_TYPE_I4=8,
    ELEMENT_TYPE_U4=9,
    ELEMENT_TYPE_I8=10,
    ELEMENT_TYPE_U8=11,
    ELEMENT_TYPE_R4=12,
    ELEMENT_TYPE_R8=13,
    ELEMENT_TYPE_STRING=14,
    ELEMENT_TYPE_PTR=15,
    ELEMENT_TYPE_BYREF=16,
    ELEMENT_TYPE_VALUETYPE=17,
    ELEMENT_TYPE_CLASS=18,
    ELEMENT_TYPE_VAR=19,
    ELEMENT_TYPE_ARRAY=20,
    ELEMENT_TYPE_GENERICINST=21,
    ELEMENT_TYPE_TYPEDBYREF=22,
    ELEMENT_TYPE_I=24,
    ELEMENT_TYPE_U=25,
    ELEMENT_TYPE_FNPTR=27,
    ELEMENT_TYPE_OBJECT=28,
    ELEMENT_TYPE_SZARRAY=29,
    ELEMENT_TYPE_MVAR=30,
    ELEMENT_TYPE_CMOD_REQD=31,
    ELEMENT_TYPE_CMOD_OPT=32,
    ELEMENT_TYPE_INTERNAL=33,
    ELEMENT_TYPE_MAX=34,
    ELEMENT_TYPE_MODIFIER=64,
    ELEMENT_TYPE_SENTINEL=65,
    ELEMENT_TYPE_PINNED=69
} TypeCode;

struct ValueType.conflict {
    enum TypeCode ValueType; /* ValueType */
    byte TypeDefOrRefEncoded; /* TypeRef: Row 0x8 */
};

struct Type_2819322 {
    struct ValueType.conflict ELEMENT_TYPE_VALUETYPE;
};

struct FieldSig_1020 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2819322 ELEMENT_TYPE_VALUETYPE;
};

typedef struct FieldSig_1024 FieldSig_1024, *PFieldSig_1024;

typedef struct Type_2819326 Type_2819326, *PType_2819326;

typedef struct Class.conflict Class.conflict, *PClass.conflict;

struct Class.conflict {
    enum TypeCode Class; /* Class */
    word Type; /* TypeDefOrRefOrSpecEncoded */
};

struct Type_2819326 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct FieldSig_1024 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2819326 ELEMENT_TYPE_CLASS;
};

typedef struct FieldSig_1233 FieldSig_1233, *PFieldSig_1233;

typedef struct Type_2819535 Type_2819535, *PType_2819535;

struct Type_2819535 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct FieldSig_1233 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2819535 ELEMENT_TYPE_OBJECT;
};

typedef struct FieldSig_1236 FieldSig_1236, *PFieldSig_1236;

typedef struct Type_2819538 Type_2819538, *PType_2819538;

typedef struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@1e91580b, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@529aa229] GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@1e91580b, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@529aa229], *PGenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@1e91580b, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@529aa229];

struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@1e91580b, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@529aa229] {
    enum TypeCode GenericInst; /* GenericInst */
    enum TypeCode ClassOrValueType; /* Class or ValueType */
    word Type; /* TypeDefOrRefOrSpecEncoded */
    byte GenArgCount; /* Number of generics to follow */
    enum TypeCode Type; /* Generic Type */
    enum TypeCode Type; /* Generic Type */
};

struct Type_2819538 {
    struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@1e91580b, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@529aa229] ELEMENT_TYPE_GENERICINST;
};

struct FieldSig_1236 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2819538 ELEMENT_TYPE_GENERICINST;
};

typedef struct FieldSig_1245 FieldSig_1245, *PFieldSig_1245;

typedef struct Type_2819547 Type_2819547, *PType_2819547;

typedef struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@57f9890f, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@53b4e966] GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@57f9890f, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@53b4e966], *PGenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@57f9890f, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@53b4e966];

struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@57f9890f, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@53b4e966] {
    enum TypeCode GenericInst; /* GenericInst */
    enum TypeCode ClassOrValueType; /* Class or ValueType */
    word Type; /* TypeDefOrRefOrSpecEncoded */
    byte GenArgCount; /* Number of generics to follow */
    enum TypeCode Type; /* Generic Type */
    enum TypeCode Type; /* Generic Type */
};

struct Type_2819547 {
    struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@57f9890f, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@53b4e966] ELEMENT_TYPE_GENERICINST;
};

struct FieldSig_1245 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2819547 ELEMENT_TYPE_GENERICINST;
};

typedef struct FieldSig_1586 FieldSig_1586, *PFieldSig_1586;

typedef struct Type_2819888 Type_2819888, *PType_2819888;

struct Type_2819888 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct FieldSig_1586 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2819888 ELEMENT_TYPE_STRING;
};

typedef struct FieldSig_245 FieldSig_245, *PFieldSig_245;

typedef struct Type_2818547 Type_2818547, *PType_2818547;

struct Type_2818547 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct FieldSig_245 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2818547 ELEMENT_TYPE_CLASS;
};

typedef struct FieldSig_32 FieldSig_32, *PFieldSig_32;

typedef struct Type_2818334 Type_2818334, *PType_2818334;

struct Type_2818334 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct FieldSig_32 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2818334 ELEMENT_TYPE_I4;
};

typedef struct FieldSig_40 FieldSig_40, *PFieldSig_40;

typedef struct Type_2818342 Type_2818342, *PType_2818342;

typedef struct Class Class, *PClass;

struct Class {
    enum TypeCode Class; /* Class */
    byte Type; /* TypeDefOrRefOrSpecEncoded */
};

struct Type_2818342 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct FieldSig_40 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2818342 ELEMENT_TYPE_CLASS;
};

typedef struct FieldSig_407 FieldSig_407, *PFieldSig_407;

typedef struct Type_2818709 Type_2818709, *PType_2818709;

struct Type_2818709 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct FieldSig_407 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2818709 ELEMENT_TYPE_CLASS;
};

typedef struct FieldSig_44 FieldSig_44, *PFieldSig_44;

typedef struct Type_2818346 Type_2818346, *PType_2818346;

struct Type_2818346 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct FieldSig_44 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2818346 ELEMENT_TYPE_CLASS;
};

typedef struct FieldSig_518 FieldSig_518, *PFieldSig_518;

typedef struct Type_2818820 Type_2818820, *PType_2818820;

typedef struct ValueType ValueType, *PValueType;

struct ValueType {
    enum TypeCode ValueType; /* ValueType */
    byte TypeDefOrRefEncoded; /* TypeDef: Row 0x7 */
};

struct Type_2818820 {
    struct ValueType ELEMENT_TYPE_VALUETYPE;
};

struct FieldSig_518 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2818820 ELEMENT_TYPE_VALUETYPE;
};

typedef struct FieldSig_715 FieldSig_715, *PFieldSig_715;

typedef struct Type_2819017 Type_2819017, *PType_2819017;

struct Type_2819017 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct FieldSig_715 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2819017 ELEMENT_TYPE_CLASS;
};

typedef struct FieldSig_720 FieldSig_720, *PFieldSig_720;

typedef struct Type_2819022 Type_2819022, *PType_2819022;

struct Type_2819022 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct FieldSig_720 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2819022 ELEMENT_TYPE_CLASS;
};

typedef struct FieldSig_907 FieldSig_907, *PFieldSig_907;

typedef struct Type_2819209 Type_2819209, *PType_2819209;

struct Type_2819209 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct FieldSig_907 {
    byte FIELD; /* Magic (0x06) */
    struct Type_2819209 ELEMENT_TYPE_CLASS;
};

typedef struct LocalVarSig_1045 LocalVarSig_1045, *PLocalVarSig_1045;

typedef struct Type_2819348 Type_2819348, *PType_2819348;

typedef struct Type_2819349 Type_2819349, *PType_2819349;

typedef struct Type_2819350 Type_2819350, *PType_2819350;

typedef struct ValueType.conflict20 ValueType.conflict20, *PValueType.conflict20;

struct Type_2819349 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2819348 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct ValueType.conflict20 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x61 */
};

struct Type_2819350 {
    struct ValueType.conflict20 ELEMENT_TYPE_VALUETYPE;
};

struct LocalVarSig_1045 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819348 Type;
    struct Type_2819349 Type;
    struct Type_2819350 Type;
};

typedef struct LocalVarSig_1065 LocalVarSig_1065, *PLocalVarSig_1065;

typedef struct Type_2819368 Type_2819368, *PType_2819368;

struct Type_2819368 {
    enum TypeCode ELEMENT_TYPE_CHAR;
};

struct LocalVarSig_1065 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819368 Type;
};

typedef struct LocalVarSig_1079 LocalVarSig_1079, *PLocalVarSig_1079;

typedef struct Type_2819382 Type_2819382, *PType_2819382;

struct Type_2819382 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct LocalVarSig_1079 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819382 Type;
};

typedef struct LocalVarSig_1089 LocalVarSig_1089, *PLocalVarSig_1089;

typedef struct Type_2819392 Type_2819392, *PType_2819392;

struct Type_2819392 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct LocalVarSig_1089 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819392 Type;
};

typedef struct LocalVarSig_1093 LocalVarSig_1093, *PLocalVarSig_1093;

typedef struct Type_2819396 Type_2819396, *PType_2819396;

typedef struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@7138774e] GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@7138774e], *PGenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@7138774e];

struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@7138774e] {
    enum TypeCode GenericInst; /* GenericInst */
    enum TypeCode ClassOrValueType; /* Class or ValueType */
    word Type; /* TypeDefOrRefOrSpecEncoded */
    byte GenArgCount; /* Number of generics to follow */
    enum TypeCode Type; /* Generic Type */
};

struct Type_2819396 {
    struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@7138774e] ELEMENT_TYPE_GENERICINST;
};

struct LocalVarSig_1093 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819396 Type;
};

typedef struct LocalVarSig_1137 LocalVarSig_1137, *PLocalVarSig_1137;

typedef struct Type_2819440 Type_2819440, *PType_2819440;

typedef struct Type_2819442 Type_2819442, *PType_2819442;

typedef struct Type_2819444 Type_2819444, *PType_2819444;

typedef struct Type_2819445 Type_2819445, *PType_2819445;

typedef struct Type_2819446 Type_2819446, *PType_2819446;

typedef struct SzArray.conflict SzArray.conflict, *PSzArray.conflict;

struct Type_2819446 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819445 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819444 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct SzArray.conflict {
    enum TypeCode TypeCode; /* SzArray */
    enum TypeCode Type; /* type or void */
};

struct Type_2819442 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2819440 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct LocalVarSig_1137 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819440 Type;
    struct Type_2819442 Type;
    struct Type_2819444 Type;
    struct Type_2819445 Type;
    struct Type_2819446 Type;
};

typedef struct LocalVarSig_1175 LocalVarSig_1175, *PLocalVarSig_1175;

typedef struct Type_2819478 Type_2819478, *PType_2819478;

typedef struct Type_2819481 Type_2819481, *PType_2819481;

typedef struct Type_2819482 Type_2819482, *PType_2819482;

typedef struct SzArray SzArray, *PSzArray;

struct SzArray {
    enum TypeCode TypeCode; /* SzArray */
    struct Class Type; /* type or void */
};

struct Type_2819478 {
    struct SzArray ELEMENT_TYPE_SZARRAY;
};

struct Type_2819482 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct Type_2819481 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct LocalVarSig_1175 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819478 Type;
    struct Type_2819481 Type;
    struct Type_2819482 Type;
};

typedef struct LocalVarSig_1190 LocalVarSig_1190, *PLocalVarSig_1190;

typedef struct Type_2819493 Type_2819493, *PType_2819493;

typedef struct Type_2819495 Type_2819495, *PType_2819495;

struct Type_2819493 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2819495 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct LocalVarSig_1190 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819493 Type;
    struct Type_2819495 Type;
};

typedef struct LocalVarSig_1224 LocalVarSig_1224, *PLocalVarSig_1224;

typedef struct Type_2819527 Type_2819527, *PType_2819527;

typedef struct Type_2819529 Type_2819529, *PType_2819529;

typedef struct Type_2819531 Type_2819531, *PType_2819531;

struct Type_2819527 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2819531 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2819529 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct LocalVarSig_1224 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819527 Type;
    struct Type_2819529 Type;
    struct Type_2819531 Type;
};

typedef struct LocalVarSig_1261 LocalVarSig_1261, *PLocalVarSig_1261;

typedef struct Type_2819564 Type_2819564, *PType_2819564;

typedef struct Type_2819568 Type_2819568, *PType_2819568;

typedef struct Type_2819569 Type_2819569, *PType_2819569;

typedef struct Type_2819572 Type_2819572, *PType_2819572;

typedef struct SzArray.conflict1 SzArray.conflict1, *PSzArray.conflict1;

struct Type_2819569 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819568 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct SzArray.conflict1 {
    enum TypeCode TypeCode; /* SzArray */
    struct Class.conflict Type; /* type or void */
};

struct Type_2819564 {
    struct SzArray.conflict1 ELEMENT_TYPE_SZARRAY;
};

struct Type_2819572 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct LocalVarSig_1261 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819564 Type;
    struct Type_2819568 Type;
    struct Type_2819569 Type;
    struct Type_2819572 Type;
};

typedef struct LocalVarSig_1318 LocalVarSig_1318, *PLocalVarSig_1318;

typedef struct Type_2819621 Type_2819621, *PType_2819621;

typedef struct Type_2819623 Type_2819623, *PType_2819623;

struct Type_2819621 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2819623 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct LocalVarSig_1318 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819621 Type;
    struct Type_2819623 Type;
};

typedef struct LocalVarSig_1334 LocalVarSig_1334, *PLocalVarSig_1334;

typedef struct Type_2819637 Type_2819637, *PType_2819637;

typedef struct Type_2819640 Type_2819640, *PType_2819640;

typedef struct Type_2819643 Type_2819643, *PType_2819643;

typedef struct Type_2819646 Type_2819646, *PType_2819646;

typedef struct Type_2819649 Type_2819649, *PType_2819649;

struct Type_2819637 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819646 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819643 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819640 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819649 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct LocalVarSig_1334 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819637 Type;
    struct Type_2819640 Type;
    struct Type_2819643 Type;
    struct Type_2819646 Type;
    struct Type_2819649 Type;
};

typedef struct LocalVarSig_1416 LocalVarSig_1416, *PLocalVarSig_1416;

typedef struct Type_2819719 Type_2819719, *PType_2819719;

struct Type_2819719 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct LocalVarSig_1416 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819719 Type;
};

typedef struct LocalVarSig_1433 LocalVarSig_1433, *PLocalVarSig_1433;

typedef struct Type_2819736 Type_2819736, *PType_2819736;

typedef struct Type_2819737 Type_2819737, *PType_2819737;

typedef struct Type_2819739 Type_2819739, *PType_2819739;

typedef struct Type_2819742 Type_2819742, *PType_2819742;

typedef struct Type_2819745 Type_2819745, *PType_2819745;

typedef struct Type_2819748 Type_2819748, *PType_2819748;

struct Type_2819736 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819745 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819742 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819739 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819748 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2819737 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct LocalVarSig_1433 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819736 Type;
    struct Type_2819737 Type;
    struct Type_2819739 Type;
    struct Type_2819742 Type;
    struct Type_2819745 Type;
    struct Type_2819748 Type;
};

typedef struct LocalVarSig_1498 LocalVarSig_1498, *PLocalVarSig_1498;

typedef struct Type_2819801 Type_2819801, *PType_2819801;

typedef struct Type_2819804 Type_2819804, *PType_2819804;

typedef struct Type_2819807 Type_2819807, *PType_2819807;

typedef struct Type_2819808 Type_2819808, *PType_2819808;

typedef struct Type_2819809 Type_2819809, *PType_2819809;

struct Type_2819801 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819809 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819808 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct Type_2819807 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct Type_2819804 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct LocalVarSig_1498 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819801 Type;
    struct Type_2819804 Type;
    struct Type_2819807 Type;
    struct Type_2819808 Type;
    struct Type_2819809 Type;
};

typedef struct LocalVarSig_153 LocalVarSig_153, *PLocalVarSig_153;

typedef struct Type_2818456 Type_2818456, *PType_2818456;

typedef struct Type_2818457 Type_2818457, *PType_2818457;

typedef struct Type_2818459 Type_2818459, *PType_2818459;

typedef struct Type_2818461 Type_2818461, *PType_2818461;

struct Type_2818459 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct Type_2818457 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct Type_2818456 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818461 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct LocalVarSig_153 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2818456 Type;
    struct Type_2818457 Type;
    struct Type_2818459 Type;
    struct Type_2818461 Type;
};

typedef struct LocalVarSig_450 LocalVarSig_450, *PLocalVarSig_450;

typedef struct Type_2818753 Type_2818753, *PType_2818753;

typedef struct Type_2818754 Type_2818754, *PType_2818754;

typedef struct Type_2818755 Type_2818755, *PType_2818755;

typedef struct Type_2818758 Type_2818758, *PType_2818758;

struct Type_2818755 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818754 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818753 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2818758 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct LocalVarSig_450 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2818753 Type;
    struct Type_2818754 Type;
    struct Type_2818755 Type;
    struct Type_2818758 Type;
};

typedef struct LocalVarSig_527 LocalVarSig_527, *PLocalVarSig_527;

typedef struct Type_2818830 Type_2818830, *PType_2818830;

typedef struct Type_2818832 Type_2818832, *PType_2818832;

typedef struct Type_2818835 Type_2818835, *PType_2818835;

struct Type_2818832 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818830 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818835 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct LocalVarSig_527 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2818830 Type;
    struct Type_2818832 Type;
    struct Type_2818835 Type;
};

typedef struct LocalVarSig_547 LocalVarSig_547, *PLocalVarSig_547;

typedef struct Type_2818850 Type_2818850, *PType_2818850;

typedef struct Type_2818852 Type_2818852, *PType_2818852;

typedef struct Type_2818855 Type_2818855, *PType_2818855;

typedef struct Type_2818858 Type_2818858, *PType_2818858;

typedef struct Type_2818861 Type_2818861, *PType_2818861;

typedef struct Type_2818864 Type_2818864, *PType_2818864;

typedef struct Type_2818867 Type_2818867, *PType_2818867;

typedef struct Type_2818869 Type_2818869, *PType_2818869;

typedef struct Type_2818870 Type_2818870, *PType_2818870;

struct Type_2818869 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2818870 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818850 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818864 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818867 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818858 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818852 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818861 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818855 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct LocalVarSig_547 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2818850 Type;
    struct Type_2818852 Type;
    struct Type_2818855 Type;
    struct Type_2818858 Type;
    struct Type_2818861 Type;
    struct Type_2818864 Type;
    struct Type_2818867 Type;
    struct Type_2818869 Type;
    struct Type_2818870 Type;
};

typedef struct LocalVarSig_662 LocalVarSig_662, *PLocalVarSig_662;

typedef struct Type_2818965 Type_2818965, *PType_2818965;

typedef struct Type_2818967 Type_2818967, *PType_2818967;

typedef struct Type_2818970 Type_2818970, *PType_2818970;

typedef struct Type_2818973 Type_2818973, *PType_2818973;

typedef struct Type_2818976 Type_2818976, *PType_2818976;

typedef struct Type_2818979 Type_2818979, *PType_2818979;

typedef struct Type_2818982 Type_2818982, *PType_2818982;

typedef struct Type_2818983 Type_2818983, *PType_2818983;

typedef struct Type_2818985 Type_2818985, *PType_2818985;

typedef struct Type_2818988 Type_2818988, *PType_2818988;

typedef struct Type_2818991 Type_2818991, *PType_2818991;

struct Type_2818988 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818965 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818976 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818985 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818973 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818983 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818967 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818991 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818982 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2818979 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818970 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct LocalVarSig_662 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2818965 Type;
    struct Type_2818967 Type;
    struct Type_2818970 Type;
    struct Type_2818973 Type;
    struct Type_2818976 Type;
    struct Type_2818979 Type;
    struct Type_2818982 Type;
    struct Type_2818983 Type;
    struct Type_2818985 Type;
    struct Type_2818988 Type;
    struct Type_2818991 Type;
};

typedef struct LocalVarSig_708 LocalVarSig_708, *PLocalVarSig_708;

typedef struct Type_2819011 Type_2819011, *PType_2819011;

typedef struct Type_2819014 Type_2819014, *PType_2819014;

struct Type_2819014 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2819011 {
    struct SzArray ELEMENT_TYPE_SZARRAY;
};

struct LocalVarSig_708 {
    byte LOCAL_SIG; /* Magic (0x07) */
    byte Count; /* Number of types to follow */
    struct Type_2819011 Type;
    struct Type_2819014 Type;
};

typedef struct MethodDefSig_28 MethodDefSig_28, *PMethodDefSig_28;

typedef struct Type_2818331 Type_2818331, *PType_2818331;

struct Type_2818331 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodDefSig_28 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte Count; /* Number of parameter types to follow RetType */
    struct Type_2818331 RetType;
};

typedef struct MethodDefSig_48 MethodDefSig_48, *PMethodDefSig_48;

typedef struct Type_2818351 Type_2818351, *PType_2818351;

struct Type_2818351 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct MethodDefSig_48 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte Count; /* Number of parameter types to follow RetType */
    struct Type_2818351 RetType;
};

typedef struct MethodDefSig_62 MethodDefSig_62, *PMethodDefSig_62;

typedef struct Type_2818365 Type_2818365, *PType_2818365;

struct Type_2818365 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodDefSig_62 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte Count; /* Number of parameter types to follow RetType */
    struct Type_2818365 RetType;
};

typedef struct MethodDefSig_66 MethodDefSig_66, *PMethodDefSig_66;

typedef struct Type_2818369 Type_2818369, *PType_2818369;

typedef struct Type_2818370 Type_2818370, *PType_2818370;

typedef struct Type_2818371 Type_2818371, *PType_2818371;

struct Type_2818369 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818371 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct Type_2818370 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct MethodDefSig_66 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte Count; /* Number of parameter types to follow RetType */
    struct Type_2818369 RetType;
    struct Type_2818370 Param0;
    struct Type_2818371 Param1;
};

typedef struct MethodDefSig_73 MethodDefSig_73, *PMethodDefSig_73;

typedef struct Type_2818376 Type_2818376, *PType_2818376;

typedef struct Type_2818377 Type_2818377, *PType_2818377;

struct Type_2818376 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818377 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct MethodDefSig_73 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte Count; /* Number of parameter types to follow RetType */
    struct Type_2818376 RetType;
    struct Type_2818377 Param0;
};

typedef struct MethodRefSig_101 MethodRefSig_101, *PMethodRefSig_101;

typedef struct Type_2818404 Type_2818404, *PType_2818404;

typedef struct Type_2818405 Type_2818405, *PType_2818405;

typedef struct Type_2818406 Type_2818406, *PType_2818406;

struct Type_2818405 {
    enum TypeCode ELEMENT_TYPE_R4;
};

struct Type_2818404 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818406 {
    enum TypeCode ELEMENT_TYPE_R4;
};

struct MethodRefSig_101 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818404 RetType;
    struct Type_2818405 Param0;
    struct Type_2818406 Param1;
};

typedef struct MethodRefSig_1035 MethodRefSig_1035, *PMethodRefSig_1035;

typedef struct Type_2819338 Type_2819338, *PType_2819338;

struct Type_2819338 {
    struct SzArray ELEMENT_TYPE_SZARRAY;
};

struct MethodRefSig_1035 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819338 RetType;
};

typedef struct MethodRefSig_1041 MethodRefSig_1041, *PMethodRefSig_1041;

typedef struct Type_2819344 Type_2819344, *PType_2819344;

struct Type_2819344 {
    enum TypeCode ELEMENT_TYPE_I;
};

struct MethodRefSig_1041 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819344 RetType;
};

typedef struct MethodRefSig_1053 MethodRefSig_1053, *PMethodRefSig_1053;

typedef struct Type_2819356 Type_2819356, *PType_2819356;

struct Type_2819356 {
    struct ValueType.conflict20 ELEMENT_TYPE_VALUETYPE;
};

struct MethodRefSig_1053 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819356 RetType;
};

typedef struct MethodRefSig_1059 MethodRefSig_1059, *PMethodRefSig_1059;

typedef struct Type_2819362 Type_2819362, *PType_2819362;

typedef struct Type_2819363 Type_2819363, *PType_2819363;

struct Type_2819362 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2819363 {
    struct ValueType.conflict ELEMENT_TYPE_VALUETYPE;
};

struct MethodRefSig_1059 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819362 RetType;
    struct Type_2819363 Param0;
};

typedef struct MethodRefSig_1069 MethodRefSig_1069, *PMethodRefSig_1069;

typedef struct Type_2819372 Type_2819372, *PType_2819372;

typedef struct Type_2819373 Type_2819373, *PType_2819373;

struct Type_2819372 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2819373 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct MethodRefSig_1069 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819372 RetType;
    struct Type_2819373 Param0;
};

typedef struct MethodRefSig_107 MethodRefSig_107, *PMethodRefSig_107;

typedef struct Type_2818410 Type_2818410, *PType_2818410;

typedef struct Type_2818411 Type_2818411, *PType_2818411;

typedef struct ValueType.conflict2 ValueType.conflict2, *PValueType.conflict2;

struct ValueType.conflict2 {
    enum TypeCode ValueType; /* ValueType */
    byte TypeDefOrRefEncoded; /* TypeRef: Row 0xa */
};

struct Type_2818411 {
    struct ValueType.conflict2 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818410 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_107 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818410 RetType;
    struct Type_2818411 Param0;
};

typedef struct MethodRefSig_1074 MethodRefSig_1074, *PMethodRefSig_1074;

typedef struct Type_2819377 Type_2819377, *PType_2819377;

typedef struct Type_2819378 Type_2819378, *PType_2819378;

struct Type_2819378 {
    enum TypeCode ELEMENT_TYPE_CHAR;
};

struct Type_2819377 {
    enum TypeCode ELEMENT_TYPE_CHAR;
};

struct MethodRefSig_1074 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819377 RetType;
    struct Type_2819378 Param0;
};

typedef struct MethodRefSig_1083 MethodRefSig_1083, *PMethodRefSig_1083;

typedef struct Type_2819386 Type_2819386, *PType_2819386;

struct Type_2819386 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_1083 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819386 RetType;
};

typedef struct MethodRefSig_1109 MethodRefSig_1109, *PMethodRefSig_1109;

typedef struct Type_2819412 Type_2819412, *PType_2819412;

typedef struct Type_2819413 Type_2819413, *PType_2819413;

typedef struct ELEMENT_TYPE_VAR_2819414 ELEMENT_TYPE_VAR_2819414, *PELEMENT_TYPE_VAR_2819414;

struct ELEMENT_TYPE_VAR_2819414 {
    enum TypeCode ELEMENT_TYPE_VAR;
    byte number;
};

struct Type_2819413 {
    struct ELEMENT_TYPE_VAR_2819414 ELEMENT_TYPE_VAR;
};

struct Type_2819412 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_1109 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819412 RetType;
    struct Type_2819413 Param0;
};

typedef struct MethodRefSig_1115 MethodRefSig_1115, *PMethodRefSig_1115;

typedef struct Type_2819418 Type_2819418, *PType_2819418;

typedef struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@39356338] GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@39356338], *PGenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@39356338];

typedef struct ELEMENT_TYPE_VAR_2819424 ELEMENT_TYPE_VAR_2819424, *PELEMENT_TYPE_VAR_2819424;

struct ELEMENT_TYPE_VAR_2819424 {
    enum TypeCode ELEMENT_TYPE_VAR;
    byte number;
};

struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@39356338] {
    enum TypeCode GenericInst; /* GenericInst */
    enum TypeCode ClassOrValueType; /* Class or ValueType */
    word Type; /* TypeDefOrRefOrSpecEncoded */
    byte GenArgCount; /* Number of generics to follow */
    struct ELEMENT_TYPE_VAR_2819424 Type; /* Generic Type */
};

struct Type_2819418 {
    struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@39356338] ELEMENT_TYPE_GENERICINST;
};

struct MethodRefSig_1115 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819418 RetType;
};

typedef struct MethodRefSig_113 MethodRefSig_113, *PMethodRefSig_113;

typedef struct Type_2818416 Type_2818416, *PType_2818416;

typedef struct Type_2818417 Type_2818417, *PType_2818417;

typedef struct ValueType.conflict3 ValueType.conflict3, *PValueType.conflict3;

struct Type_2818416 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct ValueType.conflict3 {
    enum TypeCode ValueType; /* ValueType */
    byte TypeDefOrRefEncoded; /* TypeRef: Row 0xc */
};

struct Type_2818417 {
    struct ValueType.conflict3 ELEMENT_TYPE_VALUETYPE;
};

struct MethodRefSig_113 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818416 RetType;
    struct Type_2818417 Param0;
};

typedef struct MethodRefSig_1132 MethodRefSig_1132, *PMethodRefSig_1132;

typedef struct Type_2819435 Type_2819435, *PType_2819435;

typedef struct ELEMENT_TYPE_VAR_2819436 ELEMENT_TYPE_VAR_2819436, *PELEMENT_TYPE_VAR_2819436;

struct ELEMENT_TYPE_VAR_2819436 {
    enum TypeCode ELEMENT_TYPE_VAR;
    byte number;
};

struct Type_2819435 {
    struct ELEMENT_TYPE_VAR_2819436 ELEMENT_TYPE_VAR;
};

struct MethodRefSig_1132 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819435 RetType;
};

typedef struct MethodRefSig_1147 MethodRefSig_1147, *PMethodRefSig_1147;

typedef struct Type_2819450 Type_2819450, *PType_2819450;

typedef struct Type_2819452 Type_2819452, *PType_2819452;

struct Type_2819450 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2819452 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_1147 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819450 RetType;
    struct Type_2819452 Param0;
};

typedef struct MethodRefSig_1153 MethodRefSig_1153, *PMethodRefSig_1153;

typedef struct Type_2819456 Type_2819456, *PType_2819456;

typedef struct Type_2819457 Type_2819457, *PType_2819457;

struct Type_2819457 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819456 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_1153 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819456 RetType;
    struct Type_2819457 Param0;
};

typedef struct MethodRefSig_1158 MethodRefSig_1158, *PMethodRefSig_1158;

typedef struct Type_2819462 Type_2819462, *PType_2819462;

typedef struct Type_2819463 Type_2819463, *PType_2819463;

typedef struct Type_2819469 Type_2819469, *PType_2819469;

typedef struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@1e2bf101] GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@1e2bf101], *PGenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@1e2bf101];

typedef struct ELEMENT_TYPE_MVAR_2819470 ELEMENT_TYPE_MVAR_2819470, *PELEMENT_TYPE_MVAR_2819470;

typedef struct ELEMENT_TYPE_MVAR_2819468 ELEMENT_TYPE_MVAR_2819468, *PELEMENT_TYPE_MVAR_2819468;

struct Type_2819462 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct ELEMENT_TYPE_MVAR_2819470 {
    enum TypeCode ELEMENT_TYPE_MVAR;
    byte number;
};

struct Type_2819469 {
    struct ELEMENT_TYPE_MVAR_2819470 ELEMENT_TYPE_MVAR;
};

struct ELEMENT_TYPE_MVAR_2819468 {
    enum TypeCode ELEMENT_TYPE_MVAR;
    byte number;
};

struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@1e2bf101] {
    enum TypeCode GenericInst; /* GenericInst */
    enum TypeCode ClassOrValueType; /* Class or ValueType */
    byte Type; /* TypeDefOrRefOrSpecEncoded */
    byte GenArgCount; /* Number of generics to follow */
    struct ELEMENT_TYPE_MVAR_2819468 Type; /* Generic Type */
};

struct Type_2819463 {
    struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@1e2bf101] ELEMENT_TYPE_GENERICINST;
};

struct MethodRefSig_1158 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte GenParamCount; /* Number of generic paramameters for the method */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819462 RetType;
    struct Type_2819463 Param0;
    struct Type_2819469 Param1;
};

typedef struct MethodRefSig_1184 MethodRefSig_1184, *PMethodRefSig_1184;

typedef struct Type_2819487 Type_2819487, *PType_2819487;

typedef struct Type_2819488 Type_2819488, *PType_2819488;

typedef struct Type_2819489 Type_2819489, *PType_2819489;

struct Type_2819489 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819488 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819487 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct MethodRefSig_1184 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819487 RetType;
    struct Type_2819488 Param0;
    struct Type_2819489 Param1;
};

typedef struct MethodRefSig_119 MethodRefSig_119, *PMethodRefSig_119;

typedef struct Type_2818422 Type_2818422, *PType_2818422;

struct Type_2818422 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_119 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818422 RetType;
};

typedef struct MethodRefSig_1196 MethodRefSig_1196, *PMethodRefSig_1196;

typedef struct Type_2819499 Type_2819499, *PType_2819499;

typedef struct Type_2819500 Type_2819500, *PType_2819500;

struct Type_2819500 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819499 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct MethodRefSig_1196 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819499 RetType;
    struct Type_2819500 Param0;
};

typedef struct MethodRefSig_1201 MethodRefSig_1201, *PMethodRefSig_1201;

typedef struct Type_2819504 Type_2819504, *PType_2819504;

typedef struct Type_2819506 Type_2819506, *PType_2819506;

typedef struct ValueType.conflict5 ValueType.conflict5, *PValueType.conflict5;

struct Type_2819506 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct ValueType.conflict5 {
    enum TypeCode ValueType; /* ValueType */
    byte TypeDefOrRefEncoded; /* TypeRef: Row 0x19 */
};

struct Type_2819504 {
    struct ValueType.conflict5 ELEMENT_TYPE_VALUETYPE;
};

struct MethodRefSig_1201 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819504 RetType;
    struct Type_2819506 Param0;
};

typedef struct MethodRefSig_1215 MethodRefSig_1215, *PMethodRefSig_1215;

typedef struct Type_2819518 Type_2819518, *PType_2819518;

typedef struct Type_2819520 Type_2819520, *PType_2819520;

typedef struct Type_2819521 Type_2819521, *PType_2819521;

typedef struct Type_2819522 Type_2819522, *PType_2819522;

typedef struct ValueType.conflict6 ValueType.conflict6, *PValueType.conflict6;

struct ValueType.conflict6 {
    enum TypeCode ValueType; /* ValueType */
    byte TypeDefOrRefEncoded; /* TypeRef: Row 0x1a */
};

struct Type_2819522 {
    struct ValueType.conflict6 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2819521 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819518 {
    struct ValueType.conflict5 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2819520 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_1215 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819518 RetType;
    struct Type_2819520 Param0;
    struct Type_2819521 Param1;
    struct Type_2819522 Param2;
};

typedef struct MethodRefSig_124 MethodRefSig_124, *PMethodRefSig_124;

typedef struct Type_2818427 Type_2818427, *PType_2818427;

typedef struct Type_2818428 Type_2818428, *PType_2818428;

struct Type_2818427 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818428 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_124 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818427 RetType;
    struct Type_2818428 Param0;
};

typedef struct MethodRefSig_1275 MethodRefSig_1275, *PMethodRefSig_1275;

typedef struct Type_2819578 Type_2819578, *PType_2819578;

struct Type_2819578 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_1275 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819578 RetType;
};

typedef struct MethodRefSig_1281 MethodRefSig_1281, *PMethodRefSig_1281;

typedef struct Type_2819584 Type_2819584, *PType_2819584;

struct Type_2819584 {
    struct SzArray.conflict1 ELEMENT_TYPE_SZARRAY;
};

struct MethodRefSig_1281 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819584 RetType;
};

typedef struct MethodRefSig_1288 MethodRefSig_1288, *PMethodRefSig_1288;

typedef struct Type_2819591 Type_2819591, *PType_2819591;

struct Type_2819591 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_1288 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819591 RetType;
};

typedef struct MethodRefSig_1294 MethodRefSig_1294, *PMethodRefSig_1294;

typedef struct Type_2819597 Type_2819597, *PType_2819597;

typedef struct Type_2819598 Type_2819598, *PType_2819598;

typedef struct Type_2819599 Type_2819599, *PType_2819599;

typedef struct Type_2819600 Type_2819600, *PType_2819600;

typedef struct ValueType.conflict21 ValueType.conflict21, *PValueType.conflict21;

struct ValueType.conflict21 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x6d */
};

struct Type_2819600 {
    struct ValueType.conflict21 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2819599 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819598 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819597 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct MethodRefSig_1294 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819597 RetType;
    struct Type_2819598 Param0;
    struct Type_2819599 Param1;
    struct Type_2819600 Param2;
};

typedef struct MethodRefSig_130 MethodRefSig_130, *PMethodRefSig_130;

typedef struct Type_2818433 Type_2818433, *PType_2818433;

typedef struct Type_2818434 Type_2818434, *PType_2818434;

typedef struct ValueType.conflict4 ValueType.conflict4, *PValueType.conflict4;

struct ValueType.conflict4 {
    enum TypeCode ValueType; /* ValueType */
    byte TypeDefOrRefEncoded; /* TypeRef: Row 0xe */
};

struct Type_2818434 {
    struct ValueType.conflict4 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818433 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_130 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818433 RetType;
    struct Type_2818434 Param0;
};

typedef struct MethodRefSig_1303 MethodRefSig_1303, *PMethodRefSig_1303;

typedef struct Type_2819606 Type_2819606, *PType_2819606;

struct Type_2819606 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_1303 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819606 RetType;
};

typedef struct MethodRefSig_1309 MethodRefSig_1309, *PMethodRefSig_1309;

typedef struct Type_2819612 Type_2819612, *PType_2819612;

typedef struct Type_2819615 Type_2819615, *PType_2819615;

struct Type_2819615 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819612 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_1309 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819612 RetType;
    struct Type_2819615 Param0;
};

typedef struct MethodRefSig_1352 MethodRefSig_1352, *PMethodRefSig_1352;

typedef struct Type_2819655 Type_2819655, *PType_2819655;

struct Type_2819655 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_1352 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819655 RetType;
};

typedef struct MethodRefSig_1358 MethodRefSig_1358, *PMethodRefSig_1358;

typedef struct Type_2819661 Type_2819661, *PType_2819661;

typedef struct Type_2819662 Type_2819662, *PType_2819662;

struct Type_2819661 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct Type_2819662 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_1358 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819661 RetType;
    struct Type_2819662 Param0;
};

typedef struct MethodRefSig_136 MethodRefSig_136, *PMethodRefSig_136;

typedef struct Type_2818439 Type_2818439, *PType_2818439;

typedef struct Type_2818440 Type_2818440, *PType_2818440;

typedef struct Type_2818441 Type_2818441, *PType_2818441;

struct Type_2818441 {
    enum TypeCode ELEMENT_TYPE_I;
};

struct Type_2818440 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct Type_2818439 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_136 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818439 RetType;
    struct Type_2818440 Param0;
    struct Type_2818441 Param1;
};

typedef struct MethodRefSig_1363 MethodRefSig_1363, *PMethodRefSig_1363;

typedef struct Type_2819666 Type_2819666, *PType_2819666;

typedef struct Type_2819667 Type_2819667, *PType_2819667;

typedef struct Type_2819670 Type_2819670, *PType_2819670;

typedef struct ValueType.conflict22 ValueType.conflict22, *PValueType.conflict22;

struct Type_2819667 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819666 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct ValueType.conflict22 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x70 */
};

struct Type_2819670 {
    struct ValueType.conflict22 ELEMENT_TYPE_VALUETYPE;
};

struct MethodRefSig_1363 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819666 RetType;
    struct Type_2819667 Param0;
    struct Type_2819670 Param1;
};

typedef struct MethodRefSig_1373 MethodRefSig_1373, *PMethodRefSig_1373;

typedef struct Type_2819676 Type_2819676, *PType_2819676;

typedef struct Type_2819677 Type_2819677, *PType_2819677;

struct Type_2819677 {
    enum TypeCode ELEMENT_TYPE_I8;
};

struct Type_2819676 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_1373 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819676 RetType;
    struct Type_2819677 Param0;
};

typedef struct MethodRefSig_1393 MethodRefSig_1393, *PMethodRefSig_1393;

typedef struct Type_2819696 Type_2819696, *PType_2819696;

typedef struct Type_2819697 Type_2819697, *PType_2819697;

typedef struct Type_2819699 Type_2819699, *PType_2819699;

typedef struct ELEMENT_TYPE_VAR_2819698 ELEMENT_TYPE_VAR_2819698, *PELEMENT_TYPE_VAR_2819698;

typedef struct ELEMENT_TYPE_VAR_2819701 ELEMENT_TYPE_VAR_2819701, *PELEMENT_TYPE_VAR_2819701;

struct ELEMENT_TYPE_VAR_2819698 {
    enum TypeCode ELEMENT_TYPE_VAR;
    byte number;
};

struct ELEMENT_TYPE_VAR_2819701 {
    enum TypeCode ELEMENT_TYPE_VAR;
    byte number;
};

struct Type_2819699 {
    enum TypeCode ELEMENT_TYPE_BYREF; /* By Reference */
    struct ELEMENT_TYPE_VAR_2819701 ELEMENT_TYPE_VAR;
};

struct Type_2819697 {
    struct ELEMENT_TYPE_VAR_2819698 ELEMENT_TYPE_VAR;
};

struct Type_2819696 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct MethodRefSig_1393 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819696 RetType;
    struct Type_2819697 Param0;
    struct Type_2819699 Param1;
};

typedef struct MethodRefSig_142 MethodRefSig_142, *PMethodRefSig_142;

typedef struct Type_2818445 Type_2818445, *PType_2818445;

typedef struct Type_2818446 Type_2818446, *PType_2818446;

struct Type_2818445 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818446 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_142 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818445 RetType;
    struct Type_2818446 Param0;
};

typedef struct MethodRefSig_1421 MethodRefSig_1421, *PMethodRefSig_1421;

typedef struct Type_2819724 Type_2819724, *PType_2819724;

struct Type_2819724 {
    enum TypeCode ELEMENT_TYPE_I8;
};

struct MethodRefSig_1421 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819724 RetType;
};

typedef struct MethodRefSig_1450 MethodRefSig_1450, *PMethodRefSig_1450;

typedef struct Type_2819753 Type_2819753, *PType_2819753;

typedef struct Type_2819754 Type_2819754, *PType_2819754;

typedef struct Type_2819755 Type_2819755, *PType_2819755;

typedef struct Type_2819756 Type_2819756, *PType_2819756;

struct Type_2819756 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct Type_2819755 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct Type_2819754 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819753 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_1450 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819753 RetType;
    struct Type_2819754 Param0;
    struct Type_2819755 Param1;
    struct Type_2819756 Param2;
};

typedef struct MethodRefSig_1457 MethodRefSig_1457, *PMethodRefSig_1457;

typedef struct Type_2819760 Type_2819760, *PType_2819760;

typedef struct Type_2819763 Type_2819763, *PType_2819763;

typedef struct Type_2819765 Type_2819765, *PType_2819765;

struct Type_2819765 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2819763 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2819760 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_1457 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819760 RetType;
    struct Type_2819763 Param0;
    struct Type_2819765 Param1;
};

typedef struct MethodRefSig_1467 MethodRefSig_1467, *PMethodRefSig_1467;

typedef struct Type_2819770 Type_2819770, *PType_2819770;

typedef struct Type_2819773 Type_2819773, *PType_2819773;

struct Type_2819770 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819773 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct MethodRefSig_1467 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819770 RetType;
    struct Type_2819773 Param0;
};

typedef struct MethodRefSig_1512 MethodRefSig_1512, *PMethodRefSig_1512;

typedef struct Type_2819815 Type_2819815, *PType_2819815;

typedef struct Type_2819816 Type_2819816, *PType_2819816;

typedef struct Type_2819817 Type_2819817, *PType_2819817;

struct Type_2819815 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2819817 {
    enum TypeCode ELEMENT_TYPE_BYREF; /* By Reference */
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct Type_2819816 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct MethodRefSig_1512 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819815 RetType;
    struct Type_2819816 Param0;
    struct Type_2819817 Param1;
};

typedef struct MethodRefSig_1527 MethodRefSig_1527, *PMethodRefSig_1527;

typedef struct Type_2819830 Type_2819830, *PType_2819830;

typedef struct Type_2819831 Type_2819831, *PType_2819831;

typedef struct ELEMENT_TYPE_VAR_2819832 ELEMENT_TYPE_VAR_2819832, *PELEMENT_TYPE_VAR_2819832;

struct ELEMENT_TYPE_VAR_2819832 {
    enum TypeCode ELEMENT_TYPE_VAR;
    byte number;
};

struct Type_2819831 {
    struct ELEMENT_TYPE_VAR_2819832 ELEMENT_TYPE_VAR;
};

struct Type_2819830 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct MethodRefSig_1527 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819830 RetType;
    struct Type_2819831 Param0;
};

typedef struct MethodRefSig_1533 MethodRefSig_1533, *PMethodRefSig_1533;

typedef struct Type_2819836 Type_2819836, *PType_2819836;

typedef struct Type_2819837 Type_2819837, *PType_2819837;

struct Type_2819836 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2819837 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct MethodRefSig_1533 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819836 RetType;
    struct Type_2819837 Param0;
};

typedef struct MethodRefSig_1538 MethodRefSig_1538, *PMethodRefSig_1538;

typedef struct Type_2819841 Type_2819841, *PType_2819841;

typedef struct Type_2819842 Type_2819842, *PType_2819842;

typedef struct Type_2819845 Type_2819845, *PType_2819845;

struct Type_2819845 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819842 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819841 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct MethodRefSig_1538 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819841 RetType;
    struct Type_2819842 Param0;
    struct Type_2819845 Param1;
};

typedef struct MethodRefSig_1548 MethodRefSig_1548, *PMethodRefSig_1548;

typedef struct Type_2819851 Type_2819851, *PType_2819851;

typedef struct Type_2819852 Type_2819852, *PType_2819852;

typedef struct Type_2819854 Type_2819854, *PType_2819854;

typedef struct ELEMENT_TYPE_VAR_2819853 ELEMENT_TYPE_VAR_2819853, *PELEMENT_TYPE_VAR_2819853;

typedef struct ELEMENT_TYPE_VAR_2819855 ELEMENT_TYPE_VAR_2819855, *PELEMENT_TYPE_VAR_2819855;

struct ELEMENT_TYPE_VAR_2819853 {
    enum TypeCode ELEMENT_TYPE_VAR;
    byte number;
};

struct ELEMENT_TYPE_VAR_2819855 {
    enum TypeCode ELEMENT_TYPE_VAR;
    byte number;
};

struct Type_2819854 {
    struct ELEMENT_TYPE_VAR_2819855 ELEMENT_TYPE_VAR;
};

struct Type_2819852 {
    struct ELEMENT_TYPE_VAR_2819853 ELEMENT_TYPE_VAR;
};

struct Type_2819851 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_1548 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819851 RetType;
    struct Type_2819852 Param0;
    struct Type_2819854 Param1;
};

typedef struct MethodRefSig_1556 MethodRefSig_1556, *PMethodRefSig_1556;

typedef struct Type_2819859 Type_2819859, *PType_2819859;

typedef struct ValueType.conflict23 ValueType.conflict23, *PValueType.conflict23;

struct ValueType.conflict23 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x73 */
};

struct Type_2819859 {
    struct ValueType.conflict23 ELEMENT_TYPE_VALUETYPE;
};

struct MethodRefSig_1556 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819859 RetType;
};

typedef struct MethodRefSig_1572 MethodRefSig_1572, *PMethodRefSig_1572;

typedef struct Type_2819875 Type_2819875, *PType_2819875;

typedef struct Type_2819876 Type_2819876, *PType_2819876;

typedef struct Type_2819878 Type_2819878, *PType_2819878;

struct Type_2819878 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2819876 {
    enum TypeCode ELEMENT_TYPE_BYREF; /* By Reference */
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2819875 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct MethodRefSig_1572 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819875 RetType;
    struct Type_2819876 Param0;
    struct Type_2819878 Param1;
};

typedef struct MethodRefSig_1579 MethodRefSig_1579, *PMethodRefSig_1579;

typedef struct Type_2819882 Type_2819882, *PType_2819882;

typedef struct Type_2819883 Type_2819883, *PType_2819883;

struct Type_2819882 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2819883 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_1579 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819882 RetType;
    struct Type_2819883 Param0;
};

typedef struct MethodRefSig_163 MethodRefSig_163, *PMethodRefSig_163;

typedef struct Type_2818466 Type_2818466, *PType_2818466;

typedef struct Type_2818469 Type_2818469, *PType_2818469;

struct Type_2818466 {
    struct SzArray ELEMENT_TYPE_SZARRAY;
};

struct Type_2818469 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_163 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818466 RetType;
    struct Type_2818469 Param0;
};

typedef struct MethodRefSig_1659 MethodRefSig_1659, *PMethodRefSig_1659;

typedef struct Type_2819962 Type_2819962, *PType_2819962;

typedef struct Type_2819963 Type_2819963, *PType_2819963;

typedef struct ValueType.conflict24 ValueType.conflict24, *PValueType.conflict24;

struct ValueType.conflict24 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x79 */
};

struct Type_2819963 {
    struct ValueType.conflict24 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2819962 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_1659 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819962 RetType;
    struct Type_2819963 Param0;
};

typedef struct MethodRefSig_170 MethodRefSig_170, *PMethodRefSig_170;

typedef struct Type_2818474 Type_2818474, *PType_2818474;

typedef struct Type_2818475 Type_2818475, *PType_2818475;

typedef struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@345a5c5] GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@345a5c5], *PGenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@345a5c5];

typedef struct ELEMENT_TYPE_MVAR_2818480 ELEMENT_TYPE_MVAR_2818480, *PELEMENT_TYPE_MVAR_2818480;

struct Type_2818474 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct ELEMENT_TYPE_MVAR_2818480 {
    enum TypeCode ELEMENT_TYPE_MVAR;
    byte number;
};

struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@345a5c5] {
    enum TypeCode GenericInst; /* GenericInst */
    enum TypeCode ClassOrValueType; /* Class or ValueType */
    byte Type; /* TypeDefOrRefOrSpecEncoded */
    byte GenArgCount; /* Number of generics to follow */
    struct ELEMENT_TYPE_MVAR_2818480 Type; /* Generic Type */
};

struct Type_2818475 {
    struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypeVarOrMvar@345a5c5] ELEMENT_TYPE_GENERICINST;
};

struct MethodRefSig_170 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte GenParamCount; /* Number of generic paramameters for the method */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818474 RetType;
    struct Type_2818475 Param0;
};

typedef struct MethodRefSig_186 MethodRefSig_186, *PMethodRefSig_186;

typedef struct Type_2818489 Type_2818489, *PType_2818489;

typedef struct Type_2818490 Type_2818490, *PType_2818490;

struct Type_2818490 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2818489 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_186 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818489 RetType;
    struct Type_2818490 Param0;
};

typedef struct MethodRefSig_191 MethodRefSig_191, *PMethodRefSig_191;

typedef struct Type_2818494 Type_2818494, *PType_2818494;

typedef struct Type_2818495 Type_2818495, *PType_2818495;

typedef struct Type_2818496 Type_2818496, *PType_2818496;

typedef struct Type_2818497 Type_2818497, *PType_2818497;

struct Type_2818494 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct Type_2818496 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818495 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818497 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct MethodRefSig_191 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818494 RetType;
    struct Type_2818495 Param0;
    struct Type_2818496 Param1;
    struct Type_2818497 Param2;
};

typedef struct MethodRefSig_198 MethodRefSig_198, *PMethodRefSig_198;

typedef struct Type_2818501 Type_2818501, *PType_2818501;

typedef struct Type_2818503 Type_2818503, *PType_2818503;

typedef struct Type_2818504 Type_2818504, *PType_2818504;

typedef struct Type_2818505 Type_2818505, *PType_2818505;

typedef struct Type_2818507 Type_2818507, *PType_2818507;

typedef struct ValueType.conflict7 ValueType.conflict7, *PValueType.conflict7;

struct Type_2818504 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818503 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818501 {
    struct ValueType.conflict5 ELEMENT_TYPE_VALUETYPE;
};

struct ValueType.conflict7 {
    enum TypeCode ValueType; /* ValueType */
    byte TypeDefOrRefEncoded; /* TypeRef: Row 0x1b */
};

struct Type_2818507 {
    struct ValueType.conflict7 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818505 {
    struct ValueType.conflict6 ELEMENT_TYPE_VALUETYPE;
};

struct MethodRefSig_198 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818501 RetType;
    struct Type_2818503 Param0;
    struct Type_2818504 Param1;
    struct Type_2818505 Param2;
    struct Type_2818507 Param3;
};

typedef struct MethodRefSig_209 MethodRefSig_209, *PMethodRefSig_209;

typedef struct Type_2818512 Type_2818512, *PType_2818512;

typedef struct Type_2818514 Type_2818514, *PType_2818514;

struct Type_2818514 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818512 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_209 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818512 RetType;
    struct Type_2818514 Param0;
};

typedef struct MethodRefSig_215 MethodRefSig_215, *PMethodRefSig_215;

typedef struct Type_2818518 Type_2818518, *PType_2818518;

typedef struct Type_2818519 Type_2818519, *PType_2818519;

typedef struct Type_2818520 Type_2818520, *PType_2818520;

struct Type_2818520 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818518 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818519 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_215 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818518 RetType;
    struct Type_2818519 Param0;
    struct Type_2818520 Param1;
};

typedef struct MethodRefSig_221 MethodRefSig_221, *PMethodRefSig_221;

typedef struct Type_2818524 Type_2818524, *PType_2818524;

typedef struct Type_2818525 Type_2818525, *PType_2818525;

typedef struct Type_2818526 Type_2818526, *PType_2818526;

struct Type_2818526 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818525 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818524 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_221 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818524 RetType;
    struct Type_2818525 Param0;
    struct Type_2818526 Param1;
};

typedef struct MethodRefSig_227 MethodRefSig_227, *PMethodRefSig_227;

typedef struct Type_2818530 Type_2818530, *PType_2818530;

typedef struct Type_2818531 Type_2818531, *PType_2818531;

typedef struct Type_2818532 Type_2818532, *PType_2818532;

struct Type_2818532 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818531 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818530 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_227 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818530 RetType;
    struct Type_2818531 Param0;
    struct Type_2818532 Param1;
};

typedef struct MethodRefSig_234 MethodRefSig_234, *PMethodRefSig_234;

typedef struct Type_2818537 Type_2818537, *PType_2818537;

struct Type_2818537 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_234 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818537 RetType;
};

typedef struct MethodRefSig_238 MethodRefSig_238, *PMethodRefSig_238;

typedef struct Type_2818541 Type_2818541, *PType_2818541;

typedef struct Type_2818542 Type_2818542, *PType_2818542;

typedef struct ValueType.conflict8 ValueType.conflict8, *PValueType.conflict8;

struct ValueType.conflict8 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x23 */
};

struct Type_2818542 {
    struct ValueType.conflict8 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818541 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_238 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818541 RetType;
    struct Type_2818542 Param0;
};

typedef struct MethodRefSig_250 MethodRefSig_250, *PMethodRefSig_250;

typedef struct Type_2818553 Type_2818553, *PType_2818553;

typedef struct Type_2818556 Type_2818556, *PType_2818556;

struct Type_2818553 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818556 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_250 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818553 RetType;
    struct Type_2818556 Param0;
};

typedef struct MethodRefSig_257 MethodRefSig_257, *PMethodRefSig_257;

typedef struct Type_2818560 Type_2818560, *PType_2818560;

typedef struct Type_2818561 Type_2818561, *PType_2818561;

typedef struct Type_2818562 Type_2818562, *PType_2818562;

struct Type_2818562 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct Type_2818561 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818560 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_257 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818560 RetType;
    struct Type_2818561 Param0;
    struct Type_2818562 Param1;
};

typedef struct MethodRefSig_263 MethodRefSig_263, *PMethodRefSig_263;

typedef struct Type_2818566 Type_2818566, *PType_2818566;

typedef struct Type_2818567 Type_2818567, *PType_2818567;

typedef struct Type_2818568 Type_2818568, *PType_2818568;

typedef struct Type_2818569 Type_2818569, *PType_2818569;

typedef struct ValueType.conflict9 ValueType.conflict9, *PValueType.conflict9;

struct Type_2818567 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct ValueType.conflict9 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x26 */
};

struct Type_2818569 {
    struct ValueType.conflict9 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818566 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818568 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct MethodRefSig_263 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818566 RetType;
    struct Type_2818567 Param0;
    struct Type_2818568 Param1;
    struct Type_2818569 Param2;
};

typedef struct MethodRefSig_272 MethodRefSig_272, *PMethodRefSig_272;

typedef struct Type_2818575 Type_2818575, *PType_2818575;

typedef struct Type_2818576 Type_2818576, *PType_2818576;

typedef struct ValueType.conflict10 ValueType.conflict10, *PValueType.conflict10;

struct ValueType.conflict10 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x27 */
};

struct Type_2818576 {
    struct ValueType.conflict10 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818575 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_272 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818575 RetType;
    struct Type_2818576 Param0;
};

typedef struct MethodRefSig_279 MethodRefSig_279, *PMethodRefSig_279;

typedef struct Type_2818582 Type_2818582, *PType_2818582;

typedef struct Type_2818583 Type_2818583, *PType_2818583;

typedef struct Type_2818584 Type_2818584, *PType_2818584;

typedef struct Type_2818585 Type_2818585, *PType_2818585;

typedef struct Type_2818586 Type_2818586, *PType_2818586;

struct Type_2818586 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818585 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818584 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818583 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818582 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_279 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818582 RetType;
    struct Type_2818583 Param0;
    struct Type_2818584 Param1;
    struct Type_2818585 Param2;
    struct Type_2818586 Param3;
};

typedef struct MethodRefSig_28 MethodRefSig_28, *PMethodRefSig_28;

struct MethodRefSig_28 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818331 RetType;
};

typedef struct MethodRefSig_287 MethodRefSig_287, *PMethodRefSig_287;

typedef struct Type_2818590 Type_2818590, *PType_2818590;

struct Type_2818590 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_287 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818590 RetType;
};

typedef struct MethodRefSig_293 MethodRefSig_293, *PMethodRefSig_293;

typedef struct Type_2818596 Type_2818596, *PType_2818596;

struct Type_2818596 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct MethodRefSig_293 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818596 RetType;
};

typedef struct MethodRefSig_297 MethodRefSig_297, *PMethodRefSig_297;

typedef struct Type_2818600 Type_2818600, *PType_2818600;

struct Type_2818600 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_297 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818600 RetType;
};

typedef struct MethodRefSig_302 MethodRefSig_302, *PMethodRefSig_302;

typedef struct Type_2818605 Type_2818605, *PType_2818605;

struct Type_2818605 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_302 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818605 RetType;
};

typedef struct MethodRefSig_308 MethodRefSig_308, *PMethodRefSig_308;

typedef struct Type_2818611 Type_2818611, *PType_2818611;

typedef struct Type_2818612 Type_2818612, *PType_2818612;

typedef struct ValueType.conflict11 ValueType.conflict11, *PValueType.conflict11;

struct ValueType.conflict11 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x2c */
};

struct Type_2818612 {
    struct ValueType.conflict11 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818611 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_308 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818611 RetType;
    struct Type_2818612 Param0;
};

typedef struct MethodRefSig_315 MethodRefSig_315, *PMethodRefSig_315;

typedef struct Type_2818618 Type_2818618, *PType_2818618;

struct Type_2818618 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_315 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818618 RetType;
};

typedef struct MethodRefSig_321 MethodRefSig_321, *PMethodRefSig_321;

typedef struct Type_2818624 Type_2818624, *PType_2818624;

typedef struct Type_2818627 Type_2818627, *PType_2818627;

typedef struct ValueType.conflict12 ValueType.conflict12, *PValueType.conflict12;

struct ValueType.conflict12 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x2f */
};

struct Type_2818624 {
    struct ValueType.conflict12 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818627 {
    enum TypeCode ELEMENT_TYPE_R8;
};

struct MethodRefSig_321 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818624 RetType;
    struct Type_2818627 Param0;
};

typedef struct MethodRefSig_328 MethodRefSig_328, *PMethodRefSig_328;

typedef struct Type_2818631 Type_2818631, *PType_2818631;

typedef struct Type_2818632 Type_2818632, *PType_2818632;

struct Type_2818632 {
    struct ValueType.conflict12 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818631 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_328 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818631 RetType;
    struct Type_2818632 Param0;
};

typedef struct MethodRefSig_335 MethodRefSig_335, *PMethodRefSig_335;

typedef struct Type_2818638 Type_2818638, *PType_2818638;

struct Type_2818638 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_335 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818638 RetType;
};

typedef struct MethodRefSig_341 MethodRefSig_341, *PMethodRefSig_341;

typedef struct Type_2818645 Type_2818645, *PType_2818645;

typedef struct Type_2818647 Type_2818647, *PType_2818647;

typedef struct ELEMENT_TYPE_MVAR_2818646 ELEMENT_TYPE_MVAR_2818646, *PELEMENT_TYPE_MVAR_2818646;

typedef struct ELEMENT_TYPE_MVAR_2818648 ELEMENT_TYPE_MVAR_2818648, *PELEMENT_TYPE_MVAR_2818648;

struct ELEMENT_TYPE_MVAR_2818648 {
    enum TypeCode ELEMENT_TYPE_MVAR;
    byte number;
};

struct Type_2818647 {
    struct ELEMENT_TYPE_MVAR_2818648 ELEMENT_TYPE_MVAR;
};

struct ELEMENT_TYPE_MVAR_2818646 {
    enum TypeCode ELEMENT_TYPE_MVAR;
    byte number;
};

struct Type_2818645 {
    struct ELEMENT_TYPE_MVAR_2818646 ELEMENT_TYPE_MVAR;
};

struct MethodRefSig_341 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte GenParamCount; /* Number of generic paramameters for the method */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818645 RetType;
    struct Type_2818647 Param0;
};

typedef struct MethodRefSig_354 MethodRefSig_354, *PMethodRefSig_354;

typedef struct Type_2818657 Type_2818657, *PType_2818657;

struct Type_2818657 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_354 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818657 RetType;
};

typedef struct MethodRefSig_360 MethodRefSig_360, *PMethodRefSig_360;

typedef struct Type_2818663 Type_2818663, *PType_2818663;

typedef struct Type_2818664 Type_2818664, *PType_2818664;

typedef struct Type_2818665 Type_2818665, *PType_2818665;

typedef struct Type_2818666 Type_2818666, *PType_2818666;

struct Type_2818663 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818665 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818664 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818666 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_360 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818663 RetType;
    struct Type_2818664 Param0;
    struct Type_2818665 Param1;
    struct Type_2818666 Param2;
};

typedef struct MethodRefSig_373 MethodRefSig_373, *PMethodRefSig_373;

typedef struct Type_2818676 Type_2818676, *PType_2818676;

struct Type_2818676 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_373 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818676 RetType;
};

typedef struct MethodRefSig_379 MethodRefSig_379, *PMethodRefSig_379;

typedef struct Type_2818682 Type_2818682, *PType_2818682;

typedef struct Type_2818685 Type_2818685, *PType_2818685;

typedef struct Type_2818686 Type_2818686, *PType_2818686;

struct Type_2818686 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct Type_2818685 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818682 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_379 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818682 RetType;
    struct Type_2818685 Param0;
    struct Type_2818686 Param1;
};

typedef struct MethodRefSig_388 MethodRefSig_388, *PMethodRefSig_388;

typedef struct Type_2818691 Type_2818691, *PType_2818691;

typedef struct Type_2818693 Type_2818693, *PType_2818693;

typedef struct Type_2818694 Type_2818694, *PType_2818694;

struct Type_2818694 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818693 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818691 {
    struct ValueType.conflict5 ELEMENT_TYPE_VALUETYPE;
};

struct MethodRefSig_388 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818691 RetType;
    struct Type_2818693 Param0;
    struct Type_2818694 Param1;
};

typedef struct MethodRefSig_395 MethodRefSig_395, *PMethodRefSig_395;

typedef struct Type_2818698 Type_2818698, *PType_2818698;

typedef struct Type_2818699 Type_2818699, *PType_2818699;

struct Type_2818698 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818699 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_395 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818698 RetType;
    struct Type_2818699 Param0;
};

typedef struct MethodRefSig_402 MethodRefSig_402, *PMethodRefSig_402;

typedef struct Type_2818705 Type_2818705, *PType_2818705;

typedef struct Type_2818706 Type_2818706, *PType_2818706;

struct Type_2818705 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818706 {
    enum TypeCode ELEMENT_TYPE_R8;
};

struct MethodRefSig_402 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818705 RetType;
    struct Type_2818706 Param0;
};

typedef struct MethodRefSig_416 MethodRefSig_416, *PMethodRefSig_416;

typedef struct Type_2818719 Type_2818719, *PType_2818719;

typedef struct Type_2818720 Type_2818720, *PType_2818720;

typedef struct ValueType.conflict13 ValueType.conflict13, *PValueType.conflict13;

struct ValueType.conflict13 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x3a */
};

struct Type_2818720 {
    struct ValueType.conflict13 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818719 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_416 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818719 RetType;
    struct Type_2818720 Param0;
};

typedef struct MethodRefSig_423 MethodRefSig_423, *PMethodRefSig_423;

typedef struct Type_2818726 Type_2818726, *PType_2818726;

typedef struct Type_2818727 Type_2818727, *PType_2818727;

struct Type_2818726 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818727 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_423 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818726 RetType;
    struct Type_2818727 Param0;
};

typedef struct MethodRefSig_459 MethodRefSig_459, *PMethodRefSig_459;

typedef struct Type_2818762 Type_2818762, *PType_2818762;

struct Type_2818762 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_459 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818762 RetType;
};

typedef struct MethodRefSig_463 MethodRefSig_463, *PMethodRefSig_463;

typedef struct Type_2818766 Type_2818766, *PType_2818766;

typedef struct Type_2818769 Type_2818769, *PType_2818769;

struct Type_2818766 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818769 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_463 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818766 RetType;
    struct Type_2818769 Param0;
};

typedef struct MethodRefSig_470 MethodRefSig_470, *PMethodRefSig_470;

typedef struct Type_2818773 Type_2818773, *PType_2818773;

typedef struct Type_2818776 Type_2818776, *PType_2818776;

struct Type_2818773 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818776 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_470 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818773 RetType;
    struct Type_2818776 Param0;
};

typedef struct MethodRefSig_479 MethodRefSig_479, *PMethodRefSig_479;

typedef struct Type_2818782 Type_2818782, *PType_2818782;

struct Type_2818782 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_479 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818782 RetType;
};

typedef struct MethodRefSig_48 MethodRefSig_48, *PMethodRefSig_48;

struct MethodRefSig_48 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818351 RetType;
};

typedef struct MethodRefSig_485 MethodRefSig_485, *PMethodRefSig_485;

typedef struct Type_2818788 Type_2818788, *PType_2818788;

typedef struct Type_2818789 Type_2818789, *PType_2818789;

typedef struct Type_2818790 Type_2818790, *PType_2818790;

struct Type_2818789 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818788 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818790 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_485 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818788 RetType;
    struct Type_2818789 Param0;
    struct Type_2818790 Param1;
};

typedef struct MethodRefSig_493 MethodRefSig_493, *PMethodRefSig_493;

typedef struct Type_2818796 Type_2818796, *PType_2818796;

typedef struct Type_2818799 Type_2818799, *PType_2818799;

typedef struct Type_2818800 Type_2818800, *PType_2818800;

struct Type_2818796 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818800 {
    enum TypeCode ELEMENT_TYPE_BOOLEAN;
};

struct Type_2818799 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct MethodRefSig_493 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818796 RetType;
    struct Type_2818799 Param0;
    struct Type_2818800 Param1;
};

typedef struct MethodRefSig_53 MethodRefSig_53, *PMethodRefSig_53;

typedef struct Type_2818356 Type_2818356, *PType_2818356;

struct Type_2818356 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct MethodRefSig_53 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818356 RetType;
};

typedef struct MethodRefSig_536 MethodRefSig_536, *PMethodRefSig_536;

typedef struct Type_2818839 Type_2818839, *PType_2818839;

typedef struct Type_2818840 Type_2818840, *PType_2818840;

struct Type_2818840 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818839 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_536 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818839 RetType;
    struct Type_2818840 Param0;
};

typedef struct MethodRefSig_57 MethodRefSig_57, *PMethodRefSig_57;

typedef struct Type_2818360 Type_2818360, *PType_2818360;

typedef struct Type_2818361 Type_2818361, *PType_2818361;

struct Type_2818360 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818361 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct MethodRefSig_57 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818360 RetType;
    struct Type_2818361 Param0;
};

typedef struct MethodRefSig_573 MethodRefSig_573, *PMethodRefSig_573;

typedef struct Type_2818876 Type_2818876, *PType_2818876;

typedef struct Type_2818877 Type_2818877, *PType_2818877;

typedef struct Type_2818878 Type_2818878, *PType_2818878;

typedef struct ValueType.conflict14 ValueType.conflict14, *PValueType.conflict14;

struct ValueType.conflict14 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x49 */
};

struct Type_2818878 {
    struct ValueType.conflict14 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818877 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818876 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_573 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818876 RetType;
    struct Type_2818877 Param0;
    struct Type_2818878 Param1;
};

typedef struct MethodRefSig_581 MethodRefSig_581, *PMethodRefSig_581;

typedef struct Type_2818884 Type_2818884, *PType_2818884;

struct Type_2818884 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_581 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818884 RetType;
};

typedef struct MethodRefSig_587 MethodRefSig_587, *PMethodRefSig_587;

typedef struct Type_2818890 Type_2818890, *PType_2818890;

typedef struct Type_2818892 Type_2818892, *PType_2818892;

struct Type_2818892 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818890 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct MethodRefSig_587 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818890 RetType;
    struct Type_2818892 Param0;
};

typedef struct MethodRefSig_593 MethodRefSig_593, *PMethodRefSig_593;

typedef struct Type_2818896 Type_2818896, *PType_2818896;

typedef struct Type_2818897 Type_2818897, *PType_2818897;

typedef struct ValueType.conflict15 ValueType.conflict15, *PValueType.conflict15;

struct ValueType.conflict15 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x4c */
};

struct Type_2818897 {
    struct ValueType.conflict15 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818896 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_593 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818896 RetType;
    struct Type_2818897 Param0;
};

typedef struct MethodRefSig_600 MethodRefSig_600, *PMethodRefSig_600;

typedef struct Type_2818903 Type_2818903, *PType_2818903;

typedef struct Type_2818904 Type_2818904, *PType_2818904;

typedef struct Type_2818906 Type_2818906, *PType_2818906;

typedef struct Type_2818908 Type_2818908, *PType_2818908;

struct Type_2818903 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818906 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818904 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818908 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct MethodRefSig_600 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818903 RetType;
    struct Type_2818904 Param0;
    struct Type_2818906 Param1;
    struct Type_2818908 Param2;
};

typedef struct MethodRefSig_609 MethodRefSig_609, *PMethodRefSig_609;

typedef struct Type_2818912 Type_2818912, *PType_2818912;

typedef struct Type_2818914 Type_2818914, *PType_2818914;

struct Type_2818912 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818914 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct MethodRefSig_609 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818912 RetType;
    struct Type_2818914 Param0;
};

typedef struct MethodRefSig_615 MethodRefSig_615, *PMethodRefSig_615;

typedef struct Type_2818918 Type_2818918, *PType_2818918;

typedef struct Type_2818919 Type_2818919, *PType_2818919;

typedef struct ValueType.conflict16 ValueType.conflict16, *PValueType.conflict16;

struct Type_2818918 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct ValueType.conflict16 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x4e */
};

struct Type_2818919 {
    struct ValueType.conflict16 ELEMENT_TYPE_VALUETYPE;
};

struct MethodRefSig_615 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818918 RetType;
    struct Type_2818919 Param0;
};

typedef struct MethodRefSig_62 MethodRefSig_62, *PMethodRefSig_62;

struct MethodRefSig_62 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818365 RetType;
};

typedef struct MethodRefSig_622 MethodRefSig_622, *PMethodRefSig_622;

typedef struct Type_2818925 Type_2818925, *PType_2818925;

typedef struct Type_2818926 Type_2818926, *PType_2818926;

typedef struct Type_2818928 Type_2818928, *PType_2818928;

typedef struct Type_2818929 Type_2818929, *PType_2818929;

struct Type_2818925 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818928 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2818926 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818929 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct MethodRefSig_622 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818925 RetType;
    struct Type_2818926 Param0;
    struct Type_2818928 Param1;
    struct Type_2818929 Param2;
};

typedef struct MethodRefSig_630 MethodRefSig_630, *PMethodRefSig_630;

typedef struct Type_2818933 Type_2818933, *PType_2818933;

struct Type_2818933 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_630 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818933 RetType;
};

typedef struct MethodRefSig_636 MethodRefSig_636, *PMethodRefSig_636;

typedef struct Type_2818939 Type_2818939, *PType_2818939;

typedef struct Type_2818940 Type_2818940, *PType_2818940;

typedef struct Type_2818943 Type_2818943, *PType_2818943;

typedef struct Type_2818946 Type_2818946, *PType_2818946;

typedef struct ValueType.conflict17 ValueType.conflict17, *PValueType.conflict17;

struct Type_2818943 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2818940 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct ValueType.conflict17 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x50 */
};

struct Type_2818946 {
    struct ValueType.conflict17 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818939 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_636 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818939 RetType;
    struct Type_2818940 Param0;
    struct Type_2818943 Param1;
    struct Type_2818946 Param2;
};

typedef struct MethodRefSig_649 MethodRefSig_649, *PMethodRefSig_649;

typedef struct Type_2818952 Type_2818952, *PType_2818952;

typedef struct Type_2818953 Type_2818953, *PType_2818953;

typedef struct Type_2818955 Type_2818955, *PType_2818955;

typedef struct Type_2818956 Type_2818956, *PType_2818956;

struct Type_2818955 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2818953 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct Type_2818952 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2818956 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct MethodRefSig_649 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818952 RetType;
    struct Type_2818953 Param0;
    struct Type_2818955 Param1;
    struct Type_2818956 Param2;
};

typedef struct MethodRefSig_657 MethodRefSig_657, *PMethodRefSig_657;

typedef struct Type_2818960 Type_2818960, *PType_2818960;

typedef struct Type_2818961 Type_2818961, *PType_2818961;

struct Type_2818961 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818960 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_657 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818960 RetType;
    struct Type_2818961 Param0;
};

typedef struct MethodRefSig_701 MethodRefSig_701, *PMethodRefSig_701;

typedef struct Type_2819004 Type_2819004, *PType_2819004;

typedef struct Type_2819006 Type_2819006, *PType_2819006;

typedef struct Type_2819007 Type_2819007, *PType_2819007;

struct Type_2819007 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819006 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819004 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_701 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819004 RetType;
    struct Type_2819006 Param0;
    struct Type_2819007 Param1;
};

typedef struct MethodRefSig_725 MethodRefSig_725, *PMethodRefSig_725;

typedef struct Type_2819028 Type_2819028, *PType_2819028;

typedef struct Type_2819031 Type_2819031, *PType_2819031;

typedef struct ValueType.conflict18 ValueType.conflict18, *PValueType.conflict18;

struct ValueType.conflict18 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x56 */
};

struct Type_2819031 {
    struct ValueType.conflict18 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2819028 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_725 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819028 RetType;
    struct Type_2819031 Param0;
};

typedef struct MethodRefSig_73 MethodRefSig_73, *PMethodRefSig_73;

struct MethodRefSig_73 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818376 RetType;
    struct Type_2818377 Param0;
};

typedef struct MethodRefSig_734 MethodRefSig_734, *PMethodRefSig_734;

typedef struct Type_2819037 Type_2819037, *PType_2819037;

struct Type_2819037 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_734 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819037 RetType;
};

typedef struct MethodRefSig_740 MethodRefSig_740, *PMethodRefSig_740;

typedef struct Type_2819043 Type_2819043, *PType_2819043;

typedef struct Type_2819044 Type_2819044, *PType_2819044;

typedef struct Type_2819045 Type_2819045, *PType_2819045;

struct Type_2819045 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819044 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819043 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_740 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819043 RetType;
    struct Type_2819044 Param0;
    struct Type_2819045 Param1;
};

typedef struct MethodRefSig_767 MethodRefSig_767, *PMethodRefSig_767;

typedef struct Type_2819070 Type_2819070, *PType_2819070;

typedef struct Type_2819071 Type_2819071, *PType_2819071;

typedef struct Type_2819072 Type_2819072, *PType_2819072;

struct Type_2819071 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819070 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819072 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_767 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819070 RetType;
    struct Type_2819071 Param0;
    struct Type_2819072 Param1;
};

typedef struct MethodRefSig_775 MethodRefSig_775, *PMethodRefSig_775;

typedef struct Type_2819078 Type_2819078, *PType_2819078;

typedef struct Type_2819079 Type_2819079, *PType_2819079;

typedef struct Type_2819080 Type_2819080, *PType_2819080;

struct Type_2819080 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819079 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819078 {
    enum TypeCode ELEMENT_TYPE_OBJECT;
};

struct MethodRefSig_775 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819078 RetType;
    struct Type_2819079 Param0;
    struct Type_2819080 Param1;
};

typedef struct MethodRefSig_78 MethodRefSig_78, *PMethodRefSig_78;

typedef struct Type_2818381 Type_2818381, *PType_2818381;

typedef struct Type_2818382 Type_2818382, *PType_2818382;

typedef struct Type_2818383 Type_2818383, *PType_2818383;

struct Type_2818381 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct Type_2818383 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct Type_2818382 {
    enum TypeCode ELEMENT_TYPE_I4;
};

struct MethodRefSig_78 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818381 RetType;
    struct Type_2818382 Param0;
    struct Type_2818383 Param1;
};

typedef struct MethodRefSig_798 MethodRefSig_798, *PMethodRefSig_798;

typedef struct Type_2819101 Type_2819101, *PType_2819101;

typedef struct Type_2819102 Type_2819102, *PType_2819102;

typedef struct ValueType.conflict19 ValueType.conflict19, *PValueType.conflict19;

struct ValueType.conflict19 {
    enum TypeCode ValueType; /* ValueType */
    word TypeDefOrRefEncoded; /* TypeRef: Row 0x5a */
};

struct Type_2819102 {
    struct ValueType.conflict19 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2819101 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_798 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819101 RetType;
    struct Type_2819102 Param0;
};

typedef struct MethodRefSig_835 MethodRefSig_835, *PMethodRefSig_835;

typedef struct Type_2819138 Type_2819138, *PType_2819138;

typedef struct Type_2819139 Type_2819139, *PType_2819139;

typedef struct Type_2819140 Type_2819140, *PType_2819140;

struct Type_2819139 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819140 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2819138 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_835 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819138 RetType;
    struct Type_2819139 Param0;
    struct Type_2819140 Param1;
};

typedef struct MethodRefSig_84 MethodRefSig_84, *PMethodRefSig_84;

typedef struct Type_2818387 Type_2818387, *PType_2818387;

typedef struct Type_2818388 Type_2818388, *PType_2818388;

struct Type_2818388 {
    struct ValueType.conflict ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818387 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_84 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818387 RetType;
    struct Type_2818388 Param0;
};

typedef struct MethodRefSig_90 MethodRefSig_90, *PMethodRefSig_90;

typedef struct Type_2818393 Type_2818393, *PType_2818393;

typedef struct Type_2818394 Type_2818394, *PType_2818394;

struct Type_2818394 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct Type_2818393 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_90 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818393 RetType;
    struct Type_2818394 Param0;
};

typedef struct MethodRefSig_916 MethodRefSig_916, *PMethodRefSig_916;

typedef struct Type_2819219 Type_2819219, *PType_2819219;

typedef struct Type_2819222 Type_2819222, *PType_2819222;

struct Type_2819222 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct Type_2819219 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct MethodRefSig_916 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2819219 RetType;
    struct Type_2819222 Param0;
};

typedef struct MethodRefSig_95 MethodRefSig_95, *PMethodRefSig_95;

typedef struct Type_2818398 Type_2818398, *PType_2818398;

typedef struct Type_2818399 Type_2818399, *PType_2818399;

typedef struct ValueType.conflict1 ValueType.conflict1, *PValueType.conflict1;

struct ValueType.conflict1 {
    enum TypeCode ValueType; /* ValueType */
    byte TypeDefOrRefEncoded; /* TypeRef: Row 0x9 */
};

struct Type_2818399 {
    struct ValueType.conflict1 ELEMENT_TYPE_VALUETYPE;
};

struct Type_2818398 {
    enum TypeCode ELEMENT_TYPE_VOID;
};

struct MethodRefSig_95 {
    byte Flags; /* ORed VARARG/GENERIC/HASTHIS/EXPLICITTHIS */
    byte ParamCount; /* Number of parameter types to follow RetType */
    struct Type_2818398 RetType;
    struct Type_2818399 Param0;
};

typedef struct MethodSpecSig_1171 MethodSpecSig_1171, *PMethodSpecSig_1171;

struct MethodSpecSig_1171 {
    byte GENRICINST; /* Magic (0x0a) */
    byte GenArgCount; /* Number of types to follow */
    enum TypeCode Type0;
};

typedef struct MethodSpecSig_181 MethodSpecSig_181, *PMethodSpecSig_181;

struct MethodSpecSig_181 {
    byte GENRICINST; /* Magic (0x0a) */
    byte GenArgCount; /* Number of types to follow */
    struct Class Type0;
};

typedef struct MethodSpecSig_349 MethodSpecSig_349, *PMethodSpecSig_349;

struct MethodSpecSig_349 {
    byte GENRICINST; /* Magic (0x0a) */
    byte GenArgCount; /* Number of types to follow */
    struct Class Type0;
};

typedef struct MethodSpecSig_367 MethodSpecSig_367, *PMethodSpecSig_367;

struct MethodSpecSig_367 {
    byte GENRICINST; /* Magic (0x0a) */
    byte GenArgCount; /* Number of types to follow */
    struct Class.conflict Type0;
};

typedef struct PropertySig_148 PropertySig_148, *PPropertySig_148;

typedef struct Type_2818451 Type_2818451, *PType_2818451;

struct Type_2818451 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct PropertySig_148 {
    byte PROPERTY; /* Magic (0x08) optionalled OR'd with HASTHIS (0x20) */
    byte Count; /* Number of params to follow RetType */
    struct Type_2818451 RetType; /* Return type */
};

typedef struct PropertySig_792 PropertySig_792, *PPropertySig_792;

typedef struct Type_2819095 Type_2819095, *PType_2819095;

struct Type_2819095 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct PropertySig_792 {
    byte PROPERTY; /* Magic (0x08) optionalled OR'd with HASTHIS (0x20) */
    byte Count; /* Number of params to follow RetType */
    struct Type_2819095 RetType; /* Return type */
};

typedef struct PropertySig_814 PropertySig_814, *PPropertySig_814;

typedef struct Type_2819117 Type_2819117, *PType_2819117;

struct Type_2819117 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct PropertySig_814 {
    byte PROPERTY; /* Magic (0x08) optionalled OR'd with HASTHIS (0x20) */
    byte Count; /* Number of params to follow RetType */
    struct Type_2819117 RetType; /* Return type */
};

typedef struct PropertySig_820 PropertySig_820, *PPropertySig_820;

typedef struct Type_2819123 Type_2819123, *PType_2819123;

struct Type_2819123 {
    enum TypeCode ELEMENT_TYPE_STRING;
};

struct PropertySig_820 {
    byte PROPERTY; /* Magic (0x08) optionalled OR'd with HASTHIS (0x20) */
    byte Count; /* Number of params to follow RetType */
    struct Type_2819123 RetType; /* Return type */
};

typedef struct PropertySig_824 PropertySig_824, *PPropertySig_824;

typedef struct Type_2819127 Type_2819127, *PType_2819127;

struct Type_2819127 {
    struct SzArray.conflict ELEMENT_TYPE_SZARRAY;
};

struct PropertySig_824 {
    byte PROPERTY; /* Magic (0x08) optionalled OR'd with HASTHIS (0x20) */
    byte Count; /* Number of params to follow RetType */
    struct Type_2819127 RetType; /* Return type */
};

typedef struct PropertySig_829 PropertySig_829, *PPropertySig_829;

typedef struct Type_2819132 Type_2819132, *PType_2819132;

struct Type_2819132 {
    struct Class.conflict ELEMENT_TYPE_CLASS;
};

struct PropertySig_829 {
    byte PROPERTY; /* Magic (0x08) optionalled OR'd with HASTHIS (0x20) */
    byte Count; /* Number of params to follow RetType */
    struct Type_2819132 RetType; /* Return type */
};

typedef struct PropertySig_925 PropertySig_925, *PPropertySig_925;

typedef struct Type_2819228 Type_2819228, *PType_2819228;

struct Type_2819228 {
    struct Class ELEMENT_TYPE_CLASS;
};

struct PropertySig_925 {
    byte PROPERTY; /* Magic (0x08) optionalled OR'd with HASTHIS (0x20) */
    byte Count; /* Number of params to follow RetType */
    struct Type_2819228 RetType; /* Return type */
};

typedef struct Blob_ConstantSig_1589 Blob_ConstantSig_1589, *PBlob_ConstantSig_1589;

struct Blob_ConstantSig_1589 {
    byte Size; /* coded integer - blob size */
    struct ConstantSig_1589 ConstantSig; /* Data stored in a constant */
};

typedef struct Blob_ConstantSig_1604 Blob_ConstantSig_1604, *PBlob_ConstantSig_1604;

struct Blob_ConstantSig_1604 {
    byte Size; /* coded integer - blob size */
    struct ConstantSig_1604 ConstantSig; /* Data stored in a constant */
};

typedef struct Blob_ConstantSig_35 Blob_ConstantSig_35, *PBlob_ConstantSig_35;

struct Blob_ConstantSig_35 {
    byte Size; /* coded integer - blob size */
    struct ConstantSig_35 ConstantSig; /* Data stored in a constant */
};

typedef struct Blob_ConstantSig_435 Blob_ConstantSig_435, *PBlob_ConstantSig_435;

struct Blob_ConstantSig_435 {
    byte Size; /* coded integer - blob size */
    struct ConstantSig_435 ConstantSig; /* Data stored in a constant */
};

typedef struct Blob_ConstantSig_440 Blob_ConstantSig_440, *PBlob_ConstantSig_440;

struct Blob_ConstantSig_440 {
    byte Size; /* coded integer - blob size */
    struct ConstantSig_440 ConstantSig; /* Data stored in a constant */
};

typedef struct Blob_ConstantSig_445 Blob_ConstantSig_445, *PBlob_ConstantSig_445;

struct Blob_ConstantSig_445 {
    byte Size; /* coded integer - blob size */
    struct ConstantSig_445 ConstantSig; /* Data stored in a constant */
};

typedef struct Blob_ConstantSig_522 Blob_ConstantSig_522, *PBlob_ConstantSig_522;

struct Blob_ConstantSig_522 {
    byte Size; /* coded integer - blob size */
    struct ConstantSig_522 ConstantSig; /* Data stored in a constant */
};

typedef struct Blob_CustomAttrib_1619 Blob_CustomAttrib_1619, *PBlob_CustomAttrib_1619;

typedef struct CustomAttrib_1619 CustomAttrib_1619, *PCustomAttrib_1619;

struct CustomAttrib_1619 {
    word PROLOG; /* Magic (0x0001) */
    dword FixedArg_0; /* Elem (ELEMENT_TYPE_I4) */
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_1619 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_1619 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_1628 Blob_CustomAttrib_1628, *PBlob_CustomAttrib_1628;

typedef struct CustomAttrib_1628 CustomAttrib_1628, *PCustomAttrib_1628;

struct CustomAttrib_1628 {
    word PROLOG; /* Magic (0x0001) */
    word NumNamed; /* Number of NamedArgs to follow */
    byte FieldOrProp; /* PROPERTY */
    byte FieldOrPropType; /* ELEMENT_TYPE_BOOLEAN */
    byte PackedLen;
    char FieldOrPropName[23];
};

struct Blob_CustomAttrib_1628 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_1628 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_1666 Blob_CustomAttrib_1666, *PBlob_CustomAttrib_1666;

typedef struct CustomAttrib_1666 CustomAttrib_1666, *PCustomAttrib_1666;

struct CustomAttrib_1666 {
    word PROLOG; /* Magic (0x0001) */
    byte PackedLen;
    char FixedArg_0[7];
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_1666 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_1666 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_1679 Blob_CustomAttrib_1679, *PBlob_CustomAttrib_1679;

typedef struct CustomAttrib_1679 CustomAttrib_1679, *PCustomAttrib_1679;

struct CustomAttrib_1679 {
    word PROLOG; /* Magic (0x0001) */
    byte PackedLen;
    char FixedArg_0[14];
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_1679 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_1679 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_1705 Blob_CustomAttrib_1705, *PBlob_CustomAttrib_1705;

typedef struct CustomAttrib_1705 CustomAttrib_1705, *PCustomAttrib_1705;

struct CustomAttrib_1705 {
    word PROLOG; /* Magic (0x0001) */
    byte PackedLen;
    char FixedArg_0[15];
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_1705 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_1705 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_1726 Blob_CustomAttrib_1726, *PBlob_CustomAttrib_1726;

typedef struct CustomAttrib_1726 CustomAttrib_1726, *PCustomAttrib_1726;

struct CustomAttrib_1726 {
    word PROLOG; /* Magic (0x0001) */
    byte FixedArg_0; /* Elem (ELEMENT_TYPE_BOOLEAN) */
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_1726 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_1726 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_1732 Blob_CustomAttrib_1732, *PBlob_CustomAttrib_1732;

typedef struct CustomAttrib_1732 CustomAttrib_1732, *PCustomAttrib_1732;

struct CustomAttrib_1732 {
    word PROLOG; /* Magic (0x0001) */
    byte PackedLen;
    char FixedArg_0[36];
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_1732 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_1732 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_1774 Blob_CustomAttrib_1774, *PBlob_CustomAttrib_1774;

typedef struct CustomAttrib_1774 CustomAttrib_1774, *PCustomAttrib_1774;

struct CustomAttrib_1774 {
    word PROLOG; /* Magic (0x0001) */
    byte PackedLen;
    char FixedArg_0[9];
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_1774 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_1774 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_1789 Blob_CustomAttrib_1789, *PBlob_CustomAttrib_1789;

typedef struct CustomAttrib_1789 CustomAttrib_1789, *PCustomAttrib_1789;

struct CustomAttrib_1789 {
    word PROLOG; /* Magic (0x0001) */
    byte PackedLen;
    char FixedArg_0[5];
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_1789 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_1789 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_435 Blob_CustomAttrib_435, *PBlob_CustomAttrib_435;

typedef struct CustomAttrib_435 CustomAttrib_435, *PCustomAttrib_435;

struct CustomAttrib_435 {
    word PROLOG; /* Magic (0x0001) */
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_435 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_435 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_805 Blob_CustomAttrib_805, *PBlob_CustomAttrib_805;

typedef struct CustomAttrib_805 CustomAttrib_805, *PCustomAttrib_805;

struct CustomAttrib_805 {
    word PROLOG; /* Magic (0x0001) */
    dword FixedArg_0; /* Elem (ELEMENT_TYPE_VALUETYPE) */
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_805 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_805 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_CustomAttrib_841 Blob_CustomAttrib_841, *PBlob_CustomAttrib_841;

typedef struct CustomAttrib_841 CustomAttrib_841, *PCustomAttrib_841;

struct CustomAttrib_841 {
    word PROLOG; /* Magic (0x0001) */
    byte PackedLen;
    char FixedArg_0[51];
    byte PackedLen;
    char FixedArg_1[8];
    word NumNamed; /* Number of NamedArgs to follow */
};

struct Blob_CustomAttrib_841 {
    byte Size; /* coded integer - blob size */
    struct CustomAttrib_841 CustomAttrib; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
};

typedef struct Blob_FieldSig_1020 Blob_FieldSig_1020, *PBlob_FieldSig_1020;

struct Blob_FieldSig_1020 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_1020 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_1024 Blob_FieldSig_1024, *PBlob_FieldSig_1024;

struct Blob_FieldSig_1024 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_1024 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_1233 Blob_FieldSig_1233, *PBlob_FieldSig_1233;

struct Blob_FieldSig_1233 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_1233 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_1236 Blob_FieldSig_1236, *PBlob_FieldSig_1236;

struct Blob_FieldSig_1236 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_1236 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_1245 Blob_FieldSig_1245, *PBlob_FieldSig_1245;

struct Blob_FieldSig_1245 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_1245 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_1586 Blob_FieldSig_1586, *PBlob_FieldSig_1586;

struct Blob_FieldSig_1586 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_1586 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_245 Blob_FieldSig_245, *PBlob_FieldSig_245;

struct Blob_FieldSig_245 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_245 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_32 Blob_FieldSig_32, *PBlob_FieldSig_32;

struct Blob_FieldSig_32 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_32 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_40 Blob_FieldSig_40, *PBlob_FieldSig_40;

struct Blob_FieldSig_40 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_40 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_407 Blob_FieldSig_407, *PBlob_FieldSig_407;

struct Blob_FieldSig_407 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_407 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_44 Blob_FieldSig_44, *PBlob_FieldSig_44;

struct Blob_FieldSig_44 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_44 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_518 Blob_FieldSig_518, *PBlob_FieldSig_518;

struct Blob_FieldSig_518 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_518 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_715 Blob_FieldSig_715, *PBlob_FieldSig_715;

struct Blob_FieldSig_715 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_715 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_720 Blob_FieldSig_720, *PBlob_FieldSig_720;

struct Blob_FieldSig_720 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_720 FieldSig; /* Type information for Field */
};

typedef struct Blob_FieldSig_907 Blob_FieldSig_907, *PBlob_FieldSig_907;

struct Blob_FieldSig_907 {
    byte Size; /* coded integer - blob size */
    struct FieldSig_907 FieldSig; /* Type information for Field */
};

typedef struct Blob_Generic_1 Blob_Generic_1, *PBlob_Generic_1;

struct Blob_Generic_1 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_10 Blob_Generic_10, *PBlob_Generic_10;

struct Blob_Generic_10 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_101 Blob_Generic_101, *PBlob_Generic_101;

struct Blob_Generic_101 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1020 Blob_Generic_1020, *PBlob_Generic_1020;

struct Blob_Generic_1020 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1024 Blob_Generic_1024, *PBlob_Generic_1024;

struct Blob_Generic_1024 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1029 Blob_Generic_1029, *PBlob_Generic_1029;

struct Blob_Generic_1029 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1035 Blob_Generic_1035, *PBlob_Generic_1035;

struct Blob_Generic_1035 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1041 Blob_Generic_1041, *PBlob_Generic_1041;

struct Blob_Generic_1041 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1045 Blob_Generic_1045, *PBlob_Generic_1045;

struct Blob_Generic_1045 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1053 Blob_Generic_1053, *PBlob_Generic_1053;

struct Blob_Generic_1053 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1059 Blob_Generic_1059, *PBlob_Generic_1059;

struct Blob_Generic_1059 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1065 Blob_Generic_1065, *PBlob_Generic_1065;

struct Blob_Generic_1065 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1069 Blob_Generic_1069, *PBlob_Generic_1069;

struct Blob_Generic_1069 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_107 Blob_Generic_107, *PBlob_Generic_107;

struct Blob_Generic_107 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1074 Blob_Generic_1074, *PBlob_Generic_1074;

struct Blob_Generic_1074 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1079 Blob_Generic_1079, *PBlob_Generic_1079;

struct Blob_Generic_1079 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1083 Blob_Generic_1083, *PBlob_Generic_1083;

struct Blob_Generic_1083 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1089 Blob_Generic_1089, *PBlob_Generic_1089;

struct Blob_Generic_1089 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1093 Blob_Generic_1093, *PBlob_Generic_1093;

struct Blob_Generic_1093 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1102 Blob_Generic_1102, *PBlob_Generic_1102;

struct Blob_Generic_1102 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1109 Blob_Generic_1109, *PBlob_Generic_1109;

struct Blob_Generic_1109 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1115 Blob_Generic_1115, *PBlob_Generic_1115;

struct Blob_Generic_1115 {
    byte Size; /* coded integer - blob size */
    byte Generic[9]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1125 Blob_Generic_1125, *PBlob_Generic_1125;

struct Blob_Generic_1125 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_113 Blob_Generic_113, *PBlob_Generic_113;

struct Blob_Generic_113 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1132 Blob_Generic_1132, *PBlob_Generic_1132;

struct Blob_Generic_1132 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1137 Blob_Generic_1137, *PBlob_Generic_1137;

struct Blob_Generic_1137 {
    byte Size; /* coded integer - blob size */
    byte Generic[9]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1147 Blob_Generic_1147, *PBlob_Generic_1147;

struct Blob_Generic_1147 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1153 Blob_Generic_1153, *PBlob_Generic_1153;

struct Blob_Generic_1153 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1158 Blob_Generic_1158, *PBlob_Generic_1158;

struct Blob_Generic_1158 {
    byte Size; /* coded integer - blob size */
    byte Generic[12]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1171 Blob_Generic_1171, *PBlob_Generic_1171;

struct Blob_Generic_1171 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1175 Blob_Generic_1175, *PBlob_Generic_1175;

struct Blob_Generic_1175 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1184 Blob_Generic_1184, *PBlob_Generic_1184;

struct Blob_Generic_1184 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_119 Blob_Generic_119, *PBlob_Generic_119;

struct Blob_Generic_119 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1190 Blob_Generic_1190, *PBlob_Generic_1190;

struct Blob_Generic_1190 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1196 Blob_Generic_1196, *PBlob_Generic_1196;

struct Blob_Generic_1196 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1201 Blob_Generic_1201, *PBlob_Generic_1201;

struct Blob_Generic_1201 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1207 Blob_Generic_1207, *PBlob_Generic_1207;

struct Blob_Generic_1207 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1215 Blob_Generic_1215, *PBlob_Generic_1215;

struct Blob_Generic_1215 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1224 Blob_Generic_1224, *PBlob_Generic_1224;

struct Blob_Generic_1224 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1233 Blob_Generic_1233, *PBlob_Generic_1233;

struct Blob_Generic_1233 {
    byte Size; /* coded integer - blob size */
    byte Generic[2]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1236 Blob_Generic_1236, *PBlob_Generic_1236;

struct Blob_Generic_1236 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_124 Blob_Generic_124, *PBlob_Generic_124;

struct Blob_Generic_124 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1245 Blob_Generic_1245, *PBlob_Generic_1245;

struct Blob_Generic_1245 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1254 Blob_Generic_1254, *PBlob_Generic_1254;

struct Blob_Generic_1254 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1261 Blob_Generic_1261, *PBlob_Generic_1261;

struct Blob_Generic_1261 {
    byte Size; /* coded integer - blob size */
    byte Generic[13]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1275 Blob_Generic_1275, *PBlob_Generic_1275;

struct Blob_Generic_1275 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1281 Blob_Generic_1281, *PBlob_Generic_1281;

struct Blob_Generic_1281 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1288 Blob_Generic_1288, *PBlob_Generic_1288;

struct Blob_Generic_1288 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1294 Blob_Generic_1294, *PBlob_Generic_1294;

struct Blob_Generic_1294 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_130 Blob_Generic_130, *PBlob_Generic_130;

struct Blob_Generic_130 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1303 Blob_Generic_1303, *PBlob_Generic_1303;

struct Blob_Generic_1303 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1309 Blob_Generic_1309, *PBlob_Generic_1309;

struct Blob_Generic_1309 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1318 Blob_Generic_1318, *PBlob_Generic_1318;

struct Blob_Generic_1318 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1324 Blob_Generic_1324, *PBlob_Generic_1324;

struct Blob_Generic_1324 {
    byte Size; /* coded integer - blob size */
    byte Generic[9]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1334 Blob_Generic_1334, *PBlob_Generic_1334;

struct Blob_Generic_1334 {
    byte Size; /* coded integer - blob size */
    byte Generic[17]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1352 Blob_Generic_1352, *PBlob_Generic_1352;

struct Blob_Generic_1352 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1358 Blob_Generic_1358, *PBlob_Generic_1358;

struct Blob_Generic_1358 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_136 Blob_Generic_136, *PBlob_Generic_136;

struct Blob_Generic_136 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1363 Blob_Generic_1363, *PBlob_Generic_1363;

struct Blob_Generic_1363 {
    byte Size; /* coded integer - blob size */
    byte Generic[9]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1373 Blob_Generic_1373, *PBlob_Generic_1373;

struct Blob_Generic_1373 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1378 Blob_Generic_1378, *PBlob_Generic_1378;

struct Blob_Generic_1378 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1385 Blob_Generic_1385, *PBlob_Generic_1385;

struct Blob_Generic_1385 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1393 Blob_Generic_1393, *PBlob_Generic_1393;

struct Blob_Generic_1393 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1402 Blob_Generic_1402, *PBlob_Generic_1402;

struct Blob_Generic_1402 {
    byte Size; /* coded integer - blob size */
    byte Generic[13]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1416 Blob_Generic_1416, *PBlob_Generic_1416;

struct Blob_Generic_1416 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_142 Blob_Generic_142, *PBlob_Generic_142;

struct Blob_Generic_142 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1421 Blob_Generic_1421, *PBlob_Generic_1421;

struct Blob_Generic_1421 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1425 Blob_Generic_1425, *PBlob_Generic_1425;

struct Blob_Generic_1425 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1433 Blob_Generic_1433, *PBlob_Generic_1433;

struct Blob_Generic_1433 {
    byte Size; /* coded integer - blob size */
    byte Generic[16]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1450 Blob_Generic_1450, *PBlob_Generic_1450;

struct Blob_Generic_1450 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1457 Blob_Generic_1457, *PBlob_Generic_1457;

struct Blob_Generic_1457 {
    byte Size; /* coded integer - blob size */
    byte Generic[9]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1467 Blob_Generic_1467, *PBlob_Generic_1467;

struct Blob_Generic_1467 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1475 Blob_Generic_1475, *PBlob_Generic_1475;

struct Blob_Generic_1475 {
    byte Size; /* coded integer - blob size */
    byte Generic[22]; /* Undefined blob contents */
};

typedef struct Blob_Generic_148 Blob_Generic_148, *PBlob_Generic_148;

struct Blob_Generic_148 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1498 Blob_Generic_1498, *PBlob_Generic_1498;

struct Blob_Generic_1498 {
    byte Size; /* coded integer - blob size */
    byte Generic[13]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1512 Blob_Generic_1512, *PBlob_Generic_1512;

struct Blob_Generic_1512 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1519 Blob_Generic_1519, *PBlob_Generic_1519;

struct Blob_Generic_1519 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1527 Blob_Generic_1527, *PBlob_Generic_1527;

struct Blob_Generic_1527 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_153 Blob_Generic_153, *PBlob_Generic_153;

struct Blob_Generic_153 {
    byte Size; /* coded integer - blob size */
    byte Generic[9]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1533 Blob_Generic_1533, *PBlob_Generic_1533;

struct Blob_Generic_1533 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1538 Blob_Generic_1538, *PBlob_Generic_1538;

struct Blob_Generic_1538 {
    byte Size; /* coded integer - blob size */
    byte Generic[9]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1548 Blob_Generic_1548, *PBlob_Generic_1548;

struct Blob_Generic_1548 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1556 Blob_Generic_1556, *PBlob_Generic_1556;

struct Blob_Generic_1556 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1562 Blob_Generic_1562, *PBlob_Generic_1562;

struct Blob_Generic_1562 {
    byte Size; /* coded integer - blob size */
    byte Generic[9]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1572 Blob_Generic_1572, *PBlob_Generic_1572;

struct Blob_Generic_1572 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1579 Blob_Generic_1579, *PBlob_Generic_1579;

struct Blob_Generic_1579 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1586 Blob_Generic_1586, *PBlob_Generic_1586;

struct Blob_Generic_1586 {
    byte Size; /* coded integer - blob size */
    byte Generic[2]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1589 Blob_Generic_1589, *PBlob_Generic_1589;

struct Blob_Generic_1589 {
    byte Size; /* coded integer - blob size */
    byte Generic[14]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1604 Blob_Generic_1604, *PBlob_Generic_1604;

struct Blob_Generic_1604 {
    byte Size; /* coded integer - blob size */
    byte Generic[14]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1619 Blob_Generic_1619, *PBlob_Generic_1619;

struct Blob_Generic_1619 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1628 Blob_Generic_1628, *PBlob_Generic_1628;

struct Blob_Generic_1628 {
    byte Size; /* coded integer - blob size */
    byte Generic[30]; /* Undefined blob contents */
};

typedef struct Blob_Generic_163 Blob_Generic_163, *PBlob_Generic_163;

struct Blob_Generic_163 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1659 Blob_Generic_1659, *PBlob_Generic_1659;

struct Blob_Generic_1659 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1666 Blob_Generic_1666, *PBlob_Generic_1666;

struct Blob_Generic_1666 {
    byte Size; /* coded integer - blob size */
    byte Generic[12]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1679 Blob_Generic_1679, *PBlob_Generic_1679;

struct Blob_Generic_1679 {
    byte Size; /* coded integer - blob size */
    byte Generic[19]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1699 Blob_Generic_1699, *PBlob_Generic_1699;

struct Blob_Generic_1699 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_170 Blob_Generic_170, *PBlob_Generic_170;

struct Blob_Generic_170 {
    byte Size; /* coded integer - blob size */
    byte Generic[10]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1705 Blob_Generic_1705, *PBlob_Generic_1705;

struct Blob_Generic_1705 {
    byte Size; /* coded integer - blob size */
    byte Generic[20]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1726 Blob_Generic_1726, *PBlob_Generic_1726;

struct Blob_Generic_1726 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1732 Blob_Generic_1732, *PBlob_Generic_1732;

struct Blob_Generic_1732 {
    byte Size; /* coded integer - blob size */
    byte Generic[41]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1774 Blob_Generic_1774, *PBlob_Generic_1774;

struct Blob_Generic_1774 {
    byte Size; /* coded integer - blob size */
    byte Generic[14]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1789 Blob_Generic_1789, *PBlob_Generic_1789;

struct Blob_Generic_1789 {
    byte Size; /* coded integer - blob size */
    byte Generic[10]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1800 Blob_Generic_1800, *PBlob_Generic_1800;

struct Blob_Generic_1800 {
    byte Size; /* coded integer - blob size */
    byte Generic[77]; /* Undefined blob contents */
};

typedef struct Blob_Generic_181 Blob_Generic_181, *PBlob_Generic_181;

struct Blob_Generic_181 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_186 Blob_Generic_186, *PBlob_Generic_186;

struct Blob_Generic_186 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_1878 Blob_Generic_1878, *PBlob_Generic_1878;

struct Blob_Generic_1878 {
    word Size; /* coded integer - blob size */
    byte Generic[158]; /* Undefined blob contents */
};

typedef struct Blob_Generic_19 Blob_Generic_19, *PBlob_Generic_19;

struct Blob_Generic_19 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_191 Blob_Generic_191, *PBlob_Generic_191;

struct Blob_Generic_191 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_198 Blob_Generic_198, *PBlob_Generic_198;

struct Blob_Generic_198 {
    byte Size; /* coded integer - blob size */
    byte Generic[10]; /* Undefined blob contents */
};

typedef struct Blob_Generic_209 Blob_Generic_209, *PBlob_Generic_209;

struct Blob_Generic_209 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_215 Blob_Generic_215, *PBlob_Generic_215;

struct Blob_Generic_215 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_221 Blob_Generic_221, *PBlob_Generic_221;

struct Blob_Generic_221 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_227 Blob_Generic_227, *PBlob_Generic_227;

struct Blob_Generic_227 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_234 Blob_Generic_234, *PBlob_Generic_234;

struct Blob_Generic_234 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_238 Blob_Generic_238, *PBlob_Generic_238;

struct Blob_Generic_238 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_245 Blob_Generic_245, *PBlob_Generic_245;

struct Blob_Generic_245 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_250 Blob_Generic_250, *PBlob_Generic_250;

struct Blob_Generic_250 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_257 Blob_Generic_257, *PBlob_Generic_257;

struct Blob_Generic_257 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_263 Blob_Generic_263, *PBlob_Generic_263;

struct Blob_Generic_263 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_272 Blob_Generic_272, *PBlob_Generic_272;

struct Blob_Generic_272 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_279 Blob_Generic_279, *PBlob_Generic_279;

struct Blob_Generic_279 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_28 Blob_Generic_28, *PBlob_Generic_28;

struct Blob_Generic_28 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_287 Blob_Generic_287, *PBlob_Generic_287;

struct Blob_Generic_287 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_293 Blob_Generic_293, *PBlob_Generic_293;

struct Blob_Generic_293 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_297 Blob_Generic_297, *PBlob_Generic_297;

struct Blob_Generic_297 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_302 Blob_Generic_302, *PBlob_Generic_302;

struct Blob_Generic_302 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_308 Blob_Generic_308, *PBlob_Generic_308;

struct Blob_Generic_308 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_315 Blob_Generic_315, *PBlob_Generic_315;

struct Blob_Generic_315 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_32 Blob_Generic_32, *PBlob_Generic_32;

struct Blob_Generic_32 {
    byte Size; /* coded integer - blob size */
    byte Generic[2]; /* Undefined blob contents */
};

typedef struct Blob_Generic_321 Blob_Generic_321, *PBlob_Generic_321;

struct Blob_Generic_321 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_328 Blob_Generic_328, *PBlob_Generic_328;

struct Blob_Generic_328 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_335 Blob_Generic_335, *PBlob_Generic_335;

struct Blob_Generic_335 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_341 Blob_Generic_341, *PBlob_Generic_341;

struct Blob_Generic_341 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_349 Blob_Generic_349, *PBlob_Generic_349;

struct Blob_Generic_349 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_35 Blob_Generic_35, *PBlob_Generic_35;

struct Blob_Generic_35 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_354 Blob_Generic_354, *PBlob_Generic_354;

struct Blob_Generic_354 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_360 Blob_Generic_360, *PBlob_Generic_360;

struct Blob_Generic_360 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_367 Blob_Generic_367, *PBlob_Generic_367;

struct Blob_Generic_367 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_373 Blob_Generic_373, *PBlob_Generic_373;

struct Blob_Generic_373 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_379 Blob_Generic_379, *PBlob_Generic_379;

struct Blob_Generic_379 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_388 Blob_Generic_388, *PBlob_Generic_388;

struct Blob_Generic_388 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_395 Blob_Generic_395, *PBlob_Generic_395;

struct Blob_Generic_395 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_40 Blob_Generic_40, *PBlob_Generic_40;

struct Blob_Generic_40 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_402 Blob_Generic_402, *PBlob_Generic_402;

struct Blob_Generic_402 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_407 Blob_Generic_407, *PBlob_Generic_407;

struct Blob_Generic_407 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_412 Blob_Generic_412, *PBlob_Generic_412;

struct Blob_Generic_412 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_416 Blob_Generic_416, *PBlob_Generic_416;

struct Blob_Generic_416 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_423 Blob_Generic_423, *PBlob_Generic_423;

struct Blob_Generic_423 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_429 Blob_Generic_429, *PBlob_Generic_429;

struct Blob_Generic_429 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_435 Blob_Generic_435, *PBlob_Generic_435;

struct Blob_Generic_435 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_44 Blob_Generic_44, *PBlob_Generic_44;

struct Blob_Generic_44 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_440 Blob_Generic_440, *PBlob_Generic_440;

struct Blob_Generic_440 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_445 Blob_Generic_445, *PBlob_Generic_445;

struct Blob_Generic_445 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_450 Blob_Generic_450, *PBlob_Generic_450;

struct Blob_Generic_450 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_459 Blob_Generic_459, *PBlob_Generic_459;

struct Blob_Generic_459 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_463 Blob_Generic_463, *PBlob_Generic_463;

struct Blob_Generic_463 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_470 Blob_Generic_470, *PBlob_Generic_470;

struct Blob_Generic_470 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_479 Blob_Generic_479, *PBlob_Generic_479;

struct Blob_Generic_479 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_48 Blob_Generic_48, *PBlob_Generic_48;

struct Blob_Generic_48 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_485 Blob_Generic_485, *PBlob_Generic_485;

struct Blob_Generic_485 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_493 Blob_Generic_493, *PBlob_Generic_493;

struct Blob_Generic_493 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_501 Blob_Generic_501, *PBlob_Generic_501;

struct Blob_Generic_501 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_510 Blob_Generic_510, *PBlob_Generic_510;

struct Blob_Generic_510 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_518 Blob_Generic_518, *PBlob_Generic_518;

struct Blob_Generic_518 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_522 Blob_Generic_522, *PBlob_Generic_522;

struct Blob_Generic_522 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_527 Blob_Generic_527, *PBlob_Generic_527;

struct Blob_Generic_527 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_53 Blob_Generic_53, *PBlob_Generic_53;

struct Blob_Generic_53 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_536 Blob_Generic_536, *PBlob_Generic_536;

struct Blob_Generic_536 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_542 Blob_Generic_542, *PBlob_Generic_542;

struct Blob_Generic_542 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_547 Blob_Generic_547, *PBlob_Generic_547;

struct Blob_Generic_547 {
    byte Size; /* coded integer - blob size */
    byte Generic[25]; /* Undefined blob contents */
};

typedef struct Blob_Generic_57 Blob_Generic_57, *PBlob_Generic_57;

struct Blob_Generic_57 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_573 Blob_Generic_573, *PBlob_Generic_573;

struct Blob_Generic_573 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_581 Blob_Generic_581, *PBlob_Generic_581;

struct Blob_Generic_581 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_587 Blob_Generic_587, *PBlob_Generic_587;

struct Blob_Generic_587 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_593 Blob_Generic_593, *PBlob_Generic_593;

struct Blob_Generic_593 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_600 Blob_Generic_600, *PBlob_Generic_600;

struct Blob_Generic_600 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_609 Blob_Generic_609, *PBlob_Generic_609;

struct Blob_Generic_609 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_615 Blob_Generic_615, *PBlob_Generic_615;

struct Blob_Generic_615 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_62 Blob_Generic_62, *PBlob_Generic_62;

struct Blob_Generic_62 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_622 Blob_Generic_622, *PBlob_Generic_622;

struct Blob_Generic_622 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_630 Blob_Generic_630, *PBlob_Generic_630;

struct Blob_Generic_630 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_636 Blob_Generic_636, *PBlob_Generic_636;

struct Blob_Generic_636 {
    byte Size; /* coded integer - blob size */
    byte Generic[12]; /* Undefined blob contents */
};

typedef struct Blob_Generic_649 Blob_Generic_649, *PBlob_Generic_649;

struct Blob_Generic_649 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_657 Blob_Generic_657, *PBlob_Generic_657;

struct Blob_Generic_657 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_66 Blob_Generic_66, *PBlob_Generic_66;

struct Blob_Generic_66 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_662 Blob_Generic_662, *PBlob_Generic_662;

struct Blob_Generic_662 {
    byte Size; /* coded integer - blob size */
    byte Generic[31]; /* Undefined blob contents */
};

typedef struct Blob_Generic_694 Blob_Generic_694, *PBlob_Generic_694;

struct Blob_Generic_694 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_701 Blob_Generic_701, *PBlob_Generic_701;

struct Blob_Generic_701 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_708 Blob_Generic_708, *PBlob_Generic_708;

struct Blob_Generic_708 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_715 Blob_Generic_715, *PBlob_Generic_715;

struct Blob_Generic_715 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_720 Blob_Generic_720, *PBlob_Generic_720;

struct Blob_Generic_720 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_725 Blob_Generic_725, *PBlob_Generic_725;

struct Blob_Generic_725 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_73 Blob_Generic_73, *PBlob_Generic_73;

struct Blob_Generic_73 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_734 Blob_Generic_734, *PBlob_Generic_734;

struct Blob_Generic_734 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_740 Blob_Generic_740, *PBlob_Generic_740;

struct Blob_Generic_740 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_748 Blob_Generic_748, *PBlob_Generic_748;

struct Blob_Generic_748 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_754 Blob_Generic_754, *PBlob_Generic_754;

struct Blob_Generic_754 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_760 Blob_Generic_760, *PBlob_Generic_760;

struct Blob_Generic_760 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_767 Blob_Generic_767, *PBlob_Generic_767;

struct Blob_Generic_767 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_775 Blob_Generic_775, *PBlob_Generic_775;

struct Blob_Generic_775 {
    byte Size; /* coded integer - blob size */
    byte Generic[7]; /* Undefined blob contents */
};

typedef struct Blob_Generic_78 Blob_Generic_78, *PBlob_Generic_78;

struct Blob_Generic_78 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_783 Blob_Generic_783, *PBlob_Generic_783;

struct Blob_Generic_783 {
    byte Size; /* coded integer - blob size */
    byte Generic[2]; /* Undefined blob contents */
};

typedef struct Blob_Generic_786 Blob_Generic_786, *PBlob_Generic_786;

struct Blob_Generic_786 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_792 Blob_Generic_792, *PBlob_Generic_792;

struct Blob_Generic_792 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_798 Blob_Generic_798, *PBlob_Generic_798;

struct Blob_Generic_798 {
    byte Size; /* coded integer - blob size */
    byte Generic[6]; /* Undefined blob contents */
};

typedef struct Blob_Generic_805 Blob_Generic_805, *PBlob_Generic_805;

struct Blob_Generic_805 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_814 Blob_Generic_814, *PBlob_Generic_814;

struct Blob_Generic_814 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_820 Blob_Generic_820, *PBlob_Generic_820;

struct Blob_Generic_820 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_824 Blob_Generic_824, *PBlob_Generic_824;

struct Blob_Generic_824 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_829 Blob_Generic_829, *PBlob_Generic_829;

struct Blob_Generic_829 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_835 Blob_Generic_835, *PBlob_Generic_835;

struct Blob_Generic_835 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_84 Blob_Generic_84, *PBlob_Generic_84;

struct Blob_Generic_84 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_Generic_841 Blob_Generic_841, *PBlob_Generic_841;

struct Blob_Generic_841 {
    byte Size; /* coded integer - blob size */
    byte Generic[65]; /* Undefined blob contents */
};

typedef struct Blob_Generic_90 Blob_Generic_90, *PBlob_Generic_90;

struct Blob_Generic_90 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_907 Blob_Generic_907, *PBlob_Generic_907;

struct Blob_Generic_907 {
    byte Size; /* coded integer - blob size */
    byte Generic[3]; /* Undefined blob contents */
};

typedef struct Blob_Generic_911 Blob_Generic_911, *PBlob_Generic_911;

struct Blob_Generic_911 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_916 Blob_Generic_916, *PBlob_Generic_916;

struct Blob_Generic_916 {
    byte Size; /* coded integer - blob size */
    byte Generic[8]; /* Undefined blob contents */
};

typedef struct Blob_Generic_925 Blob_Generic_925, *PBlob_Generic_925;

struct Blob_Generic_925 {
    byte Size; /* coded integer - blob size */
    byte Generic[4]; /* Undefined blob contents */
};

typedef struct Blob_Generic_930 Blob_Generic_930, *PBlob_Generic_930;

struct Blob_Generic_930 {
    byte Size; /* coded integer - blob size */
    byte Generic[89]; /* Undefined blob contents */
};

typedef struct Blob_Generic_95 Blob_Generic_95, *PBlob_Generic_95;

struct Blob_Generic_95 {
    byte Size; /* coded integer - blob size */
    byte Generic[5]; /* Undefined blob contents */
};

typedef struct Blob_LocalVarSig_1045 Blob_LocalVarSig_1045, *PBlob_LocalVarSig_1045;

struct Blob_LocalVarSig_1045 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1045 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1065 Blob_LocalVarSig_1065, *PBlob_LocalVarSig_1065;

struct Blob_LocalVarSig_1065 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1065 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1079 Blob_LocalVarSig_1079, *PBlob_LocalVarSig_1079;

struct Blob_LocalVarSig_1079 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1079 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1089 Blob_LocalVarSig_1089, *PBlob_LocalVarSig_1089;

struct Blob_LocalVarSig_1089 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1089 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1093 Blob_LocalVarSig_1093, *PBlob_LocalVarSig_1093;

struct Blob_LocalVarSig_1093 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1093 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1137 Blob_LocalVarSig_1137, *PBlob_LocalVarSig_1137;

struct Blob_LocalVarSig_1137 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1137 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1175 Blob_LocalVarSig_1175, *PBlob_LocalVarSig_1175;

struct Blob_LocalVarSig_1175 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1175 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1190 Blob_LocalVarSig_1190, *PBlob_LocalVarSig_1190;

struct Blob_LocalVarSig_1190 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1190 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1224 Blob_LocalVarSig_1224, *PBlob_LocalVarSig_1224;

struct Blob_LocalVarSig_1224 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1224 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1261 Blob_LocalVarSig_1261, *PBlob_LocalVarSig_1261;

struct Blob_LocalVarSig_1261 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1261 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1318 Blob_LocalVarSig_1318, *PBlob_LocalVarSig_1318;

struct Blob_LocalVarSig_1318 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1318 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1334 Blob_LocalVarSig_1334, *PBlob_LocalVarSig_1334;

struct Blob_LocalVarSig_1334 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1334 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1416 Blob_LocalVarSig_1416, *PBlob_LocalVarSig_1416;

struct Blob_LocalVarSig_1416 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1416 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1433 Blob_LocalVarSig_1433, *PBlob_LocalVarSig_1433;

struct Blob_LocalVarSig_1433 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1433 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_1498 Blob_LocalVarSig_1498, *PBlob_LocalVarSig_1498;

struct Blob_LocalVarSig_1498 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_1498 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_153 Blob_LocalVarSig_153, *PBlob_LocalVarSig_153;

struct Blob_LocalVarSig_153 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_153 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_450 Blob_LocalVarSig_450, *PBlob_LocalVarSig_450;

struct Blob_LocalVarSig_450 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_450 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_527 Blob_LocalVarSig_527, *PBlob_LocalVarSig_527;

struct Blob_LocalVarSig_527 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_527 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_547 Blob_LocalVarSig_547, *PBlob_LocalVarSig_547;

struct Blob_LocalVarSig_547 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_547 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_662 Blob_LocalVarSig_662, *PBlob_LocalVarSig_662;

struct Blob_LocalVarSig_662 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_662 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_LocalVarSig_708 Blob_LocalVarSig_708, *PBlob_LocalVarSig_708;

struct Blob_LocalVarSig_708 {
    byte Size; /* coded integer - blob size */
    struct LocalVarSig_708 LocalVarSig; /* Contains signature for function locals */
};

typedef struct Blob_MethodDefSig_28 Blob_MethodDefSig_28, *PBlob_MethodDefSig_28;

struct Blob_MethodDefSig_28 {
    byte Size; /* coded integer - blob size */
    struct MethodDefSig_28 MethodDefSig; /* Type info for method return and params */
};

typedef struct Blob_MethodDefSig_48 Blob_MethodDefSig_48, *PBlob_MethodDefSig_48;

struct Blob_MethodDefSig_48 {
    byte Size; /* coded integer - blob size */
    struct MethodDefSig_48 MethodDefSig; /* Type info for method return and params */
};

typedef struct Blob_MethodDefSig_62 Blob_MethodDefSig_62, *PBlob_MethodDefSig_62;

struct Blob_MethodDefSig_62 {
    byte Size; /* coded integer - blob size */
    struct MethodDefSig_62 MethodDefSig; /* Type info for method return and params */
};

typedef struct Blob_MethodDefSig_66 Blob_MethodDefSig_66, *PBlob_MethodDefSig_66;

struct Blob_MethodDefSig_66 {
    byte Size; /* coded integer - blob size */
    struct MethodDefSig_66 MethodDefSig; /* Type info for method return and params */
};

typedef struct Blob_MethodDefSig_73 Blob_MethodDefSig_73, *PBlob_MethodDefSig_73;

struct Blob_MethodDefSig_73 {
    byte Size; /* coded integer - blob size */
    struct MethodDefSig_73 MethodDefSig; /* Type info for method return and params */
};

typedef struct Blob_MethodRefSig_101 Blob_MethodRefSig_101, *PBlob_MethodRefSig_101;

struct Blob_MethodRefSig_101 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_101 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1035 Blob_MethodRefSig_1035, *PBlob_MethodRefSig_1035;

struct Blob_MethodRefSig_1035 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1035 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1041 Blob_MethodRefSig_1041, *PBlob_MethodRefSig_1041;

struct Blob_MethodRefSig_1041 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1041 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1053 Blob_MethodRefSig_1053, *PBlob_MethodRefSig_1053;

struct Blob_MethodRefSig_1053 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1053 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1059 Blob_MethodRefSig_1059, *PBlob_MethodRefSig_1059;

struct Blob_MethodRefSig_1059 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1059 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1069 Blob_MethodRefSig_1069, *PBlob_MethodRefSig_1069;

struct Blob_MethodRefSig_1069 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1069 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_107 Blob_MethodRefSig_107, *PBlob_MethodRefSig_107;

struct Blob_MethodRefSig_107 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_107 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1074 Blob_MethodRefSig_1074, *PBlob_MethodRefSig_1074;

struct Blob_MethodRefSig_1074 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1074 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1083 Blob_MethodRefSig_1083, *PBlob_MethodRefSig_1083;

struct Blob_MethodRefSig_1083 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1083 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1109 Blob_MethodRefSig_1109, *PBlob_MethodRefSig_1109;

struct Blob_MethodRefSig_1109 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1109 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1115 Blob_MethodRefSig_1115, *PBlob_MethodRefSig_1115;

struct Blob_MethodRefSig_1115 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1115 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_113 Blob_MethodRefSig_113, *PBlob_MethodRefSig_113;

struct Blob_MethodRefSig_113 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_113 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1132 Blob_MethodRefSig_1132, *PBlob_MethodRefSig_1132;

struct Blob_MethodRefSig_1132 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1132 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1147 Blob_MethodRefSig_1147, *PBlob_MethodRefSig_1147;

struct Blob_MethodRefSig_1147 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1147 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1153 Blob_MethodRefSig_1153, *PBlob_MethodRefSig_1153;

struct Blob_MethodRefSig_1153 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1153 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1158 Blob_MethodRefSig_1158, *PBlob_MethodRefSig_1158;

struct Blob_MethodRefSig_1158 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1158 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1184 Blob_MethodRefSig_1184, *PBlob_MethodRefSig_1184;

struct Blob_MethodRefSig_1184 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1184 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_119 Blob_MethodRefSig_119, *PBlob_MethodRefSig_119;

struct Blob_MethodRefSig_119 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_119 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1196 Blob_MethodRefSig_1196, *PBlob_MethodRefSig_1196;

struct Blob_MethodRefSig_1196 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1196 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1201 Blob_MethodRefSig_1201, *PBlob_MethodRefSig_1201;

struct Blob_MethodRefSig_1201 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1201 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1215 Blob_MethodRefSig_1215, *PBlob_MethodRefSig_1215;

struct Blob_MethodRefSig_1215 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1215 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_124 Blob_MethodRefSig_124, *PBlob_MethodRefSig_124;

struct Blob_MethodRefSig_124 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_124 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1275 Blob_MethodRefSig_1275, *PBlob_MethodRefSig_1275;

struct Blob_MethodRefSig_1275 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1275 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1281 Blob_MethodRefSig_1281, *PBlob_MethodRefSig_1281;

struct Blob_MethodRefSig_1281 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1281 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1288 Blob_MethodRefSig_1288, *PBlob_MethodRefSig_1288;

struct Blob_MethodRefSig_1288 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1288 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1294 Blob_MethodRefSig_1294, *PBlob_MethodRefSig_1294;

struct Blob_MethodRefSig_1294 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1294 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_130 Blob_MethodRefSig_130, *PBlob_MethodRefSig_130;

struct Blob_MethodRefSig_130 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_130 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1303 Blob_MethodRefSig_1303, *PBlob_MethodRefSig_1303;

struct Blob_MethodRefSig_1303 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1303 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1309 Blob_MethodRefSig_1309, *PBlob_MethodRefSig_1309;

struct Blob_MethodRefSig_1309 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1309 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1352 Blob_MethodRefSig_1352, *PBlob_MethodRefSig_1352;

struct Blob_MethodRefSig_1352 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1352 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1358 Blob_MethodRefSig_1358, *PBlob_MethodRefSig_1358;

struct Blob_MethodRefSig_1358 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1358 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_136 Blob_MethodRefSig_136, *PBlob_MethodRefSig_136;

struct Blob_MethodRefSig_136 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_136 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1363 Blob_MethodRefSig_1363, *PBlob_MethodRefSig_1363;

struct Blob_MethodRefSig_1363 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1363 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1373 Blob_MethodRefSig_1373, *PBlob_MethodRefSig_1373;

struct Blob_MethodRefSig_1373 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1373 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1393 Blob_MethodRefSig_1393, *PBlob_MethodRefSig_1393;

struct Blob_MethodRefSig_1393 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1393 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_142 Blob_MethodRefSig_142, *PBlob_MethodRefSig_142;

struct Blob_MethodRefSig_142 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_142 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1421 Blob_MethodRefSig_1421, *PBlob_MethodRefSig_1421;

struct Blob_MethodRefSig_1421 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1421 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1450 Blob_MethodRefSig_1450, *PBlob_MethodRefSig_1450;

struct Blob_MethodRefSig_1450 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1450 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1457 Blob_MethodRefSig_1457, *PBlob_MethodRefSig_1457;

struct Blob_MethodRefSig_1457 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1457 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1467 Blob_MethodRefSig_1467, *PBlob_MethodRefSig_1467;

struct Blob_MethodRefSig_1467 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1467 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1512 Blob_MethodRefSig_1512, *PBlob_MethodRefSig_1512;

struct Blob_MethodRefSig_1512 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1512 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1527 Blob_MethodRefSig_1527, *PBlob_MethodRefSig_1527;

struct Blob_MethodRefSig_1527 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1527 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1533 Blob_MethodRefSig_1533, *PBlob_MethodRefSig_1533;

struct Blob_MethodRefSig_1533 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1533 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1538 Blob_MethodRefSig_1538, *PBlob_MethodRefSig_1538;

struct Blob_MethodRefSig_1538 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1538 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1548 Blob_MethodRefSig_1548, *PBlob_MethodRefSig_1548;

struct Blob_MethodRefSig_1548 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1548 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1556 Blob_MethodRefSig_1556, *PBlob_MethodRefSig_1556;

struct Blob_MethodRefSig_1556 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1556 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1572 Blob_MethodRefSig_1572, *PBlob_MethodRefSig_1572;

struct Blob_MethodRefSig_1572 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1572 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1579 Blob_MethodRefSig_1579, *PBlob_MethodRefSig_1579;

struct Blob_MethodRefSig_1579 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1579 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_163 Blob_MethodRefSig_163, *PBlob_MethodRefSig_163;

struct Blob_MethodRefSig_163 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_163 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_1659 Blob_MethodRefSig_1659, *PBlob_MethodRefSig_1659;

struct Blob_MethodRefSig_1659 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_1659 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_170 Blob_MethodRefSig_170, *PBlob_MethodRefSig_170;

struct Blob_MethodRefSig_170 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_170 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_186 Blob_MethodRefSig_186, *PBlob_MethodRefSig_186;

struct Blob_MethodRefSig_186 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_186 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_191 Blob_MethodRefSig_191, *PBlob_MethodRefSig_191;

struct Blob_MethodRefSig_191 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_191 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_198 Blob_MethodRefSig_198, *PBlob_MethodRefSig_198;

struct Blob_MethodRefSig_198 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_198 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_209 Blob_MethodRefSig_209, *PBlob_MethodRefSig_209;

struct Blob_MethodRefSig_209 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_209 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_215 Blob_MethodRefSig_215, *PBlob_MethodRefSig_215;

struct Blob_MethodRefSig_215 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_215 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_221 Blob_MethodRefSig_221, *PBlob_MethodRefSig_221;

struct Blob_MethodRefSig_221 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_221 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_227 Blob_MethodRefSig_227, *PBlob_MethodRefSig_227;

struct Blob_MethodRefSig_227 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_227 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_234 Blob_MethodRefSig_234, *PBlob_MethodRefSig_234;

struct Blob_MethodRefSig_234 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_234 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_238 Blob_MethodRefSig_238, *PBlob_MethodRefSig_238;

struct Blob_MethodRefSig_238 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_238 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_250 Blob_MethodRefSig_250, *PBlob_MethodRefSig_250;

struct Blob_MethodRefSig_250 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_250 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_257 Blob_MethodRefSig_257, *PBlob_MethodRefSig_257;

struct Blob_MethodRefSig_257 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_257 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_263 Blob_MethodRefSig_263, *PBlob_MethodRefSig_263;

struct Blob_MethodRefSig_263 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_263 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_272 Blob_MethodRefSig_272, *PBlob_MethodRefSig_272;

struct Blob_MethodRefSig_272 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_272 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_279 Blob_MethodRefSig_279, *PBlob_MethodRefSig_279;

struct Blob_MethodRefSig_279 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_279 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_28 Blob_MethodRefSig_28, *PBlob_MethodRefSig_28;

struct Blob_MethodRefSig_28 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_28 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_287 Blob_MethodRefSig_287, *PBlob_MethodRefSig_287;

struct Blob_MethodRefSig_287 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_287 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_293 Blob_MethodRefSig_293, *PBlob_MethodRefSig_293;

struct Blob_MethodRefSig_293 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_293 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_297 Blob_MethodRefSig_297, *PBlob_MethodRefSig_297;

struct Blob_MethodRefSig_297 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_297 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_302 Blob_MethodRefSig_302, *PBlob_MethodRefSig_302;

struct Blob_MethodRefSig_302 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_302 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_308 Blob_MethodRefSig_308, *PBlob_MethodRefSig_308;

struct Blob_MethodRefSig_308 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_308 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_315 Blob_MethodRefSig_315, *PBlob_MethodRefSig_315;

struct Blob_MethodRefSig_315 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_315 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_321 Blob_MethodRefSig_321, *PBlob_MethodRefSig_321;

struct Blob_MethodRefSig_321 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_321 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_328 Blob_MethodRefSig_328, *PBlob_MethodRefSig_328;

struct Blob_MethodRefSig_328 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_328 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_335 Blob_MethodRefSig_335, *PBlob_MethodRefSig_335;

struct Blob_MethodRefSig_335 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_335 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_341 Blob_MethodRefSig_341, *PBlob_MethodRefSig_341;

struct Blob_MethodRefSig_341 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_341 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_354 Blob_MethodRefSig_354, *PBlob_MethodRefSig_354;

struct Blob_MethodRefSig_354 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_354 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_360 Blob_MethodRefSig_360, *PBlob_MethodRefSig_360;

struct Blob_MethodRefSig_360 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_360 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_373 Blob_MethodRefSig_373, *PBlob_MethodRefSig_373;

struct Blob_MethodRefSig_373 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_373 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_379 Blob_MethodRefSig_379, *PBlob_MethodRefSig_379;

struct Blob_MethodRefSig_379 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_379 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_388 Blob_MethodRefSig_388, *PBlob_MethodRefSig_388;

struct Blob_MethodRefSig_388 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_388 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_395 Blob_MethodRefSig_395, *PBlob_MethodRefSig_395;

struct Blob_MethodRefSig_395 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_395 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_402 Blob_MethodRefSig_402, *PBlob_MethodRefSig_402;

struct Blob_MethodRefSig_402 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_402 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_416 Blob_MethodRefSig_416, *PBlob_MethodRefSig_416;

struct Blob_MethodRefSig_416 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_416 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_423 Blob_MethodRefSig_423, *PBlob_MethodRefSig_423;

struct Blob_MethodRefSig_423 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_423 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_459 Blob_MethodRefSig_459, *PBlob_MethodRefSig_459;

struct Blob_MethodRefSig_459 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_459 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_463 Blob_MethodRefSig_463, *PBlob_MethodRefSig_463;

struct Blob_MethodRefSig_463 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_463 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_470 Blob_MethodRefSig_470, *PBlob_MethodRefSig_470;

struct Blob_MethodRefSig_470 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_470 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_479 Blob_MethodRefSig_479, *PBlob_MethodRefSig_479;

struct Blob_MethodRefSig_479 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_479 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_48 Blob_MethodRefSig_48, *PBlob_MethodRefSig_48;

struct Blob_MethodRefSig_48 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_48 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_485 Blob_MethodRefSig_485, *PBlob_MethodRefSig_485;

struct Blob_MethodRefSig_485 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_485 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_493 Blob_MethodRefSig_493, *PBlob_MethodRefSig_493;

struct Blob_MethodRefSig_493 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_493 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_53 Blob_MethodRefSig_53, *PBlob_MethodRefSig_53;

struct Blob_MethodRefSig_53 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_53 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_536 Blob_MethodRefSig_536, *PBlob_MethodRefSig_536;

struct Blob_MethodRefSig_536 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_536 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_57 Blob_MethodRefSig_57, *PBlob_MethodRefSig_57;

struct Blob_MethodRefSig_57 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_57 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_573 Blob_MethodRefSig_573, *PBlob_MethodRefSig_573;

struct Blob_MethodRefSig_573 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_573 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_581 Blob_MethodRefSig_581, *PBlob_MethodRefSig_581;

struct Blob_MethodRefSig_581 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_581 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_587 Blob_MethodRefSig_587, *PBlob_MethodRefSig_587;

struct Blob_MethodRefSig_587 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_587 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_593 Blob_MethodRefSig_593, *PBlob_MethodRefSig_593;

struct Blob_MethodRefSig_593 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_593 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_600 Blob_MethodRefSig_600, *PBlob_MethodRefSig_600;

struct Blob_MethodRefSig_600 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_600 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_609 Blob_MethodRefSig_609, *PBlob_MethodRefSig_609;

struct Blob_MethodRefSig_609 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_609 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_615 Blob_MethodRefSig_615, *PBlob_MethodRefSig_615;

struct Blob_MethodRefSig_615 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_615 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_62 Blob_MethodRefSig_62, *PBlob_MethodRefSig_62;

struct Blob_MethodRefSig_62 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_62 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_622 Blob_MethodRefSig_622, *PBlob_MethodRefSig_622;

struct Blob_MethodRefSig_622 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_622 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_630 Blob_MethodRefSig_630, *PBlob_MethodRefSig_630;

struct Blob_MethodRefSig_630 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_630 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_636 Blob_MethodRefSig_636, *PBlob_MethodRefSig_636;

struct Blob_MethodRefSig_636 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_636 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_649 Blob_MethodRefSig_649, *PBlob_MethodRefSig_649;

struct Blob_MethodRefSig_649 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_649 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_657 Blob_MethodRefSig_657, *PBlob_MethodRefSig_657;

struct Blob_MethodRefSig_657 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_657 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_701 Blob_MethodRefSig_701, *PBlob_MethodRefSig_701;

struct Blob_MethodRefSig_701 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_701 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_725 Blob_MethodRefSig_725, *PBlob_MethodRefSig_725;

struct Blob_MethodRefSig_725 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_725 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_73 Blob_MethodRefSig_73, *PBlob_MethodRefSig_73;

struct Blob_MethodRefSig_73 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_73 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_734 Blob_MethodRefSig_734, *PBlob_MethodRefSig_734;

struct Blob_MethodRefSig_734 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_734 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_740 Blob_MethodRefSig_740, *PBlob_MethodRefSig_740;

struct Blob_MethodRefSig_740 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_740 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_767 Blob_MethodRefSig_767, *PBlob_MethodRefSig_767;

struct Blob_MethodRefSig_767 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_767 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_775 Blob_MethodRefSig_775, *PBlob_MethodRefSig_775;

struct Blob_MethodRefSig_775 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_775 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_78 Blob_MethodRefSig_78, *PBlob_MethodRefSig_78;

struct Blob_MethodRefSig_78 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_78 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_798 Blob_MethodRefSig_798, *PBlob_MethodRefSig_798;

struct Blob_MethodRefSig_798 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_798 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_835 Blob_MethodRefSig_835, *PBlob_MethodRefSig_835;

struct Blob_MethodRefSig_835 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_835 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_84 Blob_MethodRefSig_84, *PBlob_MethodRefSig_84;

struct Blob_MethodRefSig_84 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_84 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_90 Blob_MethodRefSig_90, *PBlob_MethodRefSig_90;

struct Blob_MethodRefSig_90 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_90 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_916 Blob_MethodRefSig_916, *PBlob_MethodRefSig_916;

struct Blob_MethodRefSig_916 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_916 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodRefSig_95 Blob_MethodRefSig_95, *PBlob_MethodRefSig_95;

struct Blob_MethodRefSig_95 {
    byte Size; /* coded integer - blob size */
    struct MethodRefSig_95 MethodRefSig; /* Type info for imported method return and params */
};

typedef struct Blob_MethodSpecSig_1171 Blob_MethodSpecSig_1171, *PBlob_MethodSpecSig_1171;

struct Blob_MethodSpecSig_1171 {
    byte Size; /* coded integer - blob size */
    struct MethodSpecSig_1171 MethodSpecSig; /* Specifies a generic method with GenArgCount types */
};

typedef struct Blob_MethodSpecSig_181 Blob_MethodSpecSig_181, *PBlob_MethodSpecSig_181;

struct Blob_MethodSpecSig_181 {
    byte Size; /* coded integer - blob size */
    struct MethodSpecSig_181 MethodSpecSig; /* Specifies a generic method with GenArgCount types */
};

typedef struct Blob_MethodSpecSig_349 Blob_MethodSpecSig_349, *PBlob_MethodSpecSig_349;

struct Blob_MethodSpecSig_349 {
    byte Size; /* coded integer - blob size */
    struct MethodSpecSig_349 MethodSpecSig; /* Specifies a generic method with GenArgCount types */
};

typedef struct Blob_MethodSpecSig_367 Blob_MethodSpecSig_367, *PBlob_MethodSpecSig_367;

struct Blob_MethodSpecSig_367 {
    byte Size; /* coded integer - blob size */
    struct MethodSpecSig_367 MethodSpecSig; /* Specifies a generic method with GenArgCount types */
};

typedef struct Blob_PropertySig_148 Blob_PropertySig_148, *PBlob_PropertySig_148;

struct Blob_PropertySig_148 {
    byte Size; /* coded integer - blob size */
    struct PropertySig_148 PropertySig; /* Contains signature for properties. Gives params for getters/setters. */
};

typedef struct Blob_PropertySig_792 Blob_PropertySig_792, *PBlob_PropertySig_792;

struct Blob_PropertySig_792 {
    byte Size; /* coded integer - blob size */
    struct PropertySig_792 PropertySig; /* Contains signature for properties. Gives params for getters/setters. */
};

typedef struct Blob_PropertySig_814 Blob_PropertySig_814, *PBlob_PropertySig_814;

struct Blob_PropertySig_814 {
    byte Size; /* coded integer - blob size */
    struct PropertySig_814 PropertySig; /* Contains signature for properties. Gives params for getters/setters. */
};

typedef struct Blob_PropertySig_820 Blob_PropertySig_820, *PBlob_PropertySig_820;

struct Blob_PropertySig_820 {
    byte Size; /* coded integer - blob size */
    struct PropertySig_820 PropertySig; /* Contains signature for properties. Gives params for getters/setters. */
};

typedef struct Blob_PropertySig_824 Blob_PropertySig_824, *PBlob_PropertySig_824;

struct Blob_PropertySig_824 {
    byte Size; /* coded integer - blob size */
    struct PropertySig_824 PropertySig; /* Contains signature for properties. Gives params for getters/setters. */
};

typedef struct Blob_PropertySig_829 Blob_PropertySig_829, *PBlob_PropertySig_829;

struct Blob_PropertySig_829 {
    byte Size; /* coded integer - blob size */
    struct PropertySig_829 PropertySig; /* Contains signature for properties. Gives params for getters/setters. */
};

typedef struct Blob_PropertySig_925 Blob_PropertySig_925, *PBlob_PropertySig_925;

struct Blob_PropertySig_925 {
    byte Size; /* coded integer - blob size */
    struct PropertySig_925 PropertySig; /* Contains signature for properties. Gives params for getters/setters. */
};

typedef struct Blob_TypeSpec_1102 Blob_TypeSpec_1102, *PBlob_TypeSpec_1102;

typedef struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@57cbb605] GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@57cbb605], *PGenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@57cbb605];

struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@57cbb605] {
    enum TypeCode GenericInst; /* GenericInst */
    enum TypeCode ClassOrValueType; /* Class or ValueType */
    word Type; /* TypeDefOrRefOrSpecEncoded */
    byte GenArgCount; /* Number of generics to follow */
    enum TypeCode Type; /* Generic Type */
};

struct Blob_TypeSpec_1102 {
    byte Size; /* coded integer - blob size */
    struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@57cbb605] TypeSpec; /* Describes a type. */
};

typedef struct Blob_TypeSpec_1125 Blob_TypeSpec_1125, *PBlob_TypeSpec_1125;

typedef struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@351edfb4] GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@351edfb4], *PGenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@351edfb4];

struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@351edfb4] {
    enum TypeCode GenericInst; /* GenericInst */
    enum TypeCode ClassOrValueType; /* Class or ValueType */
    word Type; /* TypeDefOrRefOrSpecEncoded */
    byte GenArgCount; /* Number of generics to follow */
    enum TypeCode Type; /* Generic Type */
};

struct Blob_TypeSpec_1125 {
    byte Size; /* coded integer - blob size */
    struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@351edfb4] TypeSpec; /* Describes a type. */
};

typedef struct Blob_TypeSpec_1385 Blob_TypeSpec_1385, *PBlob_TypeSpec_1385;

typedef struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@25a0b410, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@3eca0102] GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@25a0b410, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@3eca0102], *PGenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@25a0b410, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@3eca0102];

struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@25a0b410, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@3eca0102] {
    enum TypeCode GenericInst; /* GenericInst */
    enum TypeCode ClassOrValueType; /* Class or ValueType */
    word Type; /* TypeDefOrRefOrSpecEncoded */
    byte GenArgCount; /* Number of generics to follow */
    enum TypeCode Type; /* Generic Type */
    enum TypeCode Type; /* Generic Type */
};

struct Blob_TypeSpec_1385 {
    byte Size; /* coded integer - blob size */
    struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@25a0b410, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@3eca0102] TypeSpec; /* Describes a type. */
};

typedef struct Blob_TypeSpec_1519 Blob_TypeSpec_1519, *PBlob_TypeSpec_1519;

typedef struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@16d98edb, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@1589564] GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@16d98edb, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@1589564], *PGenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@16d98edb, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@1589564];

struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@16d98edb, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@1589564] {
    enum TypeCode GenericInst; /* GenericInst */
    enum TypeCode ClassOrValueType; /* Class or ValueType */
    word Type; /* TypeDefOrRefOrSpecEncoded */
    byte GenArgCount; /* Number of generics to follow */
    enum TypeCode Type; /* Generic Type */
    enum TypeCode Type; /* Generic Type */
};

struct Blob_TypeSpec_1519 {
    byte Size; /* coded integer - blob size */
    struct GenericInstType[ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@16d98edb, ghidra.app.util.bin.format.pe.cli.blobs.CliAbstractSig$CliTypePrimitive@1589564] TypeSpec; /* Describes a type. */
};

typedef struct Blob_TypeSpec_783 Blob_TypeSpec_783, *PBlob_TypeSpec_783;

struct Blob_TypeSpec_783 {
    byte Size; /* coded integer - blob size */
    struct SzArray.conflict TypeSpec; /* Describes a type. */
};

typedef enum AssemblyFlags {
    PublicKey=1,
    Retargetable=256,
    DisableJITcompileOptimizer=16384,
    EnableJITcompileTracking=32768
} AssemblyFlags;

typedef enum AssemblyHash {
    None=0,
    Reserved (MD5)=32771,
    SHA1=32772
} AssemblyHash;

typedef enum COR20_Flags {
    COMIMAGE_FLAGS_ILONLY=1,
    COMIMAGE_FLAGS_32BITREQUIRED=2,
    COMIMAGE_FLAGS_IL_LIBRARY=4,
    COMIMAGE_FLAGS_STRONGNAMESIGNED=8,
    COMIMAGE_FLAGS_NATIVE_ENTRYPOINT=16,
    COMIMAGE_FLAGS_TRACKDEBUGDATA=65536
} COR20_Flags;

typedef enum FieldAttributes {
    Access_CompilerControlled=0,
    Access_Private=1,
    Access_FamANDAssem=2,
    Access_Assembly=3,
    Access_Family=4,
    Access_FamORAssem=5,
    Access_Public=6,
    Static=16,
    InitOnly=32,
    Literal=64,
    NotSerialized=128,
    HasFieldRVA=256,
    SpecialName=512,
    RTSpecialName=1024,
    HasFieldMarshal=4096,
    PInvokeImpl=8192,
    HasDefault=32768
} FieldAttributes;

typedef enum ManifestResourceAttributes {
    Public=1,
    Private=2
} ManifestResourceAttributes;

typedef enum MethodAttributes {
    MAccess_CompilerControlled=0,
    MAccess_Private=1,
    MAccess_FamANDAssem=2,
    MAccess_Assem=3,
    MAccess_Family=4,
    MAccess_FamORAssem=5,
    MAccess_Public=6,
    UnmanagedExport=8,
    Static=16,
    Final=32,
    Virtual=64,
    HideBySig=128,
    VtableLayout_NewSlot=256,
    Strict=512,
    Abstract=1024,
    SpecialName=2048,
    RTSpecialName=4096,
    PInvokeImpl=8192,
    HasSecurity=16384,
    RequireSecObject=32768
} MethodAttributes;

typedef enum MethodImplAttributes {
    CodeType_IL=0,
    CodeType_Native=1,
    CodeType_OPTIL=2,
    CodeType_Runtime=3,
    Unmanaged=4,
    NoInlining=8,
    ForwardRef=16,
    Synchronized=32,
    NoOptimization=64,
    PreserveSig=128,
    InternalCall=4096,
    MaxMethodImplVal=65535
} MethodImplAttributes;

typedef enum MethodSemanticsAttributes {
    Setter=1,
    Getter=2,
    Other=4,
    AddOn=8,
    RemoveOn=16,
    Fire=32
} MethodSemanticsAttributes;

typedef enum ParamAttributes {
    In=1,
    Out=2,
    Optional=16,
    HasDefault=4096,
    HasFieldMarshal=8192,
    Unused=53216
} ParamAttributes;

typedef enum PInvokeAttributes {
    CharSetNotSpec=0,
    NoMangle=1,
    CharSetAnsi=2,
    CharSetUnicode=4,
    CharSetAuto=6,
    SupportsLastError=64,
    CallConvPlatformapi=256,
    CallConvCdecl=512,
    CallConvStdcall=768,
    CallConvThiscall=1024,
    CallConvFastcall=1280
} PInvokeAttributes;

typedef enum PropertyAttributes {
    SpecialName=512,
    RTSpecialName=1024,
    HasDefault=4096,
    Unused=59903
} PropertyAttributes;

typedef enum TypeAttributes {
    Visibility_NotPublic=0,
    Visibility_Public=1,
    Visibility_NestedPublic=2,
    Visibility_NestedPrivate=3,
    Visibility_NestedFamily=4,
    Visibility_NestedAssembly=5,
    Visibility_NestedFamANDAssem=6,
    Visibility_NestedFamORAssem=7,
    SequentialLayout=8,
    ExplicitLayout=16,
    Interface=32,
    Abstract=128,
    Sealed=256,
    SpecialName=1024,
    RTSpecialName=2048,
    Import=4096,
    Serializable=8192,
    UnicodeClass=65536,
    AutoClass=131072,
    CustomFormatClass=196608,
    HasSecurity=262144,
    BeforeFieldInit=1048576,
    IsTypeForwarder=2097152,
    CustomStringFormatMask=12582912
} TypeAttributes;

typedef struct Assembly Table Assembly Table, *PAssembly Table;

struct Assembly Table {
    enum AssemblyHash HashAlg; /* Type of hash present */
    word MajorVersion;
    word MinorVersion;
    word BuildNumber;
    word RevisionNumber;
    enum AssemblyFlags Flags; /* Bitmask of type AssemblyFlags */
    word PublicKey; /* index into Blob heap */
    word Name; /* index into String heap */
    word Culture; /* index into String heap */
};

typedef struct AssemblyRef Row AssemblyRef Row, *PAssemblyRef Row;

struct AssemblyRef Row {
    word MajorVersion;
    word MinorVersion;
    word BuildNumber;
    word RevisionNumber;
    enum AssemblyFlags Flags; /* Bitmask of type AssemblyFlags */
    word PublicKeyOrToken; /* Public Key or token identifying the author of the assembly. */
    word Name; /* index into String heap */
    word Culture; /* index into String heap */
    word HashValue; /* index into Blob heap */
};

typedef struct Constant Row Constant Row, *PConstant Row;

struct Constant Row {
    enum TypeCode Type; /* if Class, indicates nullref */
    byte Reserved; /* should be 0 */
    word Parent; /* index - coded HasConstant */
    word Value; /* index into Blob heap */
};

typedef struct CustomAttribute Row CustomAttribute Row, *PCustomAttribute Row;

struct CustomAttribute Row {
    word Parent;
    word Type;
    word Value;
};

typedef struct DeclSecurity Row DeclSecurity Row, *PDeclSecurity Row;

struct DeclSecurity Row {
    word Action; /* Points to a System.Security.SecurityAction as described in ISO23271 IV */
    word Parent;
    word PermissionSet;
};

typedef struct Field Row Field Row, *PField Row;

struct Field Row {
    enum FieldAttributes Flags; /* see CorFieldAttr */
    word Name; /* index into String heap */
    word Signature; /* index into Blob heap */
};

typedef struct ImplMap Row ImplMap Row, *PImplMap Row;

struct ImplMap Row {
    enum PInvokeAttributes MappingFlags; /* Bitmask of type PInvokeAttributes */
    word MemberForwarded; /* MemberForwarded Coded Index */
    word ImportName; /* index into String heap */
    word ImportScope; /* Index into ModuleRef table */
};

typedef struct ManifestResource Row ManifestResource Row, *PManifestResource Row;

struct ManifestResource Row {
    dword Offset;
    enum ManifestResourceAttributes Flags; /* Bitmask of type ManifestResourceAttributes */
    word Name; /* index into String heap */
    word Implementation; /* Implementation coded index */
};

typedef struct MemberRef Row MemberRef Row, *PMemberRef Row;

struct MemberRef Row {
    word Class; /* index-MemberRefParent coded */
    word Name; /* index into String heap */
    word Signature; /* index into Blob heap */
};

typedef struct MethodDef Row MethodDef Row, *PMethodDef Row;

struct MethodDef Row {
    dword RVA;
    enum MethodImplAttributes ImplFlags; /* Bitmask of type MethodImplAttributes */
    enum MethodAttributes Flags; /* Bitmask of type MethodAttribute */
    word Name; /* index into String heap */
    word Signature; /* index into Blob heap */
    word ParamList; /* index into Param table */
};

typedef struct MethodImpl Row MethodImpl Row, *PMethodImpl Row;

struct MethodImpl Row {
    word Class; /* index into TypeDef */
    word MethodBody; /* MethodDefOrRef coded index */
    word MethodDeclaration; /* MethodDefOrRef coded index */
};

typedef struct MethodSemantics Row MethodSemantics Row, *PMethodSemantics Row;

struct MethodSemantics Row {
    enum MethodSemanticsAttributes Semantics; /* Bitmask of type MethodSemanticsAttributes */
    word Method; /* index into MethodDef table */
    word Association; /* HasSemantics coded index into Event or Property */
};

typedef struct MethodSpec Row MethodSpec Row, *PMethodSpec Row;

struct MethodSpec Row {
    word Method; /* MethodDefOrRef coded index */
    word Instantiation; /* index into Blob heap, signature of this instantiation */
};

typedef struct Module Row Module Row, *PModule Row;

struct Module Row {
    word Generation; /* reserved, shall be 0 */
    word Name; /* index into String heap */
    word MvId; /* used to distinguish between versions of same module */
    word EncId; /* reserved, shall be 0 */
    word EncBaseId; /* reserved, shall be 0 */
};

typedef struct ModuleRef Row ModuleRef Row, *PModuleRef Row;

struct ModuleRef Row {
    word Name; /* index into String heap */
};

typedef struct NestedClass Row NestedClass Row, *PNestedClass Row;

struct NestedClass Row {
    word NestedClass; /* TypeDef index */
    word EnclosingClass; /* TypeDef index */
};

typedef struct ParamRow ParamRow, *PParamRow;

struct ParamRow {
    enum ParamAttributes Flags; /* bitmask of type ParamAttributes */
    word Sequence; /* constant */
    word Name; /* index into String heap */
};

typedef struct Property Row Property Row, *PProperty Row;

struct Property Row {
    enum PropertyAttributes Flags; /* Bitmask of type PropertyAttributes */
    word Name;
    word Type; /* Blob index to the signature, not a TypeDef/TypeRef */
};

typedef struct PropertyMap Row PropertyMap Row, *PPropertyMap Row;

struct PropertyMap Row {
    word Parent;
    word options; /* Index into Property table. Points to contiguous run of Properties until next ref from PropertyMap or end of table. */
};

typedef struct StandAloneSig Row StandAloneSig Row, *PStandAloneSig Row;

struct StandAloneSig Row {
    word Signature;
};

typedef struct TypeDef Row TypeDef Row, *PTypeDef Row;

struct TypeDef Row {
    enum TypeAttributes Flags; /* see CorTypeAttr */
    word TypeName; /* index into String heap */
    word TypeNamespace; /* index into String heap */
    word Extends; /* index: coded TypeDefOrRef */
    word FieldList; /* index into Field table */
    word MethodList; /* index into MethodDef table */
};

typedef struct TypeRef Row TypeRef Row, *PTypeRef Row;

struct TypeRef Row {
    word ResolutionScope;
    word TypeName;
    word TypeNamespace;
};

typedef struct TypeSpec Row TypeSpec Row, *PTypeSpec Row;

struct TypeSpec Row {
    word Signature; /* index into Blob heap */
};

typedef struct MethodDefHdr_Fat MethodDefHdr_Fat, *PMethodDefHdr_Fat;

struct MethodDefHdr_Fat {
    word Size+Flags; /* L.S. Bits 0:3 Size of hdr in bytes, Bits 4:15 Flags */
    word MaxStack; /* Maximum number of items on the operand stack */
    dword CodeSize; /* Size of actual method body in bytes */
    dword LocalVarSigTok; /* Signature for the local variables of the method. 0 means no locals. References standalone signature in Metadata tables, which references #Blob heap. */
};

typedef struct MethodDefHdr_Tiny MethodDefHdr_Tiny, *PMethodDefHdr_Tiny;

struct MethodDefHdr_Tiny {
    byte Size+Flags; /* L.S. Bits 0:1 Flags, Bits 2:7 Size of method in Bytes */
};

typedef struct CLI_Stream_Header_#Blob CLI_Stream_Header_#Blob, *PCLI_Stream_Header_#Blob;

struct CLI_Stream_Header_#Blob {
    dword offset;
    dword size;
    char name[8];
};

typedef struct CLI_Stream_Header_#GUID CLI_Stream_Header_#GUID, *PCLI_Stream_Header_#GUID;

struct CLI_Stream_Header_#GUID {
    dword offset;
    dword size;
    char name[8];
};

typedef struct CLI_Stream_Header_#Strings CLI_Stream_Header_#Strings, *PCLI_Stream_Header_#Strings;

struct CLI_Stream_Header_#Strings {
    dword offset;
    dword size;
    char name[12];
};

typedef struct CLI_Stream_Header_#US CLI_Stream_Header_#US, *PCLI_Stream_Header_#US;

struct CLI_Stream_Header_#US {
    dword offset;
    dword size;
    char name[4];
};

typedef struct CLI_Stream_Header_#~ CLI_Stream_Header_#~, *PCLI_Stream_Header_#~;

struct CLI_Stream_Header_#~ {
    dword offset;
    dword size;
    char name[4];
};

typedef struct #Blob #Blob, *P#Blob;

struct #Blob {
    byte Reserved; /* Always 0 */
    struct Blob_Generic_1 [1];
    struct Blob_Generic_10 [a];
    struct Blob_Generic_19 [13];
    struct Blob_MethodRefSig_28 MethodRefSig_28; /* Type info for imported method return and params */
    struct Blob_FieldSig_32 FieldSig_32; /* Type information for Field */
    struct Blob_ConstantSig_35 ConstantSig_35; /* Data stored in a constant */
    struct Blob_FieldSig_40 FieldSig_40; /* Type information for Field */
    struct Blob_FieldSig_44 FieldSig_44; /* Type information for Field */
    struct Blob_MethodRefSig_48 MethodRefSig_48; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_53 MethodRefSig_53; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_57 MethodRefSig_57; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_62 MethodRefSig_62; /* Type info for imported method return and params */
    struct Blob_MethodDefSig_66 MethodDefSig_66; /* Type info for method return and params */
    struct Blob_MethodRefSig_73 MethodRefSig_73; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_78 MethodRefSig_78; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_84 MethodRefSig_84; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_90 MethodRefSig_90; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_95 MethodRefSig_95; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_101 MethodRefSig_101; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_107 MethodRefSig_107; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_113 MethodRefSig_113; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_119 MethodRefSig_119; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_124 MethodRefSig_124; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_130 MethodRefSig_130; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_136 MethodRefSig_136; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_142 MethodRefSig_142; /* Type info for imported method return and params */
    struct Blob_PropertySig_148 PropertySig_148; /* Contains signature for properties. Gives params for getters/setters. */
    struct Blob_LocalVarSig_153 LocalVarSig_153; /* Contains signature for function locals */
    struct Blob_MethodRefSig_163 MethodRefSig_163; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_170 MethodRefSig_170; /* Type info for imported method return and params */
    struct Blob_MethodSpecSig_181 MethodSpecSig_181; /* Specifies a generic method with GenArgCount types */
    struct Blob_MethodRefSig_186 MethodRefSig_186; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_191 MethodRefSig_191; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_198 MethodRefSig_198; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_209 MethodRefSig_209; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_215 MethodRefSig_215; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_221 MethodRefSig_221; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_227 MethodRefSig_227; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_234 MethodRefSig_234; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_238 MethodRefSig_238; /* Type info for imported method return and params */
    struct Blob_FieldSig_245 FieldSig_245; /* Type information for Field */
    struct Blob_MethodRefSig_250 MethodRefSig_250; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_257 MethodRefSig_257; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_263 MethodRefSig_263; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_272 MethodRefSig_272; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_279 MethodRefSig_279; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_287 MethodRefSig_287; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_293 MethodRefSig_293; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_297 MethodRefSig_297; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_302 MethodRefSig_302; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_308 MethodRefSig_308; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_315 MethodRefSig_315; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_321 MethodRefSig_321; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_328 MethodRefSig_328; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_335 MethodRefSig_335; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_341 MethodRefSig_341; /* Type info for imported method return and params */
    struct Blob_MethodSpecSig_349 MethodSpecSig_349; /* Specifies a generic method with GenArgCount types */
    struct Blob_MethodRefSig_354 MethodRefSig_354; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_360 MethodRefSig_360; /* Type info for imported method return and params */
    struct Blob_MethodSpecSig_367 MethodSpecSig_367; /* Specifies a generic method with GenArgCount types */
    struct Blob_MethodRefSig_373 MethodRefSig_373; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_379 MethodRefSig_379; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_388 MethodRefSig_388; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_395 MethodRefSig_395; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_402 MethodRefSig_402; /* Type info for imported method return and params */
    struct Blob_FieldSig_407 FieldSig_407; /* Type information for Field */
    struct Blob_Generic_412 [19c];
    struct Blob_MethodRefSig_416 MethodRefSig_416; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_423 MethodRefSig_423; /* Type info for imported method return and params */
    struct Blob_Generic_429 [1ad];
    struct Blob_CustomAttrib_435 CustomAttrib_435; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_ConstantSig_440 ConstantSig_440; /* Data stored in a constant */
    struct Blob_ConstantSig_445 ConstantSig_445; /* Data stored in a constant */
    struct Blob_LocalVarSig_450 LocalVarSig_450; /* Contains signature for function locals */
    struct Blob_MethodRefSig_459 MethodRefSig_459; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_463 MethodRefSig_463; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_470 MethodRefSig_470; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_479 MethodRefSig_479; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_485 MethodRefSig_485; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_493 MethodRefSig_493; /* Type info for imported method return and params */
    struct Blob_Generic_501 [1f5];
    struct Blob_Generic_510 [1fe];
    struct Blob_FieldSig_518 FieldSig_518; /* Type information for Field */
    struct Blob_ConstantSig_522 ConstantSig_522; /* Data stored in a constant */
    struct Blob_LocalVarSig_527 LocalVarSig_527; /* Contains signature for function locals */
    struct Blob_MethodRefSig_536 MethodRefSig_536; /* Type info for imported method return and params */
    struct Blob_Generic_542 [21e];
    struct Blob_LocalVarSig_547 LocalVarSig_547; /* Contains signature for function locals */
    struct Blob_MethodRefSig_573 MethodRefSig_573; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_581 MethodRefSig_581; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_587 MethodRefSig_587; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_593 MethodRefSig_593; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_600 MethodRefSig_600; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_609 MethodRefSig_609; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_615 MethodRefSig_615; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_622 MethodRefSig_622; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_630 MethodRefSig_630; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_636 MethodRefSig_636; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_649 MethodRefSig_649; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_657 MethodRefSig_657; /* Type info for imported method return and params */
    struct Blob_LocalVarSig_662 LocalVarSig_662; /* Contains signature for function locals */
    struct Blob_Generic_694 [2b6];
    struct Blob_MethodRefSig_701 MethodRefSig_701; /* Type info for imported method return and params */
    struct Blob_LocalVarSig_708 LocalVarSig_708; /* Contains signature for function locals */
    struct Blob_FieldSig_715 FieldSig_715; /* Type information for Field */
    struct Blob_FieldSig_720 FieldSig_720; /* Type information for Field */
    struct Blob_MethodRefSig_725 MethodRefSig_725; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_734 MethodRefSig_734; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_740 MethodRefSig_740; /* Type info for imported method return and params */
    struct Blob_Generic_748 [2ec];
    struct Blob_Generic_754 [2f2];
    struct Blob_Generic_760 [2f8];
    struct Blob_MethodRefSig_767 MethodRefSig_767; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_775 MethodRefSig_775; /* Type info for imported method return and params */
    struct Blob_TypeSpec_783 TypeSpec_783; /* Describes a type. */
    struct Blob_Generic_786 [312];
    struct Blob_PropertySig_792 PropertySig_792; /* Contains signature for properties. Gives params for getters/setters. */
    struct Blob_MethodRefSig_798 MethodRefSig_798; /* Type info for imported method return and params */
    struct Blob_CustomAttrib_805 CustomAttrib_805; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_PropertySig_814 PropertySig_814; /* Contains signature for properties. Gives params for getters/setters. */
    struct Blob_PropertySig_820 PropertySig_820; /* Contains signature for properties. Gives params for getters/setters. */
    struct Blob_PropertySig_824 PropertySig_824; /* Contains signature for properties. Gives params for getters/setters. */
    struct Blob_PropertySig_829 PropertySig_829; /* Contains signature for properties. Gives params for getters/setters. */
    struct Blob_MethodRefSig_835 MethodRefSig_835; /* Type info for imported method return and params */
    struct Blob_CustomAttrib_841 CustomAttrib_841; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_FieldSig_907 FieldSig_907; /* Type information for Field */
    struct Blob_Generic_911 [38f];
    struct Blob_MethodRefSig_916 MethodRefSig_916; /* Type info for imported method return and params */
    struct Blob_PropertySig_925 PropertySig_925; /* Contains signature for properties. Gives params for getters/setters. */
    struct Blob_Generic_930 [3a2];
    struct Blob_FieldSig_1020 FieldSig_1020; /* Type information for Field */
    struct Blob_FieldSig_1024 FieldSig_1024; /* Type information for Field */
    struct Blob_Generic_1029 [405];
    struct Blob_MethodRefSig_1035 MethodRefSig_1035; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1041 MethodRefSig_1041; /* Type info for imported method return and params */
    struct Blob_LocalVarSig_1045 LocalVarSig_1045; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1053 MethodRefSig_1053; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1059 MethodRefSig_1059; /* Type info for imported method return and params */
    struct Blob_LocalVarSig_1065 LocalVarSig_1065; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1069 MethodRefSig_1069; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1074 MethodRefSig_1074; /* Type info for imported method return and params */
    struct Blob_LocalVarSig_1079 LocalVarSig_1079; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1083 MethodRefSig_1083; /* Type info for imported method return and params */
    struct Blob_LocalVarSig_1089 LocalVarSig_1089; /* Contains signature for function locals */
    struct Blob_LocalVarSig_1093 LocalVarSig_1093; /* Contains signature for function locals */
    struct Blob_TypeSpec_1102 TypeSpec_1102; /* Describes a type. */
    struct Blob_MethodRefSig_1109 MethodRefSig_1109; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1115 MethodRefSig_1115; /* Type info for imported method return and params */
    struct Blob_TypeSpec_1125 TypeSpec_1125; /* Describes a type. */
    struct Blob_MethodRefSig_1132 MethodRefSig_1132; /* Type info for imported method return and params */
    struct Blob_LocalVarSig_1137 LocalVarSig_1137; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1147 MethodRefSig_1147; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1153 MethodRefSig_1153; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1158 MethodRefSig_1158; /* Type info for imported method return and params */
    struct Blob_MethodSpecSig_1171 MethodSpecSig_1171; /* Specifies a generic method with GenArgCount types */
    struct Blob_LocalVarSig_1175 LocalVarSig_1175; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1184 MethodRefSig_1184; /* Type info for imported method return and params */
    struct Blob_LocalVarSig_1190 LocalVarSig_1190; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1196 MethodRefSig_1196; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1201 MethodRefSig_1201; /* Type info for imported method return and params */
    struct Blob_Generic_1207 [4b7];
    struct Blob_MethodRefSig_1215 MethodRefSig_1215; /* Type info for imported method return and params */
    struct Blob_LocalVarSig_1224 LocalVarSig_1224; /* Contains signature for function locals */
    struct Blob_FieldSig_1233 FieldSig_1233; /* Type information for Field */
    struct Blob_FieldSig_1236 FieldSig_1236; /* Type information for Field */
    struct Blob_FieldSig_1245 FieldSig_1245; /* Type information for Field */
    struct Blob_Generic_1254 [4e6];
    struct Blob_LocalVarSig_1261 LocalVarSig_1261; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1275 MethodRefSig_1275; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1281 MethodRefSig_1281; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1288 MethodRefSig_1288; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1294 MethodRefSig_1294; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1303 MethodRefSig_1303; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1309 MethodRefSig_1309; /* Type info for imported method return and params */
    struct Blob_LocalVarSig_1318 LocalVarSig_1318; /* Contains signature for function locals */
    struct Blob_Generic_1324 [52c];
    struct Blob_LocalVarSig_1334 LocalVarSig_1334; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1352 MethodRefSig_1352; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1358 MethodRefSig_1358; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1363 MethodRefSig_1363; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1373 MethodRefSig_1373; /* Type info for imported method return and params */
    struct Blob_Generic_1378 [562];
    struct Blob_TypeSpec_1385 TypeSpec_1385; /* Describes a type. */
    struct Blob_MethodRefSig_1393 MethodRefSig_1393; /* Type info for imported method return and params */
    struct Blob_Generic_1402 [57a];
    struct Blob_LocalVarSig_1416 LocalVarSig_1416; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1421 MethodRefSig_1421; /* Type info for imported method return and params */
    struct Blob_Generic_1425 [591];
    struct Blob_LocalVarSig_1433 LocalVarSig_1433; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1450 MethodRefSig_1450; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1457 MethodRefSig_1457; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1467 MethodRefSig_1467; /* Type info for imported method return and params */
    struct Blob_Generic_1475 [5c3];
    struct Blob_LocalVarSig_1498 LocalVarSig_1498; /* Contains signature for function locals */
    struct Blob_MethodRefSig_1512 MethodRefSig_1512; /* Type info for imported method return and params */
    struct Blob_TypeSpec_1519 TypeSpec_1519; /* Describes a type. */
    struct Blob_MethodRefSig_1527 MethodRefSig_1527; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1533 MethodRefSig_1533; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1538 MethodRefSig_1538; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1548 MethodRefSig_1548; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1556 MethodRefSig_1556; /* Type info for imported method return and params */
    struct Blob_Generic_1562 [61a];
    struct Blob_MethodRefSig_1572 MethodRefSig_1572; /* Type info for imported method return and params */
    struct Blob_MethodRefSig_1579 MethodRefSig_1579; /* Type info for imported method return and params */
    struct Blob_FieldSig_1586 FieldSig_1586; /* Type information for Field */
    struct Blob_ConstantSig_1589 ConstantSig_1589; /* Data stored in a constant */
    struct Blob_ConstantSig_1604 ConstantSig_1604; /* Data stored in a constant */
    struct Blob_CustomAttrib_1619 CustomAttrib_1619; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_CustomAttrib_1628 CustomAttrib_1628; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_MethodRefSig_1659 MethodRefSig_1659; /* Type info for imported method return and params */
    struct Blob_CustomAttrib_1666 CustomAttrib_1666; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_CustomAttrib_1679 CustomAttrib_1679; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_Generic_1699 [6a3];
    struct Blob_CustomAttrib_1705 CustomAttrib_1705; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_CustomAttrib_1726 CustomAttrib_1726; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_CustomAttrib_1732 CustomAttrib_1732; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_CustomAttrib_1774 CustomAttrib_1774; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_CustomAttrib_1789 CustomAttrib_1789; /* A CustomAttrib blob stores values of fixed or named parameters supplied when instantiating a custom attribute */
    struct Blob_Generic_1800 [708];
    struct Blob_Generic_1878 [756];
};

typedef struct #GUID #GUID, *P#GUID;

struct #GUID {
    GUID [0];
};

typedef struct #Strings #Strings, *P#Strings;

struct #Strings {
    char [0][1];
    char [1][9];
    char [a][9];
    char [13][14];
    char [21][7];
    char [28][7];
    char [2f][8];
    char [37][9];
    char [40][16];
    char [50][6];
    char [56][13];
    char [63][8];
    char [6b][9];
    char [74][8];
    char [7c][9];
    char [85][8];
    char [8d][9];
    char [96][8];
    char [9e][9];
    char [a7][8];
    char [af][9];
    char [b8][8];
    char [c0][9];
    char [c9][8];
    char [d1][8];
    char [d9][9];
    char [e2][7];
    char [e9][11];
    char [f4][22];
    char [10a][19];
    char [11d][6];
    char [123][12];
    char [12f][18];
    char [141][10];
    char [14b][21];
    char [160][7];
    char [167][6];
    char [16d][6];
    char [173][27];
    char [18e][30];
    char [1ac][31];
    char [1cb][33];
    char [1ec][36];
    char [210][30];
    char [22e][24];
    char [246][33];
    char [267][24];
    char [27f][32];
    char [29f][8];
    char [2a7][13];
    char [2b4][8];
    char [2bc][9];
    char [2c5][9];
    char [2ce][27];
    char [2e9][8];
    char [2f1][9];
    char [2fa][18];
    char [30c][15];
    char [31b][11];
    char [326][16];
    char [336][9];
    char [33f][17];
    char [350][21];
    char [365][4];
    char [369][16];
    char [379][11];
    char [384][10];
    char [38e][12];
    char [39a][6];
    char [3a0][9];
    char [3a9][31];
    char [3c8][53];
    char [3fd][13];
    char [40a][5];
    char [40f][9];
    char [418][18];
    char [42a][12];
    char [436][15];
    char [445][9];
    char [44e][12];
    char [45a][16];
    char [46a][12];
    char [476][7];
    char [47d][9];
    char [486][18];
    char [498][9];
    char [4a1][12];
    char [4ad][17];
    char [4be][16];
    char [4ce][11];
    char [4d9][12];
    char [4e5][12];
    char [4f1][9];
    char [4fa][10];
    char [504][11];
    char [50f][12];
    char [51b][18];
    char [52d][18];
    char [53f][21];
    char [554][10];
    char [55e][10];
    char [568][11];
    char [573][8];
    char [57b][20];
    char [58f][15];
    char [59e][15];
    char [5ad][6];
    char [5b3][9];
    char [5bc][9];
    char [5c5][13];
    char [5d2][10];
    char [5dc][12];
    char [5e8][8];
    char [5f0][19];
    char [603][22];
    char [619][9];
    char [622][10];
    char [62c][8];
    char [634][13];
    char [641][5];
    char [646][19];
    char [659][12];
    char [665][12];
    char [671][12];
    char [67d][16];
    char [68d][8];
    char [695][11];
    char [6a0][24];
    char [6b8][6];
    char [6be][8];
    char [6c6][17];
    char [6d7][21];
    char [6ec][7];
    char [6f3][6];
    char [6f9][17];
    char [70a][14];
    char [718][19];
    char [72b][18];
    char [73d][18];
    char [74f][19];
    char [762][27];
    char [77d][14];
    char [78b][23];
    char [7a2][26];
    char [7bc][29];
    char [7d9][34];
    char [7fb][20];
    char [80f][25];
    char [828][20];
    char [83c][23];
    char [853][27];
    char [86e][25];
    char [887][29];
    char [8a4][31];
    char [8c3][29];
    char [8e0][32];
    char [900][25];
    char [919][27];
    char [934][25];
    char [94d][30];
    char [96b][20];
    char [97f][5];
    char [984][12];
    char [990][9];
    char [999][6];
    char [99f][5];
    char [9a4][12];
    char [9b0][20];
    char [9c4][30];
    char [9e2][35];
    char [a05][28];
    char [a21][12];
    char [a2d][36];
    char [a51][17];
    char [a62][9];
    char [a6b][14];
    char [a79][14];
    char [a87][13];
    char [a94][15];
    char [aa3][12];
    char [aaf][12];
    char [abb][9];
    char [ac4][17];
    char [ad5][12];
    char [ae1][9];
    char [aea][23];
    char [b01][17];
    char [b12][26];
    char [b2c][16];
    char [b3c][10];
    char [b46][10];
    char [b50][15];
    char [b5f][9];
    char [b68][13];
    char [b75][16];
    char [b85][63];
    char [bc4][32];
    char [be4][7];
    char [beb][19];
    char [bfe][12];
    char [c0a][14];
    char [c18][5];
    char [c1d][10];
    char [c27][11];
    char [c32][9];
    char [c3b][9];
    char [c44][4];
    char [c48][4];
    char [c4c][35];
    char [c6f][33];
    char [c90][15];
    char [c9f][15];
    char [cae][14];
    char [cbc][15];
    char [ccb][14];
    char [cd9][15];
    char [ce8][14];
    char [cf6][15];
    char [d05][14];
    char [d13][15];
    char [d22][14];
    char [d30][15];
    char [d3f][14];
    char [d4d][15];
    char [d5c][14];
    char [d6a][14];
    char [d78][14];
    char [d86][10];
    char [d90][14];
    char [d9e][8];
    char [da6][13];
    char [db3][14];
    char [dc1][14];
    char [dcf][13];
    char [ddc][6];
    char [de2][22];
    char [df8][13];
    char [e05][13];
    char [e12][8];
    char [e1a][11];
    char [e25][31];
    char [e44][33];
    char [e65][15];
    char [e74][5];
    char [e79][17];
    char [e8a][11];
    char [e95][11];
    char [ea0][26];
    char [eba][11];
    char [ec5][14];
    char [ed3][11];
    char [ede][13];
    char [eeb][13];
    char [ef8][7];
    char [eff][7];
    char [f06][9];
    char [f0f][9];
    char [f18][7];
    char [f1f][19];
    char [f32][7];
    char [f39][8];
    char [f41][5];
    char [f46][17];
    char [f57][5];
    char [f5c][12];
    char [f68][9];
    char [f71][18];
    char [f83][5];
    char [f88][10];
    char [f92][18];
    char [fa4][11];
    char [faf][13];
    char [fbc][15];
    char [fcb][23];
    char [fe2][9];
    char [feb][13];
    char [ff8][12];
    char [1004][22];
    char [101a][12];
    char [1026][13];
    char [1033][16];
    char [1043][18];
    char [1055][12];
    char [1061][21];
    char [1076][21];
    char [108b][11];
    char [1096][11];
    char [10a1][8];
    char [10a9][18];
    char [10bb][18];
    char [10cd][17];
    char [10de][18];
    char [10f0][23];
    char [1107][13];
    char [1114][18];
    char [1126][18];
    char [1138][15];
    char [1147][23];
    char [115e][11];
    char [1169][13];
    char [1176][17];
    char [1187][7];
    char [118e][18];
    char [11a0][10];
    char [11aa][9];
    char [11b3][7];
    char [11ba][16];
    char [11ca][15];
    char [11d9][21];
    char [11ee][14];
    char [11fc][17];
    char [120d][14];
    char [121b][7];
    char [1222][10];
    char [122c][9];
    char [1235][6];
    char [123b][5];
    char [1240][8];
    char [1248][12];
    char [1254][18];
    char [1266][5];
    char [126b][15];
    char [127a][25];
    char [1293][11];
    char [129e][14];
    char [12ac][15];
    char [12bb][7];
    char [12c2][20];
    char [12d6][13];
    char [12e3][17];
    char [12f4][16];
    char [1304][20];
    char [1318][24];
    char [1330][30];
    char [134e][11];
    char [1359][10];
    char [1363][14];
    char [1371][12];
    char [137d][6];
    char [1383][8];
    char [138b][28];
    char [13a7][7];
    char [13ae][14];
    char [13bc][22];
    char [13d2][6];
    char [13d8][7];
    char [13df][8];
    char [13e7][16];
    char [13f7][16];
    char [1407][35];
    char [142a][3];
    char [142d][19];
    char [1440][8];
    char [1448][17];
    char [1459][13];
    char [1466][15];
    char [1475][13];
    char [1482][31];
    char [14a1][32];
    char [14c1][17];
    char [14d2][26];
    char [14ec][29];
    char [1509][30];
    char [1527][34];
    char [1549][39];
    char [1570][15];
    char [157f][14];
    char [158d][15];
    char [159c][19];
    char [15af][17];
    char [15c0][9];
    char [15c9][10];
    char [15d3][19];
    char [15e6][14];
    char [15f4][12];
    char [1600][14];
    char [160e][13];
    char [161b][8];
    char [1623][15];
    char [1632][15];
    char [1641][12];
    char [164d][19];
    char [1660][14];
    char [166e][9];
    char [1677][10];
    char [1681][18];
    char [1693][9];
    char [169c][17];
    char [16ad][5];
    char [16b2][7];
    char [16b9][14];
    char [16c7][13];
    char [16d4][17];
    char [16e5][21];
    char [16fa][9];
    char [1703][14];
    char [1711][24];
    char [1729][12];
    char [1735][18];
    char [1747][13];
    char [1754][7];
    char [175b][12];
    char [1767][13];
    char [1774][11];
    char [177f][9];
    char [1788][7];
    char [178f][7];
    char [1796][9];
    char [179f][37];
    char [17c4][29];
    char [17e1][7];
    char [17e8][12];
    char [17f4][10];
    char [17fe][11];
    char [1809][4];
    char [180d][11];
    char [1818][9];
    char [1821][5];
    char [1826][19];
    char [1839][12];
    char [1845][13];
    char [1852][17];
    char [1863][10];
    char [186d][12];
    char [1879][20];
    char [188d][12];
    char [1899][6];
    char [189f][6];
    char [18a5][12];
    char [18b1][12];
    char [18bd][19];
    char [18d0][12];
    char [18dc][18];
    char [18ee][12];
    char [18fa][12];
    char [1906][14];
    char [1914][13];
    char [1921][14];
    char [192f][9];
    char [1938][12];
    char [1944][9];
    char [194d][13];
    char [195a][17];
    char [196b][14];
    char [1979][5];
    char [197e][13];
    char [198b][19];
    char [199e][5];
    char [19a3][13];
    char [19b0][11];
    char [19bb][16];
    char [19cb][16];
    char [19db][5];
    char [19e0][16];
    char [19f0][8];
    char [19f8][13];
    char [1a05][11];
    char [1a10][12];
    char [1a1c][12];
    char [1a28][29];
    char [1a45][13];
    char [1a52][16];
    char [1a62][21];
    char [1a77][21];
    char [1a8c][5];
    char [1a91][16];
    char [1aa1][9];
    char [1aaa][12];
    char [1ab6][12];
    char [1ac2][14];
    char [1ad0][16];
    char [1ae0][14];
    char [1aee][1];
    char [1aef][1];
};

typedef struct #US #US, *P#US;

struct #US {
    byte Reserved; /* Always 0 */
    byte Next string size;
    wchar16 [1][6];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [f][91];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [c8][11];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [e0][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [f0][35];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [138][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [144][14];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [162][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [16e][18];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [194][19];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1bc][14];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1da][11];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1f2][19];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [21a][11];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [232][9];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [246][17];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [26a][9];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [27e][13];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [29a][10];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2b0][12];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2ca][17];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2ee][15];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [30e][9];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [322][14];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [340][12];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [35a][19];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [384][19];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [3ac][57];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [420][18];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [446][15];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [466][15];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [486][70];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [515][59];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [58d][14];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [5ab][1];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [5af][53];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [61b][16];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [63d][1];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [641][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [653][24];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [685][21];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [6b1][57];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [725][9];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [739][14];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [757][12];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [771][85];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [81e][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [830][28];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [86a][85];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [917][86];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [9c6][82];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [a6d][85];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [b1a][86];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [bc9][86];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [c78][85];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [d25][90];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [ddc][101];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [ea9][99];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [f72][86];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [1021][85];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [10ce][86];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [117d][83];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [1226][84];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [12d1][83];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [137a][85];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [1427][86];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [14d6][93];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [1593][91];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [164c][84];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [16f7][85];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [17a4][87];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    word Next string size;
    wchar16 [1855][81];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [18fa][14];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1918][21];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1944][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1950][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [195a][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1964][11];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [197c][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1986][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1996][2];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [199c][6];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [19aa][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [19bc][6];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [19ca][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [19dc][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [19ec][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [19f8][19];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1a20][11];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1a38][1];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1a3c][32];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1a7e][13];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1a9a][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1aac][10];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1ac2][16];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1ae4][25];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1b18][25];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1b4c][12];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1b66][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1b72][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1b7e][10];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1b94][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1ba4][12];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1bbe][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1bce][12];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1be8][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1bf8][10];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1c0e][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1c1e][11];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1c36][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1c46][11];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1c5e][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1c6e][9];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1c82][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1c92][15];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1cb2][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1cc2][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1ccc][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1cdc][13];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1cf8][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1d0a][13];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1d26][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1d38][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1d4a][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1d5c][10];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1d72][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1d84][16];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1da6][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1db8][16];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1dda][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1dec][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1dfc][60];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1e76][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1e88][18];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1eae][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1ec0][18];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1ee6][15];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1f06][13];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1f22][21];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1f4e][14];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1f6c][13];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1f88][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1f9a][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1faa][30];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [1fe8][31];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2028][28];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2062][6];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2070][10];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2086][12];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [20a0][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [20aa][12];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [20c4][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [20ce][12];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [20e8][14];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2106][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2116][13];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2132][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2144][9];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2158][14];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2176][53];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [21e2][37];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [222e][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [223a][36];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2284][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [228e][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [229a][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [22a4][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [22ae][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [22b8][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [22c2][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [22cc][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [22d6][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [22e0][6];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [22ee][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [22f6][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2300][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [230a][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2314][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [231e][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2328][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2332][2];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2338][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2342][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [234a][2];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2350][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [235a][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2364][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [236c][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2378][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2382][6];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2390][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2398][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [23a0][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [23aa][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [23b4][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [23c0][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [23c8][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [23d2][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [23dc][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [23e6][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [23f0][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [23fa][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2404][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [240e][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2418][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2422][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [242e][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2438][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2444][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2454][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [245e][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2468][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2472][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [247e][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [248a][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2496][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [24a2][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [24ac][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [24b8][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [24c2][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [24cc][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [24d4][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [24de][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [24e6][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [24f0][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [24fa][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2504][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [250e][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2516][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2520][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [252a][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2534][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2540][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [254c][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2558][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2564][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2570][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [257a][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2584][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [258e][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2598][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [25a2][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [25ac][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [25b6][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [25c0][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [25cc][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [25d8][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [25e4][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [25f0][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [25fc][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2606][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2612][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [261c][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2626][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2630][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [263a][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2644][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2650][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [265c][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2668][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2674][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2680][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [268c][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2698][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [26a4][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [26b0][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [26ba][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [26c4][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [26ce][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [26d8][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [26e2][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [26ec][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [26f6][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2700][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [270a][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2712][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [271c][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2726][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2730][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [273a][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2746][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2750][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [275a][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2764][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [276e][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2778][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2782][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [278c][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2798][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [27a2][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [27ac][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [27b6][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [27c0][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [27ca][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [27d4][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [27e4][5];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [27f0][4];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [27fa][20];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2824][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2836][19];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [285e][19];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2886][19];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [28ae][14];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [28cc][15];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [28ec][17];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2910][15];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2930][24];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2962][30];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [29a0][35];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [29e8][35];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2a30][24];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2a62][38];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2ab0][22];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2ade][26];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2b14][27];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2b4c][34];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2b92][26];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2bc8][29];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2c04][38];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2c52][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2c64][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2c74][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2c7c][8];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2c8e][3];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2c96][6];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2ca4][29];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2ce0][31];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2d20][11];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2d38][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2d48][7];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2d58][30];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2d96][29];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
    byte Next string size;
    wchar16 [2dd2][52];
    byte Extra byte; /* 0x01 if string contains non-ASCII */
};

typedef struct #~ #~, *P#~;

struct #~ {
    dword Reserved; /* Always 0 */
    byte MajorVersion;
    byte MinorVersion;
    byte HeapSizes; /* Bit vector for heap sizes */
    byte Reserved; /* Always 1 */
    qword Valid; /* Bit vector of present tables */
    qword Sorted; /* Bit vector of sorted tables */
    dword Rows[23]; /* # of rows for each corresponding present table */
    struct Module Row Module; /* CLI Metadata Table: Module */
    struct TypeRef Row TypeRef[134]; /* CLI Metadata Table: TypeRef */
    struct TypeDef Row TypeDef[17]; /* CLI Metadata Table: TypeDef */
    struct Field Row Field[45]; /* CLI Metadata Table: Field */
    struct MethodDef Row MethodDef[108]; /* CLI Metadata Table: MethodDef */
    struct ParamRow Param[78]; /* CLI Metadata Table: Param */
    struct MemberRef Row MemberRef[229]; /* CLI Metadata Table: MemberRef */
    struct Constant Row Constant[9]; /* CLI Metadata Table: Constant */
    struct CustomAttribute Row CustomAttribute[25]; /* CLI Metadata Table: CustomAttribute */
    struct DeclSecurity Row DeclSecurity[1]; /* CLI Metadata Table: DeclSecurity */
    struct StandAloneSig Row StandAloneSig[21]; /* CLI Metadata Table: StandAloneSig */
    struct PropertyMap Row PropertyMap[3]; /* CLI Metadata Table: PropertyMap */
    struct Property Row Property[17]; /* CLI Metadata Table: Property */
    struct MethodSemantics Row MethodSemantics[18]; /* CLI Metadata Table: MethodSemantics */
    struct MethodImpl Row MethodImpl[1]; /* CLI Metadata Table: MethodImpl */
    struct ModuleRef Row ModuleRef[2]; /* CLI Metadata Table: ModuleRef */
    struct TypeSpec Row TypeSpec[5]; /* CLI Metadata Table: TypeSpec */
    struct ImplMap Row ImplMap[13]; /* CLI Metadata Table: ImplMap */
    struct Assembly Table Assembly; /* CLI Metadata Table: Assembly */
    struct AssemblyRef Row AssemblyRef[6]; /* CLI Metadata Table: AssemblyRef */
    struct ManifestResource Row ManifestResource[19]; /* CLI Metadata Table: ManifestResource */
    struct NestedClass Row NestedClass[1]; /* CLI Metadata Table: NestedClass */
    struct MethodSpec Row MethodSpec[4]; /* CLI Metadata Table: MethodSpec */
};

typedef struct CLI_METADATA_DIRECTORY CLI_METADATA_DIRECTORY, *PCLI_METADATA_DIRECTORY;

struct CLI_METADATA_DIRECTORY {
    dword VirtualAddress;
    dword Size;
};

typedef struct CLI_METADATA_HEADER CLI_METADATA_HEADER, *PCLI_METADATA_HEADER;

struct CLI_METADATA_HEADER {
    dword Signature; /* must be 0x424a5342 */
    word MajorVersion;
    word MinorVersion;
    dword Reserved; /* should be 0 */
    dword VersionLength;
    char Version[12];
    word Flags; /* should be 0 */
    word StreamsCount; /* number of stream headers to follow */
    struct CLI_Stream_Header_#~ #~;
    struct CLI_Stream_Header_#Strings #Strings;
    struct CLI_Stream_Header_#US #US;
    struct CLI_Stream_Header_#GUID #GUID;
    struct CLI_Stream_Header_#Blob #Blob;
};

typedef struct IMAGE_COR20_HEADER IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER;

typedef struct IMAGE_DATA_DIRECTORY.conflict IMAGE_DATA_DIRECTORY.conflict, *PIMAGE_DATA_DIRECTORY.conflict;

struct IMAGE_DATA_DIRECTORY.conflict {
    dword VirtualAddress;
    dword Size;
};

struct IMAGE_COR20_HEADER {
    dword cb; /* Size of the structure */
    word MajorRuntimeVersion; /* Version of CLR Runtime */
    word MinorRuntimeVersion;
    struct CLI_METADATA_DIRECTORY MetaData; /* RVA and size of MetaData */
    enum COR20_Flags Flags;
    dword EntryPointToken; /* This is a metadata token if not a valid RVA */
    struct IMAGE_DATA_DIRECTORY.conflict Resources;
    struct IMAGE_DATA_DIRECTORY.conflict StrongNameSignature;
    struct IMAGE_DATA_DIRECTORY.conflict CodeManagerTable; /* Should be 0 */
    struct IMAGE_DATA_DIRECTORY.conflict VTableFixups;
    struct IMAGE_DATA_DIRECTORY.conflict ExportAddressTableJumps; /* Should be 0 */
    struct IMAGE_DATA_DIRECTORY.conflict ManagedNativeHeader; /* 0 unless this is a native image */
};

typedef struct IMAGE_DATA_DIRECTORY IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY;

struct IMAGE_DATA_DIRECTORY {
    ImageBaseOffset32 VirtualAddress;
    dword Size;
};

typedef struct IMAGE_FILE_HEADER IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER;

struct IMAGE_FILE_HEADER {
    word Machine; /* 332 */
    word NumberOfSections;
    dword TimeDateStamp;
    dword PointerToSymbolTable;
    dword NumberOfSymbols;
    word SizeOfOptionalHeader;
    word Characteristics;
};

typedef struct IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS32, *PIMAGE_NT_HEADERS32;

typedef struct IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;

struct IMAGE_OPTIONAL_HEADER32 {
    word Magic;
    byte MajorLinkerVersion;
    byte MinorLinkerVersion;
    dword SizeOfCode;
    dword SizeOfInitializedData;
    dword SizeOfUninitializedData;
    ImageBaseOffset32 AddressOfEntryPoint;
    ImageBaseOffset32 BaseOfCode;
    ImageBaseOffset32 BaseOfData;
    pointer32 ImageBase;
    dword SectionAlignment;
    dword FileAlignment;
    word MajorOperatingSystemVersion;
    word MinorOperatingSystemVersion;
    word MajorImageVersion;
    word MinorImageVersion;
    word MajorSubsystemVersion;
    word MinorSubsystemVersion;
    dword Win32VersionValue;
    dword SizeOfImage;
    dword SizeOfHeaders;
    dword CheckSum;
    word Subsystem;
    word DllCharacteristics;
    dword SizeOfStackReserve;
    dword SizeOfStackCommit;
    dword SizeOfHeapReserve;
    dword SizeOfHeapCommit;
    dword LoaderFlags;
    dword NumberOfRvaAndSizes;
    struct IMAGE_DATA_DIRECTORY DataDirectory[16];
};

struct IMAGE_NT_HEADERS32 {
    char Signature[4];
    struct IMAGE_FILE_HEADER FileHeader;
    struct IMAGE_OPTIONAL_HEADER32 OptionalHeader;
};

typedef struct IMAGE_RESOURCE_DATA_ENTRY IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY;

struct IMAGE_RESOURCE_DATA_ENTRY {
    dword OffsetToData;
    dword Size;
    dword CodePage;
    dword Reserved;
};

typedef struct IMAGE_RESOURCE_DIRECTORY IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY;

struct IMAGE_RESOURCE_DIRECTORY {
    dword Characteristics;
    dword TimeDateStamp;
    word MajorVersion;
    word MinorVersion;
    word NumberOfNamedEntries;
    word NumberOfIdEntries;
};

typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY;

typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion;

typedef union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion;

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct;

typedef struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct, *PIMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct;

struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct {
    dword NameOffset;
    dword NameIsString;
};

union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion {
    struct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_NameStruct;
    dword Name;
    word Id;
};

struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct {
    dword OffsetToDirectory;
    dword DataIsDirectory;
};

union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion {
    dword OffsetToData;
    struct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryStruct;
};

union IMAGE_RESOURCE_DIRECTORY_ENTRY {
    union IMAGE_RESOURCE_DIRECTORY_ENTRY_NameUnion NameUnion;
    union IMAGE_RESOURCE_DIRECTORY_ENTRY_DirectoryUnion DirectoryUnion;
};

typedef struct IMAGE_SECTION_HEADER IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER;

typedef union Misc Misc, *PMisc;

typedef enum SectionFlags {
    IMAGE_SCN_TYPE_NO_PAD=8,
    IMAGE_SCN_RESERVED_0001=16,
    IMAGE_SCN_CNT_CODE=32,
    IMAGE_SCN_CNT_INITIALIZED_DATA=64,
    IMAGE_SCN_CNT_UNINITIALIZED_DATA=128,
    IMAGE_SCN_LNK_OTHER=256,
    IMAGE_SCN_LNK_INFO=512,
    IMAGE_SCN_RESERVED_0040=1024,
    IMAGE_SCN_LNK_REMOVE=2048,
    IMAGE_SCN_LNK_COMDAT=4096,
    IMAGE_SCN_GPREL=32768,
    IMAGE_SCN_MEM_16BIT=131072,
    IMAGE_SCN_MEM_PURGEABLE=131072,
    IMAGE_SCN_MEM_LOCKED=262144,
    IMAGE_SCN_MEM_PRELOAD=524288,
    IMAGE_SCN_ALIGN_1BYTES=1048576,
    IMAGE_SCN_ALIGN_2BYTES=2097152,
    IMAGE_SCN_ALIGN_4BYTES=3145728,
    IMAGE_SCN_ALIGN_8BYTES=4194304,
    IMAGE_SCN_ALIGN_16BYTES=5242880,
    IMAGE_SCN_ALIGN_32BYTES=6291456,
    IMAGE_SCN_ALIGN_64BYTES=7340032,
    IMAGE_SCN_ALIGN_128BYTES=8388608,
    IMAGE_SCN_ALIGN_256BYTES=9437184,
    IMAGE_SCN_ALIGN_512BYTES=10485760,
    IMAGE_SCN_ALIGN_1024BYTES=11534336,
    IMAGE_SCN_ALIGN_2048BYTES=12582912,
    IMAGE_SCN_ALIGN_4096BYTES=13631488,
    IMAGE_SCN_ALIGN_8192BYTES=14680064,
    IMAGE_SCN_LNK_NRELOC_OVFL=16777216,
    IMAGE_SCN_MEM_DISCARDABLE=33554432,
    IMAGE_SCN_MEM_NOT_CACHED=67108864,
    IMAGE_SCN_MEM_NOT_PAGED=134217728,
    IMAGE_SCN_MEM_SHARED=268435456,
    IMAGE_SCN_MEM_EXECUTE=536870912,
    IMAGE_SCN_MEM_READ=1073741824,
    IMAGE_SCN_MEM_WRITE=2147483648
} SectionFlags;

union Misc {
    dword PhysicalAddress;
    dword VirtualSize;
};

struct IMAGE_SECTION_HEADER {
    char Name[8];
    union Misc Misc;
    ImageBaseOffset32 VirtualAddress;
    dword SizeOfRawData;
    dword PointerToRawData;
    dword PointerToRelocations;
    dword PointerToLinenumbers;
    word NumberOfRelocations;
    word NumberOfLinenumbers;
    enum SectionFlags Characteristics;
};

typedef struct StringFileInfo StringFileInfo, *PStringFileInfo;

struct StringFileInfo {
    word wLength;
    word wValueLength;
    word wType;
};

typedef struct StringInfo StringInfo, *PStringInfo;

struct StringInfo {
    word wLength;
    word wValueLength;
    word wType;
};

typedef struct StringTable StringTable, *PStringTable;

struct StringTable {
    word wLength;
    word wValueLength;
    word wType;
};

typedef struct Var Var, *PVar;

struct Var {
    word wLength;
    word wValueLength;
    word wType;
};

typedef struct VarFileInfo VarFileInfo, *PVarFileInfo;

struct VarFileInfo {
    word wLength;
    word wValueLength;
    word wType;
};

typedef struct VS_VERSION_INFO VS_VERSION_INFO, *PVS_VERSION_INFO;

struct VS_VERSION_INFO {
    word StructLength;
    word ValueLength;
    word StructType;
    wchar16 Info[16];
    byte Padding[2];
    dword Signature;
    word StructVersion[2];
    word FileVersion[4];
    word ProductVersion[4];
    dword FileFlagsMask[2];
    dword FileFlags;
    dword FileOS;
    dword FileType;
    dword FileSubtype;
    dword FileTimestamp;
};

typedef int (* _onexit_t)(void);

typedef uint uintptr_t;

typedef int BOOL;

typedef uchar BYTE;

typedef ulong DWORD;

typedef BYTE * PBYTE;

typedef ushort WORD;

typedef struct _IMAGE_SECTION_HEADER _IMAGE_SECTION_HEADER, *P_IMAGE_SECTION_HEADER;

typedef union _union_226 _union_226, *P_union_226;

union _union_226 {
    DWORD PhysicalAddress;
    DWORD VirtualSize;
};

struct _IMAGE_SECTION_HEADER {
    BYTE Name[8];
    union _union_226 Misc;
    DWORD VirtualAddress;
    DWORD SizeOfRawData;
    DWORD PointerToRawData;
    DWORD PointerToRelocations;
    DWORD PointerToLinenumbers;
    WORD NumberOfRelocations;
    WORD NumberOfLinenumbers;
    DWORD Characteristics;
};

typedef struct _IMAGE_SECTION_HEADER * PIMAGE_SECTION_HEADER;

